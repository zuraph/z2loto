{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";/*global google*/import React,{Component}from'react';export var GMap=/*#__PURE__*/function(_Component){_inherits(GMap,_Component);var _super=_createSuper(GMap);function GMap(){_classCallCheck(this,GMap);return _super.apply(this,arguments);}_createClass(GMap,[{key:\"initMap\",value:function initMap(){this.map=new google.maps.Map(this.container,this.props.options);if(this.props.onMapReady){this.props.onMapReady({map:this.map});}this.initOverlays(this.props.overlays);this.bindMapEvent('click',this.props.onMapClick);this.bindMapEvent('dragend',this.props.onMapDragEnd);this.bindMapEvent('zoom_changed',this.props.onZoomChanged);}},{key:\"initOverlays\",value:function initOverlays(overlays){if(overlays){var _iterator=_createForOfIteratorHelper(overlays),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var overlay=_step.value;overlay.setMap(this.map);this.bindOverlayEvents(overlay);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}}},{key:\"bindOverlayEvents\",value:function bindOverlayEvents(overlay){var _this=this;overlay.addListener('click',function(event){if(_this.props.onOverlayClick){_this.props.onOverlayClick({originalEvent:event,overlay:overlay,map:_this.map});}});if(overlay.getDraggable()){this.bindDragEvents(overlay);}}},{key:\"bindDragEvents\",value:function bindDragEvents(overlay){this.bindDragEvent(overlay,'dragstart',this.props.onOverlayDragStart);this.bindDragEvent(overlay,'drag',this.props.onOverlayDrag);this.bindDragEvent(overlay,'dragend',this.props.onOverlayDragEnd);}},{key:\"bindMapEvent\",value:function bindMapEvent(eventName,callback){this.map.addListener(eventName,function(event){if(callback){callback(event);}});}},{key:\"bindDragEvent\",value:function bindDragEvent(overlay,eventName,callback){var _this2=this;overlay.addListener(eventName,function(event){if(callback){callback({originalEvent:event,overlay:overlay,map:_this2.map});}});}},{key:\"getMap\",value:function getMap(){return this.map;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){if(prevProps.overlays!==this.props.overlays){if(prevProps.overlays){var _iterator2=_createForOfIteratorHelper(prevProps.overlays),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var overlay=_step2.value;google.maps.event.clearInstanceListeners(overlay);overlay.setMap(null);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}this.initOverlays(this.props.overlays);}}},{key:\"componentDidMount\",value:function componentDidMount(){this.initMap();}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{ref:function ref(el){return _this3.container=el;},style:this.props.style,className:this.props.className});}}]);return GMap;}(Component);GMap.defaultProps={options:null,overlays:null,style:null,className:null,onMapReady:null,onMapClick:null,onMapDragEnd:null,onZoomChanged:null,onOverlayDragStart:null,onOverlayDrag:null,onOverlayDragEnd:null,onOverlayClick:null};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/gmap/GMap.js"],"names":["React","Component","GMap","map","google","maps","Map","container","props","options","onMapReady","initOverlays","overlays","bindMapEvent","onMapClick","onMapDragEnd","onZoomChanged","overlay","setMap","bindOverlayEvents","addListener","event","onOverlayClick","originalEvent","getDraggable","bindDragEvents","bindDragEvent","onOverlayDragStart","onOverlayDrag","onOverlayDragEnd","eventName","callback","prevProps","prevState","snapshot","clearInstanceListeners","initMap","el","style","className","defaultProps"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GMap extends Component {\r\n\r\n    static defaultProps = {\r\n        options: null,\r\n        overlays: null,\r\n        style: null,\r\n        className: null,\r\n        onMapReady: null,\r\n        onMapClick: null,\r\n        onMapDragEnd: null,\r\n        onZoomChanged: null,\r\n        onOverlayDragStart: null,\r\n        onOverlayDrag: null,\r\n        onOverlayDragEnd: null,\r\n        onOverlayClick: null\r\n    }\r\n\r\n    static propTypes = {\r\n        options: PropTypes.object,\r\n        overlays: PropTypes.array,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        onMapReady: PropTypes.func,\r\n        onMapClick: PropTypes.func,\r\n        onMapDragEnd: PropTypes.func,\r\n        onZoomChanged: PropTypes.func,\r\n        onOverlayDragStart: PropTypes.func,\r\n        onOverlayDrag: PropTypes.func,\r\n        onOverlayDragEnd: PropTypes.func,\r\n        onOverlayClick: PropTypes.func\r\n    };\r\n        \r\n    initMap() {\r\n        this.map = new google.maps.Map(this.container, this.props.options);\r\n        \r\n        if(this.props.onMapReady) {\r\n            this.props.onMapReady({\r\n                map: this.map\r\n            });\r\n        } \r\n        \r\n        this.initOverlays(this.props.overlays);\r\n        \r\n        this.bindMapEvent('click', this.props.onMapClick);\r\n        this.bindMapEvent('dragend', this.props.onMapDragEnd);\r\n        this.bindMapEvent('zoom_changed', this.props.onZoomChanged);\r\n    }\r\n    \r\n    initOverlays(overlays) {\r\n        if(overlays) {\r\n            for(let overlay of overlays) {\r\n                overlay.setMap(this.map);\r\n                this.bindOverlayEvents(overlay);\r\n            }\r\n        }\r\n    }\r\n    \r\n    bindOverlayEvents(overlay) {\r\n        overlay.addListener('click', (event) => {\r\n            if(this.props.onOverlayClick) {\r\n                this.props.onOverlayClick({\r\n                    originalEvent: event,\r\n                    overlay: overlay,\r\n                    map: this.map\r\n                });\r\n            }\r\n        });\r\n        \r\n        if(overlay.getDraggable()) {\r\n            this.bindDragEvents(overlay);\r\n        }\r\n    }\r\n    \r\n    bindDragEvents(overlay) {\r\n        this.bindDragEvent(overlay, 'dragstart', this.props.onOverlayDragStart);\r\n        this.bindDragEvent(overlay, 'drag', this.props.onOverlayDrag);\r\n        this.bindDragEvent(overlay, 'dragend', this.props.onOverlayDragEnd);\r\n    }\r\n    \r\n    bindMapEvent(eventName, callback) {\r\n        this.map.addListener(eventName, (event) => {\r\n            if(callback) {\r\n                callback(event);\r\n            }\r\n        });\r\n    }\r\n    \r\n    bindDragEvent(overlay, eventName, callback) {\r\n        overlay.addListener(eventName, (event) => {\r\n            if(callback) {\r\n                callback({\r\n                    originalEvent: event,\r\n                    overlay: overlay,\r\n                    map: this.map\r\n                });\r\n            }\r\n        });\r\n    }\r\n    \r\n    getMap() {\r\n        return this.map;\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.overlays !== this.props.overlays) {\r\n            if(prevProps.overlays) {\r\n                for(let overlay of prevProps.overlays) {\r\n                    google.maps.event.clearInstanceListeners(overlay);\r\n                    overlay.setMap(null);\r\n                }\r\n            }\r\n            \r\n            this.initOverlays(this.props.overlays);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.initMap();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div ref={(el) => this.container = el} style={this.props.style} className={this.props.className}></div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}