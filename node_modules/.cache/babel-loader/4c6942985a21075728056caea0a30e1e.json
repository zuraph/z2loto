{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'../../components/datatable/DataTable';import{Column}from'../../components/column/Column';import ProductService from'../service/ProductService';import{Rating}from'../../components/rating/Rating';import{Button}from'../../components/button/Button';import{Toast}from'../../components/toast/Toast';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import'./DataTableDemo.scss';export var DataTableRowExpansionDemo=/*#__PURE__*/function(_Component){_inherits(DataTableRowExpansionDemo,_Component);var _super=_createSuper(DataTableRowExpansionDemo);function DataTableRowExpansionDemo(props){var _this;_classCallCheck(this,DataTableRowExpansionDemo);_this=_super.call(this,props);_this.state={products:[],expandedRows:null};_this.productService=new ProductService();_this.amountBodyTemplate=_this.amountBodyTemplate.bind(_assertThisInitialized(_this));_this.rowExpansionTemplate=_this.rowExpansionTemplate.bind(_assertThisInitialized(_this));_this.searchBodyTemplate=_this.searchBodyTemplate.bind(_assertThisInitialized(_this));_this.imageBodyTemplate=_this.imageBodyTemplate.bind(_assertThisInitialized(_this));_this.priceBodyTemplate=_this.priceBodyTemplate.bind(_assertThisInitialized(_this));_this.ratingBodyTemplate=_this.ratingBodyTemplate.bind(_assertThisInitialized(_this));_this.statusBodyTemplate=_this.statusBodyTemplate.bind(_assertThisInitialized(_this));_this.statusOrderBodyTemplate=_this.statusOrderBodyTemplate.bind(_assertThisInitialized(_this));_this.onRowExpand=_this.onRowExpand.bind(_assertThisInitialized(_this));_this.onRowCollapse=_this.onRowCollapse.bind(_assertThisInitialized(_this));_this.expandAll=_this.expandAll.bind(_assertThisInitialized(_this));_this.collapseAll=_this.collapseAll.bind(_assertThisInitialized(_this));return _this;}_createClass(DataTableRowExpansionDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.productService.getProductsWithOrdersSmall().then(function(data){return _this2.setState({products:data});});}},{key:\"onRowExpand\",value:function onRowExpand(event){this.toast.show({severity:'info',summary:'Product Expanded',detail:event.data.name,life:3000});}},{key:\"onRowCollapse\",value:function onRowCollapse(event){this.toast.show({severity:'success',summary:'Product Collapsed',detail:event.data.name,life:3000});}},{key:\"expandAll\",value:function expandAll(){var _this3=this;var expandedRows={};this.state.products.forEach(function(p){return expandedRows[\"\".concat(p.id)]=true;});this.setState({expandedRows:expandedRows},function(){_this3.toast.show({severity:'success',summary:'All Rows Expanded',life:3000});});}},{key:\"collapseAll\",value:function collapseAll(){var _this4=this;this.setState({expandedRows:null},function(){_this4.toast.show({severity:'success',summary:'All Rows Collapsed',life:3000});});}},{key:\"formatCurrency\",value:function formatCurrency(value){return value.toLocaleString('en-US',{style:'currency',currency:'USD'});}},{key:\"amountBodyTemplate\",value:function amountBodyTemplate(rowData){return this.formatCurrency(rowData.amount);}},{key:\"statusOrderBodyTemplate\",value:function statusOrderBodyTemplate(rowData){return/*#__PURE__*/React.createElement(\"span\",{className:\"order-badge order-\".concat(rowData.status.toLowerCase())},rowData.status);}},{key:\"searchBodyTemplate\",value:function searchBodyTemplate(){return/*#__PURE__*/React.createElement(Button,{icon:\"pi pi-search\"});}},{key:\"imageBodyTemplate\",value:function imageBodyTemplate(rowData){return/*#__PURE__*/React.createElement(\"img\",{src:\"showcase/demo/images/product/\".concat(rowData.image),onError:function onError(e){return e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';},alt:rowData.image,className:\"product-image\"});}},{key:\"priceBodyTemplate\",value:function priceBodyTemplate(rowData){return this.formatCurrency(rowData.price);}},{key:\"ratingBodyTemplate\",value:function ratingBodyTemplate(rowData){return/*#__PURE__*/React.createElement(Rating,{value:rowData.rating,readOnly:true,cancel:false});}},{key:\"statusBodyTemplate\",value:function statusBodyTemplate(rowData){return/*#__PURE__*/React.createElement(\"span\",{className:\"product-badge status-\".concat(rowData.inventoryStatus.toLowerCase())},rowData.inventoryStatus);}},{key:\"rowExpansionTemplate\",value:function rowExpansionTemplate(data){return/*#__PURE__*/React.createElement(\"div\",{className:\"orders-subtable\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Orders for \",data.name),/*#__PURE__*/React.createElement(DataTable,{value:data.orders},/*#__PURE__*/React.createElement(Column,{field:\"id\",header:\"Id\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"customer\",header:\"Customer\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"date\",header:\"Date\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"amount\",header:\"Amount\",body:this.amountBodyTemplate,sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"status\",header:\"Status\",body:this.statusOrderBodyTemplate,sortable:true}),/*#__PURE__*/React.createElement(Column,{headerStyle:{width:'4rem'},body:this.searchBodyTemplate})));}},{key:\"render\",value:function render(){var _this5=this;var header=/*#__PURE__*/React.createElement(\"div\",{className:\"table-header-container\"},/*#__PURE__*/React.createElement(Button,{icon:\"pi pi-plus\",label:\"Expand All\",onClick:this.expandAll,className:\"p-mr-2\"}),/*#__PURE__*/React.createElement(Button,{icon:\"pi pi-minus\",label:\"Collapse All\",onClick:this.collapseAll}));return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"dataTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DataTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Row Expansion\")),/*#__PURE__*/React.createElement(\"p\",null,\"A row can be expanded to display extra content by enabling expandableRows property and providing a row ng-template.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation datatable-rowexpansion-demo\"},/*#__PURE__*/React.createElement(Toast,{ref:function ref(el){return _this5.toast=el;}}),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(DataTable,{value:this.state.products,expandedRows:this.state.expandedRows,onRowToggle:function onRowToggle(e){return _this5.setState({expandedRows:e.data});},onRowExpand:this.onRowExpand,onRowCollapse:this.onRowCollapse,rowExpansionTemplate:this.rowExpansionTemplate,dataKey:\"id\",header:header},/*#__PURE__*/React.createElement(Column,{expander:true,style:{width:'3em'}}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true}),/*#__PURE__*/React.createElement(Column,{header:\"Image\",body:this.imageBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"price\",header:\"Price\",sortable:true,body:this.priceBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"category\",header:\"Category\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"rating\",header:\"Reviews\",sortable:true,body:this.ratingBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"inventoryStatus\",header:\"Status\",sortable:true,body:this.statusBodyTemplate})))),/*#__PURE__*/React.createElement(DataTableRowExpansionDemoDoc,null));}}]);return DataTableRowExpansionDemo;}(Component);export var DataTableRowExpansionDemoDoc=/*#__PURE__*/function(_Component2){_inherits(DataTableRowExpansionDemoDoc,_Component2);var _super2=_createSuper(DataTableRowExpansionDemoDoc);function DataTableRowExpansionDemoDoc(props){var _this6;_classCallCheck(this,DataTableRowExpansionDemoDoc);_this6=_super2.call(this,props);_this6.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport './DataTableDemo.css';\\n\\nexport class DataTableRowExpansionDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: [],\\n            expandedRows: null\\n        };\\n\\n        this.productService = new ProductService();\\n        this.amountBodyTemplate = this.amountBodyTemplate.bind(this);\\n        this.rowExpansionTemplate = this.rowExpansionTemplate.bind(this);\\n        this.searchBodyTemplate = this.searchBodyTemplate.bind(this);\\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\\n        this.statusOrderBodyTemplate = this.statusOrderBodyTemplate.bind(this);\\n        this.onRowExpand = this.onRowExpand.bind(this);\\n        this.onRowCollapse = this.onRowCollapse.bind(this);\\n        this.expandAll = this.expandAll.bind(this);\\n        this.collapseAll = this.collapseAll.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsWithOrdersSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    onRowExpand(event) {\\n        this.toast.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\\n    }\\n\\n    onRowCollapse(event) {\\n        this.toast.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\\n    }\\n\\n    expandAll() {\\n        let expandedRows = {};\\n        this.state.products.forEach(p => expandedRows[`${p.id}`] = true);\\n\\n        this.setState({\\n            expandedRows\\n        }, () => {\\n            this.toast.show({severity: 'success', summary: 'All Rows Expanded', life: 3000});\\n        });\\n    }\\n\\n    collapseAll() {\\n        this.setState({\\n            expandedRows: null\\n        }, () => {\\n            this.toast.show({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\\n        });\\n    }\\n\\n    formatCurrency(value) {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    amountBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.amount);\\n    }\\n\\n    statusOrderBodyTemplate(rowData) {\\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\\n    }\\n\\n    searchBodyTemplate() {\\n        return <Button icon=\\\"pi pi-search\\\" />;\\n    }\\n\\n    imageBodyTemplate(rowData) {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />;\\n    }\\n\\n    priceBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.price);\\n    }\\n\\n    ratingBodyTemplate(rowData) {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    statusBodyTemplate(rowData) {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    rowExpansionTemplate(data) {\\n        return (\\n            <div className=\\\"orders-subtable\\\">\\n                <h5>Orders for {data.name}</h5>\\n                <DataTable value={data.orders}>\\n                    <Column field=\\\"id\\\" header=\\\"Id\\\" sortable></Column>\\n                    <Column field=\\\"customer\\\" header=\\\"Customer\\\" sortable></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\" sortable></Column>\\n                    <Column field=\\\"amount\\\" header=\\\"Amount\\\" body={this.amountBodyTemplate} sortable></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusOrderBodyTemplate} sortable></Column>\\n                    <Column headerStyle={{ width: '4rem'}} body={this.searchBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        const header = (\\n            <div className=\\\"table-header-container\\\">\\n                <Button icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={this.expandAll} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={this.collapseAll} />\\n            </div>\\n        );\\n\\n        return (\\n            <div className=\\\"datatable-rowexpansion-demo\\\">\\n                <Toast ref={(el) => this.toast = el} />\\n\\n                <div className=\\\"card\\\">\\n                    <DataTable value={this.state.products} expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\\n                        onRowExpand={this.onRowExpand} onRowCollapse={this.onRowCollapse}\\n                        rowExpansionTemplate={this.rowExpansionTemplate} dataKey=\\\"id\\\" header={header}>\\n                        <Column expander style={{ width: '3em' }} />\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                        <Column header=\\\"Image\\\" body={this.imageBodyTemplate} />\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={this.priceBodyTemplate} />\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable />\\n                        <Column field=\\\"rating\\\" header=\\\"Reviews\\\" sortable body={this.ratingBodyTemplate} />\\n                        <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" sortable body={this.statusBodyTemplate} />\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport './DataTableDemo.css';\\n\\nconst DataTableRowExpansionDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [expandedRows, setExpandedRows] = useState(null);\\n    const toast = useRef(null);\\n    const isMounted = useRef(false);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        if (isMounted.current) {\\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\\n            toast.current.show({severity: 'success', summary: `${summary}`, life: 3000});\\n        }\\n    }, [expandedRows]);\\n\\n    useEffect(() => {\\n        isMounted.current = true;\\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onRowExpand = (event) => {\\n        toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\\n    }\\n\\n    const onRowCollapse = (event) => {\\n        toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\\n    }\\n\\n    const expandAll = () => {\\n        let _expandedRows = {};\\n        products.forEach(p => _expandedRows[`${p.id}`] = true);\\n\\n        setExpandedRows(_expandedRows);\\n    }\\n\\n    const collapseAll = () => {\\n        setExpandedRows(null);\\n    }\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const amountBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.amount);\\n    }\\n\\n    const statusOrderBodyTemplate = (rowData) => {\\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\\n    }\\n\\n    const searchBodyTemplate = () => {\\n        return <Button icon=\\\"pi pi-search\\\" />;\\n    }\\n\\n    const imageBodyTemplate = (rowData) => {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />;\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    const ratingBodyTemplate = (rowData) => {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    const rowExpansionTemplate = (data) => {\\n        return (\\n            <div className=\\\"orders-subtable\\\">\\n                <h5>Orders for {data.name}</h5>\\n                <DataTable value={data.orders}>\\n                    <Column field=\\\"id\\\" header=\\\"Id\\\" sortable></Column>\\n                    <Column field=\\\"customer\\\" header=\\\"Customer\\\" sortable></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\" sortable></Column>\\n                    <Column field=\\\"amount\\\" header=\\\"Amount\\\" body={amountBodyTemplate} sortable></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusOrderBodyTemplate} sortable></Column>\\n                    <Column headerStyle={{ width: '4rem'}} body={searchBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n        );\\n    }\\n\\n    const header = (\\n        <div className=\\\"table-header-container\\\">\\n            <Button icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={expandAll} className=\\\"p-mr-2\\\" />\\n            <Button icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={collapseAll} />\\n        </div>\\n    );\\n\\n    return (\\n        <div className=\\\"datatable-rowexpansion-demo\\\">\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\\n                    onRowExpand={onRowExpand} onRowCollapse={onRowCollapse}\\n                    rowExpansionTemplate={rowExpansionTemplate} dataKey=\\\"id\\\" header={header}>\\n                    <Column expander style={{ width: '3em' }} />\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                    <Column header=\\\"Image\\\" body={imageBodyTemplate} />\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={priceBodyTemplate} />\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable />\\n                    <Column field=\\\"rating\\\" header=\\\"Reviews\\\" sortable body={ratingBodyTemplate} />\\n                    <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" sortable body={statusBodyTemplate} />\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport './DataTableDemo.css';\\n\\nconst DataTableRowExpansionDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [expandedRows, setExpandedRows] = useState(null);\\n    const toast = useRef(null);\\n    const isMounted = useRef(false);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        if (isMounted.current) {\\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\\n            toast.current.show({severity: 'success', summary: `${summary}`, life: 3000});\\n        }\\n    }, [expandedRows]);\\n\\n    useEffect(() => {\\n        isMounted.current = true;\\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onRowExpand = (event) => {\\n        toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\\n    }\\n\\n    const onRowCollapse = (event) => {\\n        toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\\n    }\\n\\n    const expandAll = () => {\\n        let _expandedRows = {};\\n        products.forEach(p => _expandedRows[`${p.id}`] = true);\\n\\n        setExpandedRows(_expandedRows);\\n    }\\n\\n    const collapseAll = () => {\\n        setExpandedRows(null);\\n    }\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const amountBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.amount);\\n    }\\n\\n    const statusOrderBodyTemplate = (rowData) => {\\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\\n    }\\n\\n    const searchBodyTemplate = () => {\\n        return <Button icon=\\\"pi pi-search\\\" />;\\n    }\\n\\n    const imageBodyTemplate = (rowData) => {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />;\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    const ratingBodyTemplate = (rowData) => {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    const rowExpansionTemplate = (data) => {\\n        return (\\n            <div className=\\\"orders-subtable\\\">\\n                <h5>Orders for {data.name}</h5>\\n                <DataTable value={data.orders}>\\n                    <Column field=\\\"id\\\" header=\\\"Id\\\" sortable></Column>\\n                    <Column field=\\\"customer\\\" header=\\\"Customer\\\" sortable></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\" sortable></Column>\\n                    <Column field=\\\"amount\\\" header=\\\"Amount\\\" body={amountBodyTemplate} sortable></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusOrderBodyTemplate} sortable></Column>\\n                    <Column headerStyle={{ width: '4rem'}} body={searchBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n        );\\n    }\\n\\n    const header = (\\n        <div className=\\\"table-header-container\\\">\\n            <Button icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={expandAll} className=\\\"p-mr-2\\\" />\\n            <Button icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={collapseAll} />\\n        </div>\\n    );\\n\\n    return (\\n        <div className=\\\"datatable-rowexpansion-demo\\\">\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\\n                    onRowExpand={onRowExpand} onRowCollapse={onRowCollapse}\\n                    rowExpansionTemplate={rowExpansionTemplate} dataKey=\\\"id\\\" header={header}>\\n                    <Column expander style={{ width: '3em' }} />\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                    <Column header=\\\"Image\\\" body={imageBodyTemplate} />\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={priceBodyTemplate} />\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable />\\n                    <Column field=\\\"rating\\\" header=\\\"Reviews\\\" sortable body={ratingBodyTemplate} />\\n                    <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" sortable body={statusBodyTemplate} />\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};_this6.extFiles={'src/demo/DataTableDemo.css':{content:\"\\n.datatable-rowexpansion-demo .product-image {\\n    width: 100px;\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n}\\n\\n.datatable-rowexpansion-demo .orders-subtable {\\n    padding: 1rem;\\n}\\n                \"}};return _this6;}_createClass(DataTableRowExpansionDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DataTableRowExpansionDemo',sources:this.sources,service:'ProductService',data:'products-orders-small',extFiles:this.extFiles})));}}]);return DataTableRowExpansionDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/datatable/DataTableRowExpansionDemo.js"],"names":["React","Component","DataTable","Column","ProductService","Rating","Button","Toast","TabView","useLiveEditorTabs","AppInlineHeader","DataTableRowExpansionDemo","props","state","products","expandedRows","productService","amountBodyTemplate","bind","rowExpansionTemplate","searchBodyTemplate","imageBodyTemplate","priceBodyTemplate","ratingBodyTemplate","statusBodyTemplate","statusOrderBodyTemplate","onRowExpand","onRowCollapse","expandAll","collapseAll","getProductsWithOrdersSmall","then","data","setState","event","toast","show","severity","summary","detail","name","life","forEach","p","id","value","toLocaleString","style","currency","rowData","formatCurrency","amount","status","toLowerCase","image","e","target","src","price","rating","inventoryStatus","orders","width","header","el","DataTableRowExpansionDemoDoc","sources","tabName","content","extFiles","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from '../../components/rating/Rating';\r\nimport { Button } from '../../components/button/Button';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './DataTableDemo.scss';\r\n\r\nexport class DataTableRowExpansionDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            expandedRows: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.amountBodyTemplate = this.amountBodyTemplate.bind(this);\r\n        this.rowExpansionTemplate = this.rowExpansionTemplate.bind(this);\r\n        this.searchBodyTemplate = this.searchBodyTemplate.bind(this);\r\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.statusOrderBodyTemplate = this.statusOrderBodyTemplate.bind(this);\r\n        this.onRowExpand = this.onRowExpand.bind(this);\r\n        this.onRowCollapse = this.onRowCollapse.bind(this);\r\n        this.expandAll = this.expandAll.bind(this);\r\n        this.collapseAll = this.collapseAll.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsWithOrdersSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onRowExpand(event) {\r\n        this.toast.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    onRowCollapse(event) {\r\n        this.toast.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    expandAll() {\r\n        let expandedRows = {};\r\n        this.state.products.forEach(p => expandedRows[`${p.id}`] = true);\r\n\r\n        this.setState({\r\n            expandedRows\r\n        }, () => {\r\n            this.toast.show({severity: 'success', summary: 'All Rows Expanded', life: 3000});\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.setState({\r\n            expandedRows: null\r\n        }, () => {\r\n            this.toast.show({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\r\n        });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    amountBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.amount);\r\n    }\r\n\r\n    statusOrderBodyTemplate(rowData) {\r\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\r\n    }\r\n\r\n    searchBodyTemplate() {\r\n        return <Button icon=\"pi pi-search\" />;\r\n    }\r\n\r\n    imageBodyTemplate(rowData) {\r\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />;\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    ratingBodyTemplate(rowData) {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    rowExpansionTemplate(data) {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                    <Column field=\"amount\" header=\"Amount\" body={this.amountBodyTemplate} sortable></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={this.statusOrderBodyTemplate} sortable></Column>\r\n                    <Column headerStyle={{ width: '4rem'}} body={this.searchBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header-container\">\r\n                <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={this.expandAll} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={this.collapseAll} />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Row Expansion</span></h1>\r\n                        <p>A row can be expanded to display extra content by enabling expandableRows property and providing a row ng-template.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation datatable-rowexpansion-demo\">\r\n                    <Toast ref={(el) => this.toast = el} />\r\n\r\n                    <div className=\"card\">\r\n                        <DataTable value={this.state.products} expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\r\n                            onRowExpand={this.onRowExpand} onRowCollapse={this.onRowCollapse}\r\n                            rowExpansionTemplate={this.rowExpansionTemplate} dataKey=\"id\" header={header}>\r\n                            <Column expander style={{ width: '3em' }} />\r\n                            <Column field=\"name\" header=\"Name\" sortable />\r\n                            <Column header=\"Image\" body={this.imageBodyTemplate} />\r\n                            <Column field=\"price\" header=\"Price\" sortable body={this.priceBodyTemplate} />\r\n                            <Column field=\"category\" header=\"Category\" sortable />\r\n                            <Column field=\"rating\" header=\"Reviews\" sortable body={this.ratingBodyTemplate} />\r\n                            <Column field=\"inventoryStatus\" header=\"Status\" sortable body={this.statusBodyTemplate} />\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableRowExpansionDemoDoc></DataTableRowExpansionDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableRowExpansionDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport './DataTableDemo.css';\r\n\r\nexport class DataTableRowExpansionDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            expandedRows: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.amountBodyTemplate = this.amountBodyTemplate.bind(this);\r\n        this.rowExpansionTemplate = this.rowExpansionTemplate.bind(this);\r\n        this.searchBodyTemplate = this.searchBodyTemplate.bind(this);\r\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.statusOrderBodyTemplate = this.statusOrderBodyTemplate.bind(this);\r\n        this.onRowExpand = this.onRowExpand.bind(this);\r\n        this.onRowCollapse = this.onRowCollapse.bind(this);\r\n        this.expandAll = this.expandAll.bind(this);\r\n        this.collapseAll = this.collapseAll.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsWithOrdersSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onRowExpand(event) {\r\n        this.toast.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    onRowCollapse(event) {\r\n        this.toast.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    expandAll() {\r\n        let expandedRows = {};\r\n        this.state.products.forEach(p => expandedRows[\\`\\${p.id}\\`] = true);\r\n\r\n        this.setState({\r\n            expandedRows\r\n        }, () => {\r\n            this.toast.show({severity: 'success', summary: 'All Rows Expanded', life: 3000});\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.setState({\r\n            expandedRows: null\r\n        }, () => {\r\n            this.toast.show({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\r\n        });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    amountBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.amount);\r\n    }\r\n\r\n    statusOrderBodyTemplate(rowData) {\r\n        return <span className={\\`order-badge order-\\${rowData.status.toLowerCase()}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    searchBodyTemplate() {\r\n        return <Button icon=\"pi pi-search\" />;\r\n    }\r\n\r\n    imageBodyTemplate(rowData) {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />;\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    ratingBodyTemplate(rowData) {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    rowExpansionTemplate(data) {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                    <Column field=\"amount\" header=\"Amount\" body={this.amountBodyTemplate} sortable></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={this.statusOrderBodyTemplate} sortable></Column>\r\n                    <Column headerStyle={{ width: '4rem'}} body={this.searchBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header-container\">\r\n                <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={this.expandAll} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={this.collapseAll} />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"datatable-rowexpansion-demo\">\r\n                <Toast ref={(el) => this.toast = el} />\r\n\r\n                <div className=\"card\">\r\n                    <DataTable value={this.state.products} expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\r\n                        onRowExpand={this.onRowExpand} onRowCollapse={this.onRowCollapse}\r\n                        rowExpansionTemplate={this.rowExpansionTemplate} dataKey=\"id\" header={header}>\r\n                        <Column expander style={{ width: '3em' }} />\r\n                        <Column field=\"name\" header=\"Name\" sortable />\r\n                        <Column header=\"Image\" body={this.imageBodyTemplate} />\r\n                        <Column field=\"price\" header=\"Price\" sortable body={this.priceBodyTemplate} />\r\n                        <Column field=\"category\" header=\"Category\" sortable />\r\n                        <Column field=\"rating\" header=\"Reviews\" sortable body={this.ratingBodyTemplate} />\r\n                        <Column field=\"inventoryStatus\" header=\"Status\" sortable body={this.statusBodyTemplate} />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableRowExpansionDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState(null);\r\n    const toast = useRef(null);\r\n    const isMounted = useRef(false);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\r\n            toast.current.show({severity: 'success', summary: \\`\\${summary}\\`, life: 3000});\r\n        }\r\n    }, [expandedRows]);\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onRowExpand = (event) => {\r\n        toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const onRowCollapse = (event) => {\r\n        toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const expandAll = () => {\r\n        let _expandedRows = {};\r\n        products.forEach(p => _expandedRows[\\`\\${p.id}\\`] = true);\r\n\r\n        setExpandedRows(_expandedRows);\r\n    }\r\n\r\n    const collapseAll = () => {\r\n        setExpandedRows(null);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const amountBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.amount);\r\n    }\r\n\r\n    const statusOrderBodyTemplate = (rowData) => {\r\n        return <span className={\\`order-badge order-\\${rowData.status.toLowerCase()}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const searchBodyTemplate = () => {\r\n        return <Button icon=\"pi pi-search\" />;\r\n    }\r\n\r\n    const imageBodyTemplate = (rowData) => {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />;\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    const ratingBodyTemplate = (rowData) => {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    const rowExpansionTemplate = (data) => {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                    <Column field=\"amount\" header=\"Amount\" body={amountBodyTemplate} sortable></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusOrderBodyTemplate} sortable></Column>\r\n                    <Column headerStyle={{ width: '4rem'}} body={searchBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header-container\">\r\n            <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={expandAll} className=\"p-mr-2\" />\r\n            <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={collapseAll} />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-rowexpansion-demo\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    onRowExpand={onRowExpand} onRowCollapse={onRowCollapse}\r\n                    rowExpansionTemplate={rowExpansionTemplate} dataKey=\"id\" header={header}>\r\n                    <Column expander style={{ width: '3em' }} />\r\n                    <Column field=\"name\" header=\"Name\" sortable />\r\n                    <Column header=\"Image\" body={imageBodyTemplate} />\r\n                    <Column field=\"price\" header=\"Price\" sortable body={priceBodyTemplate} />\r\n                    <Column field=\"category\" header=\"Category\" sortable />\r\n                    <Column field=\"rating\" header=\"Reviews\" sortable body={ratingBodyTemplate} />\r\n                    <Column field=\"inventoryStatus\" header=\"Status\" sortable body={statusBodyTemplate} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableRowExpansionDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState(null);\r\n    const toast = useRef(null);\r\n    const isMounted = useRef(false);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\r\n            toast.current.show({severity: 'success', summary: \\`\\${summary}\\`, life: 3000});\r\n        }\r\n    }, [expandedRows]);\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onRowExpand = (event) => {\r\n        toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const onRowCollapse = (event) => {\r\n        toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const expandAll = () => {\r\n        let _expandedRows = {};\r\n        products.forEach(p => _expandedRows[\\`\\${p.id}\\`] = true);\r\n\r\n        setExpandedRows(_expandedRows);\r\n    }\r\n\r\n    const collapseAll = () => {\r\n        setExpandedRows(null);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const amountBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.amount);\r\n    }\r\n\r\n    const statusOrderBodyTemplate = (rowData) => {\r\n        return <span className={\\`order-badge order-\\${rowData.status.toLowerCase()}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const searchBodyTemplate = () => {\r\n        return <Button icon=\"pi pi-search\" />;\r\n    }\r\n\r\n    const imageBodyTemplate = (rowData) => {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />;\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    const ratingBodyTemplate = (rowData) => {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    const rowExpansionTemplate = (data) => {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                    <Column field=\"amount\" header=\"Amount\" body={amountBodyTemplate} sortable></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusOrderBodyTemplate} sortable></Column>\r\n                    <Column headerStyle={{ width: '4rem'}} body={searchBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header-container\">\r\n            <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={expandAll} className=\"p-mr-2\" />\r\n            <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={collapseAll} />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-rowexpansion-demo\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    onRowExpand={onRowExpand} onRowCollapse={onRowCollapse}\r\n                    rowExpansionTemplate={rowExpansionTemplate} dataKey=\"id\" header={header}>\r\n                    <Column expander style={{ width: '3em' }} />\r\n                    <Column field=\"name\" header=\"Name\" sortable />\r\n                    <Column header=\"Image\" body={imageBodyTemplate} />\r\n                    <Column field=\"price\" header=\"Price\" sortable body={priceBodyTemplate} />\r\n                    <Column field=\"category\" header=\"Category\" sortable />\r\n                    <Column field=\"rating\" header=\"Reviews\" sortable body={ratingBodyTemplate} />\r\n                    <Column field=\"inventoryStatus\" header=\"Status\" sortable body={statusBodyTemplate} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'src/demo/DataTableDemo.css': {\r\n                content: `\r\n.datatable-rowexpansion-demo .product-image {\r\n    width: 100px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n.datatable-rowexpansion-demo .orders-subtable {\r\n    padding: 1rem;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableRowExpansionDemo', sources: this.sources, service: 'ProductService', data: 'products-orders-small', extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}