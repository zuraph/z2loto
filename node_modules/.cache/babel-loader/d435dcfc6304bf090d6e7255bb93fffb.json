{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\multiselect\\\\MultiSelectDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var MultiSelectDoc = /*#__PURE__*/function (_Component) {\n  _inherits(MultiSelectDoc, _Component);\n\n  var _super = _createSuper(MultiSelectDoc);\n\n  function MultiSelectDoc(props) {\n    var _this;\n\n    _classCallCheck(this, MultiSelectDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport './MultiSelectDemo.css';\\n\\nexport class MultiSelectDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            selectedCities1: null,\\n            selectedCities2: null,\\n            selectedCountries: null\\n        };\\n\\n        this.cities = [\\n            {name: 'New York', code: 'NY'},\\n            {name: 'Rome', code: 'RM'},\\n            {name: 'London', code: 'LDN'},\\n            {name: 'Istanbul', code: 'IST'},\\n            {name: 'Paris', code: 'PRS'}\\n        ];\\n\\n        this.countries = [\\n            {name: 'Australia', code: 'AU'},\\n            {name: 'Brazil', code: 'BR'},\\n            {name: 'China', code: 'CN'},\\n            {name: 'Egypt', code: 'EG'},\\n            {name: 'France', code: 'FR'},\\n            {name: 'Germany', code: 'DE'},\\n            {name: 'India', code: 'IN'},\\n            {name: 'Japan', code: 'JP'},\\n            {name: 'Spain', code: 'ES'},\\n            {name: 'United States', code: 'US'}\\n        ];\\n\\n        this.countryTemplate = this.countryTemplate.bind(this);\\n        this.selectedCountriesTemplate = this.selectedCountriesTemplate.bind(this);\\n        this.panelFooterTemplate = this.panelFooterTemplate.bind(this);\\n    }\\n\\n    countryTemplate(option) {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    selectedCountriesTemplate(option) {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return \\\"Select Countries\\\";\\n    }\\n\\n    panelFooterTemplate() {\\n        const selectedItems = this.state.selectedCountries;\\n        const length = selectedItems ? selectedItems.length : 0;\\n        return (\\n            <div className=\\\"p-py-2 p-px-3\\\">\\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"multiselect-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <MultiSelect value={this.state.selectedCities1} options={this.cities} onChange={(e) => this.setState({ selectedCities1: e.value })} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                    <h5>Chips</h5>\\n                    <MultiSelect value={this.state.selectedCities2} options={this.cities} onChange={(e) => this.setState({ selectedCities2: e.value })} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" display=\\\"chip\\\" />\\n\\n                    <h5>Advanced with Templating and Filtering</h5>\\n                    <MultiSelect value={this.state.selectedCountries} options={this.countries}  onChange={(e) => this.setState({ selectedCountries: e.value })} optionLabel=\\\"name\\\" placeholder=\\\"Select Countries\\\" filter className=\\\"multiselect-custom\\\"\\n                        itemTemplate={this.countryTemplate} selectedItemTemplate={this.selectedCountriesTemplate} panelFooterTemplate={this.panelFooterTemplate}/>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport './MultiSelectDemo.css';\\n\\nconst MultiSelectDemo = () => {\\n    const [selectedCities1, setSelectedCities1] = useState(null);\\n    const [selectedCities2, setSelectedCities2] = useState(null);\\n    const [selectedCountries, setSelectedCountries] = useState(null);\\n    const cities = [\\n        {name: 'New York', code: 'NY'},\\n        {name: 'Rome', code: 'RM'},\\n        {name: 'London', code: 'LDN'},\\n        {name: 'Istanbul', code: 'IST'},\\n        {name: 'Paris', code: 'PRS'}\\n    ];\\n    const countries = [\\n        {name: 'Australia', code: 'AU'},\\n        {name: 'Brazil', code: 'BR'},\\n        {name: 'China', code: 'CN'},\\n        {name: 'Egypt', code: 'EG'},\\n        {name: 'France', code: 'FR'},\\n        {name: 'Germany', code: 'DE'},\\n        {name: 'India', code: 'IN'},\\n        {name: 'Japan', code: 'JP'},\\n        {name: 'Spain', code: 'ES'},\\n        {name: 'United States', code: 'US'}\\n    ];\\n\\n    const countryTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    const selectedCountriesTemplate = (option) => {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return \\\"Select Countries\\\";\\n    }\\n\\n    const panelFooterTemplate = () => {\\n        const length = selectedCountries ? selectedCountries.length : 0;\\n        return (\\n            <div className=\\\"p-py-2 p-px-3\\\">\\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div className=\\\"multiselect-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <MultiSelect value={selectedCities1} options={cities} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                <h5>Chips</h5>\\n                <MultiSelect value={selectedCities2} options={cities} onChange={(e) => setSelectedCities2(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" display=\\\"chip\\\" />\\n\\n                <h5>Advanced with Templating and Filtering</h5>\\n                <MultiSelect value={selectedCountries} options={countries}  onChange={(e) => setSelectedCountries(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select Countries\\\" filter className=\\\"multiselect-custom\\\"\\n                    itemTemplate={countryTemplate} selectedItemTemplate={selectedCountriesTemplate} panelFooterTemplate={panelFooterTemplate}/>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport './MultiSelectDemo.css';\\n\\nconst MultiSelectDemo = () => {\\n    const [selectedCities1, setSelectedCities1] = useState(null);\\n    const [selectedCities2, setSelectedCities2] = useState(null);\\n    const [selectedCountries, setSelectedCountries] = useState(null);\\n    const cities = [\\n        {name: 'New York', code: 'NY'},\\n        {name: 'Rome', code: 'RM'},\\n        {name: 'London', code: 'LDN'},\\n        {name: 'Istanbul', code: 'IST'},\\n        {name: 'Paris', code: 'PRS'}\\n    ];\\n    const countries = [\\n        {name: 'Australia', code: 'AU'},\\n        {name: 'Brazil', code: 'BR'},\\n        {name: 'China', code: 'CN'},\\n        {name: 'Egypt', code: 'EG'},\\n        {name: 'France', code: 'FR'},\\n        {name: 'Germany', code: 'DE'},\\n        {name: 'India', code: 'IN'},\\n        {name: 'Japan', code: 'JP'},\\n        {name: 'Spain', code: 'ES'},\\n        {name: 'United States', code: 'US'}\\n    ];\\n\\n    const countryTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    const selectedCountriesTemplate = (option) => {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return \\\"Select Countries\\\";\\n    }\\n\\n    const panelFooterTemplate = () => {\\n        const length = selectedCountries ? selectedCountries.length : 0;\\n        return (\\n            <div className=\\\"p-py-2 p-px-3\\\">\\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div className=\\\"multiselect-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <MultiSelect value={selectedCities1} options={cities} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                <h5>Chips</h5>\\n                <MultiSelect value={selectedCities2} options={cities} onChange={(e) => setSelectedCities2(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" display=\\\"chip\\\" />\\n\\n                <h5>Advanced with Templating and Filtering</h5>\\n                <MultiSelect value={selectedCountries} options={countries}  onChange={(e) => setSelectedCountries(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select Countries\\\" filter className=\\\"multiselect-custom\\\"\\n                    itemTemplate={countryTemplate} selectedItemTemplate={selectedCountriesTemplate} panelFooterTemplate={panelFooterTemplate}/>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    _this.extFiles = {\n      'src/demo/MultiSelectDemo.css': {\n        content: \"\\n.multiselect-demo .p-multiselect {\\n    min-width: 15rem;\\n}\\n\\n.multiselect-demo .multiselect-custom .p-multiselect-label:not(.p-placeholder):not(.p-multiselect-items-label) {\\n    padding-top: .25rem;\\n    padding-bottom: .25rem;\\n}\\n\\n.multiselect-demo .multiselect-custom .country-item-value {\\n    padding: .25rem .5rem;\\n    border-radius: 3px;\\n    display: inline-flex;\\n    margin-right: .5rem;\\n    background-color: var(--primary-color);\\n    color: var(--primary-color-text);\\n}\\n\\n.multiselect-demo .multiselect-custom .country-item-value img.flag {\\n    width: 17px;\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(MultiSelectDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 1\n        }\n      }, \"\\nimport { MultiSelect } from 'primereact/multiselect';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      }, \"MultiSelect is used as a controlled component with \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 67\n        }\n      }, \"value\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 84\n        }\n      }, \"onChange\"), \" properties along with the options collection. There are two alternatives of how to define the options property; One way is providing a collection of \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 89\n        }\n      }, \"SelectItem\"), \" instances having label-value pairs whereas other way is providing an array of arbitrary objects along with the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 89\n        }\n      }, \"optionLabel\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 112\n        }\n      }, \"optionValue\"), \" properties to specify the label/value field pair. In addition, options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 16\n        }\n      }, \"Options as SelectItems\")), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 1\n        }\n      }, \"\\nconst citySelectItems = [\\n    {label: 'New York', value: 'NY'},\\n    {label: 'Rome', value: 'RM'},\\n    {label: 'London', value: 'LDN'},\\n    {label: 'Istanbul', value: 'IST'},\\n    {label: 'Paris', value: 'PRS'}\\n];\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 1\n        }\n      }, \"\\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} />\\n\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 16\n        }\n      }, \"Options as any type\")), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 1\n        }\n      }, \"\\nconst cities = [\\n    {name: 'New York', code: 'NY'},\\n    {name: 'Rome', code: 'RM'},\\n    {name: 'London', code: 'LDN'},\\n    {name: 'Istanbul', code: 'IST'},\\n    {name: 'Paris', code: 'PRS'}\\n];\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 1\n        }\n      }, \"\\n<MultiSelect optionLabel=\\\"name\\\" value={cities} options={cities} onChange={(e) => setCities(e.value)} />\\n<MultiSelect optionLabel=\\\"name\\\" optionValue=\\\"code\\\" value={cities} options={cities} onChange={(e) => setCities(e.value)} />\\n\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }\n      }, \"When \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }\n      }, \"optionValue\"), \" is not defined, value of an option refers to the option object itself.\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }\n      }, \"Chips Display\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }\n      }, \"A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 136\n        }\n      }, \"display\"), \" property to visualize the items as tokens.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 1\n        }\n      }, \"\\n<MultiSelect display=\\\"chip\\\" optionLabel=\\\"name\\\" value={selectedCities} options={cities} onChange={(e) => setSelectedCities(e.value)} />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }\n      }, \"Custom Content\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }\n      }, \"Label of an option is used as the display text of an item by default, for custom content support define an itemTemplate function that gets the option as a parameter and returns the content.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 1\n        }\n      }, \"\\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} itemTemplate={itemTemplate} />\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 1\n        }\n      }, \"\\nitemTemplate(option) {\\n    // custom item content\\n}\\n\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }\n      }, \"In addition \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 40\n        }\n      }, \"selectedItemTemplate\"), \" can be used to customize the selected values display instead of the default comma separated list.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 1\n        }\n      }, \"\\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} selectedItemTemplate={selectedItemTemplate} />\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 1\n        }\n      }, \"\\nselectedItemTemplate(option) {\\n    // custom selected item content\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }\n      }, \"Filtering\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }\n      }, \"Options can be filtered using an input field in the overlay by enabling the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 92\n        }\n      }, \"filter\"), \" property. By default filtering is done against label of the items and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 40\n        }\n      }, \"filterBy\"), \" property is available to choose one or more properties of the options. In addition \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 139\n        }\n      }, \"filterMatchMode\"), \" can be utilized to define the filtering algorithm, valid options are \\\"contains\\\" (default), \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\" and \\\"notEquals\\\".\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 1\n        }\n      }, \"\\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} filter/>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }, \"SelectItem API\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 29\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 29\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 29\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 29\n        }\n      }, \"label\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 29\n        }\n      }, \"Label of the option.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 29\n        }\n      }, \"value\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 29\n        }\n      }, \"Value of the option.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 29\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 29\n        }\n      }, \"ClassName of the option.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 29\n        }\n      }, \"title\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 29\n        }\n      }, \"Tooltip text of the option. (Not supported)\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 29\n        }\n      }, \"disabled\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 29\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }\n      }, \"Whether the option is disabled or not. (Not supported)\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 25\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 29\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 29\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 29\n        }\n      }, \"name\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 29\n        }\n      }, \"Name of the input element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 29\n        }\n      }, \"value\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 29\n        }\n      }, \"array\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 29\n        }\n      }, \"Value of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 29\n        }\n      }, \"options\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 29\n        }\n      }, \"array\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 29\n        }\n      }, \"An array of selectitems to display as the available options.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 29\n        }\n      }, \"optionLabel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 29\n        }\n      }, \"Name of the label field of an option when an arbitrary objects instead of SelectItems are used as options.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 29\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 29\n        }\n      }, \"Inline style of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 29\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 29\n        }\n      }, \"Style class of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 29\n        }\n      }, \"panelClassName\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 29\n        }\n      }, \"Style class of the overlay panel element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 29\n        }\n      }, \"panelStyle\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 29\n        }\n      }, \"Inline style of the overlay panel element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 29\n        }\n      }, \"scrollHeight\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 29\n        }\n      }, \"200px\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 29\n        }\n      }, \"Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 29\n        }\n      }, \"placeholder\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 29\n        }\n      }, \"Label to display when there are no selections.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 29\n        }\n      }, \"fixedPlaceholder\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 29\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 29\n        }\n      }, \"Whether to display selected items in the label section or always display the placeholder as the default label.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 29\n        }\n      }, \"disabled\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 29\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 29\n        }\n      }, \"When present, it specifies that the component should be disabled.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 29\n        }\n      }, \"showClear\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 29\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 29\n        }\n      }, \"When enabled, a clear icon is displayed to clear the value.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 29\n        }\n      }, \"filter\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 29\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 29\n        }\n      }, \"When specified, displays an input field to filter the items on keyup.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 29\n        }\n      }, \"filterBy\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 29\n        }\n      }, \"label\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 29\n        }\n      }, \"When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 29\n        }\n      }, \"filterMatchMode\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 29\n        }\n      }, \"contains\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 29\n        }\n      }, \"Defines how the items are filtered, valid values are \\\"contains\\\", (default) \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\" and \\\"notEquals\\\".\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 29\n        }\n      }, \"filterPlaceholder\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 29\n        }\n      }, \"Placeholder text to show when filter input is empty.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 29\n        }\n      }, \"filterLocale\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 29\n        }\n      }, \"undefined\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 29\n        }\n      }, \"Locale to use in filtering. The default locale is the host environment's current locale.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 29\n        }\n      }, \"emptyFilterMessage\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 29\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 29\n        }\n      }, \"No records found\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 29\n        }\n      }, \"Template to display when filtering does not return any results.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 29\n        }\n      }, \"resetFilterOnHide\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 29\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 29\n        }\n      }, \"Clears the filter value when hiding the dropdown.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 29\n        }\n      }, \"tabIndex\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 29\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 29\n        }\n      }, \"Index of the element in tabbing order.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 29\n        }\n      }, \"dataKey\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 29\n        }\n      }, \"A property to uniquely match the value in options for better performance.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 29\n        }\n      }, \"required\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 29\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 29\n        }\n      }, \"When present, it specifies that an input field must be filled out before submitting the form.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 29\n        }\n      }, \"inputId\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 29\n        }\n      }, \"Identifier of the focusable input.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 29\n        }\n      }, \"tooltip\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 29\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 29\n        }\n      }, \"Content of the tooltip.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 29\n        }\n      }, \"tooltipOptions\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 29\n        }\n      }, \"object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 29\n        }\n      }, \"Configuration of the tooltip, refer to the tooltip documentation for more information.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 29\n        }\n      }, \"itemTemplate\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 29\n        }\n      }, \"function\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 29\n        }\n      }, \"Function that gets the option and returns the content for it.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 29\n        }\n      }, \"selectedItemTemplate\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 29\n        }\n      }, \"function\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 29\n        }\n      }, \"Function that gets an item in the value and returns the content for it.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 29\n        }\n      }, \"panelHeaderTemplate\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 29\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 29\n        }\n      }, \"Template of the panel header.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 29\n        }\n      }, \"panelFooterTemplate\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 29\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 29\n        }\n      }, \"Template of the panel footer.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 29\n        }\n      }, \"appendTo\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 29\n        }\n      }, \"DOM element\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 29\n        }\n      }, \"DOM element instance where the dialog should be mounted.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 29\n        }\n      }, \"maxSelectedLabels\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 29\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 29\n        }\n      }, \"3\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 29\n        }\n      }, \"Decides how many selected item labels to show at most.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 29\n        }\n      }, \"selectionLimit\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 29\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 29\n        }\n      }, \"Number of maximum options that can be selected.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 29\n        }\n      }, \"selectedItemsLabel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 29\n        }\n      }, \"{0} items selected\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 29\n        }\n      }, \"Label to display after exceeding max selected labels.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 29\n        }\n      }, \"ariaLabelledBy\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 29\n        }\n      }, \"Establishes relationships between the component and label(s) where its value should be one or more element IDs.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 29\n        }\n      }, \"display\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 29\n        }\n      }, \"comma\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 29\n        }\n      }, \"Used mode to display the selected item. Valid values are 'comma' and 'chip'.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 25\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 25\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 25\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 29\n        }\n      }, \"onChange\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 29\n        }\n      }, \"event.originalEvent: Browser event\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 67\n        }\n      }), \"event.value: Current selected values\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 69\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 29\n        }\n      }, \"Callback to invoke when value changes.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 29\n        }\n      }, \"onFocus\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 29\n        }\n      }, \"event: Browser event.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 29\n        }\n      }, \"Callback to invoke when the element receives focus.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 29\n        }\n      }, \"onBlur\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 29\n        }\n      }, \"event: Browser event.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 29\n        }\n      }, \"Callback to invoke when the element loses focus.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }\n      }, \"Methods\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 25\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 25\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 25\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 29\n        }\n      }, \"checkValidity\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 29\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 29\n        }\n      }, \"Checks whether the native hidden select element has any constraints and returns a boolean for the result.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 13\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }\n      }, \"Following is the list of structural style classes, for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 93\n        }\n      }, \" theming\"), \" page.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 29\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 29\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 29\n        }\n      }, \"p-multiselect\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 29\n        }\n      }, \"Container element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 29\n        }\n      }, \"p-multiselect-label-container\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 29\n        }\n      }, \"Container of the label to display selected items.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 29\n        }\n      }, \"p-multiselect-label-container\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 29\n        }\n      }, \"Label to display selected items.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 29\n        }\n      }, \"p-multiselect-trigger\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 29\n        }\n      }, \"Dropdown button.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 29\n        }\n      }, \"p-multiselect-filter-container\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 29\n        }\n      }, \"Container of filter input.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 29\n        }\n      }, \"p-multiselect-panel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 29\n        }\n      }, \"Overlay panel for items.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 29\n        }\n      }, \"p-multiselect-items\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 29\n        }\n      }, \"List container of items.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 29\n        }\n      }, \"p-multiselect-item\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 29\n        }\n      }, \"An item in the list.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 29\n        }\n      }, \"p-multiselect-token\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 29\n        }\n      }, \"A selected item element container on display='chip' mode.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 29\n        }\n      }, \"p-chips-token-icon\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 29\n        }\n      }, \"Icon of a selected item element on display='chip' mode.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 29\n        }\n      }, \"p-chips-token-label\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 29\n        }\n      }, \"Label of a selected item element on display='chip' mode.\")))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 17\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 17\n        }\n      }, \"None.\"))), useLiveEditorTabs({\n        name: 'MultiSelectDemo',\n        sources: this.sources,\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return MultiSelectDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/multiselect/MultiSelectDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","MultiSelectDoc","props","sources","tabName","content","extFiles","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kCAAlC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AAEA,WAAaC,cAAb;AAAA;;AAAA;;AAEI,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,OAAL,GAAe;AACX,eAAS;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OADE;AAgGX,eAAS;AACLD,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OAhGE;AAgLX,YAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,OAAO;AAFL;AAhLK,KAAf;AAkQA,UAAKC,QAAL,GAAgB;AACZ,sCAAgC;AAC5BD,QAAAA,OAAO;AADqB;AADpB,KAAhB;AArQe;AAgSlB;;AAlSL;AAAA;AAAA,WAoSI,iCAAwB;AACpB,aAAO,KAAP;AACH;AAtSL;AAAA;AAAA,WAwSI,kBAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAFoB,eAQR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARQ,eASR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAtD,wBAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvE,yKAC4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAD5E,mIAE4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAF5E,wBAEmG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFnG,4LATQ,eAcR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAH,CAdQ,eAepB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yOAfoB,eA2BpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6GA3BoB,eAiCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAH,CAjCQ,eAkCpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sNAlCoB,eA8CpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yPA9CoB,eAoDR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAR,4EApDQ,eAsDR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAtDQ,eAuDR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kJAA2H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA3H,gDAvDQ,eAwDpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0JAxDoB,eA8DR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA9DQ,eA+DR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMA/DQ,eAiEpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIAjEoB,eAuEpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAvEoB,eA8EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAf,uGA9EJ,eAgFpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJAhFoB,eAsFpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAtFoB,eA8FR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA9FQ,eA+FR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA/E,0FAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD3B,uGAC8H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD9H,8JA/FQ,eAmGpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mHAnGoB,eAyGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAzGQ,eA0GR;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJJ,CAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,CAbJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAJJ,CAnBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAJJ,CAzBJ,CATJ,CADJ,CA1GQ,eAuJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvJQ,eAwJR;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADA,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJJ,CAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJJ,CAbJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAJJ,CAnBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHAJJ,CAzBJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJJ,CA/BJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJJ,CArCJ,eA2CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAJJ,CA3CJ,eAiDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAJJ,CAjDJ,eAuDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GAJJ,CAvDJ,eA6DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAJJ,CA7DJ,eAmEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0HAJJ,CAnEJ,eAyEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAJJ,CAzEJ,eA+EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAJJ,CA/EJ,eAqFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAJJ,CArFJ,eA2FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAJJ,CA3FJ,eAiGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oJAJJ,CAjGJ,eAuGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAJJ,CAvGJ,eA6GI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAJJ,CA7GJ,eAmHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAJJ,CAnHJ,eAyHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAJJ,CAzHJ,eA+HI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAJJ,CA/HJ,eAqII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAJJ,CArIJ,eA2II;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAJJ,CA3IJ,eAiJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAJJ,CAjJJ,eAuJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJJ,CAvJJ,eA6JI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAJJ,CA7JJ,eAmKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAJJ,CAnKJ,eAyKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAJJ,CAzKJ,eA+KI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJJ,CA/KJ,eAqLI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJJ,CArLJ,eA2LI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAJJ,CA3LJ,eAiMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAJJ,CAjMJ,eAuMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAJJ,CAvMJ,eA6MI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAJJ,CA7MJ,eAmNI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HAJJ,CAnNJ,eAyNI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAJJ,CAzNJ,CATJ,CADJ,CAxJQ,eAqYR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArYQ,eAsYR;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CADA,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,uDACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADxC,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDALJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAHJ,CARJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAHJ,CAbJ,CARJ,CADJ,CAtYQ,eAqaR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAraQ,eAsaR;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CADA,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAHJ,CADJ,CARJ,CADJ,CAtaQ,eAybR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzbQ,eA0bR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGAAgF,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhF,WA1bQ,eA2bR;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,CALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,CATJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CAbJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,CAjBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,CArBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,CAzBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CA7BJ,eAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAFJ,CAjCJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAFJ,CArCJ,eAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFJ,CAzCJ,CAPJ,CADJ,eAwDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxDJ,eAyDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAzDJ,CA3bQ,CADJ,EA2fAL,iBAAiB,CAAC;AAAEO,QAAAA,IAAI,EAAE,iBAAR;AAA2BJ,QAAAA,OAAO,EAAE,KAAKA,OAAzC;AAAkDG,QAAAA,QAAQ,EAAE,KAAKA;AAAjE,OAAD,CA3fjB,CADJ,CADJ;AAkgBH;AA3yBL;;AAAA;AAAA,EAAoCX,SAApC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class MultiSelectDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport './MultiSelectDemo.css';\r\n\r\nexport class MultiSelectDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedCities1: null,\r\n            selectedCities2: null,\r\n            selectedCountries: null\r\n        };\r\n\r\n        this.cities = [\r\n            {name: 'New York', code: 'NY'},\r\n            {name: 'Rome', code: 'RM'},\r\n            {name: 'London', code: 'LDN'},\r\n            {name: 'Istanbul', code: 'IST'},\r\n            {name: 'Paris', code: 'PRS'}\r\n        ];\r\n\r\n        this.countries = [\r\n            {name: 'Australia', code: 'AU'},\r\n            {name: 'Brazil', code: 'BR'},\r\n            {name: 'China', code: 'CN'},\r\n            {name: 'Egypt', code: 'EG'},\r\n            {name: 'France', code: 'FR'},\r\n            {name: 'Germany', code: 'DE'},\r\n            {name: 'India', code: 'IN'},\r\n            {name: 'Japan', code: 'JP'},\r\n            {name: 'Spain', code: 'ES'},\r\n            {name: 'United States', code: 'US'}\r\n        ];\r\n\r\n        this.countryTemplate = this.countryTemplate.bind(this);\r\n        this.selectedCountriesTemplate = this.selectedCountriesTemplate.bind(this);\r\n        this.panelFooterTemplate = this.panelFooterTemplate.bind(this);\r\n    }\r\n\r\n    countryTemplate(option) {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    selectedCountriesTemplate(option) {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return \"Select Countries\";\r\n    }\r\n\r\n    panelFooterTemplate() {\r\n        const selectedItems = this.state.selectedCountries;\r\n        const length = selectedItems ? selectedItems.length : 0;\r\n        return (\r\n            <div className=\"p-py-2 p-px-3\">\r\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"multiselect-demo\">\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <MultiSelect value={this.state.selectedCities1} options={this.cities} onChange={(e) => this.setState({ selectedCities1: e.value })} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                    <h5>Chips</h5>\r\n                    <MultiSelect value={this.state.selectedCities2} options={this.cities} onChange={(e) => this.setState({ selectedCities2: e.value })} optionLabel=\"name\" placeholder=\"Select a City\" display=\"chip\" />\r\n\r\n                    <h5>Advanced with Templating and Filtering</h5>\r\n                    <MultiSelect value={this.state.selectedCountries} options={this.countries}  onChange={(e) => this.setState({ selectedCountries: e.value })} optionLabel=\"name\" placeholder=\"Select Countries\" filter className=\"multiselect-custom\"\r\n                        itemTemplate={this.countryTemplate} selectedItemTemplate={this.selectedCountriesTemplate} panelFooterTemplate={this.panelFooterTemplate}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport './MultiSelectDemo.css';\r\n\r\nconst MultiSelectDemo = () => {\r\n    const [selectedCities1, setSelectedCities1] = useState(null);\r\n    const [selectedCities2, setSelectedCities2] = useState(null);\r\n    const [selectedCountries, setSelectedCountries] = useState(null);\r\n    const cities = [\r\n        {name: 'New York', code: 'NY'},\r\n        {name: 'Rome', code: 'RM'},\r\n        {name: 'London', code: 'LDN'},\r\n        {name: 'Istanbul', code: 'IST'},\r\n        {name: 'Paris', code: 'PRS'}\r\n    ];\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n\r\n    const countryTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const selectedCountriesTemplate = (option) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return \"Select Countries\";\r\n    }\r\n\r\n    const panelFooterTemplate = () => {\r\n        const length = selectedCountries ? selectedCountries.length : 0;\r\n        return (\r\n            <div className=\"p-py-2 p-px-3\">\r\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"multiselect-demo\">\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <MultiSelect value={selectedCities1} options={cities} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                <h5>Chips</h5>\r\n                <MultiSelect value={selectedCities2} options={cities} onChange={(e) => setSelectedCities2(e.value)} optionLabel=\"name\" placeholder=\"Select a City\" display=\"chip\" />\r\n\r\n                <h5>Advanced with Templating and Filtering</h5>\r\n                <MultiSelect value={selectedCountries} options={countries}  onChange={(e) => setSelectedCountries(e.value)} optionLabel=\"name\" placeholder=\"Select Countries\" filter className=\"multiselect-custom\"\r\n                    itemTemplate={countryTemplate} selectedItemTemplate={selectedCountriesTemplate} panelFooterTemplate={panelFooterTemplate}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport './MultiSelectDemo.css';\r\n\r\nconst MultiSelectDemo = () => {\r\n    const [selectedCities1, setSelectedCities1] = useState(null);\r\n    const [selectedCities2, setSelectedCities2] = useState(null);\r\n    const [selectedCountries, setSelectedCountries] = useState(null);\r\n    const cities = [\r\n        {name: 'New York', code: 'NY'},\r\n        {name: 'Rome', code: 'RM'},\r\n        {name: 'London', code: 'LDN'},\r\n        {name: 'Istanbul', code: 'IST'},\r\n        {name: 'Paris', code: 'PRS'}\r\n    ];\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n\r\n    const countryTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const selectedCountriesTemplate = (option) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return \"Select Countries\";\r\n    }\r\n\r\n    const panelFooterTemplate = () => {\r\n        const length = selectedCountries ? selectedCountries.length : 0;\r\n        return (\r\n            <div className=\"p-py-2 p-px-3\">\r\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"multiselect-demo\">\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <MultiSelect value={selectedCities1} options={cities} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                <h5>Chips</h5>\r\n                <MultiSelect value={selectedCities2} options={cities} onChange={(e) => setSelectedCities2(e.value)} optionLabel=\"name\" placeholder=\"Select a City\" display=\"chip\" />\r\n\r\n                <h5>Advanced with Templating and Filtering</h5>\r\n                <MultiSelect value={selectedCountries} options={countries}  onChange={(e) => setSelectedCountries(e.value)} optionLabel=\"name\" placeholder=\"Select Countries\" filter className=\"multiselect-custom\"\r\n                    itemTemplate={countryTemplate} selectedItemTemplate={selectedCountriesTemplate} panelFooterTemplate={panelFooterTemplate}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/MultiSelectDemo.css': {\r\n                content: `\r\n.multiselect-demo .p-multiselect {\r\n    min-width: 15rem;\r\n}\r\n\r\n.multiselect-demo .multiselect-custom .p-multiselect-label:not(.p-placeholder):not(.p-multiselect-items-label) {\r\n    padding-top: .25rem;\r\n    padding-bottom: .25rem;\r\n}\r\n\r\n.multiselect-demo .multiselect-custom .country-item-value {\r\n    padding: .25rem .5rem;\r\n    border-radius: 3px;\r\n    display: inline-flex;\r\n    margin-right: .5rem;\r\n    background-color: var(--primary-color);\r\n    color: var(--primary-color-text);\r\n}\r\n\r\n.multiselect-demo .multiselect-custom .country-item-value img.flag {\r\n    width: 17px;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { MultiSelect } from 'primereact/multiselect';\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Getting Started</h5>\r\n            <p>MultiSelect is used as a controlled component with <i>value</i> and <i>onChange</i> properties along with the options collection. There are two alternatives\r\n            of how to define the options property; One way is providing a collection of <i>SelectItem</i> instances having label-value pairs\r\n            whereas other way is providing an array of arbitrary objects along with the <i>optionLabel</i> and <i>optionValue</i> properties to specify the label/value field pair. In addition,\r\n            options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.</p>\r\n\r\n            <p><b>Options as SelectItems</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst citySelectItems = [\r\n    {label: 'New York', value: 'NY'},\r\n    {label: 'Rome', value: 'RM'},\r\n    {label: 'London', value: 'LDN'},\r\n    {label: 'Istanbul', value: 'IST'},\r\n    {label: 'Paris', value: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <p><b>Options as any type</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst cities = [\r\n    {name: 'New York', code: 'NY'},\r\n    {name: 'Rome', code: 'RM'},\r\n    {name: 'London', code: 'LDN'},\r\n    {name: 'Istanbul', code: 'IST'},\r\n    {name: 'Paris', code: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect optionLabel=\"name\" value={cities} options={cities} onChange={(e) => setCities(e.value)} />\r\n<MultiSelect optionLabel=\"name\" optionValue=\"code\" value={cities} options={cities} onChange={(e) => setCities(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n            <p>When <i>optionValue</i> is not defined, value of an option refers to the option object itself.</p>\r\n\r\n            <h5>Chips Display</h5>\r\n            <p>A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the <i>display</i> property to visualize the items as tokens.</p>\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect display=\"chip\" optionLabel=\"name\" value={selectedCities} options={cities} onChange={(e) => setSelectedCities(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Custom Content</h5>\r\n            <p>Label of an option is used as the display text of an item by default, for custom content support define an itemTemplate function that gets the option as a parameter and returns the content.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} itemTemplate={itemTemplate} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nitemTemplate(option) {\r\n    // custom item content\r\n}\r\n`}\r\n</CodeHighlight>\r\n                        <p>In addition <i>selectedItemTemplate</i> can be used to customize the selected values display instead of the default comma separated list.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} selectedItemTemplate={selectedItemTemplate} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nselectedItemTemplate(option) {\r\n    // custom selected item content\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Filtering</h5>\r\n            <p>Options can be filtered using an input field in the overlay by enabling the <i>filter</i> property. By default filtering is done against\r\n                label of the items and <i>filterBy</i> property is available to choose one or more properties of the options. In addition <i>filterMatchMode</i> can be utilized\r\n                to define the filtering algorithm, valid options are \"contains\" (default), \"startsWith\", \"endsWith\", \"equals\" and \"notEquals\".</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} filter/>\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>SelectItem API</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Default</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>label</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>value</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Value of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>ClassName of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>title</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Tooltip text of the option. (Not supported)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Whether the option is disabled or not. (Not supported)</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Properties</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Default</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>id</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Unique identifier of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>name</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the input element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>value</td>\r\n                            <td>array</td>\r\n                            <td>null</td>\r\n                            <td>Value of the component.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>options</td>\r\n                            <td>array</td>\r\n                            <td>null</td>\r\n                            <td>An array of selectitems to display as the available options.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>optionLabel</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the label field of an option when an arbitrary objects instead of SelectItems are used as options.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>style</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>panelClassName</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the overlay panel element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>panelStyle</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the overlay panel element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>scrollHeight</td>\r\n                            <td>string</td>\r\n                            <td>200px</td>\r\n                            <td>Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>placeholder</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label to display when there are no selections.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>fixedPlaceholder</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Whether to display selected items in the label section or always display the placeholder as the default label.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When present, it specifies that the component should be disabled.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>showClear</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When enabled, a clear icon is displayed to clear the value.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filter</td>\r\n                            <td>boolean</td>\r\n                            <td>true</td>\r\n                            <td>When specified, displays an input field to filter the items on keyup.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterBy</td>\r\n                            <td>string</td>\r\n                            <td>label</td>\r\n                            <td>When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterMatchMode</td>\r\n                            <td>string</td>\r\n                            <td>contains</td>\r\n                            <td>Defines how the items are filtered, valid values are \"contains\", (default) \"startsWith\", \"endsWith\", \"equals\" and \"notEquals\".</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterPlaceholder</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Placeholder text to show when filter input is empty.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterLocale</td>\r\n                            <td>string</td>\r\n                            <td>undefined</td>\r\n                            <td>Locale to use in filtering. The default locale is the host environment's current locale.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>emptyFilterMessage</td>\r\n                            <td>any</td>\r\n                            <td>No records found</td>\r\n                            <td>Template to display when filtering does not return any results.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>resetFilterOnHide</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Clears the filter value when hiding the dropdown.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tabIndex</td>\r\n                            <td>number</td>\r\n                            <td>null</td>\r\n                            <td>Index of the element in tabbing order.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>dataKey</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>A property to uniquely match the value in options for better performance.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>required</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When present, it specifies that an input field must be filled out before submitting the form.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>inputId</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Identifier of the focusable input.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltip</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Content of the tooltip.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltipOptions</td>\r\n                            <td>object</td>\r\n                            <td>null</td>\r\n                            <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>itemTemplate</td>\r\n                            <td>function</td>\r\n                            <td>null</td>\r\n                            <td>Function that gets the option and returns the content for it.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>selectedItemTemplate</td>\r\n                            <td>function</td>\r\n                            <td>null</td>\r\n                            <td>Function that gets an item in the value and returns the content for it.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>panelHeaderTemplate</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Template of the panel header.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>panelFooterTemplate</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Template of the panel footer.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>appendTo</td>\r\n                            <td>DOM element</td>\r\n                            <td>null</td>\r\n                            <td>DOM element instance where the dialog should be mounted.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>maxSelectedLabels</td>\r\n                            <td>number</td>\r\n                            <td>3</td>\r\n                            <td>Decides how many selected item labels to show at most.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>selectionLimit</td>\r\n                            <td>number</td>\r\n                            <td>null</td>\r\n                            <td>Number of maximum options that can be selected.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>selectedItemsLabel</td>\r\n                            <td>string</td>\r\n                            <td>&#123;0&#125; items selected</td>\r\n                            <td>Label to display after exceeding max selected labels.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ariaLabelledBy</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>display</td>\r\n                            <td>string</td>\r\n                            <td>comma</td>\r\n                            <td>Used mode to display the selected item. Valid values are 'comma' and 'chip'.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Events</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Parameters</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>onChange</td>\r\n                            <td>event.originalEvent: Browser event<br />\r\n                                event.value: Current selected values<br />\r\n                            </td>\r\n                            <td>Callback to invoke when value changes.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onFocus</td>\r\n                            <td>event: Browser event.</td>\r\n                            <td>Callback to invoke when the element receives focus.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onBlur</td>\r\n                            <td>event: Browser event.</td>\r\n                            <td>Callback to invoke when the element loses focus.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Methods</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Parameters</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>checkValidity</td>\r\n                            <td>-</td>\r\n                            <td>Checks whether the native hidden select element has any constraints and returns a boolean for the result.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Styling</h5>\r\n            <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Element</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>p-multiselect</td>\r\n                            <td>Container element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-label-container</td>\r\n                            <td>Container of the label to display selected items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-label-container</td>\r\n                            <td>Label to display selected items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-trigger</td>\r\n                            <td>Dropdown button.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-filter-container</td>\r\n                            <td>Container of filter input.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-panel</td>\r\n                            <td>Overlay panel for items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-items</td>\r\n                            <td>List container of items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-item</td>\r\n                            <td>An item in the list.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-token</td>\r\n                            <td>A selected item element container on display='chip' mode.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-chips-token-icon</td>\r\n                            <td>Icon of a selected item element on display='chip' mode.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-chips-token-label</td>\r\n                            <td>Label of a selected item element on display='chip' mode.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <h5>Dependencies</h5>\r\n                <p>None.</p>\r\n            </div>\r\n\r\n            </TabPanel>\r\n\r\n            {\r\n                useLiveEditorTabs({ name: 'MultiSelectDemo', sources: this.sources, extFiles: this.extFiles })\r\n            }\r\n        </TabView>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}