{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var FullCalendarDoc=/*#__PURE__*/function(_Component){_inherits(FullCalendarDoc,_Component);var _super=_createSuper(FullCalendarDoc);function FullCalendarDoc(props){var _this;_classCallCheck(this,FullCalendarDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { FullCalendar } from 'primereact/fullcalendar';\\nimport { EventService } from '../service/EventService';\\nimport dayGridPlugin from '@fullcalendar/daygrid';\\nimport timeGridPlugin from '@fullcalendar/timegrid';\\nimport interactionPlugin from '@fullcalendar/interaction';\\nimport '@fullcalendar/core/main.css';\\nimport '@fullcalendar/daygrid/main.css';\\nimport '@fullcalendar/timegrid/main.css';\\n\\nexport class FullCalendarDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            events: []\\n        };\\n\\n        this.options = {\\n            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\\n            defaultView: 'dayGridMonth',\\n            defaultDate: '2017-02-01',\\n            header: {\\n                left: 'prev,next',\\n                center: 'title',\\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\\n            },\\n            editable: true\\n        };\\n\\n        this.eventService = new EventService();\\n    }\\n\\n    componentDidMount() {\\n        this.eventService.getEvents().then(data => this.setState({events: data}));\\n    }\\n\\n    render() {\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <FullCalendar events={this.state.events} options={this.options} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { FullCalendar } from 'primereact/fullcalendar';\\nimport { EventService } from '../service/EventService';\\nimport dayGridPlugin from '@fullcalendar/daygrid';\\nimport timeGridPlugin from '@fullcalendar/timegrid';\\nimport interactionPlugin from '@fullcalendar/interaction';\\nimport '@fullcalendar/core/main.css';\\nimport '@fullcalendar/daygrid/main.css';\\nimport '@fullcalendar/timegrid/main.css';\\n\\nconst FullCalendarDemo = () => {\\n    const [events, setEvents] = useState([]);\\n    const options = {\\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\\n        defaultView: 'dayGridMonth',\\n        defaultDate: '2017-02-01',\\n        header: {\\n            left: 'prev,next',\\n            center: 'title',\\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\\n        },\\n        editable: true\\n    };\\n\\n    const eventService = new EventService();\\n\\n    useEffect(() => {\\n        eventService.getEvents().then(data => setEvents(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <FullCalendar events={events} options={options} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { FullCalendar } from 'primereact/fullcalendar';\\nimport { EventService } from '../service/EventService';\\nimport dayGridPlugin from '@fullcalendar/daygrid';\\nimport timeGridPlugin from '@fullcalendar/timegrid';\\nimport interactionPlugin from '@fullcalendar/interaction';\\nimport '@fullcalendar/core/main.css';\\nimport '@fullcalendar/daygrid/main.css';\\nimport '@fullcalendar/timegrid/main.css';\\n\\nconst FullCalendarDemo = () => {\\n    const [events, setEvents] = useState([]);\\n    const options = {\\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\\n        defaultView: 'dayGridMonth',\\n        defaultDate: '2017-02-01',\\n        header: {\\n            left: 'prev,next',\\n            center: 'title',\\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\\n        },\\n        editable: true\\n    };\\n\\n    const eventService = new EventService();\\n\\n    useEffect(() => {\\n        eventService.getEvents().then(data => setEvents(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <FullCalendar events={events} options={options} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};_this.dependencies={\"@fullcalendar/core\":\"4.2.0\",\"@fullcalendar/daygrid\":\"4.2.0\",\"@fullcalendar/timegrid\":\"4.2.0\",\"@fullcalendar/interaction\":\"4.2.0\"};return _this;}_createClass(FullCalendarDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { FullCalendar } from 'primereact/fullcalendar';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"FullCalendar is a wrapper around on \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://fullcalendar.io/docs/v4\"},\"FullCalendar 4.0.1+\"),\" so fullcalendar core needs to be included in your project. For a complete documentation and samples please refer to the \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://fullcalendar.io/\"},\"fullcalendar website\"),\".\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nnpm install @fullcalendar/core --save\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"FullCalendar is plugin based so install the plugins you require and define them with the options property.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nnpm install @fullcalendar/daygrid --save\\nnpm install @fullcalendar/timegrid --save\\nnpm install @fullcalendar/interaction --save\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"FullCalendar properties are defined with the \",/*#__PURE__*/React.createElement(\"i\",null,\"options\"),\" property and the events to display with the \",/*#__PURE__*/React.createElement(\"i\",null,\"events\"),\" property which should be an array and defined using the events property. Refer to \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://fullcalendar.io/docs/event-object\"},\"Event API\"),\" for more information.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nexport const FullCalendarDemo = () => {\\n\\n    const [events, setEvents]: useState([]);\\n    const options = {\\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\\n        defaultView: 'dayGridMonth',\\n        defaultDate: '2017-02-01',\\n        header: {\\n            left: 'prev,next',\\n            center: 'title',\\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\\n        },\\n        editable: true\\n    };\\n\\n    useEffect(() => {\\n        eventService = new EventService();\\n        eventService.getEvents().then(data => setEvents(data));\\n    }, []);\\n\\n    return (\\n        <FullCalendar events={events} options={options} />\\n    );\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Callbacks\"),/*#__PURE__*/React.createElement(\"p\",null,\"Callbacks of the FullCalendar such as dateClick are also defined with the options property.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nlet options: {\\n    defaultDate: '2017-02-01',\\n    header: {\\n        left: 'prev,next',\\n        center: 'title',\\n        right: 'month,agendaWeek,agendaDay'\\n    },\\n    editable: true,\\n    dateClick: (e) =>  {\\n        //handle date click\\n    }\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Methods\"),/*#__PURE__*/React.createElement(\"p\",null,\"Methods of the underlying calendar instance is accessible using the reference of the components calendar API.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<FullCalendar ref={fc} events={events} options={options} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nfc.current.calendar.nextYear();\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"events\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"An array of events to display.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"ClassName of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"options\"),/*#__PURE__*/React.createElement(\"td\",null,\"Object\"),/*#__PURE__*/React.createElement(\"td\",null,\"A configuration object to define properties of FullCalendar.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"https://fullcalendar.io/docs/v4\"},\"FullCalendar 4.0.1+\"))),useLiveEditorTabs({name:'FullCalendarDemo',sources:this.sources,service:'EventService',data:'events',dependencies:this.dependencies})));}}]);return FullCalendarDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/fullcalendar/FullCalendarDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","FullCalendarDoc","props","sources","tabName","content","dependencies","name","service","data"],"mappings":"wsBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,kCAAlC,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CAEA,UAAaC,CAAAA,eAAb,kHAEI,yBAAYC,KAAZ,CAAmB,iDACf,uBAAMA,KAAN,EAEA,MAAKC,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,s7CAFF,CADE,CAuDX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,mxCAFF,CAvDE,CAkGX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,mxCAFL,CAlGK,CAAf,CA+IA,MAAKC,YAAL,CAAoB,CAChB,qBAAsB,OADN,CAEhB,wBAAyB,OAFT,CAGhB,yBAA0B,OAHV,CAIhB,4BAA6B,OAJb,CAApB,CAlJe,aAwJlB,CA1JL,iEA4JI,gCAAwB,CACpB,MAAO,MAAP,CACH,CA9JL,sBAgKI,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,mBACI,oBAAC,QAAD,EAAU,MAAM,CAAC,eAAjB,eACI,uCADJ,cAEpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,gEAFoB,cAQI,gDARJ,cASI,iFAAuC,yBAAG,IAAI,CAAC,iCAAR,wBAAvC,0IAC6D,yBAAG,IAAI,CAAC,0BAAR,yBAD7D,KATJ,cAYpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,8CAZoB,cAkBI,0IAlBJ,cAmBpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,0IAnBoB,cA2BI,0FAAgD,uCAAhD,8DAA2G,sCAA3G,oGAA2M,yBAAG,IAAI,CAAC,2CAAR,cAA3M,0BA3BJ,cA6BpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,0qBA7BoB,cA0DI,0CA1DJ,cA2DI,2HA3DJ,cA6DpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,uQA7DoB,cA8EI,wCA9EJ,cA+EI,6IA/EJ,cAiFpB,oBAAC,aAAD,wEAjFoB,cAsFpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,wCAtFoB,cA6FI,2CA7FJ,cA8FI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,qCAFJ,cAGI,4CAHJ,CADJ,CADJ,cAQI,8CACI,2CACI,mCADJ,cAEI,uCAFJ,cAGI,kEAHJ,CADJ,cAMI,2CACI,uCADJ,cAEI,sCAFJ,cAGI,+DAHJ,CANJ,cAWI,2CACI,sCADJ,cAEI,uCAFJ,cAGI,+DAHJ,CAXJ,cAgBI,2CACI,0CADJ,cAEI,uCAFJ,cAGI,4DAHJ,CAhBJ,cAqBI,2CACI,wCADJ,cAEI,uCAFJ,cAGI,6FAHJ,CArBJ,CARJ,CADJ,CA9FJ,cAqII,6CArIJ,cAsII,0CACI,yBAAG,IAAI,CAAC,iCAAR,wBADJ,CAtIJ,CADJ,CA+IQN,iBAAiB,CAAC,CAAEO,IAAI,CAAE,kBAAR,CAA4BJ,OAAO,CAAE,KAAKA,OAA1C,CAAmDK,OAAO,CAAE,cAA5D,CAA4EC,IAAI,CAAE,QAAlF,CAA4FH,YAAY,CAAE,KAAKA,YAA/G,CAAD,CA/IzB,CADJ,CADJ,CAsJH,CAvTL,6BAAqCV,SAArC","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class FullCalendarDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { FullCalendar } from 'primereact/fullcalendar';\r\nimport { EventService } from '../service/EventService';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\n\r\nexport class FullCalendarDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            events: []\r\n        };\r\n\r\n        this.options = {\r\n            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n            defaultView: 'dayGridMonth',\r\n            defaultDate: '2017-02-01',\r\n            header: {\r\n                left: 'prev,next',\r\n                center: 'title',\r\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n            },\r\n            editable: true\r\n        };\r\n\r\n        this.eventService = new EventService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.eventService.getEvents().then(data => this.setState({events: data}));\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <FullCalendar events={this.state.events} options={this.options} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FullCalendar } from 'primereact/fullcalendar';\r\nimport { EventService } from '../service/EventService';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\n\r\nconst FullCalendarDemo = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const options = {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultView: 'dayGridMonth',\r\n        defaultDate: '2017-02-01',\r\n        header: {\r\n            left: 'prev,next',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        },\r\n        editable: true\r\n    };\r\n\r\n    const eventService = new EventService();\r\n\r\n    useEffect(() => {\r\n        eventService.getEvents().then(data => setEvents(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <FullCalendar events={events} options={options} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FullCalendar } from 'primereact/fullcalendar';\r\nimport { EventService } from '../service/EventService';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\n\r\nconst FullCalendarDemo = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const options = {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultView: 'dayGridMonth',\r\n        defaultDate: '2017-02-01',\r\n        header: {\r\n            left: 'prev,next',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        },\r\n        editable: true\r\n    };\r\n\r\n    const eventService = new EventService();\r\n\r\n    useEffect(() => {\r\n        eventService.getEvents().then(data => setEvents(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <FullCalendar events={events} options={options} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.dependencies = {\r\n            \"@fullcalendar/core\": \"4.2.0\",\r\n            \"@fullcalendar/daygrid\": \"4.2.0\",\r\n            \"@fullcalendar/timegrid\": \"4.2.0\",\r\n            \"@fullcalendar/interaction\": \"4.2.0\"\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { FullCalendar } from 'primereact/fullcalendar';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>FullCalendar is a wrapper around on <a href=\"https://fullcalendar.io/docs/v4\">FullCalendar 4.0.1+</a> so fullcalendar core needs to be included in your project.\r\n                        For a complete documentation and samples please refer to the <a href=\"https://fullcalendar.io/\">fullcalendar website</a>.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nnpm install @fullcalendar/core --save\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <p>FullCalendar is plugin based so install the plugins you require and define them with the options property.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nnpm install @fullcalendar/daygrid --save\r\nnpm install @fullcalendar/timegrid --save\r\nnpm install @fullcalendar/interaction --save\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <p>FullCalendar properties are defined with the <i>options</i> property and the events to display with the <i>events</i> property which should be an array and defined using the events property. Refer to <a href=\"https://fullcalendar.io/docs/event-object\">Event API</a> for more information.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nexport const FullCalendarDemo = () => {\r\n\r\n    const [events, setEvents]: useState([]);\r\n    const options = {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultView: 'dayGridMonth',\r\n        defaultDate: '2017-02-01',\r\n        header: {\r\n            left: 'prev,next',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        },\r\n        editable: true\r\n    };\r\n\r\n    useEffect(() => {\r\n        eventService = new EventService();\r\n        eventService.getEvents().then(data => setEvents(data));\r\n    }, []);\r\n\r\n    return (\r\n        <FullCalendar events={events} options={options} />\r\n    );\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Callbacks</h5>\r\n                        <p>Callbacks of the FullCalendar such as dateClick are also defined with the options property.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nlet options: {\r\n    defaultDate: '2017-02-01',\r\n    header: {\r\n        left: 'prev,next',\r\n        center: 'title',\r\n        right: 'month,agendaWeek,agendaDay'\r\n    },\r\n    editable: true,\r\n    dateClick: (e) =>  {\r\n        //handle date click\r\n    }\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Methods</h5>\r\n                        <p>Methods of the underlying calendar instance is accessible using the reference of the components calendar API.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<FullCalendar ref={fc} events={events} options={options} />\r\n`}\r\n</CodeHighlight>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nfc.current.calendar.nextYear();\r\n`}\r\n</CodeHighlight>\r\n\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>events</td>\r\n                                        <td>array</td>\r\n                                        <td>An array of events to display.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>object</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>ClassName of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>options</td>\r\n                                        <td>Object</td>\r\n                                        <td>A configuration object to define properties of FullCalendar.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>\r\n                            <a href=\"https://fullcalendar.io/docs/v4\">FullCalendar 4.0.1+</a>\r\n                        </p>\r\n\r\n\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'FullCalendarDemo', sources: this.sources, service: 'EventService', data: 'events', dependencies: this.dependencies })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}