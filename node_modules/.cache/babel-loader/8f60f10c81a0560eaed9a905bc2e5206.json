{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{Config}from\"../../index\";import{PING,SIGN_IN}from\"../actionTypes\";import Request from\"../../http/http\";import{query_string}from\"../../utils\";import http from\"../../http/http\";var signIn=function signIn(data){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Request.post(Config.User.SIGN_IN,query_string({\"username\":data.username,\"password\":data.password}),{headers:{\"Content-Type\":\"application/x-www-form-urlencoded\"}});case 2:response=_context.sent;if(response.status){localStorage.setItem('access_token',response.data.access_token);dispatch({type:SIGN_IN,payload:{},status:response.status});}else{Request.event({name:\"httpError\",type:'error',details:\"invalid credentials\"});localStorage.removeItem('access_token');}return _context.abrupt(\"return\",response);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};var signOut=function signOut(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"sign out\");_context2.next=3;return Request.get(Config.User.SIGN_OUT);case 3:response=_context2.sent;if(response.status){dispatch({type:SIGN_IN,payload:{},status:false});}else{console.log(\"error\");}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var ping=function ping(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return Request.disableEvent().get(Config.User.Ping);case 2:response=_context3.sent;dispatch({type:PING,payload:response.status?response.data.data:{},status:response.status});case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export default{signIn:signIn,signOut:signOut,ping:ping};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/core/store/actions/user.js"],"names":["Config","PING","SIGN_IN","Request","query_string","http","signIn","data","dispatch","post","User","username","password","headers","response","status","localStorage","setItem","access_token","type","payload","event","name","details","removeItem","signOut","console","log","get","SIGN_OUT","ping","disableEvent","Ping"],"mappings":"yWAAA,OAAQA,MAAR,KAAqB,aAArB,CACA,OAAQC,IAAR,CAAcC,OAAd,KAA4B,gBAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,OAAQC,YAAR,KAA2B,aAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,IAAD,iGAAS,iBAAOC,QAAP,qJACGL,CAAAA,OAAO,CAACM,IAAR,CAAaT,MAAM,CAACU,IAAP,CAAYR,OAAzB,CAAiCE,YAAY,CAAC,CACjE,WAAWG,IAAI,CAACI,QADiD,CAEjE,WAAWJ,IAAI,CAACK,QAFiD,CAAD,CAA7C,CAGpB,CACCC,OAAO,CAAE,CACL,eAAgB,mCADX,CADV,CAHoB,CADH,QACdC,QADc,eASpB,GAAGA,QAAQ,CAACC,MAAZ,CAAmB,CACfC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAoCH,QAAQ,CAACP,IAAT,CAAcW,YAAlD,EAEAV,QAAQ,CAAC,CACLW,IAAI,CAAEjB,OADD,CAELkB,OAAO,CAAE,EAFJ,CAGLL,MAAM,CAACD,QAAQ,CAACC,MAHX,CAAD,CAAR,CAKH,CARD,IAQK,CACDZ,OAAO,CAACkB,KAAR,CAAc,CACVC,IAAI,CAAC,WADK,CAEVH,IAAI,CAAC,OAFK,CAGVI,OAAO,CAAC,qBAHE,CAAd,EAKAP,YAAY,CAACQ,UAAb,CAAwB,cAAxB,EACH,CAxBmB,gCAyBhBV,QAzBgB,wDAAT,gEAAf,CA4BA,GAAMW,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,mGAAM,kBAAOjB,QAAP,mIACpBkB,OAAO,CAACC,GAAR,CAAY,UAAZ,EADoB,uBAEGxB,CAAAA,OAAO,CAACyB,GAAR,CAAY5B,MAAM,CAACU,IAAP,CAAYmB,QAAxB,CAFH,QAEdf,QAFc,gBAGpB,GAAGA,QAAQ,CAACC,MAAZ,CAAmB,CACjBP,QAAQ,CAAC,CACPW,IAAI,CAAEjB,OADC,CAEPkB,OAAO,CAAE,EAFF,CAGPL,MAAM,CAAC,KAHA,CAAD,CAAR,CAKD,CAND,IAMM,CACJW,OAAO,CAACC,GAAR,CAAY,OAAZ,EACD,CAXmB,wDAAN,kEAAhB,CAcA,GAAMG,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,mGAAK,kBAAOtB,QAAP,0JACOL,CAAAA,OAAO,CAAC4B,YAAR,GAAuBH,GAAvB,CAA2B5B,MAAM,CAACU,IAAP,CAAYsB,IAAvC,CADP,QACVlB,QADU,gBAEhBN,QAAQ,CAAC,CACPW,IAAI,CAAElB,IADC,CAELmB,OAAO,CAAEN,QAAQ,CAACC,MAAT,CAAgBD,QAAQ,CAACP,IAAT,CAAcA,IAA9B,CAAmC,EAFvC,CAGLQ,MAAM,CAACD,QAAQ,CAACC,MAHX,CAAD,CAAR,CAFgB,wDAAL,kEAAb,CASA,cAAe,CACbT,MAAM,CAANA,MADa,CAEbmB,OAAO,CAAPA,OAFa,CAGbK,IAAI,CAAJA,IAHa,CAAf","sourcesContent":["import {Config} from \"../../index\";\r\nimport {PING, SIGN_IN} from \"../actionTypes\";\r\nimport Request from \"../../http/http\";\r\nimport {query_string} from \"../../utils\";\r\nimport http from \"../../http/http\";\r\nconst signIn = (data) =>async (dispatch)=>{\r\n    const response = await Request.post(Config.User.SIGN_IN,query_string({\r\n        \"username\":data.username,\r\n        \"password\":data.password\r\n    }),{\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n    });\r\n    if(response.status){\r\n        localStorage.setItem('access_token',response.data.access_token);\r\n\r\n        dispatch({\r\n            type: SIGN_IN,\r\n            payload: {},\r\n            status:response.status\r\n        })\r\n    }else{\r\n        Request.event({\r\n            name:\"httpError\",\r\n            type:'error',\r\n            details:\"invalid credentials\"\r\n        })\r\n        localStorage.removeItem('access_token');\r\n    }\r\n return response;\r\n}\r\n\r\nconst signOut = () => async (dispatch)=>{\r\n  console.log(\"sign out\")\r\n  const response = await Request.get(Config.User.SIGN_OUT);\r\n  if(response.status){\r\n    dispatch({\r\n      type: SIGN_IN,\r\n      payload: {},\r\n      status:false\r\n    })\r\n  }else {\r\n    console.log(\"error\")\r\n  }\r\n}\r\n\r\nconst ping = () =>async (dispatch)=>{\r\n  const response = await Request.disableEvent().get(Config.User.Ping)\r\n  dispatch({\r\n    type: PING,\r\n      payload: response.status?response.data.data:{},\r\n      status:response.status\r\n  })\r\n}\r\n\r\nexport default {\r\n  signIn,\r\n  signOut,\r\n  ping\r\n}\r\n"]},"metadata":{},"sourceType":"module"}