{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\cascadeselect\\\\CascadeSelectDemo.js\";\nimport React, { Component } from 'react';\nimport { CascadeSelectDoc } from './CascadeSelectDoc';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport { CascadeSelect } from '../../components/cascadeselect/CascadeSelect';\nexport var CascadeSelectDemo = /*#__PURE__*/function (_Component) {\n  _inherits(CascadeSelectDemo, _Component);\n\n  var _super = _createSuper(CascadeSelectDemo);\n\n  function CascadeSelectDemo(props) {\n    var _this;\n\n    _classCallCheck(this, CascadeSelectDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedCity1: null,\n      selectedCity2: null\n    };\n    _this.countries = [{\n      name: 'Australia',\n      code: 'AU',\n      states: [{\n        name: 'New South Wales',\n        cities: [{\n          cname: 'Sydney',\n          code: 'A-SY'\n        }, {\n          cname: 'Newcastle',\n          code: 'A-NE'\n        }, {\n          cname: 'Wollongong',\n          code: 'A-WO'\n        }]\n      }, {\n        name: 'Queensland',\n        cities: [{\n          cname: 'Brisbane',\n          code: 'A-BR'\n        }, {\n          cname: 'Townsville',\n          code: 'A-TO'\n        }]\n      }]\n    }, {\n      name: 'Canada',\n      code: 'CA',\n      states: [{\n        name: 'Quebec',\n        cities: [{\n          cname: 'Montreal',\n          code: 'C-MO'\n        }, {\n          cname: 'Quebec City',\n          code: 'C-QU'\n        }]\n      }, {\n        name: 'Ontario',\n        cities: [{\n          cname: 'Ottawa',\n          code: 'C-OT'\n        }, {\n          cname: 'Toronto',\n          code: 'C-TO'\n        }]\n      }]\n    }, {\n      name: 'United States',\n      code: 'US',\n      states: [{\n        name: 'California',\n        cities: [{\n          cname: 'Los Angeles',\n          code: 'US-LA'\n        }, {\n          cname: 'San Diego',\n          code: 'US-SD'\n        }, {\n          cname: 'San Francisco',\n          code: 'US-SF'\n        }]\n      }, {\n        name: 'Florida',\n        cities: [{\n          cname: 'Jacksonville',\n          code: 'US-JA'\n        }, {\n          cname: 'Miami',\n          code: 'US-MI'\n        }, {\n          cname: 'Tampa',\n          code: 'US-TA'\n        }, {\n          cname: 'Orlando',\n          code: 'US-OR'\n        }]\n      }, {\n        name: 'Texas',\n        cities: [{\n          cname: 'Austin',\n          code: 'US-AU'\n        }, {\n          cname: 'Dallas',\n          code: 'US-DA'\n        }, {\n          cname: 'Houston',\n          code: 'US-HO'\n        }]\n      }]\n    }];\n    return _this;\n  }\n\n  _createClass(CascadeSelectDemo, [{\n    key: \"countryOptionTemplate\",\n    value: function countryOptionTemplate(option) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"country-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, option.states && /*#__PURE__*/React.createElement(\"img\", {\n        alt: option.name,\n        src: \"showcase/demo/images/flag_placeholder.png\",\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        className: \"flag flag-\".concat(option.code.toLowerCase()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 35\n        }\n      }), option.cities && /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-compass p-mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 35\n        }\n      }), option.cname && /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-map-marker p-mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 34\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, option.cname || option.name));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"cascadeSelect\",\n        showInputStyle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"CascadeSelect\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, \"CascadeSelect displays a nested structure of options.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, \"Basic\"), /*#__PURE__*/React.createElement(CascadeSelect, {\n        value: this.state.selectedCity1,\n        options: this.countries,\n        optionLabel: \"cname\",\n        optionGroupLabel: \"name\",\n        optionGroupChildren: ['states', 'cities'],\n        style: {\n          minWidth: '14rem'\n        },\n        placeholder: \"Select a City\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            selectedCity1: event.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, \"Templating\"), /*#__PURE__*/React.createElement(CascadeSelect, {\n        value: this.state.selectedCity2,\n        options: this.countries,\n        optionLabel: \"cname\",\n        optionGroupLabel: \"name\",\n        optionGroupChildren: ['states', 'cities'],\n        style: {\n          minWidth: '14rem'\n        },\n        placeholder: \"Select a City\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            selectedCity2: event.value\n          });\n        },\n        itemTemplate: this.countryOptionTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(CascadeSelectDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CascadeSelectDemo;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/cascadeselect/CascadeSelectDemo.js"],"names":["React","Component","CascadeSelectDoc","AppInlineHeader","CascadeSelect","CascadeSelectDemo","props","state","selectedCity1","selectedCity2","countries","name","code","states","cities","cname","option","e","target","src","toLowerCase","minWidth","event","setState","value","countryOptionTemplate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { CascadeSelectDoc } from './CascadeSelectDoc';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport { CascadeSelect } from '../../components/cascadeselect/CascadeSelect';\r\n\r\nexport class CascadeSelectDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedCity1: null,\r\n            selectedCity2: null\r\n        };\r\n\r\n        this.countries = [\r\n            {\r\n                name: 'Australia',\r\n                code: 'AU',\r\n                states: [\r\n                    {\r\n                        name: 'New South Wales',\r\n                        cities: [\r\n                            {cname: 'Sydney', code: 'A-SY'},\r\n                            {cname: 'Newcastle', code: 'A-NE'},\r\n                            {cname: 'Wollongong', code: 'A-WO'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Queensland',\r\n                        cities: [\r\n                            {cname: 'Brisbane', code: 'A-BR'},\r\n                            {cname: 'Townsville', code: 'A-TO'}\r\n                        ]\r\n                    },\r\n\r\n                ]\r\n            },\r\n            {\r\n                name: 'Canada',\r\n                code: 'CA',\r\n                states: [\r\n                    {\r\n                        name: 'Quebec',\r\n                        cities: [\r\n                            {cname: 'Montreal', code: 'C-MO'},\r\n                            {cname: 'Quebec City', code: 'C-QU'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Ontario',\r\n                        cities: [\r\n                            {cname: 'Ottawa', code: 'C-OT'},\r\n                            {cname: 'Toronto', code: 'C-TO'}\r\n                        ]\r\n                    },\r\n\r\n                ]\r\n            },\r\n            {\r\n                name: 'United States',\r\n                code: 'US',\r\n                states: [\r\n                    {\r\n                        name: 'California',\r\n                        cities: [\r\n                            {cname: 'Los Angeles', code: 'US-LA'},\r\n                            {cname: 'San Diego', code: 'US-SD'},\r\n                            {cname: 'San Francisco', code: 'US-SF'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Florida',\r\n                        cities: [\r\n                            {cname: 'Jacksonville', code: 'US-JA'},\r\n                            {cname: 'Miami', code: 'US-MI'},\r\n                            {cname: 'Tampa', code: 'US-TA'},\r\n                            {cname: 'Orlando', code: 'US-OR'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Texas',\r\n                        cities: [\r\n                            {cname: 'Austin', code: 'US-AU'},\r\n                            {cname: 'Dallas', code: 'US-DA'},\r\n                            {cname: 'Houston', code: 'US-HO'}\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n\r\n    countryOptionTemplate(option) {\r\n        return (\r\n            <div className=\"country-item\">\r\n                {option.states && <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\r\n                                       className={`flag flag-${option.code.toLowerCase()}`} />}\r\n                {option.cities && <i className=\"pi pi-compass p-mr-2\"/>}\r\n                {option.cname && <i className=\"pi pi-map-marker p-mr-2\"/>}\r\n                <span>{option.cname || option.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"cascadeSelect\" showInputStyle>\r\n                        <h1>CascadeSelect</h1>\r\n                        <p>CascadeSelect displays a nested structure of options.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Basic</h5>\r\n                        <CascadeSelect value={this.state.selectedCity1} options={this.countries}  optionLabel=\"cname\" optionGroupLabel=\"name\" optionGroupChildren={['states', 'cities']}\r\n                            style={{minWidth: '14rem'}} placeholder=\"Select a City\" onChange={event => this.setState({selectedCity1: event.value})}/>\r\n\r\n                        <h5>Templating</h5>\r\n                        <CascadeSelect value={this.state.selectedCity2} options={this.countries}  optionLabel=\"cname\" optionGroupLabel=\"name\" optionGroupChildren={['states', 'cities']}\r\n                            style={{minWidth: '14rem'}} placeholder=\"Select a City\" onChange={event => this.setState({selectedCity2: event.value})}  itemTemplate={this.countryOptionTemplate}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <CascadeSelectDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}