{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\fileupload\\\\FileUpload.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../button/Button';\nimport { Messages } from '../messages/Messages';\nimport { ProgressBar } from '../progressbar/ProgressBar';\nimport DomHandler from '../utils/DomHandler';\nimport { classNames } from '../utils/ClassNames';\nimport { Ripple } from '../ripple/Ripple';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { localeOption } from '../api/Locale';\nexport var FileUpload = /*#__PURE__*/function (_Component) {\n  _inherits(FileUpload, _Component);\n\n  var _super = _createSuper(FileUpload);\n\n  function FileUpload(props) {\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      files: [],\n      msgs: [],\n      focused: false\n    };\n    _this.choose = _this.choose.bind(_assertThisInitialized(_this));\n    _this.upload = _this.upload.bind(_assertThisInitialized(_this));\n    _this.clear = _this.clear.bind(_assertThisInitialized(_this));\n    _this.onFileSelect = _this.onFileSelect.bind(_assertThisInitialized(_this));\n    _this.onDragEnter = _this.onDragEnter.bind(_assertThisInitialized(_this));\n    _this.onDragOver = _this.onDragOver.bind(_assertThisInitialized(_this));\n    _this.onDragLeave = _this.onDragLeave.bind(_assertThisInitialized(_this));\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onSimpleUploaderClick = _this.onSimpleUploaderClick.bind(_assertThisInitialized(_this));\n    _this.duplicateIEEvent = false;\n    return _this;\n  }\n\n  _createClass(FileUpload, [{\n    key: \"hasFiles\",\n    value: function hasFiles() {\n      return this.state.files && this.state.files.length > 0;\n    }\n  }, {\n    key: \"isImage\",\n    value: function isImage(file) {\n      return /^image\\//.test(file.type);\n    }\n  }, {\n    key: \"chooseDisabled\",\n    value: function chooseDisabled() {\n      return this.props.disabled || this.props.fileLimit && this.props.fileLimit <= this.state.files.length + this.uploadedFileCount;\n    }\n  }, {\n    key: \"uploadDisabled\",\n    value: function uploadDisabled() {\n      return this.props.disabled || !this.hasFiles();\n    }\n  }, {\n    key: \"cancelDisabled\",\n    value: function cancelDisabled() {\n      return this.props.disabled || !this.hasFiles();\n    }\n  }, {\n    key: \"chooseButtonLabel\",\n    value: function chooseButtonLabel() {\n      return this.props.chooseLabel || localeOption('choose');\n    }\n  }, {\n    key: \"uploadButtonLabel\",\n    value: function uploadButtonLabel() {\n      return this.props.uploadLabel || localeOption('upload');\n    }\n  }, {\n    key: \"cancelButtonLabel\",\n    value: function cancelButtonLabel() {\n      return this.props.cancelLabel || localeOption('cancel');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(event, index) {\n      this.clearInputElement();\n\n      var currentFiles = _toConsumableArray(this.state.files);\n\n      var removedFile = this.state.files[index];\n      currentFiles.splice(index, 1);\n      this.setState({\n        files: currentFiles\n      });\n\n      if (this.props.onRemove) {\n        this.props.onRemove({\n          originalEvent: event,\n          file: removedFile\n        });\n      }\n    }\n  }, {\n    key: \"clearInputElement\",\n    value: function clearInputElement() {\n      this.fileInput.value = '';\n    }\n  }, {\n    key: \"clearIEInput\",\n    value: function clearIEInput() {\n      if (this.fileInput) {\n        this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n\n        this.fileInput.value = '';\n      }\n    }\n  }, {\n    key: \"formatSize\",\n    value: function formatSize(bytes) {\n      if (bytes === 0) {\n        return '0 B';\n      }\n\n      var k = 1000,\n          dm = 3,\n          sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n          i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  }, {\n    key: \"onFileSelect\",\n    value: function onFileSelect(event) {\n      var _this2 = this;\n\n      if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n        this.duplicateIEEvent = false;\n        return;\n      }\n\n      this.setState({\n        msgs: []\n      });\n      this.files = this.state.files || [];\n      var files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n\n      for (var i = 0; i < files.length; i++) {\n        var file = files[i];\n\n        if (!this.isFileSelected(file)) {\n          if (this.validate(file)) {\n            if (this.isImage(file)) {\n              file.objectURL = window.URL.createObjectURL(file);\n            }\n\n            this.files.push(file);\n          }\n        }\n      }\n\n      this.setState({\n        files: this.files\n      }, function () {\n        if (_this2.hasFiles() && _this2.props.auto) {\n          _this2.upload();\n        }\n      });\n\n      if (this.props.onSelect) {\n        this.props.onSelect({\n          originalEvent: event,\n          files: files\n        });\n      }\n\n      if (event.type !== 'drop' && this.isIE11()) {\n        this.clearIEInput();\n      } else {\n        this.clearInputElement();\n      }\n\n      if (this.props.mode === 'basic' && this.files.length > 0) {\n        this.fileInput.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"isFileSelected\",\n    value: function isFileSelected(file) {\n      var _iterator = _createForOfIteratorHelper(this.state.files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var sFile = _step.value;\n          if (sFile.name + sFile.type + sFile.size === file.name + file.type + file.size) return true;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isIE11\",\n    value: function isIE11() {\n      return !!window['MSInputMethodContext'] && !!document['documentMode'];\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(file) {\n      if (this.props.maxFileSize && file.size > this.props.maxFileSize) {\n        var message = {\n          severity: 'error',\n          summary: this.props.invalidFileSizeMessageSummary.replace('{0}', file.name),\n          detail: this.props.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.props.maxFileSize))\n        };\n\n        if (this.props.mode === 'advanced') {\n          this.messagesUI.show(message);\n        }\n\n        if (this.props.onValidationFail) {\n          this.props.onValidationFail(file);\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"upload\",\n    value: function upload() {\n      var _this3 = this;\n\n      if (this.props.customUpload) {\n        if (this.props.fileLimit) {\n          this.uploadedFileCount += this.state.files.length;\n        }\n\n        if (this.props.uploadHandler) {\n          this.props.uploadHandler({\n            files: this.state.files\n          });\n        }\n      } else {\n        this.setState({\n          msgs: []\n        });\n        var xhr = new XMLHttpRequest();\n        var formData = new FormData();\n\n        if (this.props.onBeforeUpload) {\n          this.props.onBeforeUpload({\n            'xhr': xhr,\n            'formData': formData\n          });\n        }\n\n        var _iterator2 = _createForOfIteratorHelper(this.state.files),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var file = _step2.value;\n            formData.append(this.props.name, file, file.name);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        xhr.upload.addEventListener('progress', function (event) {\n          if (event.lengthComputable) {\n            _this3.setState({\n              progress: Math.round(event.loaded * 100 / event.total)\n            });\n          }\n\n          if (_this3.props.onProgress) {\n            _this3.props.onProgress({\n              originalEvent: event,\n              progress: _this3.progress\n            });\n          }\n\n          ;\n        });\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            _this3.setState({\n              progress: 0\n            });\n\n            if (xhr.status >= 200 && xhr.status < 300) {\n              if (_this3.props.fileLimit) {\n                _this3.uploadedFileCount += _this3.state.files.length;\n              }\n\n              if (_this3.props.onUpload) {\n                _this3.props.onUpload({\n                  xhr: xhr,\n                  files: _this3.state.files\n                });\n              }\n            } else {\n              if (_this3.props.onError) {\n                _this3.props.onError({\n                  xhr: xhr,\n                  files: _this3.state.files\n                });\n              }\n            }\n\n            _this3.clear();\n          }\n        };\n\n        xhr.open('POST', this.props.url, true);\n\n        if (this.props.onBeforeSend) {\n          this.props.onBeforeSend({\n            'xhr': xhr,\n            'formData': formData\n          });\n        }\n\n        xhr.withCredentials = this.props.withCredentials;\n        xhr.send(formData);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setState({\n        files: []\n      });\n\n      if (this.props.onClear) {\n        this.props.onClear();\n      }\n\n      this.clearInputElement();\n    }\n  }, {\n    key: \"choose\",\n    value: function choose() {\n      this.fileInput.click();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.setState({\n        focused: true\n      });\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.setState({\n        focused: false\n      });\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      if (event.which === 13) {\n        // enter\n        this.choose();\n      }\n    }\n  }, {\n    key: \"onDragEnter\",\n    value: function onDragEnter(event) {\n      if (!this.props.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event) {\n      if (!this.props.disabled) {\n        DomHandler.addClass(this.content, 'p-fileupload-highlight');\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      if (!this.props.disabled) {\n        DomHandler.removeClass(this.content, 'p-fileupload-highlight');\n      }\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      if (!this.props.disabled) {\n        DomHandler.removeClass(this.content, 'p-fileupload-highlight');\n        event.stopPropagation();\n        event.preventDefault();\n        var files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n        var allowDrop = this.props.multiple || files && files.length === 1;\n\n        if (allowDrop) {\n          this.onFileSelect(event);\n        }\n      }\n    }\n  }, {\n    key: \"onSimpleUploaderClick\",\n    value: function onSimpleUploaderClick() {\n      if (this.hasFiles()) {\n        this.upload();\n      } else {\n        this.fileInput.click();\n      }\n    }\n  }, {\n    key: \"renderChooseButton\",\n    value: function renderChooseButton() {\n      var _this4 = this;\n\n      var className = classNames('p-button p-fileupload-choose p-component', {\n        'p-disabled': this.props.disabled,\n        'p-focus': this.state.focused\n      });\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: className,\n        onClick: this.choose,\n        onKeyDown: this.onKeyDown,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: function ref(el) {\n          return _this4.fileInput = el;\n        },\n        type: \"file\",\n        onChange: this.onFileSelect,\n        multiple: this.props.multiple,\n        accept: this.props.accept,\n        disabled: this.chooseDisabled(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-button-icon p-button-icon-left p-clickable pi pi-fw pi-plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-button-label p-clickable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }\n      }, this.chooseButtonLabel()), /*#__PURE__*/React.createElement(Ripple, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderFiles\",\n    value: function renderFiles() {\n      var _this5 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-fileupload-files\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }\n      }, this.state.files.map(function (file, index) {\n        var preview = _this5.isImage(file) ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 60\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          alt: file.name,\n          role: \"presentation\",\n          src: file.objectURL,\n          width: _this5.props.previewWidth,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 65\n          }\n        })) : null;\n        var fileName = /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 40\n          }\n        }, file.name);\n        var size = /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 36\n          }\n        }, _this5.formatSize(file.size));\n        var removeButton = /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 44\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          icon: \"pi pi-times\",\n          onClick: function onClick(e) {\n            return _this5.remove(e, index);\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 49\n          }\n        }));\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-fileupload-row\",\n          key: file.name + file.type + file.size,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 32\n          }\n        }, preview, fileName, size, removeButton);\n      }));\n    }\n  }, {\n    key: \"renderEmptyContent\",\n    value: function renderEmptyContent() {\n      if (this.props.emptyTemplate && !this.hasFiles()) {\n        return ObjectUtils.getJSXElement(this.props.emptyTemplate, this.props);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderAdvanced\",\n    value: function renderAdvanced() {\n      var _this6 = this;\n\n      var className = classNames('p-fileupload p-fileupload-advanced p-component', this.props.className);\n      var uploadButton, cancelButton, filesList, progressBar;\n      var chooseButton = this.renderChooseButton();\n      var emptyContent = this.renderEmptyContent();\n\n      if (!this.props.auto) {\n        uploadButton = /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          label: this.uploadButtonLabel(),\n          icon: \"pi pi-upload\",\n          onClick: this.upload,\n          disabled: this.uploadDisabled(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 28\n          }\n        });\n        cancelButton = /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          label: this.cancelButtonLabel(),\n          icon: \"pi pi-times\",\n          onClick: this.clear,\n          disabled: this.cancelDisabled(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 28\n          }\n        });\n      }\n\n      if (this.hasFiles()) {\n        filesList = this.renderFiles();\n        progressBar = /*#__PURE__*/React.createElement(ProgressBar, {\n          value: this.state.progress,\n          showValue: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 27\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-fileupload-buttonbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 17\n        }\n      }, chooseButton, uploadButton, cancelButton), /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this6.content = el;\n        },\n        className: \"p-fileupload-content\",\n        onDragEnter: this.onDragEnter,\n        onDragOver: this.onDragOver,\n        onDragLeave: this.onDragLeave,\n        onDrop: this.onDrop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 17\n        }\n      }, progressBar, /*#__PURE__*/React.createElement(Messages, {\n        ref: function ref(el) {\n          return _this6.messagesUI = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 21\n        }\n      }), filesList, emptyContent));\n    }\n  }, {\n    key: \"renderBasic\",\n    value: function renderBasic() {\n      var _this7 = this;\n\n      var className = classNames('p-fileupload p-fileupload-basic p-component', this.props.className);\n      var buttonClassName = classNames('p-button p-component p-fileupload-choose', {\n        'p-fileupload-choose-selected': this.hasFiles(),\n        'p-disabled': this.props.disabled,\n        'p-focus': this.state.focused\n      });\n      var iconClassName = classNames('p-button-icon p-button-icon-left pi', {\n        'pi-plus': !this.hasFiles() || this.props.auto,\n        'pi-upload': this.hasFiles() && !this.props.auto\n      });\n      var chooseLabel = this.chooseButtonLabel();\n      var label = this.props.auto ? chooseLabel : this.hasFiles() ? this.state.files[0].name : chooseLabel;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Messages, {\n        ref: function ref(el) {\n          return _this7.messagesUI = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: buttonClassName,\n        onMouseUp: this.onSimpleUploaderClick,\n        onKeyDown: this.onKeyDown,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: iconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-button-label p-clickable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }\n      }, label), !this.hasFiles() && /*#__PURE__*/React.createElement(\"input\", {\n        ref: function ref(el) {\n          return _this7.fileInput = el;\n        },\n        type: \"file\",\n        accept: this.props.accept,\n        disabled: this.props.disabled,\n        onChange: this.onFileSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(Ripple, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.mode === 'advanced') return this.renderAdvanced();else if (this.props.mode === 'basic') return this.renderBasic();\n    }\n  }]);\n\n  return FileUpload;\n}(Component);\nFileUpload.defaultProps = {\n  id: null,\n  name: null,\n  url: null,\n  mode: 'advanced',\n  multiple: false,\n  accept: null,\n  disabled: false,\n  auto: false,\n  maxFileSize: null,\n  invalidFileSizeMessageSummary: '{0}: Invalid file size, ',\n  invalidFileSizeMessageDetail: 'maximum upload size is {0}.',\n  style: null,\n  className: null,\n  widthCredentials: false,\n  previewWidth: 50,\n  chooseLabel: null,\n  uploadLabel: null,\n  cancelLabel: null,\n  customUpload: false,\n  emptyTemplate: null,\n  onBeforeUpload: null,\n  onBeforeSend: null,\n  onUpload: null,\n  onError: null,\n  onClear: null,\n  onSelect: null,\n  onProgress: null,\n  onValidationFail: null,\n  uploadHandler: null,\n  onRemove: null\n};\nFileUpload.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  url: PropTypes.string,\n  mode: PropTypes.string,\n  multiple: PropTypes.bool,\n  accept: PropTypes.string,\n  disabled: PropTypes.bool,\n  auto: PropTypes.bool,\n  maxFileSize: PropTypes.number,\n  invalidFileSizeMessageSummary: PropTypes.string,\n  invalidFileSizeMessageDetail: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  widthCredentials: PropTypes.bool,\n  previewWidth: PropTypes.number,\n  chooseLabel: PropTypes.string,\n  uploadLabel: PropTypes.string,\n  cancelLabel: PropTypes.string,\n  customUpload: PropTypes.bool,\n  emptyTemplate: PropTypes.any,\n  onBeforeUpload: PropTypes.func,\n  onBeforeSend: PropTypes.func,\n  onUpload: PropTypes.func,\n  onError: PropTypes.func,\n  onClear: PropTypes.func,\n  onSelect: PropTypes.func,\n  onProgress: PropTypes.func,\n  onValidationFail: PropTypes.func,\n  uploadHandler: PropTypes.func,\n  onRemove: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/fileupload/FileUpload.js"],"names":["React","Component","PropTypes","Button","Messages","ProgressBar","DomHandler","classNames","Ripple","ObjectUtils","localeOption","FileUpload","props","state","files","msgs","focused","choose","bind","upload","clear","onFileSelect","onDragEnter","onDragOver","onDragLeave","onDrop","onKeyDown","onFocus","onBlur","onSimpleUploaderClick","duplicateIEEvent","length","file","test","type","disabled","fileLimit","uploadedFileCount","hasFiles","chooseLabel","uploadLabel","cancelLabel","event","index","clearInputElement","currentFiles","removedFile","splice","setState","onRemove","originalEvent","fileInput","value","bytes","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","isIE11","dataTransfer","target","isFileSelected","validate","isImage","objectURL","window","URL","createObjectURL","push","auto","onSelect","clearIEInput","mode","style","display","sFile","name","size","document","maxFileSize","message","severity","summary","invalidFileSizeMessageSummary","replace","detail","invalidFileSizeMessageDetail","formatSize","messagesUI","show","onValidationFail","customUpload","uploadHandler","xhr","XMLHttpRequest","formData","FormData","onBeforeUpload","append","addEventListener","lengthComputable","progress","round","loaded","total","onProgress","onreadystatechange","readyState","status","onUpload","onError","open","url","onBeforeSend","withCredentials","send","onClear","click","which","stopPropagation","preventDefault","addClass","content","removeClass","allowDrop","multiple","className","el","accept","chooseDisabled","chooseButtonLabel","map","preview","previewWidth","fileName","removeButton","e","remove","emptyTemplate","getJSXElement","uploadButton","cancelButton","filesList","progressBar","chooseButton","renderChooseButton","emptyContent","renderEmptyContent","uploadButtonLabel","uploadDisabled","cancelButtonLabel","cancelDisabled","renderFiles","id","buttonClassName","iconClassName","label","renderAdvanced","renderBasic","defaultProps","widthCredentials","propTypes","string","bool","number","object","any","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from '../button/Button';\r\nimport {Messages} from '../messages/Messages';\r\nimport {ProgressBar} from '../progressbar/ProgressBar';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { Ripple } from '../ripple/Ripple';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { localeOption } from '../api/Locale';\r\n\r\nexport class FileUpload extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        name: null,\r\n        url: null,\r\n        mode: 'advanced',\r\n        multiple: false,\r\n        accept: null,\r\n        disabled: false,\r\n        auto: false,\r\n        maxFileSize: null,\r\n        invalidFileSizeMessageSummary: '{0}: Invalid file size, ',\r\n        invalidFileSizeMessageDetail: 'maximum upload size is {0}.',\r\n        style: null,\r\n        className: null,\r\n        widthCredentials: false,\r\n        previewWidth: 50,\r\n        chooseLabel: null,\r\n        uploadLabel: null,\r\n        cancelLabel: null,\r\n        customUpload: false,\r\n        emptyTemplate: null,\r\n        onBeforeUpload: null,\r\n        onBeforeSend: null,\r\n        onUpload: null,\r\n        onError: null,\r\n        onClear: null,\r\n        onSelect: null,\r\n        onProgress: null,\r\n        onValidationFail: null,\r\n        uploadHandler: null,\r\n        onRemove: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n        mode: PropTypes.string,\r\n        multiple: PropTypes.bool,\r\n        accept: PropTypes.string,\r\n        disabled: PropTypes.bool,\r\n        auto: PropTypes.bool,\r\n        maxFileSize: PropTypes.number,\r\n        invalidFileSizeMessageSummary: PropTypes.string,\r\n        invalidFileSizeMessageDetail: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        widthCredentials: PropTypes.bool,\r\n        previewWidth: PropTypes.number,\r\n        chooseLabel: PropTypes.string,\r\n        uploadLabel: PropTypes.string,\r\n        cancelLabel: PropTypes.string,\r\n        customUpload: PropTypes.bool,\r\n        emptyTemplate: PropTypes.any,\r\n        onBeforeUpload: PropTypes.func,\r\n        onBeforeSend: PropTypes.func,\r\n        onUpload: PropTypes.func,\r\n        onError: PropTypes.func,\r\n        onClear: PropTypes.func,\r\n        onSelect: PropTypes.func,\r\n        onProgress: PropTypes.func,\r\n        onValidationFail: PropTypes.func,\r\n        uploadHandler: PropTypes.func,\r\n        onRemove: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: [],\r\n            msgs: [],\r\n            focused: false\r\n        };\r\n\r\n        this.choose = this.choose.bind(this);\r\n        this.upload = this.upload.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n        this.onFileSelect = this.onFileSelect.bind(this);\r\n        this.onDragEnter = this.onDragEnter.bind(this);\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDragLeave = this.onDragLeave.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.onSimpleUploaderClick = this.onSimpleUploaderClick.bind(this);\r\n\r\n        this.duplicateIEEvent = false;\r\n    }\r\n\r\n    hasFiles() {\r\n        return this.state.files && this.state.files.length > 0;\r\n    }\r\n\r\n    isImage(file) {\r\n        return /^image\\//.test(file.type);\r\n    }\r\n\r\n    chooseDisabled() {\r\n        return this.props.disabled || (this.props.fileLimit && this.props.fileLimit <= this.state.files.length + this.uploadedFileCount);\r\n    }\r\n\r\n    uploadDisabled() {\r\n        return this.props.disabled || !this.hasFiles();\r\n    }\r\n\r\n    cancelDisabled() {\r\n        return this.props.disabled || !this.hasFiles();\r\n    }\r\n\r\n    chooseButtonLabel() {\r\n        return this.props.chooseLabel || localeOption('choose');\r\n    }\r\n\r\n    uploadButtonLabel() {\r\n        return this.props.uploadLabel || localeOption('upload');\r\n    }\r\n\r\n    cancelButtonLabel() {\r\n        return this.props.cancelLabel || localeOption('cancel');\r\n    }\r\n\r\n    remove(event, index) {\r\n        this.clearInputElement();\r\n        let currentFiles = [...this.state.files];\r\n        let removedFile = this.state.files[index];\r\n\r\n        currentFiles.splice(index, 1);\r\n        this.setState({ files: currentFiles });\r\n\r\n        if (this.props.onRemove) {\r\n            this.props.onRemove({\r\n                originalEvent: event,\r\n                file: removedFile\r\n            })\r\n        }\r\n    }\r\n\r\n    clearInputElement() {\r\n        this.fileInput.value = '';\r\n    }\r\n\r\n    clearIEInput() {\r\n        if (this.fileInput) {\r\n            this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\r\n            this.fileInput.value = '';\r\n        }\r\n    }\r\n\r\n    formatSize(bytes) {\r\n        if(bytes === 0) {\r\n            return '0 B';\r\n        }\r\n        let k = 1000,\r\n        dm = 3,\r\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n        i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    onFileSelect(event) {\r\n        if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\r\n            this.duplicateIEEvent = false;\r\n            return;\r\n        }\r\n\r\n        this.setState({msgs:[]});\r\n        this.files = this.state.files || [];\r\n        let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n        for (let i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n\r\n            if (!this.isFileSelected(file)) {\r\n                if (this.validate(file)) {\r\n                    if (this.isImage(file)) {\r\n                        file.objectURL = window.URL.createObjectURL(file);\r\n                    }\r\n                    this.files.push(file);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({files: this.files}, () => {\r\n            if (this.hasFiles() && this.props.auto) {\r\n                this.upload();\r\n            }\r\n        });\r\n\r\n        if(this.props.onSelect) {\r\n            this.props.onSelect({originalEvent: event, files: files});\r\n        }\r\n\r\n        if (event.type !== 'drop' && this.isIE11()) {\r\n            this.clearIEInput();\r\n        }\r\n        else {\r\n            this.clearInputElement();\r\n        }\r\n\r\n        if(this.props.mode === 'basic' && this.files.length > 0) {\r\n            this.fileInput.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    isFileSelected(file){\r\n        for (let sFile of this.state.files){\r\n            if ((sFile.name + sFile.type + sFile.size) === (file.name + file.type+file.size))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isIE11() {\r\n        return !!window['MSInputMethodContext'] && !!document['documentMode'];\r\n    }\r\n\r\n    validate(file) {\r\n        if (this.props.maxFileSize && file.size > this.props.maxFileSize) {\r\n            const message = {\r\n                severity: 'error',\r\n                summary: this.props.invalidFileSizeMessageSummary.replace('{0}', file.name),\r\n                detail: this.props.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.props.maxFileSize))\r\n            };\r\n\r\n            if (this.props.mode === 'advanced') {\r\n                this.messagesUI.show(message);\r\n            }\r\n\r\n            if (this.props.onValidationFail) {\r\n                this.props.onValidationFail(file);\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    upload() {\r\n        if (this.props.customUpload) {\r\n            if (this.props.fileLimit) {\r\n                this.uploadedFileCount += this.state.files.length;\r\n            }\r\n\r\n            if (this.props.uploadHandler) {\r\n                this.props.uploadHandler({\r\n                    files: this.state.files\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            this.setState({msgs:[]});\r\n            let xhr = new XMLHttpRequest();\r\n            let formData = new FormData();\r\n\r\n            if (this.props.onBeforeUpload) {\r\n                this.props.onBeforeUpload({\r\n                    'xhr': xhr,\r\n                    'formData': formData\r\n                });\r\n            }\r\n\r\n            for (let file of this.state.files) {\r\n                formData.append(this.props.name, file, file.name);\r\n            }\r\n\r\n            xhr.upload.addEventListener('progress', (event) => {\r\n                if (event.lengthComputable) {\r\n                    this.setState({progress: Math.round((event.loaded * 100) / event.total)});\r\n                }\r\n\r\n                if (this.props.onProgress) {\r\n                    this.props.onProgress({\r\n                        originalEvent: event,\r\n                        progress: this.progress\r\n                    });\r\n                };\r\n            });\r\n\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4) {\r\n                    this.setState({ progress: 0 });\r\n\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        if (this.props.fileLimit) {\r\n                            this.uploadedFileCount += this.state.files.length;\r\n                        }\r\n\r\n                        if (this.props.onUpload) {\r\n                            this.props.onUpload({xhr: xhr, files: this.state.files});\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this.props.onError) {\r\n                            this.props.onError({xhr: xhr, files: this.state.files});\r\n                        }\r\n                    }\r\n\r\n                    this.clear();\r\n                }\r\n            };\r\n\r\n            xhr.open('POST', this.props.url, true);\r\n\r\n            if(this.props.onBeforeSend) {\r\n                this.props.onBeforeSend({\r\n                    'xhr': xhr,\r\n                    'formData': formData\r\n                });\r\n            }\r\n\r\n            xhr.withCredentials = this.props.withCredentials;\r\n\r\n            xhr.send(formData);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ files:[] });\r\n        if (this.props.onClear) {\r\n            this.props.onClear();\r\n        }\r\n        this.clearInputElement();\r\n    }\r\n\r\n    choose() {\r\n        this.fileInput.click();\r\n    }\r\n\r\n    onFocus() {\r\n        this.setState({ focused: true });\r\n    }\r\n\r\n    onBlur() {\r\n        this.setState({ focused: false });\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (event.which === 13) { // enter\r\n            this.choose();\r\n        }\r\n    }\r\n\r\n    onDragEnter(event) {\r\n        if(!this.props.disabled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragOver(event) {\r\n        if (!this.props.disabled) {\r\n            DomHandler.addClass(this.content, 'p-fileupload-highlight');\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragLeave(event) {\r\n        if (!this.props.disabled) {\r\n            DomHandler.removeClass(this.content, 'p-fileupload-highlight');\r\n        }\r\n    }\r\n\r\n    onDrop(event) {\r\n        if (!this.props.disabled) {\r\n            DomHandler.removeClass(this.content, 'p-fileupload-highlight');\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n\r\n            let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n            let allowDrop = this.props.multiple||(files && files.length === 1);\r\n\r\n            if(allowDrop) {\r\n                this.onFileSelect(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onSimpleUploaderClick() {\r\n        if (this.hasFiles()) {\r\n            this.upload();\r\n        }\r\n        else {\r\n            this.fileInput.click();\r\n        }\r\n    }\r\n\r\n    renderChooseButton() {\r\n        let className = classNames('p-button p-fileupload-choose p-component', {\r\n            'p-disabled': this.props.disabled,\r\n            'p-focus': this.state.focused\r\n        });\r\n\r\n        return (\r\n            <span className={className} onClick={this.choose} onKeyDown={this.onKeyDown} onFocus={this.onFocus} onBlur={this.onBlur} tabIndex={0}>\r\n                <input ref={(el) => this.fileInput = el} type=\"file\" onChange={this.onFileSelect}\r\n                    multiple={this.props.multiple} accept={this.props.accept} disabled={this.chooseDisabled()} />\r\n                <span className=\"p-button-icon p-button-icon-left p-clickable pi pi-fw pi-plus\"></span>\r\n                <span className=\"p-button-label p-clickable\">{this.chooseButtonLabel()}</span>\r\n                <Ripple />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderFiles() {\r\n        return (\r\n            <div className=\"p-fileupload-files\">\r\n                {\r\n                    this.state.files.map((file, index) => {\r\n                        let preview = this.isImage(file) ? <div><img alt={file.name} role=\"presentation\" src={file.objectURL} width={this.props.previewWidth} /></div> : null;\r\n                        let fileName = <div>{file.name}</div>;\r\n                        let size = <div>{this.formatSize(file.size)}</div>;\r\n                        let removeButton = <div><Button type=\"button\" icon=\"pi pi-times\" onClick={(e) => this.remove(e, index)} /></div>\r\n\r\n                        return <div className=\"p-fileupload-row\" key={file.name + file.type + file.size}>\r\n                                 {preview}\r\n                                 {fileName}\r\n                                 {size}\r\n                                 {removeButton}\r\n                            </div>\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderEmptyContent() {\r\n        if (this.props.emptyTemplate && !this.hasFiles()) {\r\n            return ObjectUtils.getJSXElement(this.props.emptyTemplate, this.props);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderAdvanced() {\r\n        const className = classNames('p-fileupload p-fileupload-advanced p-component', this.props.className);\r\n        let uploadButton, cancelButton, filesList, progressBar;\r\n        const chooseButton = this.renderChooseButton();\r\n        const emptyContent = this.renderEmptyContent();\r\n\r\n        if (!this.props.auto) {\r\n            uploadButton = <Button type=\"button\" label={this.uploadButtonLabel()} icon=\"pi pi-upload\" onClick={this.upload} disabled={this.uploadDisabled()} />;\r\n            cancelButton = <Button type=\"button\" label={this.cancelButtonLabel()} icon=\"pi pi-times\" onClick={this.clear} disabled={this.cancelDisabled()} />;\r\n        }\r\n\r\n        if (this.hasFiles()) {\r\n            filesList = this.renderFiles();\r\n            progressBar = <ProgressBar value={this.state.progress} showValue={false} />;\r\n        }\r\n\r\n        return (\r\n            <div id={this.props.id} className={className} style={this.props.style}>\r\n                <div className=\"p-fileupload-buttonbar\">\r\n                    {chooseButton}\r\n                    {uploadButton}\r\n                    {cancelButton}\r\n                </div>\r\n                <div ref={(el) => {this.content = el;}} className=\"p-fileupload-content\"\r\n                    onDragEnter={this.onDragEnter} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave} onDrop={this.onDrop}>\r\n                    {progressBar}\r\n                    <Messages ref={(el) => this.messagesUI = el } />\r\n                    {filesList}\r\n                    {emptyContent}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderBasic() {\r\n        const className = classNames('p-fileupload p-fileupload-basic p-component', this.props.className);\r\n        const buttonClassName = classNames('p-button p-component p-fileupload-choose', { 'p-fileupload-choose-selected': this.hasFiles(), 'p-disabled': this.props.disabled, 'p-focus': this.state.focused });\r\n        const iconClassName = classNames('p-button-icon p-button-icon-left pi', { 'pi-plus': !this.hasFiles() || this.props.auto, 'pi-upload': this.hasFiles() && !this.props.auto });\r\n        const chooseLabel = this.chooseButtonLabel();\r\n        const label = this.props.auto ? chooseLabel : this.hasFiles() ? this.state.files[0].name : chooseLabel;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <Messages ref={(el) => this.messagesUI = el } />\r\n                <span className={buttonClassName} onMouseUp={this.onSimpleUploaderClick} onKeyDown={this.onKeyDown} onFocus={this.onFocus} onBlur={this.onBlur} tabIndex={0}>\r\n                    <span className={iconClassName}></span>\r\n                    <span className=\"p-button-label p-clickable\">{label}</span>\r\n                    { !this.hasFiles() && <input ref={(el) => this.fileInput = el} type=\"file\" accept={this.props.accept} disabled={this.props.disabled} onChange={this.onFileSelect} /> }\r\n                    <Ripple />\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.props.mode === 'advanced')\r\n            return this.renderAdvanced();\r\n        else if (this.props.mode === 'basic')\r\n            return this.renderBasic();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}