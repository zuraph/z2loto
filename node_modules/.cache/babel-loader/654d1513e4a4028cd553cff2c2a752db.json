{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\splitbutton\\\\SplitButton.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../button/Button';\nimport { classNames } from '../utils/ClassNames';\nimport DomHandler from '../utils/DomHandler';\nimport { SplitButtonItem } from './SplitButtonItem';\nimport { SplitButtonPanel } from './SplitButtonPanel';\nimport { tip } from '../tooltip/Tooltip';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport var SplitButton = /*#__PURE__*/function (_Component) {\n  _inherits(SplitButton, _Component);\n\n  var _super = _createSuper(SplitButton);\n\n  function SplitButton(props) {\n    var _this;\n\n    _classCallCheck(this, SplitButton);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      overlayVisible: false\n    };\n    _this.onDropdownButtonClick = _this.onDropdownButtonClick.bind(_assertThisInitialized(_this));\n    _this.onItemClick = _this.onItemClick.bind(_assertThisInitialized(_this));\n    _this.onOverlayEnter = _this.onOverlayEnter.bind(_assertThisInitialized(_this));\n    _this.onOverlayEntered = _this.onOverlayEntered.bind(_assertThisInitialized(_this));\n    _this.onOverlayExit = _this.onOverlayExit.bind(_assertThisInitialized(_this));\n    _this.onPanelClick = _this.onPanelClick.bind(_assertThisInitialized(_this));\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.overlayRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(SplitButton, [{\n    key: \"onPanelClick\",\n    value: function onPanelClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.container\n      });\n    }\n  }, {\n    key: \"onDropdownButtonClick\",\n    value: function onDropdownButtonClick() {\n      if (this.state.overlayVisible) this.hide();else this.show();\n    }\n  }, {\n    key: \"onItemClick\",\n    value: function onItemClick() {\n      this.hide();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.setState({\n        overlayVisible: true\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.setState({\n        overlayVisible: false\n      });\n    }\n  }, {\n    key: \"onOverlayEnter\",\n    value: function onOverlayEnter() {\n      this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\n      this.alignPanel();\n    }\n  }, {\n    key: \"onOverlayEntered\",\n    value: function onOverlayEntered() {\n      this.bindDocumentClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n    }\n  }, {\n    key: \"onOverlayExit\",\n    value: function onOverlayExit() {\n      this.unbindDocumentClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n    }\n  }, {\n    key: \"alignPanel\",\n    value: function alignPanel() {\n      var container = this.defaultButton.parentElement;\n\n      if (this.props.appendTo) {\n        this.overlayRef.current.style.minWidth = DomHandler.getWidth(container) + 'px';\n        DomHandler.absolutePosition(this.overlayRef.current, container);\n      } else {\n        DomHandler.relativePosition(this.overlayRef.current, container);\n      }\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this2 = this;\n\n      if (!this.documentClickListener) {\n        this.documentClickListener = function (event) {\n          if (_this2.state.overlayVisible && _this2.isOutsideClicked(event)) {\n            _this2.hide();\n          }\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this3 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, function () {\n          if (_this3.state.overlayVisible) {\n            _this3.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"bindResizeListener\",\n    value: function bindResizeListener() {\n      var _this4 = this;\n\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this4.state.overlayVisible) {\n            _this4.hide();\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    }\n  }, {\n    key: \"unbindResizeListener\",\n    value: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(event) {\n      return this.container && this.overlayRef && this.overlayRef.current && !this.overlayRef.current.contains(event.target);\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentClickListener();\n      this.unbindResizeListener();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.container,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this5 = this;\n\n      if (this.props.model) {\n        return this.props.model.map(function (menuitem, index) {\n          return /*#__PURE__*/React.createElement(SplitButtonItem, {\n            menuitem: menuitem,\n            key: index,\n            onItemClick: _this5.onItemClick,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 24\n            }\n          });\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var className = classNames('p-splitbutton p-component', this.props.className, {\n        'p-disabled': this.props.disabled\n      });\n      var items = this.renderItems();\n      var buttonContent = this.props.buttonTemplate ? ObjectUtils.getJSXElement(this.props.buttonTemplate, this.props) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.id,\n        className: className,\n        style: this.props.style,\n        ref: function ref(el) {\n          return _this6.container = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        ref: function ref(el) {\n          return _this6.defaultButton = el;\n        },\n        type: \"button\",\n        className: \"p-splitbutton-defaultbutton\",\n        icon: this.props.icon,\n        label: this.props.label,\n        onClick: this.props.onClick,\n        disabled: this.props.disabled,\n        tabIndex: this.props.tabIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, buttonContent), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        className: \"p-splitbutton-menubutton\",\n        icon: \"pi pi-chevron-down\",\n        onClick: this.onDropdownButtonClick,\n        disabled: this.props.disabled,\n        \"aria-expanded\": this.state.overlayVisible,\n        \"aria-haspopup\": true,\n        \"aria-owns\": this.id + '_overlay',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(SplitButtonPanel, {\n        ref: this.overlayRef,\n        appendTo: this.props.appendTo,\n        id: this.id + '_overlay',\n        menuStyle: this.props.menuStyle,\n        menuClassName: this.props.menuClassName,\n        onClick: this.onPanelClick,\n        in: this.state.overlayVisible,\n        onEnter: this.onOverlayEnter,\n        onEntered: this.onOverlayEntered,\n        onExit: this.onOverlayExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, items));\n    }\n  }]);\n\n  return SplitButton;\n}(Component);\nSplitButton.defaultProps = {\n  id: null,\n  label: null,\n  icon: null,\n  model: null,\n  disabled: null,\n  style: null,\n  className: null,\n  menuStyle: null,\n  menuClassName: null,\n  tabIndex: null,\n  onClick: null,\n  appendTo: null,\n  tooltip: null,\n  tooltipOptions: null,\n  buttonTemplate: null\n};\nSplitButton.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  model: PropTypes.array,\n  disabled: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  menustyle: PropTypes.object,\n  menuClassName: PropTypes.string,\n  tabIndex: PropTypes.number,\n  onClick: PropTypes.func,\n  appendTo: PropTypes.object,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  buttonTemplate: PropTypes.any\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/splitbutton/SplitButton.js"],"names":["React","Component","PropTypes","Button","classNames","DomHandler","SplitButtonItem","SplitButtonPanel","tip","UniqueComponentId","ObjectUtils","ConnectedOverlayScrollHandler","OverlayEventBus","SplitButton","props","state","overlayVisible","onDropdownButtonClick","bind","onItemClick","onOverlayEnter","onOverlayEntered","onOverlayExit","onPanelClick","id","overlayRef","createRef","event","emit","originalEvent","target","container","hide","show","setState","current","style","zIndex","String","generateZIndex","alignPanel","bindDocumentClickListener","bindScrollListener","bindResizeListener","unbindDocumentClickListener","unbindScrollListener","unbindResizeListener","defaultButton","parentElement","appendTo","minWidth","getWidth","absolutePosition","relativePosition","documentClickListener","isOutsideClicked","document","addEventListener","scrollHandler","resizeListener","window","removeEventListener","contains","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","options","model","map","menuitem","index","className","disabled","items","renderItems","buttonContent","buttonTemplate","getJSXElement","el","icon","label","onClick","tabIndex","menuStyle","menuClassName","defaultProps","propTypes","string","array","bool","object","menustyle","number","func","any"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '../button/Button';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { SplitButtonItem } from './SplitButtonItem';\r\nimport { SplitButtonPanel } from './SplitButtonPanel';\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport class SplitButton extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        label: null,\r\n        icon: null,\r\n        model: null,\r\n        disabled: null,\r\n        style: null,\r\n        className: null,\r\n        menuStyle: null,\r\n        menuClassName: null,\r\n        tabIndex: null,\r\n        onClick: null,\r\n        appendTo: null,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        buttonTemplate: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        label: PropTypes.string,\r\n        icon: PropTypes.string,\r\n        model: PropTypes.array,\r\n        disabled: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        menustyle: PropTypes.object,\r\n        menuClassName: PropTypes.string,\r\n        tabIndex: PropTypes.number,\r\n        onClick: PropTypes.func,\r\n        appendTo: PropTypes.object,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        buttonTemplate: PropTypes.any\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            overlayVisible: false\r\n        };\r\n\r\n        this.onDropdownButtonClick = this.onDropdownButtonClick.bind(this);\r\n        this.onItemClick = this.onItemClick.bind(this);\r\n        this.onOverlayEnter = this.onOverlayEnter.bind(this);\r\n        this.onOverlayEntered = this.onOverlayEntered.bind(this);\r\n        this.onOverlayExit = this.onOverlayExit.bind(this);\r\n        this.onPanelClick = this.onPanelClick.bind(this);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.overlayRef = React.createRef();\r\n    }\r\n\r\n    onPanelClick(event) {\r\n        OverlayEventBus.emit('overlay-click', {\r\n            originalEvent: event,\r\n            target: this.container\r\n        });\r\n    }\r\n\r\n    onDropdownButtonClick() {\r\n        if (this.state.overlayVisible)\r\n            this.hide();\r\n        else\r\n            this.show();\r\n    }\r\n\r\n    onItemClick() {\r\n        this.hide();\r\n    }\r\n\r\n    show() {\r\n        this.setState({ overlayVisible: true });\r\n    }\r\n\r\n    hide() {\r\n        this.setState({ overlayVisible: false });\r\n    }\r\n\r\n    onOverlayEnter() {\r\n        this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\r\n        this.alignPanel();\r\n    }\r\n\r\n    onOverlayEntered() {\r\n        this.bindDocumentClickListener();\r\n        this.bindScrollListener();\r\n        this.bindResizeListener();\r\n    }\r\n\r\n    onOverlayExit() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindScrollListener();\r\n        this.unbindResizeListener();\r\n    }\r\n\r\n    alignPanel() {\r\n        const container = this.defaultButton.parentElement;\r\n        if (this.props.appendTo) {\r\n            this.overlayRef.current.style.minWidth = DomHandler.getWidth(container) + 'px';\r\n            DomHandler.absolutePosition(this.overlayRef.current, container);\r\n        }\r\n        else {\r\n            DomHandler.relativePosition(this.overlayRef.current, container);\r\n        }\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = (event) => {\r\n                if (this.state.overlayVisible && this.isOutsideClicked(event)) {\r\n                    this.hide();\r\n                }\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    bindResizeListener() {\r\n        if (!this.resizeListener) {\r\n            this.resizeListener = () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            window.addEventListener('resize', this.resizeListener);\r\n        }\r\n    }\r\n\r\n    unbindResizeListener() {\r\n        if (this.resizeListener) {\r\n            window.removeEventListener('resize', this.resizeListener);\r\n            this.resizeListener = null;\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(event) {\r\n        return this.container && (this.overlayRef && this.overlayRef.current && !this.overlayRef.current.contains(event.target));\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindResizeListener();\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.container,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    renderItems() {\r\n        if (this.props.model) {\r\n            return this.props.model.map((menuitem, index) => {\r\n                return <SplitButtonItem menuitem={menuitem} key={index} onItemClick={this.onItemClick} />\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-splitbutton p-component', this.props.className, { 'p-disabled': this.props.disabled });\r\n        let items = this.renderItems();\r\n        const buttonContent = this.props.buttonTemplate ? ObjectUtils.getJSXElement(this.props.buttonTemplate, this.props) : null;\r\n\r\n        return (\r\n            <div id={this.id} className={className} style={this.props.style} ref={el => this.container = el}>\r\n                <Button ref={(el) => this.defaultButton = el} type=\"button\" className=\"p-splitbutton-defaultbutton\" icon={this.props.icon} label={this.props.label} onClick={this.props.onClick} disabled={this.props.disabled} tabIndex={this.props.tabIndex}>\r\n                    {buttonContent}\r\n                </Button>\r\n                <Button type=\"button\" className=\"p-splitbutton-menubutton\" icon=\"pi pi-chevron-down\" onClick={this.onDropdownButtonClick} disabled={this.props.disabled}\r\n                    aria-expanded={this.state.overlayVisible} aria-haspopup aria-owns={this.id + '_overlay'} />\r\n                <SplitButtonPanel ref={this.overlayRef} appendTo={this.props.appendTo} id={this.id + '_overlay'}\r\n                    menuStyle={this.props.menuStyle} menuClassName={this.props.menuClassName} onClick={this.onPanelClick}\r\n                    in={this.state.overlayVisible} onEnter={this.onOverlayEnter} onEntered={this.onOverlayEntered} onExit={this.onOverlayExit}>\r\n                    {items}\r\n                </SplitButtonPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}