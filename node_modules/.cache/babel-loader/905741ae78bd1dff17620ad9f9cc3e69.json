{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'../../components/datatable/DataTable';import{Column}from'../../components/column/Column';import{ContextMenu}from'../../components/contextmenu/ContextMenu';import{Toast}from'../../components/toast/Toast';import ProductService from'../service/ProductService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var DataTableContextMenuDemo=/*#__PURE__*/function(_Component){_inherits(DataTableContextMenuDemo,_Component);var _super=_createSuper(DataTableContextMenuDemo);function DataTableContextMenuDemo(props){var _this;_classCallCheck(this,DataTableContextMenuDemo);_this=_super.call(this,props);_this.state={products:[],selectedProduct:null};_this.menuModel=[{label:'View',icon:'pi pi-fw pi-search',command:function command(){return _this.viewProduct(_this.state.selectedProduct);}},{label:'Delete',icon:'pi pi-fw pi-times',command:function command(){return _this.deleteProduct(_this.state.selectedProduct);}}];_this.productService=new ProductService();_this.viewProduct=_this.viewProduct.bind(_assertThisInitialized(_this));_this.deleteProduct=_this.deleteProduct.bind(_assertThisInitialized(_this));_this.priceBodyTemplate=_this.priceBodyTemplate.bind(_assertThisInitialized(_this));return _this;}_createClass(DataTableContextMenuDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.productService.getProductsSmall().then(function(data){return _this2.setState({products:data});});}},{key:\"viewProduct\",value:function viewProduct(product){this.toast.show({severity:'info',summary:'Product Selected',detail:product.name});}},{key:\"deleteProduct\",value:function deleteProduct(product){var products=_toConsumableArray(this.state.products);products=products.filter(function(p){return p.id!==product.id;});this.toast.show({severity:'info',summary:'Product Deleted',detail:product.name});this.setState({products:products});}},{key:\"formatCurrency\",value:function formatCurrency(value){return value.toLocaleString('en-US',{style:'currency',currency:'USD'});}},{key:\"priceBodyTemplate\",value:function priceBodyTemplate(rowData){return this.formatCurrency(rowData.price);}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"dataTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DataTable \",/*#__PURE__*/React.createElement(\"span\",null,\"ContextMenu\")),/*#__PURE__*/React.createElement(\"p\",null,\"DataTable has exclusive integration with ContextMenu.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(Toast,{ref:function ref(el){_this3.toast=el;}}),/*#__PURE__*/React.createElement(ContextMenu,{model:this.menuModel,ref:function ref(el){return _this3.cm=el;},onHide:function onHide(){return _this3.setState({selectedProduct:null});}}),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(DataTable,{value:this.state.products,contextMenuSelection:this.state.selectedProduct,onContextMenuSelectionChange:function onContextMenuSelectionChange(e){return _this3.setState({selectedProduct:e.value});},onContextMenu:function onContextMenu(e){return _this3.cm.show(e.originalEvent);}},/*#__PURE__*/React.createElement(Column,{field:\"code\",header:\"Code\"}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\"}),/*#__PURE__*/React.createElement(Column,{field:\"category\",header:\"Category\"}),/*#__PURE__*/React.createElement(Column,{field:\"price\",header:\"Price\",body:this.priceBodyTemplate})))),/*#__PURE__*/React.createElement(DataTableContextMenuDemoDoc,null));}}]);return DataTableContextMenuDemo;}(Component);export var DataTableContextMenuDemoDoc=/*#__PURE__*/function(_Component2){_inherits(DataTableContextMenuDemoDoc,_Component2);var _super2=_createSuper(DataTableContextMenuDemoDoc);function DataTableContextMenuDemoDoc(props){var _this4;_classCallCheck(this,DataTableContextMenuDemoDoc);_this4=_super2.call(this,props);_this4.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { ContextMenu } from 'primereact/contextmenu';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nexport class DataTableContextMenuDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: [],\\n            selectedProduct: null\\n        };\\n\\n        this.menuModel = [\\n            {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.state.selectedProduct)},\\n            {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.state.selectedProduct)}\\n        ];\\n\\n        this.productService = new ProductService();\\n        this.viewProduct = this.viewProduct.bind(this);\\n        this.deleteProduct = this.deleteProduct.bind(this);\\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    viewProduct(product) {\\n        this.toast.show({severity: 'info', summary: 'Product Selected', detail: product.name});\\n    }\\n\\n    deleteProduct(product) {\\n        let products = [...this.state.products];\\n        products = products.filter((p) => p.id !== product.id);\\n\\n        this.toast.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\\n        this.setState({ products });\\n    }\\n\\n    formatCurrency(value) {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    priceBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.price);\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => { this.toast = el; }}></Toast>\\n\\n                <ContextMenu model={this.menuModel} ref={el => this.cm = el} onHide={() => this.setState({ selectedProduct: null })}/>\\n\\n                <div className=\\\"card\\\">\\n                    <DataTable value={this.state.products} contextMenuSelection={this.state.selectedProduct}\\n                        onContextMenuSelectionChange={e => this.setState({ selectedProduct: e.value })}\\n                        onContextMenu={e => this.cm.show(e.originalEvent)}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} />\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { ContextMenu } from 'primereact/contextmenu';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableContextMenuDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [selectedProduct, setSelectedProduct] = useState(null);\\n    const toast = useRef(null);\\n    const cm = useRef(null);\\n    const menuModel = [\\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\\n    ];\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const viewProduct = (product) => {\\n        toast.current.show({severity: 'info', summary: 'Product Selected', detail: product.name});\\n    }\\n\\n    const deleteProduct = (product) => {\\n        let _products = [...products];\\n        _products = _products.filter((p) => p.id !== product.id);\\n\\n        toast.current.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\\n        setProducts(_products);\\n    }\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <ContextMenu model={menuModel} ref={cm} onHide={() => setSelectedProduct(null)}/>\\n\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} contextMenuSelection={selectedProduct}\\n                    onContextMenuSelectionChange={e => setSelectedProduct(e.value)}\\n                    onContextMenu={e => cm.current.show(e.originalEvent)}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} />\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { ContextMenu } from 'primereact/contextmenu';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableContextMenuDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [selectedProduct, setSelectedProduct] = useState(null);\\n    const toast = useRef(null);\\n    const cm = useRef(null);\\n    const menuModel = [\\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\\n    ];\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const viewProduct = (product) => {\\n        toast.current.show({severity: 'info', summary: 'Product Selected', detail: product.name});\\n    }\\n\\n    const deleteProduct = (product) => {\\n        let _products = [...products];\\n        _products = _products.filter((p) => p.id !== product.id);\\n\\n        toast.current.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\\n        setProducts(_products);\\n    }\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <ContextMenu model={menuModel} ref={cm} onHide={() => setSelectedProduct(null)}/>\\n\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} contextMenuSelection={selectedProduct}\\n                    onContextMenuSelectionChange={e => setSelectedProduct(e.value)}\\n                    onContextMenu={e => cm.current.show(e.originalEvent)}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} />\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this4;}_createClass(DataTableContextMenuDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DataTableContextMenuDemo',sources:this.sources,service:'ProductService',data:'products-small'})));}}]);return DataTableContextMenuDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datatable/DataTableContextMenuDemo.js"],"names":["React","Component","DataTable","Column","ContextMenu","Toast","ProductService","TabView","useLiveEditorTabs","AppInlineHeader","DataTableContextMenuDemo","props","state","products","selectedProduct","menuModel","label","icon","command","viewProduct","deleteProduct","productService","bind","priceBodyTemplate","getProductsSmall","then","data","setState","product","toast","show","severity","summary","detail","name","filter","p","id","value","toLocaleString","style","currency","rowData","formatCurrency","price","el","cm","e","originalEvent","DataTableContextMenuDemoDoc","sources","tabName","content","service"],"mappings":"ogCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,sCAA1B,CACA,OAASC,MAAT,KAAuB,gCAAvB,CACA,OAASC,WAAT,KAA4B,0CAA5B,CACA,OAASC,KAAT,KAAsB,8BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,OAASC,OAAT,KAAwB,kCAAxB,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CACA,OAASC,eAAT,KAAgC,uBAAhC,CAEA,UAAaC,CAAAA,wBAAb,oIAEI,kCAAYC,KAAZ,CAAmB,0DACf,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,EADD,CAETC,eAAe,CAAE,IAFR,CAAb,CAKA,MAAKC,SAAL,CAAiB,CACb,CAACC,KAAK,CAAE,MAAR,CAAgBC,IAAI,CAAE,oBAAtB,CAA4CC,OAAO,CAAE,yBAAM,OAAKC,WAAL,CAAiB,MAAKP,KAAL,CAAWE,eAA5B,CAAN,EAArD,CADa,CAEb,CAACE,KAAK,CAAE,QAAR,CAAkBC,IAAI,CAAE,mBAAxB,CAA6CC,OAAO,CAAE,yBAAM,OAAKE,aAAL,CAAmB,MAAKR,KAAL,CAAWE,eAA9B,CAAN,EAAtD,CAFa,CAAjB,CAKA,MAAKO,cAAL,CAAsB,GAAIf,CAAAA,cAAJ,EAAtB,CACA,MAAKa,WAAL,CAAmB,MAAKA,WAAL,CAAiBG,IAAjB,+BAAnB,CACA,MAAKF,aAAL,CAAqB,MAAKA,aAAL,CAAmBE,IAAnB,+BAArB,CACA,MAAKC,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB,CAhBe,aAiBlB,CAnBL,sEAqBI,4BAAoB,iBAChB,KAAKD,cAAL,CAAoBG,gBAApB,GAAuCC,IAAvC,CAA4C,SAAAC,IAAI,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEd,QAAQ,CAAEa,IAAZ,CAAd,CAAJ,EAAhD,EACH,CAvBL,2BAyBI,qBAAYE,OAAZ,CAAqB,CACjB,KAAKC,KAAL,CAAWC,IAAX,CAAgB,CAACC,QAAQ,CAAE,MAAX,CAAmBC,OAAO,CAAE,kBAA5B,CAAgDC,MAAM,CAAEL,OAAO,CAACM,IAAhE,CAAhB,EACH,CA3BL,6BA6BI,uBAAcN,OAAd,CAAuB,CACnB,GAAIf,CAAAA,QAAQ,oBAAO,KAAKD,KAAL,CAAWC,QAAlB,CAAZ,CACAA,QAAQ,CAAGA,QAAQ,CAACsB,MAAT,CAAgB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAAST,OAAO,CAACS,EAAxB,EAAhB,CAAX,CAEA,KAAKR,KAAL,CAAWC,IAAX,CAAgB,CAACC,QAAQ,CAAE,MAAX,CAAmBC,OAAO,CAAE,iBAA5B,CAA+CC,MAAM,CAAEL,OAAO,CAACM,IAA/D,CAAhB,EACA,KAAKP,QAAL,CAAc,CAAEd,QAAQ,CAARA,QAAF,CAAd,EACH,CAnCL,8BAqCI,wBAAeyB,KAAf,CAAsB,CAClB,MAAOA,CAAAA,KAAK,CAACC,cAAN,CAAqB,OAArB,CAA8B,CAACC,KAAK,CAAE,UAAR,CAAoBC,QAAQ,CAAE,KAA9B,CAA9B,CAAP,CACH,CAvCL,iCAyCI,2BAAkBC,OAAlB,CAA2B,CACvB,MAAO,MAAKC,cAAL,CAAoBD,OAAO,CAACE,KAA5B,CAAP,CACH,CA3CL,sBA6CI,iBAAS,iBACL,mBACI,4CACI,2BAAK,SAAS,CAAC,8BAAf,eACI,oBAAC,eAAD,EAAiB,aAAa,CAAC,WAA/B,eACI,wDAAc,8CAAd,CADJ,cAEI,qFAFJ,CADJ,CADJ,cAQI,2BAAK,SAAS,CAAC,gCAAf,eACI,oBAAC,KAAD,EAAO,GAAG,CAAE,aAACC,EAAD,CAAQ,CAAE,MAAI,CAAChB,KAAL,CAAagB,EAAb,CAAkB,CAAxC,EADJ,cAGI,oBAAC,WAAD,EAAa,KAAK,CAAE,KAAK9B,SAAzB,CAAoC,GAAG,CAAE,aAAA8B,EAAE,QAAI,CAAA,MAAI,CAACC,EAAL,CAAUD,EAAd,EAA3C,CAA6D,MAAM,CAAE,wBAAM,CAAA,MAAI,CAAClB,QAAL,CAAc,CAAEb,eAAe,CAAE,IAAnB,CAAd,CAAN,EAArE,EAHJ,cAKI,2BAAK,SAAS,CAAC,MAAf,eACI,oBAAC,SAAD,EAAW,KAAK,CAAE,KAAKF,KAAL,CAAWC,QAA7B,CAAuC,oBAAoB,CAAE,KAAKD,KAAL,CAAWE,eAAxE,CACI,4BAA4B,CAAE,sCAAAiC,CAAC,QAAI,CAAA,MAAI,CAACpB,QAAL,CAAc,CAAEb,eAAe,CAAEiC,CAAC,CAACT,KAArB,CAAd,CAAJ,EADnC,CAEI,aAAa,CAAE,uBAAAS,CAAC,QAAI,CAAA,MAAI,CAACD,EAAL,CAAQhB,IAAR,CAAaiB,CAAC,CAACC,aAAf,CAAJ,EAFpB,eAGI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,EAHJ,cAII,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,EAJJ,cAKI,oBAAC,MAAD,EAAQ,KAAK,CAAC,UAAd,CAAyB,MAAM,CAAC,UAAhC,EALJ,cAMI,oBAAC,MAAD,EAAQ,KAAK,CAAC,OAAd,CAAsB,MAAM,CAAC,OAA7B,CAAqC,IAAI,CAAE,KAAKzB,iBAAhD,EANJ,CADJ,CALJ,CARJ,cAyBI,oBAAC,2BAAD,MAzBJ,CADJ,CA6BH,CA3EL,sCAA8CtB,SAA9C,EA8EA,UAAagD,CAAAA,2BAAb,6IAEI,qCAAYtC,KAAZ,CAAmB,8DACf,yBAAMA,KAAN,EAEA,OAAKuC,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,2yFAFF,CADE,CA+EX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,29EAFF,CA/EE,CAiJX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,29EAFL,CAjJK,CAAf,CAHe,cAuNlB,CAzNL,6EA2NI,gCAAwB,CACpB,MAAO,MAAP,CACH,CA7NL,sBA+NI,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,MAEQ5C,iBAAiB,CAAC,CAAE0B,IAAI,CAAE,0BAAR,CAAoCgB,OAAO,CAAE,KAAKA,OAAlD,CAA2DG,OAAO,CAAE,gBAApE,CAAsF3B,IAAI,CAAE,gBAA5F,CAAD,CAFzB,CADJ,CADJ,CASH,CAzOL,yCAAiDzB,SAAjD","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { ContextMenu } from '../../components/contextmenu/ContextMenu';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport ProductService from '../service/ProductService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableContextMenuDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            selectedProduct: null\r\n        };\r\n\r\n        this.menuModel = [\r\n            {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.state.selectedProduct)},\r\n            {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.state.selectedProduct)}\r\n        ];\r\n\r\n        this.productService = new ProductService();\r\n        this.viewProduct = this.viewProduct.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    viewProduct(product) {\r\n        this.toast.show({severity: 'info', summary: 'Product Selected', detail: product.name});\r\n    }\r\n\r\n    deleteProduct(product) {\r\n        let products = [...this.state.products];\r\n        products = products.filter((p) => p.id !== product.id);\r\n\r\n        this.toast.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\r\n        this.setState({ products });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>ContextMenu</span></h1>\r\n                        <p>DataTable has exclusive integration with ContextMenu.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <Toast ref={(el) => { this.toast = el; }}></Toast>\r\n\r\n                    <ContextMenu model={this.menuModel} ref={el => this.cm = el} onHide={() => this.setState({ selectedProduct: null })}/>\r\n\r\n                    <div className=\"card\">\r\n                        <DataTable value={this.state.products} contextMenuSelection={this.state.selectedProduct}\r\n                            onContextMenuSelectionChange={e => this.setState({ selectedProduct: e.value })}\r\n                            onContextMenu={e => this.cm.show(e.originalEvent)}>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} />\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableContextMenuDemoDoc></DataTableContextMenuDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableContextMenuDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ContextMenu } from 'primereact/contextmenu';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class DataTableContextMenuDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            selectedProduct: null\r\n        };\r\n\r\n        this.menuModel = [\r\n            {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.state.selectedProduct)},\r\n            {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.state.selectedProduct)}\r\n        ];\r\n\r\n        this.productService = new ProductService();\r\n        this.viewProduct = this.viewProduct.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    viewProduct(product) {\r\n        this.toast.show({severity: 'info', summary: 'Product Selected', detail: product.name});\r\n    }\r\n\r\n    deleteProduct(product) {\r\n        let products = [...this.state.products];\r\n        products = products.filter((p) => p.id !== product.id);\r\n\r\n        this.toast.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\r\n        this.setState({ products });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => { this.toast = el; }}></Toast>\r\n\r\n                <ContextMenu model={this.menuModel} ref={el => this.cm = el} onHide={() => this.setState({ selectedProduct: null })}/>\r\n\r\n                <div className=\"card\">\r\n                    <DataTable value={this.state.products} contextMenuSelection={this.state.selectedProduct}\r\n                        onContextMenuSelectionChange={e => this.setState({ selectedProduct: e.value })}\r\n                        onContextMenu={e => this.cm.show(e.originalEvent)}>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ContextMenu } from 'primereact/contextmenu';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableContextMenuDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const toast = useRef(null);\r\n    const cm = useRef(null);\r\n    const menuModel = [\r\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\r\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\r\n    ];\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const viewProduct = (product) => {\r\n        toast.current.show({severity: 'info', summary: 'Product Selected', detail: product.name});\r\n    }\r\n\r\n    const deleteProduct = (product) => {\r\n        let _products = [...products];\r\n        _products = _products.filter((p) => p.id !== product.id);\r\n\r\n        toast.current.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\r\n        setProducts(_products);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <ContextMenu model={menuModel} ref={cm} onHide={() => setSelectedProduct(null)}/>\r\n\r\n            <div className=\"card\">\r\n                <DataTable value={products} contextMenuSelection={selectedProduct}\r\n                    onContextMenuSelectionChange={e => setSelectedProduct(e.value)}\r\n                    onContextMenu={e => cm.current.show(e.originalEvent)}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ContextMenu } from 'primereact/contextmenu';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableContextMenuDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const toast = useRef(null);\r\n    const cm = useRef(null);\r\n    const menuModel = [\r\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\r\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\r\n    ];\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const viewProduct = (product) => {\r\n        toast.current.show({severity: 'info', summary: 'Product Selected', detail: product.name});\r\n    }\r\n\r\n    const deleteProduct = (product) => {\r\n        let _products = [...products];\r\n        _products = _products.filter((p) => p.id !== product.id);\r\n\r\n        toast.current.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\r\n        setProducts(_products);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <ContextMenu model={menuModel} ref={cm} onHide={() => setSelectedProduct(null)}/>\r\n\r\n            <div className=\"card\">\r\n                <DataTable value={products} contextMenuSelection={selectedProduct}\r\n                    onContextMenuSelectionChange={e => setSelectedProduct(e.value)}\r\n                    onContextMenu={e => cm.current.show(e.originalEvent)}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableContextMenuDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}