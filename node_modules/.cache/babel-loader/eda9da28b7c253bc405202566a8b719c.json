{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var ChipsDoc=/*#__PURE__*/function(_Component){_inherits(ChipsDoc,_Component);var _super=_createSuper(ChipsDoc);function ChipsDoc(props){var _this;_classCallCheck(this,ChipsDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Chips } from 'primereact/chips';\\n\\nexport class ChipsDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            values1: [],\\n            values2: [],\\n            values3: []\\n        };\\n    }\\n\\n    customChip(item) {\\n        return (\\n            <div>\\n                <span>{item} - (active) </span>\\n                <i className=\\\"pi pi-user-plus\\\" style={{ fontSize: '14px' }}></i>\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card p-fluid\\\">\\n                    <h5>Basic</h5>\\n                    <Chips value={this.state.values1} onChange={(e) => this.setState({ values1: e.value })} />\\n\\n                    <h5>Comma Separator</h5>\\n                    <Chips value={this.state.values2} onChange={(e) => this.setState({ values2: e.value })} separator=\\\",\\\" />\\n\\n                    <h5>Template</h5>\\n                    <Chips value={this.state.values3} onChange={(e) => this.setState({ values3: e.value })} max={5} itemTemplate={this.customChip}></Chips>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Chips } from 'primereact/chips';\\n\\nconst ChipsDemo = () => {\\n    const [values1, setValues1] = useState([]);\\n    const [values2, setValues2] = useState([]);\\n    const [values3, setValues3] = useState([]);\\n\\n    const customChip = (item) => {\\n        return (\\n            <div>\\n                <span>{item} - (active) </span>\\n                <i className=\\\"pi pi-user-plus\\\" style={{ fontSize: '14px' }}></i>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card p-fluid\\\">\\n                <h5>Basic</h5>\\n                <Chips value={values1} onChange={(e) => setValues1(e.value)} />\\n\\n                <h5>Comma Separator</h5>\\n                <Chips value={values2} onChange={(e) => setValues2(e.value)} separator=\\\",\\\" />\\n\\n                <h5>Template</h5>\\n                <Chips value={values3} onChange={(e) => setValues3(e.value)} max={5} itemTemplate={customChip}></Chips>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Chips } from 'primereact/chips';\\n\\nconst ChipsDemo = () => {\\n    const [values1, setValues1] = useState<any>([]);\\n    const [values2, setValues2] = useState<any>([]);\\n    const [values3, setValues3] = useState<any>([]);\\n\\n    const customChip = (item: any) => {\\n        return (\\n            <div>\\n                <span>{item} - (active) </span>\\n                <i className=\\\"pi pi-user-plus\\\" style={{ fontSize: '14px' }}></i>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card p-fluid\\\">\\n                <h5>Basic</h5>\\n                <Chips value={values1} onChange={(e) => setValues1(e.value)} />\\n\\n                <h5>Comma Separator</h5>\\n                <Chips value={values2} onChange={(e) => setValues2(e.value)} separator=\\\",\\\" />\\n\\n                <h5>Template</h5>\\n                <Chips value={values3} onChange={(e) => setValues3(e.value)} max={5} itemTemplate={customChip}></Chips>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this;}_createClass(ChipsDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport {Chips} from 'primereact/chips';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"Chips requires an array as its \",/*#__PURE__*/React.createElement(\"i\",null,\"value\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onChange\"),\" callback to update the model.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Chips value={value} onChange={(e) => setValue(e.value)}></Chips>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Custom Content\"),/*#__PURE__*/React.createElement(\"p\",null,\"A chip is customized using \",/*#__PURE__*/React.createElement(\"i\",null,\"itemTemplate\"),\" function where value is passed to return JSX.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Chips value={value} onChange={(e) => setValue(e.value)} itemTemplate={customChip}></Chips>\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\ncustomChip(item) {\\n    return (\\n        <div>\\n            <span>{item} - (active) </span>\\n            <i className=\\\"pi pi-user-plus\\\"></i>\\n        </div>\\n    );\\n}\\n\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"name\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the input field.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"placeholder\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Advisory information to display on input.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"max\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Maximum number of entries allowed.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the element should be disabled.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaLabelledBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Establishes relationships between the component and label(s) where its value should be one or more element IDs.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"allowDuplicate\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether to allow duplicate values or not.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"separator\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Separator char to add an item when pressed in addition to the enter key. Currently only possible value is \\\",\\\"\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"itemTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"function\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Template function to return the content of a chip.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"originalEvent: Browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"value: New value of the component\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a chip is added or removed.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onAdd\"),/*#__PURE__*/React.createElement(\"td\",null,\"originalEvent: Browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"value: Added item value\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a chip is added.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onRemove\"),/*#__PURE__*/React.createElement(\"td\",null,\"originalEvent: Browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"value: Removed item value\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a chip is removed.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onFocus\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the component gets focus.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onBlur\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the component loses focus.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-chips\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-chips-token\"),/*#__PURE__*/React.createElement(\"td\",null,\"Chip element container.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-chips-token-icon\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon of a chip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-chips-token-label\"),/*#__PURE__*/React.createElement(\"td\",null,\"label of a chip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-chips-input-token\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container of input element.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'ChipsDemo',sources:this.sources})));}}]);return ChipsDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/chips/ChipsDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","ChipsDoc","props","sources","tabName","content","name"],"mappings":"wpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,kCAAlC,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CAEA,UAAaC,CAAAA,QAAb,oGAEI,kBAAYC,KAAZ,CAAmB,0CACf,uBAAMA,KAAN,EAEA,MAAKC,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,muCAFF,CADE,CA8CX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,wiCAFF,CA9CE,CAmFX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,4jCAFL,CAnFK,CAAf,CAHe,aA4HlB,CA9HL,0DAgII,gCAAwB,CACpB,MAAO,MAAP,CACH,CAlIL,sBAoII,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,mBACI,oBAAC,QAAD,EAAU,MAAM,CAAC,eAAjB,eACI,uCADJ,cAEpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,gDAFoB,cAQI,gDARJ,cASI,4EAAkC,qCAAlC,sBAAmD,wCAAnD,kCATJ,cAWpB,oBAAC,aAAD,8EAXoB,cAiBI,+CAjBJ,cAkBI,wEAA8B,4CAA9B,kDAlBJ,cAmBpB,oBAAC,aAAD,wGAnBoB,cAwBpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,qLAxBoB,cAsCI,2CAtCJ,cAuCI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,qCAFJ,cAGI,wCAHJ,cAII,4CAJJ,CADJ,CADJ,cASI,8CACI,2CACI,mCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,oEAJJ,CADJ,cAOI,2CACI,qCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,yDAJJ,CAPJ,cAaI,2CACI,4CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,0EAJJ,CAbJ,cAmBI,2CACI,sCADJ,cAEI,sCAFJ,cAGI,qCAHJ,cAII,wDAJJ,CAnBJ,cAyBI,2CACI,oCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,mEAJJ,CAzBJ,cA+BI,2CACI,yCADJ,cAEI,wCAFJ,cAGI,sCAHJ,cAII,gGAJJ,CA/BJ,cAqCI,2CACI,sCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,6DAJJ,CArCJ,cA2CI,2CACI,0CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,4DAJJ,CA3CJ,cAiDI,2CACI,wCADJ,cAEI,oCAFJ,cAGI,qCAHJ,cAII,wDAJJ,CAjDJ,cAuDI,2CACI,+CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,uHAJJ,CAvDJ,cA6DI,2CACI,+CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,gJAJJ,CA7DJ,cAmEI,2CACI,+CADJ,cAEI,wCAFJ,cAGI,qCAHJ,cAII,0EAJJ,CAnEJ,cAyEI,2CACI,0CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,gJAJJ,CAzEJ,cA+EI,2CACI,6CADJ,cAEI,yCAFJ,cAGI,qCAHJ,cAII,mFAJJ,CA/EJ,CATJ,CADJ,CAvCJ,cA0II,uCA1IJ,cA2II,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,2CAFJ,cAGI,4CAHJ,CADJ,CADJ,cAQI,8CACI,2CACI,yCADJ,cAEI,2EAAiC,8BAAjC,qCAFJ,cAII,oFAJJ,CADJ,cAOI,2CACI,sCADJ,cAEI,2EAAiC,8BAAjC,2BAFJ,cAII,yEAJJ,CAPJ,cAaI,2CACI,yCADJ,cAEI,2EAAiC,8BAAjC,6BAFJ,cAII,2EAJJ,CAbJ,cAmBI,2CACI,wCADJ,cAEI,qDAFJ,cAGI,kFAHJ,CAnBJ,cAwBI,2CACI,uCADJ,cAEI,qDAFJ,cAGI,mFAHJ,CAxBJ,CARJ,CADJ,CA3IJ,cAqLI,wCArLJ,cAsLI,0HAAgF,oBAAC,IAAD,EAAM,EAAE,CAAC,UAAT,aAAhF,UAtLJ,cAuLI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,wCAFJ,CADJ,CADJ,cAOI,8CACI,2CACI,wCADJ,cAEI,kDAFJ,CADJ,cAKI,2CACI,8CADJ,cAEI,wDAFJ,CALJ,cASI,2CACI,mDADJ,cAEI,gDAFJ,CATJ,cAaI,2CACI,oDADJ,cAEI,iDAFJ,CAbJ,cAiBI,2CACI,oDADJ,cAEI,4DAFJ,CAjBJ,CAPJ,CADJ,CAvLJ,cAwNI,6CAxNJ,cAyNI,qCAzNJ,CADJ,CA8NQL,iBAAiB,CAAC,CAAEM,IAAI,CAAE,WAAR,CAAqBH,OAAO,CAAE,KAAKA,OAAnC,CAAD,CA9NzB,CADJ,CADJ,CAqOH,CA1WL,sBAA8BR,SAA9B","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class ChipsDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chips } from 'primereact/chips';\r\n\r\nexport class ChipsDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values1: [],\r\n            values2: [],\r\n            values3: []\r\n        };\r\n    }\r\n\r\n    customChip(item) {\r\n        return (\r\n            <div>\r\n                <span>{item} - (active) </span>\r\n                <i className=\"pi pi-user-plus\" style={{ fontSize: '14px' }}></i>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card p-fluid\">\r\n                    <h5>Basic</h5>\r\n                    <Chips value={this.state.values1} onChange={(e) => this.setState({ values1: e.value })} />\r\n\r\n                    <h5>Comma Separator</h5>\r\n                    <Chips value={this.state.values2} onChange={(e) => this.setState({ values2: e.value })} separator=\",\" />\r\n\r\n                    <h5>Template</h5>\r\n                    <Chips value={this.state.values3} onChange={(e) => this.setState({ values3: e.value })} max={5} itemTemplate={this.customChip}></Chips>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Chips } from 'primereact/chips';\r\n\r\nconst ChipsDemo = () => {\r\n    const [values1, setValues1] = useState([]);\r\n    const [values2, setValues2] = useState([]);\r\n    const [values3, setValues3] = useState([]);\r\n\r\n    const customChip = (item) => {\r\n        return (\r\n            <div>\r\n                <span>{item} - (active) </span>\r\n                <i className=\"pi pi-user-plus\" style={{ fontSize: '14px' }}></i>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card p-fluid\">\r\n                <h5>Basic</h5>\r\n                <Chips value={values1} onChange={(e) => setValues1(e.value)} />\r\n\r\n                <h5>Comma Separator</h5>\r\n                <Chips value={values2} onChange={(e) => setValues2(e.value)} separator=\",\" />\r\n\r\n                <h5>Template</h5>\r\n                <Chips value={values3} onChange={(e) => setValues3(e.value)} max={5} itemTemplate={customChip}></Chips>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Chips } from 'primereact/chips';\r\n\r\nconst ChipsDemo = () => {\r\n    const [values1, setValues1] = useState<any>([]);\r\n    const [values2, setValues2] = useState<any>([]);\r\n    const [values3, setValues3] = useState<any>([]);\r\n\r\n    const customChip = (item: any) => {\r\n        return (\r\n            <div>\r\n                <span>{item} - (active) </span>\r\n                <i className=\"pi pi-user-plus\" style={{ fontSize: '14px' }}></i>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card p-fluid\">\r\n                <h5>Basic</h5>\r\n                <Chips value={values1} onChange={(e) => setValues1(e.value)} />\r\n\r\n                <h5>Comma Separator</h5>\r\n                <Chips value={values2} onChange={(e) => setValues2(e.value)} separator=\",\" />\r\n\r\n                <h5>Template</h5>\r\n                <Chips value={values3} onChange={(e) => setValues3(e.value)} max={5} itemTemplate={customChip}></Chips>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport {Chips} from 'primereact/chips';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Chips requires an array as its <i>value</i> and <i>onChange</i> callback to update the model.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Chips value={value} onChange={(e) => setValue(e.value)}></Chips>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Custom Content</h5>\r\n                        <p>A chip is customized using <i>itemTemplate</i> function where value is passed to return JSX.</p>\r\n<CodeHighlight>\r\n{`\r\n<Chips value={value} onChange={(e) => setValue(e.value)} itemTemplate={customChip}></Chips>\r\n`}\r\n</CodeHighlight>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\ncustomChip(item) {\r\n    return (\r\n        <div>\r\n            <span>{item} - (active) </span>\r\n            <i className=\"pi pi-user-plus\"></i>\r\n        </div>\r\n    );\r\n}\r\n\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>name</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Name of the input field.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>placeholder</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Advisory information to display on input.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>value</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>Value of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>max</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Maximum number of entries allowed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>disabled</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the element should be disabled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltip</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Content of the tooltip.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltipOptions</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>ariaLabelledBy</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>allowDuplicate</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether to allow duplicate values or not.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>separator</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Separator char to add an item when pressed in addition to the enter key. Currently only possible value is \",\"</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>itemTemplate</td>\r\n                                        <td>function</td>\r\n                                        <td>null</td>\r\n                                        <td>Template function to return the content of a chip.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onChange</td>\r\n                                        <td>originalEvent: Browser event <br />\r\n                                value: New value of the component</td>\r\n                                        <td>Callback to invoke when a chip is added or removed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onAdd</td>\r\n                                        <td>originalEvent: Browser event <br />\r\n                                value: Added item value</td>\r\n                                        <td>Callback to invoke when a chip is added.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onRemove</td>\r\n                                        <td>originalEvent: Browser event <br />\r\n                                value: Removed item value</td>\r\n                                        <td>Callback to invoke when a chip is removed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onFocus</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Callback to invoke when the component gets focus.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onBlur</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Callback to invoke when the component loses focus.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-chips</td>\r\n                                        <td>Container element</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-chips-token</td>\r\n                                        <td>Chip element container.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-chips-token-icon</td>\r\n                                        <td>Icon of a chip.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-chips-token-label</td>\r\n                                        <td>label of a chip.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-chips-input-token</td>\r\n                                        <td>Container of input element.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'ChipsDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}