{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Checkbox}from'../../components/checkbox/Checkbox';import{CheckboxDoc}from'./CheckboxDoc';import{AppInlineHeader}from'../../AppInlineHeader';export var CheckboxDemo=/*#__PURE__*/function(_Component){_inherits(CheckboxDemo,_Component);var _super=_createSuper(CheckboxDemo);function CheckboxDemo(props){var _this;_classCallCheck(this,CheckboxDemo);_this=_super.call(this,props);_this.categories=[{name:'Accounting',key:'A'},{name:'Marketing',key:'M'},{name:'Production',key:'P'},{name:'Research',key:'R'}];_this.state={checked:false,cities:[],selectedCategories:_this.categories.slice(1,3)};_this.onCityChange=_this.onCityChange.bind(_assertThisInitialized(_this));_this.onCategoryChange=_this.onCategoryChange.bind(_assertThisInitialized(_this));return _this;}_createClass(CheckboxDemo,[{key:\"onCategoryChange\",value:function onCategoryChange(e){var selectedCategories=_toConsumableArray(this.state.selectedCategories);if(e.checked){selectedCategories.push(e.value);}else{for(var i=0;i<selectedCategories.length;i++){var selectedCategory=selectedCategories[i];if(selectedCategory.key===e.value.key){selectedCategories.splice(i,1);break;}}}this.setState({selectedCategories:selectedCategories});}},{key:\"onCityChange\",value:function onCityChange(e){var selectedCities=_toConsumableArray(this.state.cities);if(e.checked)selectedCities.push(e.value);else selectedCities.splice(selectedCities.indexOf(e.value),1);this.setState({cities:selectedCities});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"checkbox\",showInputStyle:true},/*#__PURE__*/React.createElement(\"h1\",null,\"Checkbox\"),/*#__PURE__*/React.createElement(\"p\",null,\"Checkbox is an extension to standard checkbox element with skinning capabilities.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Basic\"),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{inputId:\"binary\",checked:this.state.checked,onChange:function onChange(e){return _this2.setState({checked:e.checked});}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"binary\"},this.state.checked?'true':'false')),/*#__PURE__*/React.createElement(\"h5\",null,\"Multiple\"),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{inputId:\"city1\",name:\"city\",value:\"Chicago\",onChange:this.onCityChange,checked:this.state.cities.indexOf('Chicago')!==-1}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"city1\"},\"Chicago\")),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{inputId:\"city2\",name:\"city\",value:\"Los Angeles\",onChange:this.onCityChange,checked:this.state.cities.indexOf('Los Angeles')!==-1}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"city2\"},\"Los Angeles\")),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{inputId:\"city3\",name:\"city\",value:\"New York\",onChange:this.onCityChange,checked:this.state.cities.indexOf('New York')!==-1}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"city3\"},\"New York\")),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{inputId:\"city4\",name:\"city\",value:\"San Francisco\",onChange:this.onCityChange,checked:this.state.cities.indexOf('San Francisco')!==-1}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"city4\"},\"San Francisco\")),/*#__PURE__*/React.createElement(\"h5\",null,\"Dynamic Values, Preselection, Value Binding and Disabled Option\"),this.categories.map(function(category){return/*#__PURE__*/React.createElement(\"div\",{key:category.key,className:\"p-field-checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{inputId:category.key,name:\"category\",value:category,onChange:_this2.onCategoryChange,checked:_this2.state.selectedCategories.some(function(item){return item.key===category.key;}),disabled:category.key==='R'}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:category.key},category.name));}))),/*#__PURE__*/React.createElement(CheckboxDoc,null));}}]);return CheckboxDemo;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/checkbox/CheckboxDemo.js"],"names":["React","Component","Checkbox","CheckboxDoc","AppInlineHeader","CheckboxDemo","props","categories","name","key","state","checked","cities","selectedCategories","slice","onCityChange","bind","onCategoryChange","e","push","value","i","length","selectedCategory","splice","setState","selectedCities","indexOf","map","category","some","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox } from '../../components/checkbox/Checkbox';\r\nimport { CheckboxDoc } from './CheckboxDoc';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class CheckboxDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.categories = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\r\n\r\n        this.state = {\r\n            checked: false,\r\n            cities: [],\r\n            selectedCategories: this.categories.slice(1,3)\r\n        };\r\n\r\n        this.onCityChange = this.onCityChange.bind(this);\r\n        this.onCategoryChange = this.onCategoryChange.bind(this);\r\n    }\r\n\r\n    onCategoryChange(e) {\r\n        let selectedCategories = [...this.state.selectedCategories];\r\n\r\n        if (e.checked) {\r\n            selectedCategories.push(e.value);\r\n        }\r\n        else {\r\n            for (let i = 0; i < selectedCategories.length; i++) {\r\n                const selectedCategory = selectedCategories[i];\r\n\r\n                if (selectedCategory.key === e.value.key) {\r\n                    selectedCategories.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({ selectedCategories });\r\n    }\r\n\r\n\r\n    onCityChange(e) {\r\n        let selectedCities = [...this.state.cities];\r\n\r\n        if (e.checked)\r\n            selectedCities.push(e.value);\r\n        else\r\n            selectedCities.splice(selectedCities.indexOf(e.value), 1);\r\n\r\n        this.setState({ cities: selectedCities });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"checkbox\" showInputStyle>\r\n                        <h1>Checkbox</h1>\r\n                        <p>Checkbox is an extension to standard checkbox element with skinning capabilities.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Basic</h5>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"binary\" checked={this.state.checked} onChange={e => this.setState({ checked: e.checked })} />\r\n                            <label htmlFor=\"binary\">{this.state.checked ? 'true' : 'false'}</label>\r\n                        </div>\r\n\r\n                        <h5>Multiple</h5>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"city1\" name=\"city\" value=\"Chicago\" onChange={this.onCityChange} checked={this.state.cities.indexOf('Chicago') !== -1} />\r\n                            <label htmlFor=\"city1\">Chicago</label>\r\n                        </div>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"city2\" name=\"city\" value=\"Los Angeles\" onChange={this.onCityChange} checked={this.state.cities.indexOf('Los Angeles') !== -1} />\r\n                            <label htmlFor=\"city2\">Los Angeles</label>\r\n                        </div>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"city3\" name=\"city\" value=\"New York\" onChange={this.onCityChange} checked={this.state.cities.indexOf('New York') !== -1} />\r\n                            <label htmlFor=\"city3\">New York</label>\r\n                        </div>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"city4\" name=\"city\" value=\"San Francisco\" onChange={this.onCityChange} checked={this.state.cities.indexOf('San Francisco') !== -1} />\r\n                            <label htmlFor=\"city4\">San Francisco</label>\r\n                        </div>\r\n\r\n                        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\r\n                        {\r\n                            this.categories.map((category) => {\r\n                                return (\r\n                                    <div key={category.key} className=\"p-field-checkbox\">\r\n                                        <Checkbox inputId={category.key} name=\"category\" value={category} onChange={this.onCategoryChange} checked={this.state.selectedCategories.some((item) => item.key === category.key)} disabled={category.key === 'R'} />\r\n                                        <label htmlFor={category.key}>{category.name}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <CheckboxDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}