{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\inputmask\\\\InputMask.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DomHandler from '../utils/DomHandler';\nimport { InputText } from '../inputtext/InputText';\nimport { classNames } from '../utils/ClassNames';\nimport { tip } from '../tooltip/Tooltip';\nexport var InputMask = /*#__PURE__*/function (_Component) {\n  _inherits(InputMask, _Component);\n\n  var _super = _createSuper(InputMask);\n\n  function InputMask(props) {\n    var _this;\n\n    _classCallCheck(this, InputMask);\n\n    _this = _super.call(this, props);\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.onKeyPress = _this.onKeyPress.bind(_assertThisInitialized(_this));\n    _this.onInput = _this.onInput.bind(_assertThisInitialized(_this));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InputMask, [{\n    key: \"caret\",\n    value: function caret(first, last) {\n      var range, begin, end;\n\n      if (!this.input.offsetParent || this.input !== document.activeElement) {\n        return;\n      }\n\n      if (typeof first === 'number') {\n        begin = first;\n        end = typeof last === 'number' ? last : begin;\n\n        if (this.input.setSelectionRange) {\n          this.input.setSelectionRange(begin, end);\n        } else if (this.input['createTextRange']) {\n          range = this.input['createTextRange']();\n          range.collapse(true);\n          range.moveEnd('character', end);\n          range.moveStart('character', begin);\n          range.select();\n        }\n      } else {\n        if (this.input.setSelectionRange) {\n          begin = this.input.selectionStart;\n          end = this.input.selectionEnd;\n        } else if (document['selection'] && document['selection'].createRange) {\n          range = document['selection'].createRange();\n          begin = 0 - range.duplicate().moveStart('character', -100000);\n          end = begin + range.text.length;\n        }\n\n        return {\n          begin: begin,\n          end: end\n        };\n      }\n    }\n  }, {\n    key: \"isCompleted\",\n    value: function isCompleted() {\n      for (var i = this.firstNonMaskPos; i <= this.lastRequiredNonMaskPos; i++) {\n        if (this.tests[i] && this.buffer[i] === this.getPlaceholder(i)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getPlaceholder\",\n    value: function getPlaceholder(i) {\n      if (i < this.props.slotChar.length) {\n        return this.props.slotChar.charAt(i);\n      }\n\n      return this.props.slotChar.charAt(0);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.props.unmask ? this.getUnmaskedValue() : this.input && this.input.value;\n    }\n  }, {\n    key: \"seekNext\",\n    value: function seekNext(pos) {\n      while (++pos < this.len && !this.tests[pos]) {\n        ;\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"seekPrev\",\n    value: function seekPrev(pos) {\n      while (--pos >= 0 && !this.tests[pos]) {\n        ;\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"shiftL\",\n    value: function shiftL(begin, end) {\n      var i, j;\n\n      if (begin < 0) {\n        return;\n      }\n\n      for (i = begin, j = this.seekNext(end); i < this.len; i++) {\n        if (this.tests[i]) {\n          if (j < this.len && this.tests[i].test(this.buffer[j])) {\n            this.buffer[i] = this.buffer[j];\n            this.buffer[j] = this.getPlaceholder(j);\n          } else {\n            break;\n          }\n\n          j = this.seekNext(j);\n        }\n      }\n\n      this.writeBuffer();\n      this.caret(Math.max(this.firstNonMaskPos, begin));\n    }\n  }, {\n    key: \"shiftR\",\n    value: function shiftR(pos) {\n      var i, c, j, t;\n\n      for (i = pos, c = this.getPlaceholder(pos); i < this.len; i++) {\n        if (this.tests[i]) {\n          j = this.seekNext(i);\n          t = this.buffer[i];\n          this.buffer[i] = c;\n\n          if (j < this.len && this.tests[j].test(t)) {\n            c = t;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleAndroidInput\",\n    value: function handleAndroidInput(e) {\n      var curVal = this.input.value;\n      var pos = this.caret();\n\n      if (this.oldVal && this.oldVal.length && this.oldVal.length > curVal.length) {\n        // a deletion or backspace happened\n        this.checkVal(true);\n\n        while (pos.begin > 0 && !this.tests[pos.begin - 1]) {\n          pos.begin--;\n        }\n\n        if (pos.begin === 0) {\n          while (pos.begin < this.firstNonMaskPos && !this.tests[pos.begin]) {\n            pos.begin++;\n          }\n        }\n\n        this.caret(pos.begin, pos.begin);\n      } else {\n        this.checkVal(true);\n\n        while (pos.begin < this.len && !this.tests[pos.begin]) {\n          pos.begin++;\n        }\n\n        this.caret(pos.begin, pos.begin);\n      }\n\n      if (this.props.onComplete && this.isCompleted()) {\n        this.props.onComplete({\n          originalEvent: e,\n          value: this.getValue()\n        });\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(e) {\n      this.focus = false;\n      this.checkVal();\n      this.updateModel(e);\n      this.updateFilledState();\n\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n\n      if (this.input.value !== this.focusText) {\n        var event = document.createEvent('HTMLEvents');\n        event.initEvent('change', true, false);\n        this.input.dispatchEvent(event);\n      }\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {\n      if (this.props.readOnly) {\n        return;\n      }\n\n      var k = e.which || e.keyCode,\n          pos,\n          begin,\n          end;\n      var iPhone = /iphone/i.test(DomHandler.getUserAgent());\n      this.oldVal = this.input.value; //backspace, delete, and escape get special treatment\n\n      if (k === 8 || k === 46 || iPhone && k === 127) {\n        pos = this.caret();\n        begin = pos.begin;\n        end = pos.end;\n\n        if (end - begin === 0) {\n          begin = k !== 46 ? this.seekPrev(begin) : end = this.seekNext(begin - 1);\n          end = k === 46 ? this.seekNext(end) : end;\n        }\n\n        this.clearBuffer(begin, end);\n        this.shiftL(begin, end - 1);\n        this.updateModel(e);\n        e.preventDefault();\n      } else if (k === 13) {\n        // enter\n        this.onBlur(e);\n        this.updateModel(e);\n      } else if (k === 27) {\n        // escape\n        this.input.value = this.focusText;\n        this.caret(0, this.checkVal());\n        this.updateModel(e);\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(e) {\n      var _this2 = this;\n\n      if (this.props.readOnly) {\n        return;\n      }\n\n      var k = e.which || e.keyCode,\n          pos = this.caret(),\n          p,\n          c,\n          next,\n          completed;\n\n      if (e.ctrlKey || e.altKey || e.metaKey || k < 32) {\n        //Ignore\n        return;\n      } else if (k && k !== 13) {\n        if (pos.end - pos.begin !== 0) {\n          this.clearBuffer(pos.begin, pos.end);\n          this.shiftL(pos.begin, pos.end - 1);\n        }\n\n        p = this.seekNext(pos.begin - 1);\n\n        if (p < this.len) {\n          c = String.fromCharCode(k);\n\n          if (this.tests[p].test(c)) {\n            this.shiftR(p);\n            this.buffer[p] = c;\n            this.writeBuffer();\n            next = this.seekNext(p);\n\n            if (/android/i.test(DomHandler.getUserAgent())) {\n              //Path for CSP Violation on FireFox OS 1.1\n              var proxy = function proxy() {\n                _this2.caret(next);\n              };\n\n              setTimeout(proxy, 0);\n            } else {\n              this.caret(next);\n            }\n\n            if (pos.begin <= this.lastRequiredNonMaskPos) {\n              completed = this.isCompleted();\n            }\n          }\n        }\n\n        e.preventDefault();\n      }\n\n      this.updateModel(e);\n\n      if (this.props.onComplete && completed) {\n        this.props.onComplete({\n          originalEvent: e,\n          value: this.getValue()\n        });\n      }\n    }\n  }, {\n    key: \"clearBuffer\",\n    value: function clearBuffer(start, end) {\n      var i;\n\n      for (i = start; i < end && i < this.len; i++) {\n        if (this.tests[i]) {\n          this.buffer[i] = this.getPlaceholder(i);\n        }\n      }\n    }\n  }, {\n    key: \"writeBuffer\",\n    value: function writeBuffer() {\n      this.input.value = this.buffer.join('');\n    }\n  }, {\n    key: \"checkVal\",\n    value: function checkVal(allow) {\n      this.isValueChecked = true; //try to place characters where they belong\n\n      var test = this.input.value,\n          lastMatch = -1,\n          i,\n          c,\n          pos;\n\n      for (i = 0, pos = 0; i < this.len; i++) {\n        if (this.tests[i]) {\n          this.buffer[i] = this.getPlaceholder(i);\n\n          while (pos++ < test.length) {\n            c = test.charAt(pos - 1);\n\n            if (this.tests[i].test(c)) {\n              this.buffer[i] = c;\n              lastMatch = i;\n              break;\n            }\n          }\n\n          if (pos > test.length) {\n            this.clearBuffer(i + 1, this.len);\n            break;\n          }\n        } else {\n          if (this.buffer[i] === test.charAt(pos)) {\n            pos++;\n          }\n\n          if (i < this.partialPosition) {\n            lastMatch = i;\n          }\n        }\n      }\n\n      if (allow) {\n        this.writeBuffer();\n      } else if (lastMatch + 1 < this.partialPosition) {\n        if (this.props.autoClear || this.buffer.join('') === this.defaultBuffer) {\n          // Invalid value. Remove it and replace it with the\n          // mask, which is the default behavior.\n          if (this.input.value) this.input.value = '';\n          this.clearBuffer(0, this.len);\n        } else {\n          // Invalid value, but we opt to show the value to the\n          // user and allow them to correct their mistake.\n          this.writeBuffer();\n        }\n      } else {\n        this.writeBuffer();\n        this.input.value = this.input.value.substring(0, lastMatch + 1);\n      }\n\n      return this.partialPosition ? i : this.firstNonMaskPos;\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      var _this3 = this;\n\n      if (this.props.readOnly) {\n        return;\n      }\n\n      this.focus = true;\n      clearTimeout(this.caretTimeoutId);\n      var pos;\n      this.focusText = this.input.value;\n      pos = this.checkVal();\n      this.caretTimeoutId = setTimeout(function () {\n        if (_this3.input !== document.activeElement) {\n          return;\n        }\n\n        _this3.writeBuffer();\n\n        if (pos === _this3.props.mask.replace(\"?\", \"\").length) {\n          _this3.caret(0, pos);\n        } else {\n          _this3.caret(pos);\n        }\n\n        _this3.updateFilledState();\n      }, 10);\n\n      if (this.props.onFocus) {\n        this.props.onFocus(e);\n      }\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(event) {\n      if (this.androidChrome) this.handleAndroidInput(event);else this.handleInputChange(event);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      if (this.props.readOnly) {\n        return;\n      }\n\n      var pos = this.checkVal(true);\n      this.caret(pos);\n      this.updateModel(e);\n\n      if (this.props.onComplete && this.isCompleted()) {\n        this.props.onComplete({\n          originalEvent: e,\n          value: this.getValue()\n        });\n      }\n    }\n  }, {\n    key: \"getUnmaskedValue\",\n    value: function getUnmaskedValue() {\n      var unmaskedBuffer = [];\n\n      for (var i = 0; i < this.buffer.length; i++) {\n        var c = this.buffer[i];\n\n        if (this.tests[i] && c !== this.getPlaceholder(i)) {\n          unmaskedBuffer.push(c);\n        }\n      }\n\n      return unmaskedBuffer.join('');\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(e) {\n      if (this.props.onChange) {\n        var val = this.props.unmask ? this.getUnmaskedValue() : e && e.target.value;\n        this.props.onChange({\n          originalEvent: e,\n          value: this.defaultBuffer !== val ? val : '',\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.props.id,\n            value: this.defaultBuffer !== val ? val : ''\n          }\n        });\n      }\n    }\n  }, {\n    key: \"updateFilledState\",\n    value: function updateFilledState() {\n      if (this.input && this.input.value && this.input.value.length > 0) DomHandler.addClass(this.input, 'p-filled');else DomHandler.removeClass(this.input, 'p-filled');\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(allow) {\n      var _this4 = this;\n\n      var pos;\n\n      if (this.input) {\n        if (this.props.value == null) {\n          this.input.value = '';\n        } else {\n          this.input.value = this.props.value;\n          pos = this.checkVal(allow);\n          setTimeout(function () {\n            if (_this4.input) {\n              _this4.writeBuffer();\n\n              return _this4.checkVal(allow);\n            }\n          }, 10);\n        }\n\n        this.focusText = this.input.value;\n      }\n\n      this.updateFilledState();\n      return pos;\n    }\n  }, {\n    key: \"isValueUpdated\",\n    value: function isValueUpdated() {\n      return this.props.unmask ? this.props.value !== this.getUnmaskedValue() : this.defaultBuffer !== this.input.value && this.input.value !== this.props.value;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.tests = [];\n      this.partialPosition = this.props.mask.length;\n      this.len = this.props.mask.length;\n      this.firstNonMaskPos = null;\n      this.defs = {\n        '9': '[0-9]',\n        'a': '[A-Za-z]',\n        '*': '[A-Za-z0-9]'\n      };\n      var ua = DomHandler.getUserAgent();\n      this.androidChrome = /chrome/i.test(ua) && /android/i.test(ua);\n      var maskTokens = this.props.mask.split('');\n\n      for (var i = 0; i < maskTokens.length; i++) {\n        var c = maskTokens[i];\n\n        if (c === '?') {\n          this.len--;\n          this.partialPosition = i;\n        } else if (this.defs[c]) {\n          this.tests.push(new RegExp(this.defs[c]));\n\n          if (this.firstNonMaskPos === null) {\n            this.firstNonMaskPos = this.tests.length - 1;\n          }\n\n          if (i < this.partialPosition) {\n            this.lastRequiredNonMaskPos = this.tests.length - 1;\n          }\n        } else {\n          this.tests.push(null);\n        }\n      }\n\n      this.buffer = [];\n\n      for (var _i = 0; _i < maskTokens.length; _i++) {\n        var _c = maskTokens[_i];\n\n        if (_c !== '?') {\n          if (this.defs[_c]) this.buffer.push(this.getPlaceholder(_i));else this.buffer.push(_c);\n        }\n      }\n\n      this.defaultBuffer = this.buffer.join('');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.init();\n      this.updateValue();\n\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n\n      if (this.isValueUpdated()) {\n        this.updateValue();\n      }\n\n      if (prevProps.mask !== this.props.mask) {\n        this.init();\n        this.caret(this.updateValue(true));\n        this.updateModel();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.input,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var inputMaskClassName = classNames('p-inputmask', this.props.className);\n      return /*#__PURE__*/React.createElement(InputText, {\n        id: this.props.id,\n        ref: function ref(el) {\n          return _this5.input = el;\n        },\n        type: this.props.type,\n        name: this.props.name,\n        style: this.props.style,\n        className: inputMaskClassName,\n        placeholder: this.props.placeholder,\n        size: this.props.size,\n        maxLength: this.props.maxlength,\n        tabIndex: this.props.tabIndex,\n        disabled: this.props.disabled,\n        readOnly: this.props.readOnly,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onKeyPress: this.onKeyPress,\n        onInput: this.onInput,\n        onPaste: this.handleInputChange,\n        required: this.props.required,\n        \"aria-labelledby\": this.props.ariaLabelledBy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return InputMask;\n}(Component);\nInputMask.defaultProps = {\n  id: null,\n  value: null,\n  type: 'text',\n  mask: null,\n  slotChar: '_',\n  autoClear: true,\n  unmask: false,\n  style: null,\n  className: null,\n  placeholder: null,\n  size: null,\n  maxlength: null,\n  tabIndex: null,\n  disabled: false,\n  readOnly: false,\n  name: null,\n  required: false,\n  tooltip: null,\n  tooltipOptions: null,\n  ariaLabelledBy: null,\n  onComplete: null,\n  onChange: null,\n  onFocus: null,\n  onBlur: null\n};\nInputMask.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.string,\n  mask: PropTypes.string,\n  slotChar: PropTypes.string,\n  autoClear: PropTypes.bool,\n  unmask: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  size: PropTypes.number,\n  maxlength: PropTypes.number,\n  tabIndex: PropTypes.number,\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  ariaLabelledBy: PropTypes.string,\n  onComplete: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/inputmask/InputMask.js"],"names":["React","Component","PropTypes","DomHandler","InputText","classNames","tip","InputMask","props","onFocus","bind","onBlur","onKeyDown","onKeyPress","onInput","handleInputChange","first","last","range","begin","end","input","offsetParent","document","activeElement","setSelectionRange","collapse","moveEnd","moveStart","select","selectionStart","selectionEnd","createRange","duplicate","text","length","i","firstNonMaskPos","lastRequiredNonMaskPos","tests","buffer","getPlaceholder","slotChar","charAt","unmask","getUnmaskedValue","value","pos","len","j","seekNext","test","writeBuffer","caret","Math","max","c","t","e","curVal","oldVal","checkVal","onComplete","isCompleted","originalEvent","getValue","focus","updateModel","updateFilledState","focusText","event","createEvent","initEvent","dispatchEvent","readOnly","k","which","keyCode","iPhone","getUserAgent","seekPrev","clearBuffer","shiftL","preventDefault","p","next","completed","ctrlKey","altKey","metaKey","String","fromCharCode","shiftR","proxy","setTimeout","start","join","allow","isValueChecked","lastMatch","partialPosition","autoClear","defaultBuffer","substring","clearTimeout","caretTimeoutId","mask","replace","androidChrome","handleAndroidInput","unmaskedBuffer","push","onChange","val","target","stopPropagation","name","id","addClass","removeClass","defs","ua","maskTokens","split","RegExp","init","updateValue","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","isValueUpdated","destroy","options","inputMaskClassName","className","el","type","style","placeholder","size","maxlength","tabIndex","disabled","required","ariaLabelledBy","defaultProps","propTypes","string","bool","object","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { InputText } from '../inputtext/InputText';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { tip } from '../tooltip/Tooltip';\r\n\r\nexport class InputMask extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        type: 'text',\r\n        mask: null,\r\n        slotChar: '_',\r\n        autoClear: true,\r\n        unmask: false,\r\n        style: null,\r\n        className: null,\r\n        placeholder: null,\r\n        size: null,\r\n        maxlength: null,\r\n        tabIndex: null,\r\n        disabled: false,\r\n        readOnly: false,\r\n        name: null,\r\n        required: false,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        ariaLabelledBy: null,\r\n        onComplete: null,\r\n        onChange: null,\r\n        onFocus: null,\r\n        onBlur: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.string,\r\n        type: PropTypes.string,\r\n        mask: PropTypes.string,\r\n        slotChar: PropTypes.string,\r\n        autoClear: PropTypes.bool,\r\n        unmask: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        placeholder: PropTypes.string,\r\n        size: PropTypes.number,\r\n        maxlength: PropTypes.number,\r\n        tabIndex: PropTypes.number,\r\n        disabled: PropTypes.bool,\r\n        readOnly: PropTypes.bool,\r\n        name: PropTypes.string,\r\n        required: PropTypes.bool,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        ariaLabelledBy: PropTypes.string,\r\n        onComplete: PropTypes.func,\r\n        onChange: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onKeyPress = this.onKeyPress.bind(this);\r\n        this.onInput = this.onInput.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    caret(first, last) {\r\n        let range, begin, end;\r\n\r\n        if (!this.input.offsetParent || this.input !== document.activeElement) {\r\n            return;\r\n        }\r\n\r\n        if (typeof first === 'number') {\r\n            begin = first;\r\n            end = (typeof last === 'number') ? last : begin;\r\n            if (this.input.setSelectionRange) {\r\n                this.input.setSelectionRange(begin, end);\r\n            }\r\n            else if (this.input['createTextRange']) {\r\n                range = this.input['createTextRange']();\r\n                range.collapse(true);\r\n                range.moveEnd('character', end);\r\n                range.moveStart('character', begin);\r\n                range.select();\r\n            }\r\n        }\r\n        else {\r\n            if (this.input.setSelectionRange) {\r\n                begin = this.input.selectionStart;\r\n                end = this.input.selectionEnd;\r\n            }\r\n            else if (document['selection'] && document['selection'].createRange) {\r\n                range = document['selection'].createRange();\r\n                begin = 0 - range.duplicate().moveStart('character', -100000);\r\n                end = begin + range.text.length;\r\n            }\r\n\r\n            return { begin: begin, end: end };\r\n        }\r\n    }\r\n\r\n    isCompleted() {\r\n        for (let i = this.firstNonMaskPos; i <= this.lastRequiredNonMaskPos; i++) {\r\n            if (this.tests[i] && this.buffer[i] === this.getPlaceholder(i)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getPlaceholder(i) {\r\n        if (i < this.props.slotChar.length) {\r\n            return this.props.slotChar.charAt(i);\r\n        }\r\n        return this.props.slotChar.charAt(0);\r\n    }\r\n\r\n    getValue() {\r\n        return this.props.unmask ? this.getUnmaskedValue() : this.input && this.input.value;\r\n    }\r\n\r\n    seekNext(pos) {\r\n        while (++pos < this.len && !this.tests[pos]);\r\n        return pos;\r\n    }\r\n\r\n    seekPrev(pos) {\r\n        while (--pos >= 0 && !this.tests[pos]);\r\n        return pos;\r\n    }\r\n\r\n    shiftL(begin, end) {\r\n        let i, j;\r\n\r\n        if (begin < 0) {\r\n            return;\r\n        }\r\n\r\n        for (i = begin, j = this.seekNext(end); i < this.len; i++) {\r\n            if (this.tests[i]) {\r\n                if (j < this.len && this.tests[i].test(this.buffer[j])) {\r\n                    this.buffer[i] = this.buffer[j];\r\n                    this.buffer[j] = this.getPlaceholder(j);\r\n                } else {\r\n                    break;\r\n                }\r\n\r\n                j = this.seekNext(j);\r\n            }\r\n        }\r\n        this.writeBuffer();\r\n        this.caret(Math.max(this.firstNonMaskPos, begin));\r\n    }\r\n\r\n    shiftR(pos) {\r\n        let i, c, j, t;\r\n\r\n        for (i = pos, c = this.getPlaceholder(pos); i < this.len; i++) {\r\n            if (this.tests[i]) {\r\n                j = this.seekNext(i);\r\n                t = this.buffer[i];\r\n                this.buffer[i] = c;\r\n                if (j < this.len && this.tests[j].test(t)) {\r\n                    c = t;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAndroidInput(e) {\r\n        let curVal = this.input.value;\r\n        let pos = this.caret();\r\n        if (this.oldVal && this.oldVal.length && this.oldVal.length > curVal.length) {\r\n            // a deletion or backspace happened\r\n            this.checkVal(true);\r\n            while (pos.begin > 0 && !this.tests[pos.begin - 1])\r\n                pos.begin--;\r\n            if (pos.begin === 0) {\r\n                while (pos.begin < this.firstNonMaskPos && !this.tests[pos.begin])\r\n                    pos.begin++;\r\n            }\r\n            this.caret(pos.begin, pos.begin);\r\n        } else {\r\n            this.checkVal(true);\r\n            while (pos.begin < this.len && !this.tests[pos.begin])\r\n                pos.begin++;\r\n\r\n            this.caret(pos.begin, pos.begin);\r\n        }\r\n\r\n        if (this.props.onComplete && this.isCompleted()) {\r\n            this.props.onComplete({\r\n                originalEvent: e,\r\n                value: this.getValue()\r\n            });\r\n        }\r\n    }\r\n\r\n    onBlur(e) {\r\n        this.focus = false;\r\n        this.checkVal();\r\n        this.updateModel(e);\r\n        this.updateFilledState();\r\n\r\n        if (this.props.onBlur) {\r\n            this.props.onBlur(e);\r\n        }\r\n\r\n        if (this.input.value !== this.focusText) {\r\n            let event = document.createEvent('HTMLEvents');\r\n            event.initEvent('change', true, false);\r\n            this.input.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let k = e.which || e.keyCode,\r\n            pos,\r\n            begin,\r\n            end;\r\n        let iPhone = /iphone/i.test(DomHandler.getUserAgent());\r\n        this.oldVal = this.input.value;\r\n\r\n        //backspace, delete, and escape get special treatment\r\n        if (k === 8 || k === 46 || (iPhone && k === 127)) {\r\n            pos = this.caret();\r\n            begin = pos.begin;\r\n            end = pos.end;\r\n\r\n\r\n            if (end - begin === 0) {\r\n                begin = k !== 46 ? this.seekPrev(begin) : (end = this.seekNext(begin - 1));\r\n                end = k === 46 ? this.seekNext(end) : end;\r\n            }\r\n\r\n            this.clearBuffer(begin, end);\r\n            this.shiftL(begin, end - 1);\r\n            this.updateModel(e);\r\n\r\n            e.preventDefault();\r\n        } else if (k === 13) { // enter\r\n            this.onBlur(e);\r\n            this.updateModel(e);\r\n        } else if (k === 27) { // escape\r\n            this.input.value = this.focusText;\r\n            this.caret(0, this.checkVal());\r\n            this.updateModel(e);\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    onKeyPress(e) {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let k = e.which || e.keyCode,\r\n            pos = this.caret(),\r\n            p,\r\n            c,\r\n            next,\r\n            completed;\r\n\r\n        if (e.ctrlKey || e.altKey || e.metaKey || k < 32) {//Ignore\r\n            return;\r\n        } else if (k && k !== 13) {\r\n            if (pos.end - pos.begin !== 0) {\r\n                this.clearBuffer(pos.begin, pos.end);\r\n                this.shiftL(pos.begin, pos.end - 1);\r\n            }\r\n\r\n            p = this.seekNext(pos.begin - 1);\r\n            if (p < this.len) {\r\n                c = String.fromCharCode(k);\r\n                if (this.tests[p].test(c)) {\r\n                    this.shiftR(p);\r\n\r\n                    this.buffer[p] = c;\r\n                    this.writeBuffer();\r\n                    next = this.seekNext(p);\r\n\r\n                    if (/android/i.test(DomHandler.getUserAgent())) {\r\n                        //Path for CSP Violation on FireFox OS 1.1\r\n                        let proxy = () => {\r\n                            this.caret(next);\r\n                        };\r\n\r\n                        setTimeout(proxy, 0);\r\n                    } else {\r\n                        this.caret(next);\r\n                    }\r\n                    if (pos.begin <= this.lastRequiredNonMaskPos) {\r\n                        completed = this.isCompleted();\r\n                    }\r\n                }\r\n            }\r\n            e.preventDefault();\r\n        }\r\n\r\n        this.updateModel(e);\r\n\r\n        if (this.props.onComplete && completed) {\r\n            this.props.onComplete({\r\n                originalEvent: e,\r\n                value: this.getValue()\r\n            });\r\n        }\r\n    }\r\n\r\n    clearBuffer(start, end) {\r\n        let i;\r\n        for (i = start; i < end && i < this.len; i++) {\r\n            if (this.tests[i]) {\r\n                this.buffer[i] = this.getPlaceholder(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    writeBuffer() {\r\n        this.input.value = this.buffer.join('');\r\n    }\r\n\r\n    checkVal(allow) {\r\n        this.isValueChecked = true;\r\n        //try to place characters where they belong\r\n        let test = this.input.value,\r\n            lastMatch = -1,\r\n            i,\r\n            c,\r\n            pos;\r\n\r\n        for (i = 0, pos = 0; i < this.len; i++) {\r\n            if (this.tests[i]) {\r\n                this.buffer[i] = this.getPlaceholder(i);\r\n                while (pos++ < test.length) {\r\n                    c = test.charAt(pos - 1);\r\n                    if (this.tests[i].test(c)) {\r\n                        this.buffer[i] = c;\r\n                        lastMatch = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (pos > test.length) {\r\n                    this.clearBuffer(i + 1, this.len);\r\n                    break;\r\n                }\r\n            } else {\r\n                if (this.buffer[i] === test.charAt(pos)) {\r\n                    pos++;\r\n                }\r\n                if (i < this.partialPosition) {\r\n                    lastMatch = i;\r\n                }\r\n            }\r\n        }\r\n        if (allow) {\r\n            this.writeBuffer();\r\n        } else if (lastMatch + 1 < this.partialPosition) {\r\n            if (this.props.autoClear || this.buffer.join('') === this.defaultBuffer) {\r\n                // Invalid value. Remove it and replace it with the\r\n                // mask, which is the default behavior.\r\n                if (this.input.value) this.input.value = '';\r\n                this.clearBuffer(0, this.len);\r\n            } else {\r\n                // Invalid value, but we opt to show the value to the\r\n                // user and allow them to correct their mistake.\r\n                this.writeBuffer();\r\n            }\r\n        } else {\r\n            this.writeBuffer();\r\n            this.input.value = this.input.value.substring(0, lastMatch + 1);\r\n        }\r\n        return (this.partialPosition ? i : this.firstNonMaskPos);\r\n    }\r\n\r\n    onFocus(e) {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n\r\n        this.focus = true;\r\n\r\n        clearTimeout(this.caretTimeoutId);\r\n        let pos;\r\n\r\n        this.focusText = this.input.value;\r\n\r\n        pos = this.checkVal();\r\n\r\n        this.caretTimeoutId = setTimeout(() => {\r\n            if (this.input !== document.activeElement) {\r\n                return;\r\n            }\r\n            this.writeBuffer();\r\n            if (pos === this.props.mask.replace(\"?\", \"\").length) {\r\n                this.caret(0, pos);\r\n            } else {\r\n                this.caret(pos);\r\n            }\r\n            this.updateFilledState();\r\n        }, 10);\r\n\r\n        if (this.props.onFocus) {\r\n            this.props.onFocus(e);\r\n        }\r\n    }\r\n\r\n    onInput(event) {\r\n        if (this.androidChrome)\r\n            this.handleAndroidInput(event);\r\n        else\r\n            this.handleInputChange(event);\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        if (this.props.readOnly) {\r\n            return;\r\n        }\r\n\r\n        let pos = this.checkVal(true);\r\n        this.caret(pos);\r\n        this.updateModel(e);\r\n        if (this.props.onComplete && this.isCompleted()) {\r\n            this.props.onComplete({\r\n                originalEvent: e,\r\n                value: this.getValue()\r\n            });\r\n        }\r\n    }\r\n\r\n    getUnmaskedValue() {\r\n        let unmaskedBuffer = [];\r\n        for (let i = 0; i < this.buffer.length; i++) {\r\n            let c = this.buffer[i];\r\n            if (this.tests[i] && c !== this.getPlaceholder(i)) {\r\n                unmaskedBuffer.push(c);\r\n            }\r\n        }\r\n\r\n        return unmaskedBuffer.join('');\r\n    }\r\n\r\n    updateModel(e) {\r\n        if (this.props.onChange) {\r\n            let val = this.props.unmask ? this.getUnmaskedValue() : e && e.target.value;\r\n            this.props.onChange({\r\n                originalEvent: e,\r\n                value: (this.defaultBuffer !== val) ? val : '',\r\n                stopPropagation : () =>{},\r\n                preventDefault : () =>{},\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.props.id,\r\n                    value : (this.defaultBuffer !== val) ? val : '',\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    updateFilledState() {\r\n        if (this.input && this.input.value && this.input.value.length > 0)\r\n            DomHandler.addClass(this.input, 'p-filled');\r\n        else\r\n            DomHandler.removeClass(this.input, 'p-filled');\r\n    }\r\n\r\n    updateValue(allow) {\r\n        let pos;\r\n\r\n        if (this.input) {\r\n            if (this.props.value == null) {\r\n                this.input.value = '';\r\n            }\r\n            else {\r\n                this.input.value = this.props.value;\r\n                pos = this.checkVal(allow);\r\n\r\n                setTimeout(() => {\r\n                    if(this.input) {\r\n                        this.writeBuffer();\r\n                        return this.checkVal(allow);\r\n                    }\r\n                }, 10);\r\n            }\r\n\r\n            this.focusText = this.input.value;\r\n        }\r\n\r\n        this.updateFilledState();\r\n\r\n        return pos;\r\n    }\r\n\r\n    isValueUpdated() {\r\n        return this.props.unmask ?\r\n                        (this.props.value !== this.getUnmaskedValue()) :\r\n                        (this.defaultBuffer !== this.input.value && this.input.value !== this.props.value);\r\n    }\r\n\r\n    init() {\r\n        this.tests = [];\r\n        this.partialPosition = this.props.mask.length;\r\n        this.len = this.props.mask.length;\r\n        this.firstNonMaskPos = null;\r\n        this.defs = {\r\n            '9': '[0-9]',\r\n            'a': '[A-Za-z]',\r\n            '*': '[A-Za-z0-9]'\r\n        };\r\n\r\n        let ua = DomHandler.getUserAgent();\r\n        this.androidChrome = /chrome/i.test(ua) && /android/i.test(ua);\r\n\r\n        let maskTokens = this.props.mask.split('');\r\n        for (let i = 0; i < maskTokens.length; i++) {\r\n            let c = maskTokens[i];\r\n            if (c === '?') {\r\n                this.len--;\r\n                this.partialPosition = i;\r\n            }\r\n            else if (this.defs[c]) {\r\n                this.tests.push(new RegExp(this.defs[c]));\r\n                if (this.firstNonMaskPos === null) {\r\n                    this.firstNonMaskPos = this.tests.length - 1;\r\n                }\r\n                if (i < this.partialPosition) {\r\n                    this.lastRequiredNonMaskPos = this.tests.length - 1;\r\n                }\r\n            }\r\n            else {\r\n                this.tests.push(null);\r\n            }\r\n        }\r\n\r\n        this.buffer = [];\r\n        for (let i = 0; i < maskTokens.length; i++) {\r\n            let c = maskTokens[i];\r\n            if (c !== '?') {\r\n                if (this.defs[c])\r\n                    this.buffer.push(this.getPlaceholder(i));\r\n                else\r\n                    this.buffer.push(c);\r\n            }\r\n        }\r\n        this.defaultBuffer = this.buffer.join('');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n        this.updateValue();\r\n\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n\r\n        if (this.isValueUpdated()) {\r\n            this.updateValue();\r\n        }\r\n\r\n        if (prevProps.mask !== this.props.mask) {\r\n            this.init();\r\n            this.caret(this.updateValue(true));\r\n            this.updateModel();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.input,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let inputMaskClassName = classNames('p-inputmask', this.props.className);\r\n        return (\r\n            <InputText id={this.props.id} ref={(el) => this.input = el} type={this.props.type} name={this.props.name} style={this.props.style} className={inputMaskClassName} placeholder={this.props.placeholder}\r\n                size={this.props.size} maxLength={this.props.maxlength} tabIndex={this.props.tabIndex} disabled={this.props.disabled} readOnly={this.props.readOnly}\r\n                onFocus={this.onFocus} onBlur={this.onBlur} onKeyDown={this.onKeyDown} onKeyPress={this.onKeyPress}\r\n                onInput={this.onInput} onPaste={this.handleInputChange} required={this.props.required} aria-labelledby={this.props.ariaLabelledBy} />\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}