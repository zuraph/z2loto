{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\views\\\\transferProviders\\\\components\\\\providerGroups.js\";\n\nimport { Column } from \"../../../components/column/Column\";\nimport { DataTable } from \"../../../components/datatable/DataTable\";\nimport React, { useEffect, useState } from \"react\";\nimport { Actions } from \"../../../core\";\nimport { ProgressBar } from \"../../../components/progressbar/ProgressBar\";\nimport { confirmDialog } from \"../../../components/confirmdialog/ConfirmDialog\";\nimport { Dialog } from \"../../../components/dialog/Dialog\";\nimport { Button } from \"../../../components/button/Button\";\nimport { InputText } from \"../../../components/inputtext/InputText\";\nimport { Dropdown } from \"../../../components/dropdown/Dropdown\";\nexport var ProviderGroups = function ProviderGroups(_ref) {\n  var onSelect = _ref.onSelect,\n      onEvent = _ref.onEvent;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      type = _useState6[0],\n      setType = _useState6[1];\n\n  var _useState7 = useState({\n    name: \"\",\n    note: \"\",\n    disabled: 0\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      current = _useState8[0],\n      setCurrent = _useState8[1];\n\n  useEffect(function () {\n    loadData();\n  }, []);\n  useEffect(function () {\n    if (selected) {\n      setCurrent(_objectSpread({}, selected));\n      onSelect(selected);\n    } else {\n      setCurrent({\n        name: \"\",\n        note: \"\",\n        disabled: 0\n      });\n    }\n  }, [selected]);\n\n  var loadData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Actions.Providers.ProviderGroups();\n\n            case 2:\n              response = _context.sent;\n              setData(response.status ? response.data.data : []);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onDelete = function onDelete() {\n    if (selected) {\n      confirmDialog({\n        message: 'Do you want to delete this record?',\n        header: 'Delete Confirmation',\n        icon: 'pi pi-info-circle',\n        acceptClassName: 'p-button-danger',\n        accept: function () {\n          var _accept = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            var response;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return Actions.Providers.DeleteProviderGroup(selected.id);\n\n                  case 2:\n                    response = _context2.sent;\n                    parseResponse(response);\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          function accept() {\n            return _accept.apply(this, arguments);\n          }\n\n          return accept;\n        }(),\n        reject: function reject() {\n          return console.log(\"reject\");\n        }\n      });\n    }\n  };\n\n  var parseResponse = function parseResponse(response) {\n    if (response.status) {\n      if (response.data.data === 1) {\n        loadData();\n        onEvent({\n          severity: 'success',\n          summary: 'Success Message',\n          detail: 'Message Content',\n          life: 3000\n        });\n      } else {\n        onEvent({\n          severity: 'info',\n          summary: 'Rejected',\n          detail: 'Maybe this already deleted',\n          life: 3000\n        });\n      }\n    } else {\n      onEvent({\n        severity: 'error',\n        summary: 'Rejected',\n        detail: 'You have rejected',\n        life: 3000\n      });\n    }\n  };\n\n  var onAction = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(type === \"insert\")) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.next = 3;\n              return Actions.Providers.InsertProviderGroup(current);\n\n            case 3:\n              response = _context3.sent;\n              parseResponse({\n                status: response.status,\n                data: response.status ? {\n                  data: 1\n                } : {\n                  data: 0\n                }\n              });\n              _context3.next = 11;\n              break;\n\n            case 7:\n              _context3.next = 9;\n              return Actions.Providers.UpdateProviderGroup({\n                id: current.id,\n                data: {\n                  name: current.name,\n                  note: current.note,\n                  disabled: current.disabled\n                }\n              });\n\n            case 9:\n              response = _context3.sent;\n              parseResponse({\n                status: response.status,\n                data: response.status ? {\n                  data: 1\n                } : {\n                  data: 0\n                }\n              });\n\n            case 11:\n              if (response.status) {\n                setType(null);\n              }\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onAction() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var renderFooter = function renderFooter() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"No\",\n      icon: \"pi pi-times\",\n      onClick: function onClick() {\n        setType(null);\n      },\n      className: \"p-button-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      label: \"Yes\",\n      icon: \"pi pi-check\",\n      onClick: function onClick() {\n        return onAction();\n      },\n      autoFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var renderHeader = function renderHeader() {\n    return type === \"insert\" ? \"New Group\" : \"Update Group\";\n  };\n\n  var visible = function visible() {\n    if (type === \"insert\") {\n      return true;\n    } else if (type === \"update\" && selected) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    header: renderHeader,\n    visible: visible(),\n    style: {\n      width: '50vw'\n    },\n    footer: renderFooter,\n    onHide: function onHide() {\n      return setType(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-fluid\",\n    style: {\n      height: \"270px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-field\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"gName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Group Name\"), /*#__PURE__*/React.createElement(InputText, {\n    id: \"gName\",\n    type: \"text\",\n    value: current.name,\n    onChange: function onChange(event) {\n      return setCurrent(_objectSpread(_objectSpread({}, current), {}, {\n        name: event.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-field\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"note\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Note\"), /*#__PURE__*/React.createElement(InputText, {\n    id: \"note\",\n    type: \"text\",\n    value: current.note,\n    onChange: function onChange(event) {\n      return setCurrent(_objectSpread(_objectSpread({}, current), {}, {\n        note: event.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-field\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"disabled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"On/Off\"), /*#__PURE__*/React.createElement(Dropdown, {\n    inputId: \"disabled\",\n    optionValue: \"id\",\n    value: current.disabled,\n    options: [{\n      id: 1,\n      name: \"On\"\n    }, {\n      id: 0,\n      name: \"Off\"\n    }],\n    onChange: function onChange(event) {\n      return setCurrent(_objectSpread(_objectSpread({}, current), {}, {\n        disabled: event.value\n      }));\n    },\n    placeholder: \"Select\",\n    optionLabel: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-box call\",\n    style: {\n      flex: '1'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Provider Groups\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"pi pi-plus\",\n    onClick: function onClick() {\n      setSelected(null);\n      setType(\"insert\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"pi pi-pencil\",\n    onClick: function onClick() {\n      return setType(\"update\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"pi pi-trash\",\n    onClick: onDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-cont grid bg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, !data && /*#__PURE__*/React.createElement(ProgressBar, {\n    style: {\n      height: '6px'\n    },\n    mode: \"indeterminate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    selection: selected,\n    onSelectionChange: function onSelectionChange(e) {\n      return setSelected(e.value);\n    },\n    selectionMode: \"single\",\n    dataKey: \"id\",\n    scrollable: true,\n    value: data,\n    className: \"p-datatable-gridlines\",\n    rowClassName: function rowClassName(data) {\n      return {\n        'bg-red': data.disabled === 1\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    field: \"id\",\n    header: \"ID\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"name\",\n    header: \"Group Name\",\n    filter: true,\n    filterPlaceholder: \"Search by name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"disabled\",\n    header: \"On/Off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/views/transferProviders/components/providerGroups.js"],"names":["Column","DataTable","React","useEffect","useState","Actions","ProgressBar","confirmDialog","Dialog","Button","InputText","Dropdown","ProviderGroups","onSelect","onEvent","data","setData","selected","setSelected","type","setType","name","note","disabled","current","setCurrent","loadData","Providers","response","status","onDelete","message","header","icon","acceptClassName","accept","DeleteProviderGroup","id","parseResponse","reject","console","log","severity","summary","detail","life","onAction","InsertProviderGroup","UpdateProviderGroup","renderFooter","renderHeader","visible","width","height","event","target","value","flex","e"],"mappings":"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","sourcesContent":["import {Column} from \"../../../components/column/Column\";\r\nimport {DataTable} from \"../../../components/datatable/DataTable\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Actions} from \"../../../core\";\r\nimport {ProgressBar} from \"../../../components/progressbar/ProgressBar\";\r\nimport {confirmDialog} from \"../../../components/confirmdialog/ConfirmDialog\";\r\nimport {Dialog} from \"../../../components/dialog/Dialog\";\r\nimport {Button} from \"../../../components/button/Button\";\r\nimport {InputText} from \"../../../components/inputtext/InputText\";\r\nimport {Dropdown} from \"../../../components/dropdown/Dropdown\";\r\n\r\nexport const ProviderGroups = ({onSelect,onEvent}) =>{\r\n    const [data,setData]=useState(null)\r\n    const [selected,setSelected]=useState(null)\r\n    const [type,setType]=useState(null)\r\n    const [current,setCurrent]=useState({\r\n        name:\"\",\r\n        note:\"\",\r\n        disabled:0\r\n    })\r\n    useEffect(()=>{\r\n        loadData()\r\n    },[])\r\n    useEffect(()=>{\r\n        if(selected){\r\n            setCurrent({...selected})\r\n            onSelect(selected)\r\n        }else{\r\n            setCurrent({\r\n                name:\"\",\r\n                note:\"\",\r\n                disabled:0\r\n            })\r\n        }\r\n    },[selected])\r\n    const loadData = async () => {\r\n        const response = await Actions.Providers.ProviderGroups();\r\n        setData(response.status?response.data.data:[])\r\n    }\r\n    const onDelete=()=>{\r\n        if(selected){\r\n            confirmDialog({\r\n                message: 'Do you want to delete this record?',\r\n                header: 'Delete Confirmation',\r\n                icon: 'pi pi-info-circle',\r\n                acceptClassName: 'p-button-danger',\r\n                accept: async () => {\r\n                    const response = await Actions.Providers.DeleteProviderGroup(selected.id)\r\n                    parseResponse(response)\r\n                },\r\n                reject: ()=>console.log(\"reject\")\r\n            });\r\n        }\r\n\r\n    }\r\n    const parseResponse = (response) =>{\r\n        if(response.status){\r\n            if(response.data.data===1){\r\n                loadData();\r\n                onEvent({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000})\r\n            }else{\r\n                onEvent({ severity: 'info', summary: 'Rejected', detail: 'Maybe this already deleted', life: 3000 })\r\n            }\r\n        }else{\r\n            onEvent({ severity: 'error', summary: 'Rejected', detail: 'You have rejected', life: 3000 })\r\n        }\r\n    }\r\n    const onAction=async () => {\r\n        let response;\r\n        if (type === \"insert\") {\r\n            response = await Actions.Providers.InsertProviderGroup(current)\r\n            parseResponse({\r\n                status:response.status,\r\n                data:response.status? {data:1}:{data:0}\r\n            })\r\n        } else {\r\n            response = await Actions.Providers.UpdateProviderGroup({id:current.id,data:{ name:current.name,note:current.note,disabled:current.disabled}})\r\n            parseResponse({\r\n                status:response.status,\r\n                data:response.status? {data:1}:{data:0}\r\n            })\r\n        }\r\n        if(response.status){\r\n            setType(null)\r\n        }\r\n    }\r\n    const renderFooter=()=>{\r\n        return (\r\n            <div>\r\n                <Button label=\"No\" icon=\"pi pi-times\" onClick={() => {\r\n                    setType(null);\r\n                }} className=\"p-button-text\" />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" onClick={() =>onAction()} autoFocus />\r\n            </div>\r\n        );\r\n    }\r\n    const renderHeader=()=>{\r\n        return  type===\"insert\"? \"New Group\":\"Update Group\"\r\n    };\r\n    const visible=()=>{\r\n        if(type===\"insert\"){\r\n            return true;\r\n        }else if(type===\"update\" && selected){\r\n            return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog header={renderHeader} visible={visible()} style={{ width: '50vw' }} footer={renderFooter} onHide={() => setType(null)}>\r\n                 <div className=\"p-fluid\" style={{height:\"270px\"}}>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"gName\">Group Name</label>\r\n                        <InputText id=\"gName\" type=\"text\"  value={current.name} onChange={event => setCurrent({...current,name:event.target.value})}/>\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"note\">Note</label>\r\n                        <InputText id=\"note\" type=\"text\" value={current.note} onChange={event => setCurrent({...current,note:event.target.value})} />\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"disabled\">On/Off</label>\r\n                        <Dropdown inputId=\"disabled\" optionValue={\"id\"} value={current.disabled} options={[{id:1,name:\"On\"},{id:0,name: \"Off\"}]} onChange={event=>setCurrent({...current,disabled:event.value})} placeholder=\"Select\" optionLabel=\"name\"/>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <div className=\"flex-box call\" style={{flex:'1'}}>\r\n                <div className=\"title\">\r\n                    <div>Provider Groups</div>\r\n                    <i className=\"pi pi-plus\" onClick={()=>{\r\n                        setSelected(null)\r\n                        setType(\"insert\")}\r\n                    }/>\r\n                    <i className=\"pi pi-pencil\" onClick={()=>setType(\"update\")}/>\r\n                    <i className=\"pi pi-trash\" onClick={onDelete}/>\r\n                </div>\r\n                <div className=\"flex-cont grid bg\">\r\n                    {!data && <ProgressBar style={{ height: '6px' }} mode=\"indeterminate\" />}\r\n                    <DataTable\r\n                        selection={selected} onSelectionChange={e => setSelected(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                        scrollable value={data}  className=\"p-datatable-gridlines\" rowClassName={data => {\r\n                        return {\r\n                            'bg-red': data.disabled === 1\r\n                        }\r\n                    }}>\r\n                        <Column field=\"id\" header=\"ID\" />\r\n                        <Column field=\"name\" header=\"Group Name\" filter  filterPlaceholder=\"Search by name\"/>\r\n                        <Column field=\"disabled\" header=\"On/Off\"/>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}