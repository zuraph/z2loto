{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\fullcalendar\\\\FullCalendarDoc.js\";\nimport React, { Component } from 'react';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var FullCalendarDoc = /*#__PURE__*/function (_Component) {\n  _inherits(FullCalendarDoc, _Component);\n\n  var _super = _createSuper(FullCalendarDoc);\n\n  function FullCalendarDoc(props) {\n    var _this;\n\n    _classCallCheck(this, FullCalendarDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { FullCalendar } from 'primereact/fullcalendar';\\nimport { EventService } from '../service/EventService';\\nimport dayGridPlugin from '@fullcalendar/daygrid';\\nimport timeGridPlugin from '@fullcalendar/timegrid';\\nimport interactionPlugin from '@fullcalendar/interaction';\\nimport '@fullcalendar/core/main.css';\\nimport '@fullcalendar/daygrid/main.css';\\nimport '@fullcalendar/timegrid/main.css';\\n\\nexport class FullCalendarDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            events: []\\n        };\\n\\n        this.options = {\\n            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\\n            defaultView: 'dayGridMonth',\\n            defaultDate: '2017-02-01',\\n            header: {\\n                left: 'prev,next',\\n                center: 'title',\\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\\n            },\\n            editable: true\\n        };\\n\\n        this.eventService = new EventService();\\n    }\\n\\n    componentDidMount() {\\n        this.eventService.getEvents().then(data => this.setState({events: data}));\\n    }\\n\\n    render() {\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <FullCalendar events={this.state.events} options={this.options} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { FullCalendar } from 'primereact/fullcalendar';\\nimport { EventService } from '../service/EventService';\\nimport dayGridPlugin from '@fullcalendar/daygrid';\\nimport timeGridPlugin from '@fullcalendar/timegrid';\\nimport interactionPlugin from '@fullcalendar/interaction';\\nimport '@fullcalendar/core/main.css';\\nimport '@fullcalendar/daygrid/main.css';\\nimport '@fullcalendar/timegrid/main.css';\\n\\nconst FullCalendarDemo = () => {\\n    const [events, setEvents] = useState([]);\\n    const options = {\\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\\n        defaultView: 'dayGridMonth',\\n        defaultDate: '2017-02-01',\\n        header: {\\n            left: 'prev,next',\\n            center: 'title',\\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\\n        },\\n        editable: true\\n    };\\n\\n    const eventService = new EventService();\\n\\n    useEffect(() => {\\n        eventService.getEvents().then(data => setEvents(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <FullCalendar events={events} options={options} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { FullCalendar } from 'primereact/fullcalendar';\\nimport { EventService } from '../service/EventService';\\nimport dayGridPlugin from '@fullcalendar/daygrid';\\nimport timeGridPlugin from '@fullcalendar/timegrid';\\nimport interactionPlugin from '@fullcalendar/interaction';\\nimport '@fullcalendar/core/main.css';\\nimport '@fullcalendar/daygrid/main.css';\\nimport '@fullcalendar/timegrid/main.css';\\n\\nconst FullCalendarDemo = () => {\\n    const [events, setEvents] = useState([]);\\n    const options = {\\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\\n        defaultView: 'dayGridMonth',\\n        defaultDate: '2017-02-01',\\n        header: {\\n            left: 'prev,next',\\n            center: 'title',\\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\\n        },\\n        editable: true\\n    };\\n\\n    const eventService = new EventService();\\n\\n    useEffect(() => {\\n        eventService.getEvents().then(data => setEvents(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <FullCalendar events={events} options={options} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    _this.dependencies = {\n      \"@fullcalendar/core\": \"4.2.0\",\n      \"@fullcalendar/daygrid\": \"4.2.0\",\n      \"@fullcalendar/timegrid\": \"4.2.0\",\n      \"@fullcalendar/interaction\": \"4.2.0\"\n    };\n    return _this;\n  }\n\n  _createClass(FullCalendarDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 1\n        }\n      }, \"\\nimport { FullCalendar } from 'primereact/fullcalendar';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, \"FullCalendar is a wrapper around on \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://fullcalendar.io/docs/v4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 64\n        }\n      }, \"FullCalendar 4.0.1+\"), \" so fullcalendar core needs to be included in your project. For a complete documentation and samples please refer to the \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://fullcalendar.io/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 86\n        }\n      }, \"fullcalendar website\"), \".\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 1\n        }\n      }, \"\\nnpm install @fullcalendar/core --save\\n\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }\n      }, \"FullCalendar is plugin based so install the plugins you require and define them with the options property.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 1\n        }\n      }, \"\\nnpm install @fullcalendar/daygrid --save\\nnpm install @fullcalendar/timegrid --save\\nnpm install @fullcalendar/interaction --save\\n\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, \"FullCalendar properties are defined with the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 73\n        }\n      }, \"options\"), \" property and the events to display with the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 132\n        }\n      }, \"events\"), \" property which should be an array and defined using the events property. Refer to \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://fullcalendar.io/docs/event-object\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 228\n        }\n      }, \"Event API\"), \" for more information.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 1\n        }\n      }, \"\\nexport const FullCalendarDemo = () => {\\n\\n    const [events, setEvents]: useState([]);\\n    const options = {\\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\\n        defaultView: 'dayGridMonth',\\n        defaultDate: '2017-02-01',\\n        header: {\\n            left: 'prev,next',\\n            center: 'title',\\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\\n        },\\n        editable: true\\n    };\\n\\n    useEffect(() => {\\n        eventService = new EventService();\\n        eventService.getEvents().then(data => setEvents(data));\\n    }, []);\\n\\n    return (\\n        <FullCalendar events={events} options={options} />\\n    );\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }\n      }, \"Callbacks\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }, \"Callbacks of the FullCalendar such as dateClick are also defined with the options property.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 1\n        }\n      }, \"\\nlet options: {\\n    defaultDate: '2017-02-01',\\n    header: {\\n        left: 'prev,next',\\n        center: 'title',\\n        right: 'month,agendaWeek,agendaDay'\\n    },\\n    editable: true,\\n    dateClick: (e) =>  {\\n        //handle date click\\n    }\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }\n      }, \"Methods\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }\n      }, \"Methods of the underlying calendar instance is accessible using the reference of the components calendar API.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 1\n        }\n      }, \"\\n<FullCalendar ref={fc} events={events} options={options} />\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 1\n        }\n      }, \"\\nfc.current.calendar.nextYear();\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 41\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 41\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 41\n        }\n      }, \"events\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 41\n        }\n      }, \"array\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 41\n        }\n      }, \"An array of events to display.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 41\n        }\n      }, \"object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 41\n        }\n      }, \"Inline style of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 41\n        }\n      }, \"ClassName of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 41\n        }\n      }, \"options\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 41\n        }\n      }, \"Object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 41\n        }\n      }, \"A configuration object to define properties of FullCalendar.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://fullcalendar.io/docs/v4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 29\n        }\n      }, \"FullCalendar 4.0.1+\"))), useLiveEditorTabs({\n        name: 'FullCalendarDemo',\n        sources: this.sources,\n        service: 'EventService',\n        data: 'events',\n        dependencies: this.dependencies\n      })));\n    }\n  }]);\n\n  return FullCalendarDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/fullcalendar/FullCalendarDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","FullCalendarDoc","props","sources","tabName","content","dependencies","name","service","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class FullCalendarDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { FullCalendar } from 'primereact/fullcalendar';\r\nimport { EventService } from '../service/EventService';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\n\r\nexport class FullCalendarDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            events: []\r\n        };\r\n\r\n        this.options = {\r\n            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n            defaultView: 'dayGridMonth',\r\n            defaultDate: '2017-02-01',\r\n            header: {\r\n                left: 'prev,next',\r\n                center: 'title',\r\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n            },\r\n            editable: true\r\n        };\r\n\r\n        this.eventService = new EventService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.eventService.getEvents().then(data => this.setState({events: data}));\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <FullCalendar events={this.state.events} options={this.options} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FullCalendar } from 'primereact/fullcalendar';\r\nimport { EventService } from '../service/EventService';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\n\r\nconst FullCalendarDemo = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const options = {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultView: 'dayGridMonth',\r\n        defaultDate: '2017-02-01',\r\n        header: {\r\n            left: 'prev,next',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        },\r\n        editable: true\r\n    };\r\n\r\n    const eventService = new EventService();\r\n\r\n    useEffect(() => {\r\n        eventService.getEvents().then(data => setEvents(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <FullCalendar events={events} options={options} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FullCalendar } from 'primereact/fullcalendar';\r\nimport { EventService } from '../service/EventService';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\n\r\nconst FullCalendarDemo = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const options = {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultView: 'dayGridMonth',\r\n        defaultDate: '2017-02-01',\r\n        header: {\r\n            left: 'prev,next',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        },\r\n        editable: true\r\n    };\r\n\r\n    const eventService = new EventService();\r\n\r\n    useEffect(() => {\r\n        eventService.getEvents().then(data => setEvents(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <FullCalendar events={events} options={options} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.dependencies = {\r\n            \"@fullcalendar/core\": \"4.2.0\",\r\n            \"@fullcalendar/daygrid\": \"4.2.0\",\r\n            \"@fullcalendar/timegrid\": \"4.2.0\",\r\n            \"@fullcalendar/interaction\": \"4.2.0\"\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { FullCalendar } from 'primereact/fullcalendar';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>FullCalendar is a wrapper around on <a href=\"https://fullcalendar.io/docs/v4\">FullCalendar 4.0.1+</a> so fullcalendar core needs to be included in your project.\r\n                        For a complete documentation and samples please refer to the <a href=\"https://fullcalendar.io/\">fullcalendar website</a>.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nnpm install @fullcalendar/core --save\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <p>FullCalendar is plugin based so install the plugins you require and define them with the options property.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nnpm install @fullcalendar/daygrid --save\r\nnpm install @fullcalendar/timegrid --save\r\nnpm install @fullcalendar/interaction --save\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <p>FullCalendar properties are defined with the <i>options</i> property and the events to display with the <i>events</i> property which should be an array and defined using the events property. Refer to <a href=\"https://fullcalendar.io/docs/event-object\">Event API</a> for more information.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nexport const FullCalendarDemo = () => {\r\n\r\n    const [events, setEvents]: useState([]);\r\n    const options = {\r\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n        defaultView: 'dayGridMonth',\r\n        defaultDate: '2017-02-01',\r\n        header: {\r\n            left: 'prev,next',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        },\r\n        editable: true\r\n    };\r\n\r\n    useEffect(() => {\r\n        eventService = new EventService();\r\n        eventService.getEvents().then(data => setEvents(data));\r\n    }, []);\r\n\r\n    return (\r\n        <FullCalendar events={events} options={options} />\r\n    );\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Callbacks</h5>\r\n                        <p>Callbacks of the FullCalendar such as dateClick are also defined with the options property.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nlet options: {\r\n    defaultDate: '2017-02-01',\r\n    header: {\r\n        left: 'prev,next',\r\n        center: 'title',\r\n        right: 'month,agendaWeek,agendaDay'\r\n    },\r\n    editable: true,\r\n    dateClick: (e) =>  {\r\n        //handle date click\r\n    }\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Methods</h5>\r\n                        <p>Methods of the underlying calendar instance is accessible using the reference of the components calendar API.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<FullCalendar ref={fc} events={events} options={options} />\r\n`}\r\n</CodeHighlight>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nfc.current.calendar.nextYear();\r\n`}\r\n</CodeHighlight>\r\n\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>events</td>\r\n                                        <td>array</td>\r\n                                        <td>An array of events to display.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>object</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>ClassName of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>options</td>\r\n                                        <td>Object</td>\r\n                                        <td>A configuration object to define properties of FullCalendar.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>\r\n                            <a href=\"https://fullcalendar.io/docs/v4\">FullCalendar 4.0.1+</a>\r\n                        </p>\r\n\r\n\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'FullCalendarDemo', sources: this.sources, service: 'EventService', data: 'events', dependencies: this.dependencies })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}