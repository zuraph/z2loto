{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { Config } from \"../../index\";\nimport { PING, SIGN_IN } from \"../actionTypes\";\nimport Request from \"../../http/http\";\nimport { query_string } from \"../../utils\";\n\nvar signIn = function signIn(data) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Request.post(Config.User.SIGN_IN, query_string({\n                \"username\": data.username,\n                \"password\": data.password\n              }), {\n                headers: {\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n\n              if (response.status) {\n                localStorage.setItem('access_token', response.data.access_token);\n                dispatch({\n                  type: SIGN_IN,\n                  payload: {},\n                  status: response.status\n                });\n              } else {\n                localStorage.removeItem('access_token');\n              }\n\n              return _context.abrupt(\"return\", response);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar signOut = function signOut() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"sign out\");\n              _context2.next = 3;\n              return Request.get(Config.User.SIGN_OUT);\n\n            case 3:\n              response = _context2.sent;\n\n              if (response.status) {\n                dispatch({\n                  type: SIGN_IN,\n                  payload: {},\n                  status: false\n                });\n              } else {\n                console.log(\"error\");\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nvar ping = function ping() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Request.get(Config.User.Ping);\n\n            case 2:\n              response = _context3.sent;\n              dispatch({\n                type: PING,\n                payload: response.status ? response.data.data : {},\n                status: response.status\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n\nexport default {\n  signIn: signIn,\n  signOut: signOut,\n  ping: ping\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/core/store/actions/user.js"],"names":["Config","PING","SIGN_IN","Request","query_string","signIn","data","dispatch","post","User","username","password","headers","response","status","localStorage","setItem","access_token","type","payload","removeItem","signOut","console","log","get","SIGN_OUT","ping","Ping"],"mappings":";;AAAA,SAAQA,MAAR,QAAqB,aAArB;AACA,SAAQC,IAAR,EAAcC,OAAd,QAA4B,gBAA5B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAAQC,YAAR,QAA2B,aAA3B;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD;AAAA;AAAA,wEAAS,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGJ,OAAO,CAACK,IAAR,CAAaR,MAAM,CAACS,IAAP,CAAYP,OAAzB,EAAiCE,YAAY,CAAC;AACjE,4BAAWE,IAAI,CAACI,QADiD;AAEjE,4BAAWJ,IAAI,CAACK;AAFiD,eAAD,CAA7C,EAGpB;AACCC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX;AADV,eAHoB,CADH;;AAAA;AACdC,cAAAA,QADc;;AASpB,kBAAGA,QAAQ,CAACC,MAAZ,EAAmB;AACfC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAoCH,QAAQ,CAACP,IAAT,CAAcW,YAAlD;AAEAV,gBAAAA,QAAQ,CAAC;AACLW,kBAAAA,IAAI,EAAEhB,OADD;AAELiB,kBAAAA,OAAO,EAAE,EAFJ;AAGLL,kBAAAA,MAAM,EAACD,QAAQ,CAACC;AAHX,iBAAD,CAAR;AAKH,eARD,MAQK;AACDC,gBAAAA,YAAY,CAACK,UAAb,CAAwB,cAAxB;AACH;;AAnBmB,+CAoBhBP,QApBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AAuBA,IAAMQ,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA,yEAAM,kBAAOd,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBe,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AADoB;AAAA,qBAEGpB,OAAO,CAACqB,GAAR,CAAYxB,MAAM,CAACS,IAAP,CAAYgB,QAAxB,CAFH;;AAAA;AAEdZ,cAAAA,QAFc;;AAGpB,kBAAGA,QAAQ,CAACC,MAAZ,EAAmB;AACjBP,gBAAAA,QAAQ,CAAC;AACPW,kBAAAA,IAAI,EAAEhB,OADC;AAEPiB,kBAAAA,OAAO,EAAE,EAFF;AAGPL,kBAAAA,MAAM,EAAC;AAHA,iBAAD,CAAR;AAKD,eAND,MAMM;AACJQ,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAXmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAcA,IAAMG,IAAI,GAAG,SAAPA,IAAO;AAAA;AAAA,yEAAK,kBAAOnB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOJ,OAAO,CAACqB,GAAR,CAAYxB,MAAM,CAACS,IAAP,CAAYkB,IAAxB,CADP;;AAAA;AACVd,cAAAA,QADU;AAEhBN,cAAAA,QAAQ,CAAC;AACPW,gBAAAA,IAAI,EAAEjB,IADC;AAELkB,gBAAAA,OAAO,EAAEN,QAAQ,CAACC,MAAT,GAAgBD,QAAQ,CAACP,IAAT,CAAcA,IAA9B,GAAmC,EAFvC;AAGLQ,gBAAAA,MAAM,EAACD,QAAQ,CAACC;AAHX,eAAD,CAAR;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAL;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AASA,eAAe;AACbT,EAAAA,MAAM,EAANA,MADa;AAEbgB,EAAAA,OAAO,EAAPA,OAFa;AAGbK,EAAAA,IAAI,EAAJA;AAHa,CAAf","sourcesContent":["import {Config} from \"../../index\";\r\nimport {PING, SIGN_IN} from \"../actionTypes\";\r\nimport Request from \"../../http/http\";\r\nimport {query_string} from \"../../utils\";\r\nconst signIn = (data) =>async (dispatch)=>{\r\n    const response = await Request.post(Config.User.SIGN_IN,query_string({\r\n        \"username\":data.username,\r\n        \"password\":data.password\r\n    }),{\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n    });\r\n    if(response.status){\r\n        localStorage.setItem('access_token',response.data.access_token);\r\n\r\n        dispatch({\r\n            type: SIGN_IN,\r\n            payload: {},\r\n            status:response.status\r\n        })\r\n    }else{\r\n        localStorage.removeItem('access_token');\r\n    }\r\n return response;\r\n}\r\n\r\nconst signOut = () => async (dispatch)=>{\r\n  console.log(\"sign out\")\r\n  const response = await Request.get(Config.User.SIGN_OUT);\r\n  if(response.status){\r\n    dispatch({\r\n      type: SIGN_IN,\r\n      payload: {},\r\n      status:false\r\n    })\r\n  }else {\r\n    console.log(\"error\")\r\n  }\r\n}\r\n\r\nconst ping = () =>async (dispatch)=>{\r\n  const response = await Request.get(Config.User.Ping)\r\n  dispatch({\r\n    type: PING,\r\n      payload: response.status?response.data.data:{},\r\n      status:response.status\r\n  })\r\n}\r\n\r\nexport default {\r\n  signIn,\r\n  signOut,\r\n  ping\r\n}\r\n"]},"metadata":{},"sourceType":"module"}