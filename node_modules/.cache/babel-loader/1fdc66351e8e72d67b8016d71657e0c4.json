{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{CSSTransition}from'react-transition-group';import{classNames}from'../utils/ClassNames';import UniqueComponentId from'../utils/UniqueComponentId';import ObjectUtils from'../utils/ObjectUtils';import{Ripple}from'../ripple/Ripple';export var Panel=/*#__PURE__*/function(_Component){_inherits(Panel,_Component);var _super=_createSuper(Panel);function Panel(props){var _this;_classCallCheck(this,Panel);_this=_super.call(this,props);if(!_this.props.onToggle){_this.state={collapsed:_this.props.collapsed};}_this.toggle=_this.toggle.bind(_assertThisInitialized(_this));_this.id=_this.props.id||UniqueComponentId();_this.contentRef=React.createRef();return _this;}_createClass(Panel,[{key:\"toggle\",value:function toggle(event){if(this.props.toggleable){var collapsed=this.props.onToggle?this.props.collapsed:this.state.collapsed;if(collapsed)this.expand(event);else this.collapse(event);if(this.props.onToggle){this.props.onToggle({originalEvent:event,value:!collapsed});}}event.preventDefault();}},{key:\"expand\",value:function expand(event){if(!this.props.onToggle){this.setState({collapsed:false});}if(this.props.onExpand){this.props.onExpand(event);}}},{key:\"collapse\",value:function collapse(event){if(!this.props.onToggle){this.setState({collapsed:true});}if(this.props.onCollapse){this.props.onCollapse(event);}}},{key:\"isCollapsed\",value:function isCollapsed(){return this.props.toggleable?this.props.onToggle?this.props.collapsed:this.state.collapsed:false;}},{key:\"renderToggleIcon\",value:function renderToggleIcon(collapsed){if(this.props.toggleable){var id=this.id+'_label';var ariaControls=this.id+'_content';var toggleIcon=collapsed?this.props.expandIcon:this.props.collapseIcon;return/*#__PURE__*/React.createElement(\"button\",{className:\"p-panel-header-icon p-panel-toggler p-link\",onClick:this.toggle,id:id,\"aria-controls\":ariaControls,\"aria-expanded\":!collapsed,role:\"tab\"},/*#__PURE__*/React.createElement(\"span\",{className:toggleIcon}),/*#__PURE__*/React.createElement(Ripple,null));}return null;}},{key:\"renderHeader\",value:function renderHeader(collapsed){if(this.props.header||this.props.toggleable){var header=ObjectUtils.getJSXElement(this.props.header,this.props);var icons=ObjectUtils.getJSXElement(this.props.icons,this.props);var toggleIcon=this.renderToggleIcon(collapsed);return/*#__PURE__*/React.createElement(\"div\",{className:\"p-panel-header\"},/*#__PURE__*/React.createElement(\"span\",{className:\"p-panel-title\",\"aria-label\":this.id+'_header'},header),/*#__PURE__*/React.createElement(\"div\",{className:\"p-panel-icons\"},icons,toggleIcon));}return null;}},{key:\"renderContent\",value:function renderContent(collapsed){var id=this.id+'_content';return/*#__PURE__*/React.createElement(CSSTransition,{nodeRef:this.contentRef,classNames:\"p-toggleable-content\",timeout:{enter:1000,exit:450},in:!collapsed,unmountOnExit:true},/*#__PURE__*/React.createElement(\"div\",{ref:this.contentRef,className:\"p-toggleable-content\",\"aria-hidden\":collapsed,role:\"region\",id:id,\"aria-labelledby\":this.id+'_header'},/*#__PURE__*/React.createElement(\"div\",{className:\"p-panel-content\"},this.props.children)));}},{key:\"render\",value:function render(){var className=classNames('p-panel p-component',{'p-panel-toggleable':this.props.toggleable},this.props.className);var collapsed=this.isCollapsed();var header=this.renderHeader(collapsed);var content=this.renderContent(collapsed);return/*#__PURE__*/React.createElement(\"div\",{id:this.props.id,className:className,style:this.props.style},header,content);}}]);return Panel;}(Component);Panel.defaultProps={id:null,header:null,toggleable:null,style:null,className:null,collapsed:null,expandIcon:'pi pi-plus',collapseIcon:'pi pi-minus',icons:null,onExpand:null,onCollapse:null,onToggle:null};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/panel/Panel.js"],"names":["React","Component","CSSTransition","classNames","UniqueComponentId","ObjectUtils","Ripple","Panel","props","onToggle","state","collapsed","toggle","bind","id","contentRef","createRef","event","toggleable","expand","collapse","originalEvent","value","preventDefault","setState","onExpand","onCollapse","ariaControls","toggleIcon","expandIcon","collapseIcon","header","getJSXElement","icons","renderToggleIcon","enter","exit","children","className","isCollapsed","renderHeader","content","renderContent","style","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { Ripple } from '../ripple/Ripple';\r\n\r\nexport class Panel extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        header: null,\r\n        toggleable: null,\r\n        style: null,\r\n        className: null,\r\n        collapsed: null,\r\n        expandIcon: 'pi pi-plus',\r\n        collapseIcon: 'pi pi-minus',\r\n        icons: null,\r\n        onExpand: null,\r\n        onCollapse: null,\r\n        onToggle: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        header: PropTypes.any,\r\n        toggleable: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        collapsed: PropTypes.bool,\r\n        expandIcon: PropTypes.string,\r\n        collapseIcon: PropTypes.string,\r\n        icons: PropTypes.any,\r\n        onExpand: PropTypes.func,\r\n        onCollapse: PropTypes.func,\r\n        onToggle: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (!this.props.onToggle) {\r\n            this.state = {\r\n                collapsed: this.props.collapsed\r\n            };\r\n        }\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.contentRef = React.createRef();\r\n    }\r\n\r\n    toggle(event) {\r\n        if (this.props.toggleable) {\r\n            const collapsed = this.props.onToggle ? this.props.collapsed : this.state.collapsed;\r\n\r\n            if (collapsed)\r\n                this.expand(event);\r\n            else\r\n                this.collapse(event);\r\n\r\n            if (this.props.onToggle) {\r\n                this.props.onToggle({\r\n                    originalEvent: event,\r\n                    value: !collapsed\r\n                });\r\n            }\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    expand(event) {\r\n        if (!this.props.onToggle) {\r\n            this.setState({ collapsed: false });\r\n        }\r\n\r\n        if (this.props.onExpand) {\r\n            this.props.onExpand(event);\r\n        }\r\n    }\r\n\r\n    collapse(event) {\r\n        if (!this.props.onToggle) {\r\n            this.setState({ collapsed: true });\r\n        }\r\n\r\n        if (this.props.onCollapse) {\r\n            this.props.onCollapse(event);\r\n        }\r\n    }\r\n\r\n    isCollapsed() {\r\n        return this.props.toggleable ? (this.props.onToggle ? this.props.collapsed : this.state.collapsed) : false;\r\n    }\r\n\r\n    renderToggleIcon(collapsed) {\r\n        if (this.props.toggleable) {\r\n            const id = this.id + '_label';\r\n            const ariaControls = this.id + '_content';\r\n            const toggleIcon = collapsed ? this.props.expandIcon : this.props.collapseIcon;\r\n\r\n            return (\r\n                <button className=\"p-panel-header-icon p-panel-toggler p-link\" onClick={this.toggle}\r\n                    id={id} aria-controls={ariaControls} aria-expanded={!collapsed} role=\"tab\">\r\n                    <span className={toggleIcon}></span>\r\n                    <Ripple />\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderHeader(collapsed) {\r\n        if (this.props.header || this.props.toggleable) {\r\n            const header = ObjectUtils.getJSXElement(this.props.header, this.props);\r\n            const icons = ObjectUtils.getJSXElement(this.props.icons, this.props);\r\n            const toggleIcon = this.renderToggleIcon(collapsed);\r\n\r\n            return (\r\n                <div className=\"p-panel-header\">\r\n                    <span className=\"p-panel-title\" aria-label={this.id + '_header'}>{header}</span>\r\n                    <div className=\"p-panel-icons\">\r\n                        {icons}\r\n                        {toggleIcon}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderContent(collapsed) {\r\n        const id = this.id + '_content';\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.contentRef} classNames=\"p-toggleable-content\" timeout={{ enter: 1000, exit: 450 }} in={!collapsed} unmountOnExit>\r\n                <div ref={this.contentRef} className=\"p-toggleable-content\" aria-hidden={collapsed} role=\"region\" id={id} aria-labelledby={this.id + '_header'}>\r\n                    <div className=\"p-panel-content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-panel p-component', { 'p-panel-toggleable': this.props.toggleable }, this.props.className);\r\n        const collapsed = this.isCollapsed();\r\n        const header = this.renderHeader(collapsed);\r\n        const content = this.renderContent(collapsed);\r\n\r\n        return (\r\n            <div id={this.props.id} className={className} style={this.props.style}>\r\n                {header}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}