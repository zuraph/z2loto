{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var DropdownDoc=/*#__PURE__*/function(_Component){_inherits(DropdownDoc,_Component);var _super=_createSuper(DropdownDoc);function DropdownDoc(props){var _this;_classCallCheck(this,DropdownDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Dropdown } from 'primereact/dropdown';\\nimport './DropdownDemo.css';\\n\\nexport class DropdownDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            selectedCity1: null,\\n            selectedCity2: null,\\n            selectedCountry: null\\n        };\\n\\n        this.cities = [\\n            { name: 'New York', code: 'NY' },\\n            { name: 'Rome', code: 'RM' },\\n            { name: 'London', code: 'LDN' },\\n            { name: 'Istanbul', code: 'IST' },\\n            { name: 'Paris', code: 'PRS' }\\n        ];\\n\\n        this.countries = [\\n            {name: 'Australia', code: 'AU'},\\n            {name: 'Brazil', code: 'BR'},\\n            {name: 'China', code: 'CN'},\\n            {name: 'Egypt', code: 'EG'},\\n            {name: 'France', code: 'FR'},\\n            {name: 'Germany', code: 'DE'},\\n            {name: 'India', code: 'IN'},\\n            {name: 'Japan', code: 'JP'},\\n            {name: 'Spain', code: 'ES'},\\n            {name: 'United States', code: 'US'}\\n        ];\\n\\n        this.onCityChange = this.onCityChange.bind(this);\\n        this.onCityChange2 = this.onCityChange2.bind(this);\\n        this.onCountryChange = this.onCountryChange.bind(this);\\n    }\\n\\n    onCityChange(e) {\\n        this.setState({ selectedCity1: e.value });\\n    }\\n\\n    onCityChange2(e) {\\n        this.setState({ selectedCity2: e.value });\\n    }\\n\\n    onCountryChange(e) {\\n        this.setState({ selectedCountry: e.value });\\n    }\\n\\n    selectedCountryTemplate(option, props) {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return (\\n            <span>\\n                {props.placeholder}\\n            </span>\\n        );\\n    }\\n\\n    countryOptionTemplate(option) {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"dropdown-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <Dropdown value={this.state.selectedCity1} options={this.cities} onChange={this.onCityChange} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                    <h5>Editable</h5>\\n                    <Dropdown value={this.state.selectedCity2} options={this.cities} onChange={this.onCityChange2} optionLabel=\\\"name\\\" editable />\\n\\n                    <h5>Advanced with Templating, Filtering and Clear Icon</h5>\\n                    <Dropdown value={this.state.selectedCountry} options={this.countries} onChange={this.onCountryChange} optionLabel=\\\"name\\\" filter showClear filterBy=\\\"name\\\" placeholder=\\\"Select a Country\\\"\\n                        valueTemplate={this.selectedCountryTemplate} itemTemplate={this.countryOptionTemplate} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Dropdown } from 'primereact/dropdown';\\nimport './DropdownDemo.css';\\n\\nconst DropdownDemo = () => {\\n    const [selectedCity1, setSelectedCity1] = useState(null);\\n    const [selectedCity2, setSelectedCity2] = useState(null);\\n    const [selectedCountry, setSelectedCountry] = useState(null);\\n    const cities = [\\n        { name: 'New York', code: 'NY' },\\n        { name: 'Rome', code: 'RM' },\\n        { name: 'London', code: 'LDN' },\\n        { name: 'Istanbul', code: 'IST' },\\n        { name: 'Paris', code: 'PRS' }\\n    ];\\n    const countries = [\\n        {name: 'Australia', code: 'AU'},\\n        {name: 'Brazil', code: 'BR'},\\n        {name: 'China', code: 'CN'},\\n        {name: 'Egypt', code: 'EG'},\\n        {name: 'France', code: 'FR'},\\n        {name: 'Germany', code: 'DE'},\\n        {name: 'India', code: 'IN'},\\n        {name: 'Japan', code: 'JP'},\\n        {name: 'Spain', code: 'ES'},\\n        {name: 'United States', code: 'US'}\\n    ];\\n\\n    const onCityChange = (e) => {\\n        setSelectedCity1(e.value);\\n    }\\n\\n    const onCityChange2 = (e) => {\\n        setSelectedCity2(e.value);\\n    }\\n\\n    const onCountryChange = (e) => {\\n        setSelectedCountry(e.value);\\n    }\\n\\n    const selectedCountryTemplate = (option, props) => {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return (\\n            <span>\\n                {props.placeholder}\\n            </span>\\n        );\\n    }\\n\\n    const countryOptionTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div className=\\\"dropdown-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Dropdown value={selectedCity1} options={cities} onChange={onCityChange} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                <h5>Editable</h5>\\n                <Dropdown value={selectedCity2} options={cities} onChange={onCityChange2} optionLabel=\\\"name\\\" editable />\\n\\n                <h5>Advanced with Templating, Filtering and Clear Icon</h5>\\n                <Dropdown value={selectedCountry} options={countries} onChange={onCountryChange} optionLabel=\\\"name\\\" filter showClear filterBy=\\\"name\\\" placeholder=\\\"Select a Country\\\"\\n                    valueTemplate={selectedCountryTemplate} itemTemplate={countryOptionTemplate} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Dropdown } from 'primereact/dropdown';\\nimport './DropdownDemo.css';\\n\\nconst DropdownDemo = () => {\\n    const [selectedCity1, setSelectedCity1] = useState<any>(null);\\n    const [selectedCity2, setSelectedCity2] = useState<any>(null);\\n    const [selectedCountry, setSelectedCountry] = useState<any>(null);\\n    const cities = [\\n        { name: 'New York', code: 'NY' },\\n        { name: 'Rome', code: 'RM' },\\n        { name: 'London', code: 'LDN' },\\n        { name: 'Istanbul', code: 'IST' },\\n        { name: 'Paris', code: 'PRS' }\\n    ];\\n    const countries = [\\n        {name: 'Australia', code: 'AU'},\\n        {name: 'Brazil', code: 'BR'},\\n        {name: 'China', code: 'CN'},\\n        {name: 'Egypt', code: 'EG'},\\n        {name: 'France', code: 'FR'},\\n        {name: 'Germany', code: 'DE'},\\n        {name: 'India', code: 'IN'},\\n        {name: 'Japan', code: 'JP'},\\n        {name: 'Spain', code: 'ES'},\\n        {name: 'United States', code: 'US'}\\n    ];\\n\\n    const onCityChange = (e: { value: any }) => {\\n        setSelectedCity1(e.value);\\n    }\\n\\n    const onCityChange2 = (e: { value: any }) => {\\n        setSelectedCity2(e.value);\\n    }\\n\\n    const onCountryChange = (e: { value: any }) => {\\n        setSelectedCountry(e.value);\\n    }\\n\\n    const selectedCountryTemplate = (option: { name: string, code: string }, props: { placeholder: string }) => {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return (\\n            <span>\\n                {props.placeholder}\\n            </span>\\n        );\\n    }\\n\\n    const countryOptionTemplate = (option: any) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div className=\\\"dropdown-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Dropdown value={selectedCity1} options={cities} onChange={onCityChange} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                <h5>Editable</h5>\\n                <Dropdown value={selectedCity2} options={cities} onChange={onCityChange2} optionLabel=\\\"name\\\" editable />\\n\\n                <h5>Advanced with Templating, Filtering and Clear Icon</h5>\\n                <Dropdown value={selectedCountry} options={countries} onChange={onCountryChange} optionLabel=\\\"name\\\" filter showClear filterBy=\\\"name\\\" placeholder=\\\"Select a Country\\\"\\n                    valueTemplate={selectedCountryTemplate} itemTemplate={countryOptionTemplate} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};_this.extFiles={'src/demo/DropdownDemo.css':{content:\"\\n.dropdown-demo .p-dropdown {\\n    width: 14rem;\\n}\\n\\n.dropdown-demo .country-item-value img.flag {\\n    width: 17px;\\n}\\n                \"}};return _this;}_createClass(DropdownDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { Dropdown } from 'primereact/dropdown';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"SelectButton is used as a controlled component with \",/*#__PURE__*/React.createElement(\"i\",null,\"value\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onChange\"),\" properties along with the options collection. There are two alternatives of how to define the options property; One way is providing a collection of \",/*#__PURE__*/React.createElement(\"i\",null,\"SelectItem\"),\" instances having label-value pairs whereas other way is providing an array of arbitrary objects along with the \",/*#__PURE__*/React.createElement(\"i\",null,\"optionLabel\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"optionValue\"),\" properties to specify the label/value field pair. In addition, options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Options as SelectItems\")),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst citySelectItems = [\\n    {label: 'New York', value: 'NY'},\\n    {label: 'Rome', value: 'RM'},\\n    {label: 'London', value: 'LDN'},\\n    {label: 'Istanbul', value: 'IST'},\\n    {label: 'Paris', value: 'PRS'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Dropdown value={city} options={citySelectItems} onChange={(e) => setCity(e.value)} placeholder=\\\"Select a City\\\"/>\\n\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Options as any type\")),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst cities = [\\n    {name: 'New York', code: 'NY'},\\n    {name: 'Rome', code: 'RM'},\\n    {name: 'London', code: 'LDN'},\\n    {name: 'Istanbul', code: 'IST'},\\n    {name: 'Paris', code: 'PRS'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Dropdown optionLabel=\\\"name\\\" value={city} options={cities} onChange={(e) => setCity(e.value)} placeholder=\\\"Select a City\\\"/>\\n<Dropdown optionLabel=\\\"name\\\" optionValue=\\\"code\\\" value={city} options={cities} onChange={(e) => setCity(e.value)} placeholder=\\\"Select a City\\\"/>\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"When \",/*#__PURE__*/React.createElement(\"i\",null,\"optionValue\"),\" is not defined, value of an option refers to the option object itself.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Placeholder\"),/*#__PURE__*/React.createElement(\"p\",null,\"Common pattern is providing an empty option as the placeholder when using native selects, however Dropdown has built-in support using the placeholder option so it is suggested to use it instead of creating an empty option.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Filtering\"),/*#__PURE__*/React.createElement(\"p\",null,\"Options can be filtered using an input field in the overlay by enabling the \",/*#__PURE__*/React.createElement(\"i\",null,\"filter\"),\" property. By default filtering is done against label of the items and \",/*#__PURE__*/React.createElement(\"i\",null,\"filterBy\"),\" property is available to choose one or more properties of the options. In addition \",/*#__PURE__*/React.createElement(\"i\",null,\"filterMatchMode\"),\" can be utilized to define the filtering algorithm, valid options are \\\"contains\\\" (default), \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\" and \\\"notEquals\\\".\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Dropdown value={selectedCountry} options={countries} onChange={(e) => setSelectedCountry(e.value)} optionLabel=\\\"name\\\" filter showClear filterBy=\\\"name\\\"\\n    placeholder=\\\"Select a Country\\\" itemTemplate={countryOptionTemplate} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Custom Content\"),/*#__PURE__*/React.createElement(\"p\",null,\"Label of an option is used as the display text of an item by default, for custom content support define an \",/*#__PURE__*/React.createElement(\"i\",null,\"itemTemplate\"),\" function that gets the option instance as a parameter and returns the content.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Dropdown value={selectedCountry} options={countries} onChange={(e) => setSelectedCountry(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a Country\\\"\\n    valueTemplate={selectedCountryTemplate} itemTemplate={countryOptionTemplate} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst selectedCountryTemplate = (option, props) => {\\n    if (option) {\\n        return (\\n            <div className=\\\"country-item country-item-value\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <span>\\n            {props.placeholder}\\n        </span>\\n    );\\n}\\n\\nconst countryOptionTemplate = (option) => {\\n    return (\\n        <div className=\\\"country-item\\\">\\n            <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" className={`flag flag-${option.code.toLowerCase()}`} />\\n            <div>{option.name}</div>\\n        </div>\\n    );\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"SelectItem API\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"label\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"ClassName of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"title\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Tooltip text of the option. (Not supported)\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether the option is disabled or not.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"name\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the input element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"options\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"An array of selectitems to display as the available options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"optionLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the label field of an option when arbitrary objects are used as options instead of SelectItems.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"optionValue\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the value field of an option when arbitrary objects are used as options instead of SelectItems.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"valueTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"The template of selected item.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"itemTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"The template of items.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"scrollHeight\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"200px\"),/*#__PURE__*/React.createElement(\"td\",null,\"Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filter\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When specified, displays an input field to filter the items on keyup.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"label\"),/*#__PURE__*/React.createElement(\"td\",null,\"When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterMatchMode\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"contains\"),/*#__PURE__*/React.createElement(\"td\",null,\"Defines how the items are filtered, valid values are \\\"contains\\\" (default), \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\" and \\\"notEquals\\\".\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterPlaceholder\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Placeholder text to show when filter input is empty.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterLocale\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"undefined\"),/*#__PURE__*/React.createElement(\"td\",null,\"Locale to use in filtering. The default locale is the host environment's current locale.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"emptyFilterMessage\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"No results found\"),/*#__PURE__*/React.createElement(\"td\",null,\"Template to display when filtering does not return any results.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"resetFilterOnHide\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Clears the filter value when hiding the dropdown.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"editable\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, custom value instead of predefined options can be entered using the editable input field.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"placeholder\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Default text to display when no option is selected.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"required\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that an input field must be filled out before submitting the form.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the component should be disabled.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"appendTo\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element instance where the dialog should be mounted.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tabIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Index of the element in tabbing order.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"autoFocus\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the component should automatically get focus on load.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterInputAutoFocus\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"When the panel is opened, it specifies that the filter input should focus automatically.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"panelClassName\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the overlay panel element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"panelStyle\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the overlay panel element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"dataKey\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"A property to uniquely match the value in options for better performance.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"inputId\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Identifier of the focusable input.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"showClear\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When enabled, a clear icon is displayed to clear the value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"maxLength\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Maximum number of characters to be typed on an editable input.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Used to define a string that labels the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaLabelledBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Contains the element IDs of labels.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Original event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.value: Value of the checkbox \"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke on value change\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onMouseDown\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke to when a mouse button is pressed.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onContextMenu\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke on right-click.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onFocus\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the element receives focus.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onBlur\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the element loses focus.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Methods\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"checkValidity\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Checks whether the native hidden select element has any constraints and returns a boolean for the result.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"resetFilter\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Reset the options filter.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-label\"),/*#__PURE__*/React.createElement(\"td\",null,\"Element to display label of selected option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-trigger\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-panel\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-items-wrapper\"),/*#__PURE__*/React.createElement(\"td\",null,\"Wrapper element of items list.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-items\"),/*#__PURE__*/React.createElement(\"td\",null,\"List element of items.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-item\"),/*#__PURE__*/React.createElement(\"td\",null,\"An item in the list.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-filter-container\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container of filter input.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-filter\"),/*#__PURE__*/React.createElement(\"td\",null,\"Filter element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-dropdown-open\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element when overlay is visible.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'DropdownDemo',sources:this.sources,extFiles:this.extFiles})));}}]);return DropdownDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/dropdown/DropdownDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","DropdownDoc","props","sources","tabName","content","extFiles","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class DropdownDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport './DropdownDemo.css';\r\n\r\nexport class DropdownDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedCity1: null,\r\n            selectedCity2: null,\r\n            selectedCountry: null\r\n        };\r\n\r\n        this.cities = [\r\n            { name: 'New York', code: 'NY' },\r\n            { name: 'Rome', code: 'RM' },\r\n            { name: 'London', code: 'LDN' },\r\n            { name: 'Istanbul', code: 'IST' },\r\n            { name: 'Paris', code: 'PRS' }\r\n        ];\r\n\r\n        this.countries = [\r\n            {name: 'Australia', code: 'AU'},\r\n            {name: 'Brazil', code: 'BR'},\r\n            {name: 'China', code: 'CN'},\r\n            {name: 'Egypt', code: 'EG'},\r\n            {name: 'France', code: 'FR'},\r\n            {name: 'Germany', code: 'DE'},\r\n            {name: 'India', code: 'IN'},\r\n            {name: 'Japan', code: 'JP'},\r\n            {name: 'Spain', code: 'ES'},\r\n            {name: 'United States', code: 'US'}\r\n        ];\r\n\r\n        this.onCityChange = this.onCityChange.bind(this);\r\n        this.onCityChange2 = this.onCityChange2.bind(this);\r\n        this.onCountryChange = this.onCountryChange.bind(this);\r\n    }\r\n\r\n    onCityChange(e) {\r\n        this.setState({ selectedCity1: e.value });\r\n    }\r\n\r\n    onCityChange2(e) {\r\n        this.setState({ selectedCity2: e.value });\r\n    }\r\n\r\n    onCountryChange(e) {\r\n        this.setState({ selectedCountry: e.value });\r\n    }\r\n\r\n    selectedCountryTemplate(option, props) {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                {props.placeholder}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    countryOptionTemplate(option) {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dropdown-demo\">\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <Dropdown value={this.state.selectedCity1} options={this.cities} onChange={this.onCityChange} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                    <h5>Editable</h5>\r\n                    <Dropdown value={this.state.selectedCity2} options={this.cities} onChange={this.onCityChange2} optionLabel=\"name\" editable />\r\n\r\n                    <h5>Advanced with Templating, Filtering and Clear Icon</h5>\r\n                    <Dropdown value={this.state.selectedCountry} options={this.countries} onChange={this.onCountryChange} optionLabel=\"name\" filter showClear filterBy=\"name\" placeholder=\"Select a Country\"\r\n                        valueTemplate={this.selectedCountryTemplate} itemTemplate={this.countryOptionTemplate} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport './DropdownDemo.css';\r\n\r\nconst DropdownDemo = () => {\r\n    const [selectedCity1, setSelectedCity1] = useState(null);\r\n    const [selectedCity2, setSelectedCity2] = useState(null);\r\n    const [selectedCountry, setSelectedCountry] = useState(null);\r\n    const cities = [\r\n        { name: 'New York', code: 'NY' },\r\n        { name: 'Rome', code: 'RM' },\r\n        { name: 'London', code: 'LDN' },\r\n        { name: 'Istanbul', code: 'IST' },\r\n        { name: 'Paris', code: 'PRS' }\r\n    ];\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n\r\n    const onCityChange = (e) => {\r\n        setSelectedCity1(e.value);\r\n    }\r\n\r\n    const onCityChange2 = (e) => {\r\n        setSelectedCity2(e.value);\r\n    }\r\n\r\n    const onCountryChange = (e) => {\r\n        setSelectedCountry(e.value);\r\n    }\r\n\r\n    const selectedCountryTemplate = (option, props) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                {props.placeholder}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const countryOptionTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropdown-demo\">\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Dropdown value={selectedCity1} options={cities} onChange={onCityChange} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                <h5>Editable</h5>\r\n                <Dropdown value={selectedCity2} options={cities} onChange={onCityChange2} optionLabel=\"name\" editable />\r\n\r\n                <h5>Advanced with Templating, Filtering and Clear Icon</h5>\r\n                <Dropdown value={selectedCountry} options={countries} onChange={onCountryChange} optionLabel=\"name\" filter showClear filterBy=\"name\" placeholder=\"Select a Country\"\r\n                    valueTemplate={selectedCountryTemplate} itemTemplate={countryOptionTemplate} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport './DropdownDemo.css';\r\n\r\nconst DropdownDemo = () => {\r\n    const [selectedCity1, setSelectedCity1] = useState<any>(null);\r\n    const [selectedCity2, setSelectedCity2] = useState<any>(null);\r\n    const [selectedCountry, setSelectedCountry] = useState<any>(null);\r\n    const cities = [\r\n        { name: 'New York', code: 'NY' },\r\n        { name: 'Rome', code: 'RM' },\r\n        { name: 'London', code: 'LDN' },\r\n        { name: 'Istanbul', code: 'IST' },\r\n        { name: 'Paris', code: 'PRS' }\r\n    ];\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n\r\n    const onCityChange = (e: { value: any }) => {\r\n        setSelectedCity1(e.value);\r\n    }\r\n\r\n    const onCityChange2 = (e: { value: any }) => {\r\n        setSelectedCity2(e.value);\r\n    }\r\n\r\n    const onCountryChange = (e: { value: any }) => {\r\n        setSelectedCountry(e.value);\r\n    }\r\n\r\n    const selectedCountryTemplate = (option: { name: string, code: string }, props: { placeholder: string }) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                {props.placeholder}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const countryOptionTemplate = (option: any) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropdown-demo\">\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Dropdown value={selectedCity1} options={cities} onChange={onCityChange} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                <h5>Editable</h5>\r\n                <Dropdown value={selectedCity2} options={cities} onChange={onCityChange2} optionLabel=\"name\" editable />\r\n\r\n                <h5>Advanced with Templating, Filtering and Clear Icon</h5>\r\n                <Dropdown value={selectedCountry} options={countries} onChange={onCountryChange} optionLabel=\"name\" filter showClear filterBy=\"name\" placeholder=\"Select a Country\"\r\n                    valueTemplate={selectedCountryTemplate} itemTemplate={countryOptionTemplate} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/DropdownDemo.css': {\r\n                content: `\r\n.dropdown-demo .p-dropdown {\r\n    width: 14rem;\r\n}\r\n\r\n.dropdown-demo .country-item-value img.flag {\r\n    width: 17px;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Dropdown } from 'primereact/dropdown';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>SelectButton is used as a controlled component with <i>value</i> and <i>onChange</i> properties along with the options collection. There are two alternatives\r\n                        of how to define the options property; One way is providing a collection of <i>SelectItem</i> instances having label-value pairs\r\n                        whereas other way is providing an array of arbitrary objects along with the <i>optionLabel</i> and <i>optionValue</i> properties to specify the label/value field pair. In addition,\r\n                        options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.</p>\r\n\r\n                        <p><b>Options as SelectItems</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst citySelectItems = [\r\n    {label: 'New York', value: 'NY'},\r\n    {label: 'Rome', value: 'RM'},\r\n    {label: 'London', value: 'LDN'},\r\n    {label: 'Istanbul', value: 'IST'},\r\n    {label: 'Paris', value: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Dropdown value={city} options={citySelectItems} onChange={(e) => setCity(e.value)} placeholder=\"Select a City\"/>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <p><b>Options as any type</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst cities = [\r\n    {name: 'New York', code: 'NY'},\r\n    {name: 'Rome', code: 'RM'},\r\n    {name: 'London', code: 'LDN'},\r\n    {name: 'Istanbul', code: 'IST'},\r\n    {name: 'Paris', code: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Dropdown optionLabel=\"name\" value={city} options={cities} onChange={(e) => setCity(e.value)} placeholder=\"Select a City\"/>\r\n<Dropdown optionLabel=\"name\" optionValue=\"code\" value={city} options={cities} onChange={(e) => setCity(e.value)} placeholder=\"Select a City\"/>\r\n`}\r\n</CodeHighlight>\r\n                        <p>When <i>optionValue</i> is not defined, value of an option refers to the option object itself.</p>\r\n\r\n                        <h5>Placeholder</h5>\r\n                        <p>Common pattern is providing an empty option as the placeholder when using native selects, however Dropdown has built-in support using the placeholder option so it is suggested to use it instead of creating an empty option.</p>\r\n\r\n                        <h5>Filtering</h5>\r\n                        <p>Options can be filtered using an input field in the overlay by enabling the <i>filter</i> property. By default filtering is done against\r\n                            label of the items and <i>filterBy</i> property is available to choose one or more properties of the options. In addition <i>filterMatchMode</i> can be utilized\r\n                            to define the filtering algorithm, valid options are \"contains\" (default), \"startsWith\", \"endsWith\", \"equals\" and \"notEquals\".</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Dropdown value={selectedCountry} options={countries} onChange={(e) => setSelectedCountry(e.value)} optionLabel=\"name\" filter showClear filterBy=\"name\"\r\n    placeholder=\"Select a Country\" itemTemplate={countryOptionTemplate} />\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Custom Content</h5>\r\n                        <p>Label of an option is used as the display text of an item by default, for custom content support define an <i>itemTemplate</i> function that gets the option instance as a parameter and returns the content.</p>\r\n<CodeHighlight>\r\n{`\r\n<Dropdown value={selectedCountry} options={countries} onChange={(e) => setSelectedCountry(e.value)} optionLabel=\"name\" placeholder=\"Select a Country\"\r\n    valueTemplate={selectedCountryTemplate} itemTemplate={countryOptionTemplate} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst selectedCountryTemplate = (option, props) => {\r\n    if (option) {\r\n        return (\r\n            <div className=\"country-item country-item-value\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            {props.placeholder}\r\n        </span>\r\n    );\r\n}\r\n\r\nconst countryOptionTemplate = (option) => {\r\n    return (\r\n        <div className=\"country-item\">\r\n            <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n            <div>{option.name}</div>\r\n        </div>\r\n    );\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>SelectItem API</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>label</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Label of the option.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>value</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Value of the option.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>ClassName of the option.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>title</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Tooltip text of the option. (Not supported)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>disabled</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Whether the option is disabled or not.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>name</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Name of the input element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>value</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Value of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>options</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of selectitems to display as the available options.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>optionLabel</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Name of the label field of an option when arbitrary objects are used as options instead of SelectItems.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>optionValue</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Name of the value field of an option when arbitrary objects are used as options instead of SelectItems.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>valueTemplate</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>The template of selected item.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>itemTemplate</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>The template of items.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>scrollHeight</td>\r\n                                        <td>string</td>\r\n                                        <td>200px</td>\r\n                                        <td>Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filter</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When specified, displays an input field to filter the items on keyup.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterBy</td>\r\n                                        <td>string</td>\r\n                                        <td>label</td>\r\n                                        <td>When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterMatchMode</td>\r\n                                        <td>string</td>\r\n                                        <td>contains</td>\r\n                                        <td>Defines how the items are filtered, valid values are \"contains\" (default), \"startsWith\", \"endsWith\", \"equals\" and \"notEquals\".</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterPlaceholder</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Placeholder text to show when filter input is empty.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterLocale</td>\r\n                                        <td>string</td>\r\n                                        <td>undefined</td>\r\n                                        <td>Locale to use in filtering. The default locale is the host environment's current locale.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>emptyFilterMessage</td>\r\n                                        <td>any</td>\r\n                                        <td>No results found</td>\r\n                                        <td>Template to display when filtering does not return any results.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>resetFilterOnHide</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Clears the filter value when hiding the dropdown.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>editable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, custom value instead of predefined options can be entered using the editable input field.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>placeholder</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Default text to display when no option is selected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>required</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that an input field must be filled out before submitting the form.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>disabled</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the component should be disabled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>appendTo</td>\r\n                                        <td>DOM element</td>\r\n                                        <td>null</td>\r\n                                        <td>DOM element instance where the dialog should be mounted.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tabIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Index of the element in tabbing order.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>autoFocus</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the component should automatically get focus on load.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterInputAutoFocus</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>When the panel is opened, it specifies that the filter input should focus automatically.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>panelClassName</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the overlay panel element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>panelStyle</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the overlay panel element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>dataKey</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>A property to uniquely match the value in options for better performance.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>inputId</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Identifier of the focusable input.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>showClear</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When enabled, a clear icon is displayed to clear the value.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>maxLength</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Maximum number of characters to be typed on an editable input.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltip</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Content of the tooltip.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltipOptions</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>ariaLabel</td>\r\n                                        <td>string</td>\r\n                                        <td>false</td>\r\n                                        <td>Used to define a string that labels the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>ariaLabelledBy</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Contains the element IDs of labels.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onChange</td>\r\n                                        <td>event.originalEvent: Original event <br />\r\n                                            event.value: Value of the checkbox </td>\r\n                                        <td>Callback to invoke on value change</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onMouseDown</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Callback to invoke to when a mouse button is pressed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onContextMenu</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Callback to invoke on right-click.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onFocus</td>\r\n                                        <td>event: Browser event.</td>\r\n                                        <td>Callback to invoke when the element receives focus.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onBlur</td>\r\n                                        <td>event: Browser event.</td>\r\n                                        <td>Callback to invoke when the element loses focus.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Methods</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>checkValidity</td>\r\n                                        <td>-</td>\r\n                                        <td>Checks whether the native hidden select element has any constraints and returns a boolean for the result.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>resetFilter</td>\r\n                                        <td>-</td>\r\n                                        <td>Reset the options filter.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-dropdown</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-label</td>\r\n                                        <td>Element to display label of selected option.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-trigger</td>\r\n                                        <td>Icon element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-panel</td>\r\n                                        <td>Icon element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-items-wrapper</td>\r\n                                        <td>Wrapper element of items list.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-items</td>\r\n                                        <td>List element of items.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-item</td>\r\n                                        <td>An item in the list.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-filter-container</td>\r\n                                        <td>Container of filter input.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-filter</td>\r\n                                        <td>Filter element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-dropdown-open</td>\r\n                                        <td>Container element when overlay is visible.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DropdownDemo', sources: this.sources, extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}