{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{classNames}from'../utils/ClassNames';import UniqueComponentId from'../utils/UniqueComponentId';import{CSSTransition}from'react-transition-group';import{Ripple}from'../ripple/Ripple';export var Fieldset=/*#__PURE__*/function(_Component){_inherits(Fieldset,_Component);var _super=_createSuper(Fieldset);function Fieldset(props){var _this;_classCallCheck(this,Fieldset);_this=_super.call(this,props);if(!_this.props.onToggle){_this.state={collapsed:_this.props.collapsed};}_this.toggle=_this.toggle.bind(_assertThisInitialized(_this));_this.id=_this.props.id||UniqueComponentId();_this.contentRef=React.createRef();return _this;}_createClass(Fieldset,[{key:\"toggle\",value:function toggle(event){if(this.props.toggleable){var collapsed=this.props.onToggle?this.props.collapsed:this.state.collapsed;if(collapsed)this.expand(event);else this.collapse(event);if(this.props.onToggle){this.props.onToggle({originalEvent:event,value:!collapsed});}}event.preventDefault();}},{key:\"expand\",value:function expand(event){if(!this.props.onToggle){this.setState({collapsed:false});}if(this.props.onExpand){this.props.onExpand(event);}}},{key:\"collapse\",value:function collapse(event){if(!this.props.onToggle){this.setState({collapsed:true});}if(this.props.onCollapse){this.props.onCollapse(event);}}},{key:\"isCollapsed\",value:function isCollapsed(){return this.props.toggleable?this.props.onToggle?this.props.collapsed:this.state.collapsed:false;}},{key:\"renderContent\",value:function renderContent(collapsed){var id=this.id+'_content';return/*#__PURE__*/React.createElement(CSSTransition,{nodeRef:this.contentRef,classNames:\"p-toggleable-content\",timeout:{enter:1000,exit:450},in:!collapsed,unmountOnExit:true},/*#__PURE__*/React.createElement(\"div\",{ref:this.contentRef,id:id,className:\"p-toggleable-content\",\"aria-hidden\":collapsed,role:\"region\",\"aria-labelledby\":this.id+'_header'},/*#__PURE__*/React.createElement(\"div\",{className:\"p-fieldset-content\"},this.props.children)));}},{key:\"renderToggleIcon\",value:function renderToggleIcon(collapsed){if(this.props.toggleable){var className=classNames('p-fieldset-toggler pi',{'pi-plus':collapsed,'pi-minus':!collapsed});return/*#__PURE__*/React.createElement(\"span\",{className:className});}return null;}},{key:\"renderLegendContent\",value:function renderLegendContent(collapsed){if(this.props.toggleable){var toggleIcon=this.renderToggleIcon(collapsed);var ariaControls=this.id+'_content';return/*#__PURE__*/React.createElement(\"a\",{href:'#'+ariaControls,\"aria-controls\":ariaControls,id:this.id+'_header',\"aria-expanded\":!collapsed,tabIndex:this.props.toggleable?null:-1},toggleIcon,/*#__PURE__*/React.createElement(\"span\",{className:\"p-fieldset-legend-text\"},this.props.legend),/*#__PURE__*/React.createElement(Ripple,null));}return/*#__PURE__*/React.createElement(\"span\",{className:\"p-fieldset-legend-text\",id:this.id+'_header'},this.props.legend);}},{key:\"renderLegend\",value:function renderLegend(collapsed){var legendContent=this.renderLegendContent(collapsed);return/*#__PURE__*/React.createElement(\"legend\",{className:\"p-fieldset-legend p-unselectable-text\",onClick:this.toggle},legendContent);}},{key:\"render\",value:function render(){var className=classNames('p-fieldset p-component',this.props.className,{'p-fieldset-toggleable':this.props.toggleable});var collapsed=this.isCollapsed();var legend=this.renderLegend(collapsed);var content=this.renderContent(collapsed);return/*#__PURE__*/React.createElement(\"fieldset\",{id:this.props.id,className:className,style:this.props.style,onClick:this.props.onClick},legend,content);}}]);return Fieldset;}(Component);Fieldset.defaultProps={id:null,legend:null,className:null,style:null,toggleable:null,collapsed:null,onExpand:null,onCollapse:null,onToggle:null,onClick:null};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/fieldset/Fieldset.js"],"names":["React","Component","classNames","UniqueComponentId","CSSTransition","Ripple","Fieldset","props","onToggle","state","collapsed","toggle","bind","id","contentRef","createRef","event","toggleable","expand","collapse","originalEvent","value","preventDefault","setState","onExpand","onCollapse","enter","exit","children","className","toggleIcon","renderToggleIcon","ariaControls","legend","legendContent","renderLegendContent","isCollapsed","renderLegend","content","renderContent","style","onClick","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Ripple } from '../ripple/Ripple';\r\n\r\nexport class Fieldset extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        legend: null,\r\n        className: null,\r\n        style: null,\r\n        toggleable: null,\r\n        collapsed: null,\r\n        onExpand: null,\r\n        onCollapse: null,\r\n        onToggle: null,\r\n        onClick: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        legend: PropTypes.any,\r\n        className: PropTypes.string,\r\n        style: PropTypes.object,\r\n        toggleable: PropTypes.bool,\r\n        collapsed: PropTypes.bool,\r\n        onExpand: PropTypes.func,\r\n        onCollapse: PropTypes.func,\r\n        onToggle: PropTypes.func,\r\n        onClick: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (!this.props.onToggle) {\r\n            this.state = {\r\n                collapsed: this.props.collapsed\r\n            };\r\n        }\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.contentRef = React.createRef();\r\n    }\r\n\r\n    toggle(event) {\r\n        if (this.props.toggleable) {\r\n            const collapsed = this.props.onToggle ? this.props.collapsed : this.state.collapsed;\r\n\r\n            if (collapsed)\r\n                this.expand(event);\r\n            else\r\n                this.collapse(event);\r\n\r\n            if (this.props.onToggle) {\r\n                this.props.onToggle({\r\n                    originalEvent: event,\r\n                    value: !collapsed\r\n                });\r\n            }\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    expand(event) {\r\n        if (!this.props.onToggle) {\r\n            this.setState({ collapsed: false });\r\n        }\r\n\r\n        if (this.props.onExpand) {\r\n            this.props.onExpand(event);\r\n        }\r\n    }\r\n\r\n    collapse(event) {\r\n        if (!this.props.onToggle) {\r\n            this.setState({ collapsed: true });\r\n        }\r\n\r\n        if (this.props.onCollapse) {\r\n            this.props.onCollapse(event);\r\n        }\r\n    }\r\n\r\n    isCollapsed() {\r\n        return this.props.toggleable ? (this.props.onToggle ? this.props.collapsed : this.state.collapsed) : false;\r\n    }\r\n\r\n    renderContent(collapsed) {\r\n        const id = this.id + '_content';\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.contentRef} classNames=\"p-toggleable-content\" timeout={{ enter: 1000, exit: 450 }} in={!collapsed} unmountOnExit>\r\n                <div ref={this.contentRef} id={id} className=\"p-toggleable-content\" aria-hidden={collapsed} role=\"region\" aria-labelledby={this.id + '_header'}>\r\n                    <div className=\"p-fieldset-content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    renderToggleIcon(collapsed) {\r\n        if (this.props.toggleable) {\r\n            const className = classNames('p-fieldset-toggler pi', { 'pi-plus': collapsed, 'pi-minus': !collapsed });\r\n\r\n            return (\r\n                <span className={className}></span>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderLegendContent(collapsed) {\r\n        if (this.props.toggleable) {\r\n            const toggleIcon = this.renderToggleIcon(collapsed);\r\n            const ariaControls = this.id + '_content';\r\n\r\n            return (\r\n                <a href={'#' + ariaControls} aria-controls={ariaControls} id={this.id + '_header'} aria-expanded={!collapsed} tabIndex={this.props.toggleable ? null : -1}>\r\n                    {toggleIcon}\r\n                    <span className=\"p-fieldset-legend-text\">{this.props.legend}</span>\r\n                    <Ripple />\r\n                </a>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span className=\"p-fieldset-legend-text\" id={this.id + '_header'}>{this.props.legend}</span>\r\n        );\r\n    }\r\n\r\n    renderLegend(collapsed) {\r\n        const legendContent = this.renderLegendContent(collapsed);\r\n\r\n        return (\r\n            <legend className=\"p-fieldset-legend p-unselectable-text\" onClick={this.toggle}>\r\n                {legendContent}\r\n            </legend>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-fieldset p-component', this.props.className, { 'p-fieldset-toggleable': this.props.toggleable });\r\n        const collapsed = this.isCollapsed();\r\n        const legend = this.renderLegend(collapsed);\r\n        const content = this.renderContent(collapsed);\r\n\r\n        return (\r\n            <fieldset id={this.props.id} className={className} style={this.props.style} onClick={this.props.onClick}>\r\n                {legend}\r\n                {content}\r\n            </fieldset>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}