{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView}from'../../components/tabview/TabView';import{Chart}from'../../components/chart/Chart';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import AppContentContext from'../../AppContentContext';export var ComboChartDemo=/*#__PURE__*/function(_Component){_inherits(ComboChartDemo,_Component);var _super=_createSuper(ComboChartDemo);function ComboChartDemo(props){var _this;_classCallCheck(this,ComboChartDemo);_this=_super.call(this,props);_this.chartData={labels:['January','February','March','April','May','June','July'],datasets:[{type:'line',label:'Dataset 1',borderColor:'#42A5F5',borderWidth:2,fill:false,data:[50,25,12,48,56,76,42]},{type:'bar',label:'Dataset 2',backgroundColor:'#66BB6A',data:[21,84,24,75,37,65,34],borderColor:'white',borderWidth:2},{type:'bar',label:'Dataset 3',backgroundColor:'#FFA726',data:[41,52,24,74,23,21,32]}]};_this.lightOptions={legend:{labels:{fontColor:'#495057'}},scales:{xAxes:[{ticks:{fontColor:'#495057'}}],yAxes:[{ticks:{fontColor:'#495057'}}]}};_this.darkOptions={legend:{labels:{fontColor:'#ebedef'}},scales:{xAxes:[{ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}],yAxes:[{ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}]}};return _this;}_createClass(ComboChartDemo,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"chart\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Combo Chart\"),/*#__PURE__*/React.createElement(\"p\",null,\"Different chart types can be combined in the same graph.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(AppContentContext.Consumer,null,function(context){var options=context.darkTheme?_this2.darkOptions:_this2.lightOptions;return/*#__PURE__*/React.createElement(Chart,{type:\"bar\",data:_this2.chartData,options:options});}))),/*#__PURE__*/React.createElement(ComboChartDemoDoc,null));}}]);return ComboChartDemo;}(Component);export var ComboChartDemoDoc=/*#__PURE__*/function(_Component2){_inherits(ComboChartDemoDoc,_Component2);var _super2=_createSuper(ComboChartDemoDoc);function ComboChartDemoDoc(props){var _this3;_classCallCheck(this,ComboChartDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class ComboChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.chartData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [{\\n                type: 'line',\\n                label: 'Dataset 1',\\n                borderColor: '#42A5F5',\\n                borderWidth: 2,\\n                fill: false,\\n                data: [\\n                    50,\\n                    25,\\n                    12,\\n                    48,\\n                    56,\\n                    76,\\n                    42\\n                ]\\n            }, {\\n                type: 'bar',\\n                label: 'Dataset 2',\\n                backgroundColor: '#66BB6A',\\n                data: [\\n                    21,\\n                    84,\\n                    24,\\n                    75,\\n                    37,\\n                    65,\\n                    34\\n                ],\\n                borderColor: 'white',\\n                borderWidth: 2\\n            }, {\\n                type: 'bar',\\n                label: 'Dataset 3',\\n                backgroundColor: '#FFA726',\\n                data: [\\n                    41,\\n                    52,\\n                    24,\\n                    74,\\n                    23,\\n                    21,\\n                    32\\n                ]\\n            }]\\n        };\\n\\n        this.lightOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"card\\\">\\n                <Chart type=\\\"bar\\\" data={this.chartData} options={this.lightOptions} />\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst ComboChartDemo = () => {\\n    const chartData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            type: 'line',\\n            label: 'Dataset 1',\\n            borderColor: '#42A5F5',\\n            borderWidth: 2,\\n            fill: false,\\n            data: [\\n                50,\\n                25,\\n                12,\\n                48,\\n                56,\\n                76,\\n                42\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 2',\\n            backgroundColor: '#66BB6A',\\n            data: [\\n                21,\\n                84,\\n                24,\\n                75,\\n                37,\\n                65,\\n                34\\n            ],\\n            borderColor: 'white',\\n            borderWidth: 2\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 3',\\n            backgroundColor: '#FFA726',\\n            data: [\\n                41,\\n                52,\\n                24,\\n                74,\\n                23,\\n                21,\\n                32\\n            ]\\n        }]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scales: {\\n            xAxes: [{\\n                ticks: {\\n                    fontColor: '#495057'\\n                }\\n            }],\\n            yAxes: [{\\n                ticks: {\\n                    fontColor: '#495057'\\n                }\\n            }]\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"bar\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst ComboChartDemo = () => {\\n    const chartData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            type: 'line',\\n            label: 'Dataset 1',\\n            borderColor: '#42A5F5',\\n            borderWidth: 2,\\n            fill: false,\\n            data: [\\n                50,\\n                25,\\n                12,\\n                48,\\n                56,\\n                76,\\n                42\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 2',\\n            backgroundColor: '#66BB6A',\\n            data: [\\n                21,\\n                84,\\n                24,\\n                75,\\n                37,\\n                65,\\n                34\\n            ],\\n            borderColor: 'white',\\n            borderWidth: 2\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 3',\\n            backgroundColor: '#FFA726',\\n            data: [\\n                41,\\n                52,\\n                24,\\n                74,\\n                23,\\n                21,\\n                32\\n            ]\\n        }]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scales: {\\n            xAxes: [{\\n                ticks: {\\n                    fontColor: '#495057'\\n                }\\n            }],\\n            yAxes: [{\\n                ticks: {\\n                    fontColor: '#495057'\\n                }\\n            }]\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"bar\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    )\\n}\\n                \"}};return _this3;}_createClass(ComboChartDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'ComboChartDemo',sources:this.sources,dependencies:{'chart.js':'2.7.3'}})));}}]);return ComboChartDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/chart/ComboChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","ComboChartDemo","props","chartData","labels","datasets","type","label","borderColor","borderWidth","fill","data","backgroundColor","lightOptions","legend","fontColor","scales","xAxes","ticks","yAxes","darkOptions","gridLines","color","context","options","darkTheme","ComboChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class ComboChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                type: 'line',\r\n                label: 'Dataset 1',\r\n                borderColor: '#42A5F5',\r\n                borderWidth: 2,\r\n                fill: false,\r\n                data: [\r\n                    50,\r\n                    25,\r\n                    12,\r\n                    48,\r\n                    56,\r\n                    76,\r\n                    42\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#66BB6A',\r\n                data: [\r\n                    21,\r\n                    84,\r\n                    24,\r\n                    75,\r\n                    37,\r\n                    65,\r\n                    34\r\n                ],\r\n                borderColor: 'white',\r\n                borderWidth: 2\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 3',\r\n                backgroundColor: '#FFA726',\r\n                data: [\r\n                    41,\r\n                    52,\r\n                    24,\r\n                    74,\r\n                    23,\r\n                    21,\r\n                    32\r\n                ]\r\n            }]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        this.darkOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>Combo Chart</h1>\r\n                        <p>Different chart types can be combined in the same graph.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <AppContentContext.Consumer>\r\n                            {\r\n                                context => {\r\n                                    let options = context.darkTheme ? this.darkOptions : this.lightOptions;\r\n\r\n                                    return <Chart type=\"bar\" data={this.chartData} options={options} />\r\n                                }\r\n                            }\r\n                        </AppContentContext.Consumer>\r\n                    </div>\r\n                </div>\r\n\r\n                <ComboChartDemoDoc></ComboChartDemoDoc>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ComboChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class ComboChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                type: 'line',\r\n                label: 'Dataset 1',\r\n                borderColor: '#42A5F5',\r\n                borderWidth: 2,\r\n                fill: false,\r\n                data: [\r\n                    50,\r\n                    25,\r\n                    12,\r\n                    48,\r\n                    56,\r\n                    76,\r\n                    42\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#66BB6A',\r\n                data: [\r\n                    21,\r\n                    84,\r\n                    24,\r\n                    75,\r\n                    37,\r\n                    65,\r\n                    34\r\n                ],\r\n                borderColor: 'white',\r\n                borderWidth: 2\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 3',\r\n                backgroundColor: '#FFA726',\r\n                data: [\r\n                    41,\r\n                    52,\r\n                    24,\r\n                    74,\r\n                    23,\r\n                    21,\r\n                    32\r\n                ]\r\n            }]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <Chart type=\"bar\" data={this.chartData} options={this.lightOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst ComboChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            type: 'line',\r\n            label: 'Dataset 1',\r\n            borderColor: '#42A5F5',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            data: [\r\n                50,\r\n                25,\r\n                12,\r\n                48,\r\n                56,\r\n                76,\r\n                42\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#66BB6A',\r\n            data: [\r\n                21,\r\n                84,\r\n                24,\r\n                75,\r\n                37,\r\n                65,\r\n                34\r\n            ],\r\n            borderColor: 'white',\r\n            borderWidth: 2\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 3',\r\n            backgroundColor: '#FFA726',\r\n            data: [\r\n                41,\r\n                52,\r\n                24,\r\n                74,\r\n                23,\r\n                21,\r\n                32\r\n            ]\r\n        }]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }]\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"bar\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst ComboChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            type: 'line',\r\n            label: 'Dataset 1',\r\n            borderColor: '#42A5F5',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            data: [\r\n                50,\r\n                25,\r\n                12,\r\n                48,\r\n                56,\r\n                76,\r\n                42\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#66BB6A',\r\n            data: [\r\n                21,\r\n                84,\r\n                24,\r\n                75,\r\n                37,\r\n                65,\r\n                34\r\n            ],\r\n            borderColor: 'white',\r\n            borderWidth: 2\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 3',\r\n            backgroundColor: '#FFA726',\r\n            data: [\r\n                41,\r\n                52,\r\n                24,\r\n                74,\r\n                23,\r\n                21,\r\n                32\r\n            ]\r\n        }]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }]\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"bar\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'ComboChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}