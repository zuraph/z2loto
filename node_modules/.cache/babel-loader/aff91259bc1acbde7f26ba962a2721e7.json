{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'../../components/datatable/DataTable';import{Column}from'../../components/column/Column';import{Toast}from'../../components/toast/Toast';import{CustomerService}from'../service/CustomerService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import'./DataTableDemo.scss';export var DataTableRowGroupDemo=/*#__PURE__*/function(_Component){_inherits(DataTableRowGroupDemo,_Component);var _super=_createSuper(DataTableRowGroupDemo);function DataTableRowGroupDemo(props){var _this;_classCallCheck(this,DataTableRowGroupDemo);_this=_super.call(this,props);_this.state={customers:[],expandedRowGroups:[]};_this.customerService=new CustomerService();_this.headerTemplate=_this.headerTemplate.bind(_assertThisInitialized(_this));_this.footerTemplate=_this.footerTemplate.bind(_assertThisInitialized(_this));_this.countryBodyTemplate=_this.countryBodyTemplate.bind(_assertThisInitialized(_this));_this.statusBodyTemplate=_this.statusBodyTemplate.bind(_assertThisInitialized(_this));_this.representativeBodyTemplate=_this.representativeBodyTemplate.bind(_assertThisInitialized(_this));_this.onRowGroupExpand=_this.onRowGroupExpand.bind(_assertThisInitialized(_this));_this.onRowGroupCollapse=_this.onRowGroupCollapse.bind(_assertThisInitialized(_this));return _this;}_createClass(DataTableRowGroupDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.customerService.getCustomersMedium().then(function(data){return _this2.setState({customers:data});});}},{key:\"headerTemplate\",value:function headerTemplate(data){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{alt:data.representative.name,src:\"showcase/demo/images/avatar/\".concat(data.representative.image),onError:function onError(e){return e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';},width:\"32\",style:{verticalAlign:'middle'}}),/*#__PURE__*/React.createElement(\"span\",{className:\"image-text\"},data.representative.name));}},{key:\"footerTemplate\",value:function footerTemplate(data){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"td\",{colSpan:\"4\",style:{textAlign:'right'}},\"Total Customers\"),/*#__PURE__*/React.createElement(\"td\",null,this.calculateCustomerTotal(data.representative.name)));}},{key:\"countryBodyTemplate\",value:function countryBodyTemplate(rowData){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{alt:rowData.country.name,src:\"showcase/demo/images/flag_placeholder.png\",onError:function onError(e){return e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';},className:\"flag flag-\".concat(rowData.country.code),width:\"30\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"image-text\"},rowData.country.name));}},{key:\"statusBodyTemplate\",value:function statusBodyTemplate(rowData){return/*#__PURE__*/React.createElement(\"span\",{className:\"customer-badge status-\".concat(rowData.status)},rowData.status);}},{key:\"representativeBodyTemplate\",value:function representativeBodyTemplate(rowData){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{alt:rowData.representative.name,src:\"showcase/demo/images/avatar/\".concat(rowData.representative.image),onError:function onError(e){return e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';},width:\"32\",style:{verticalAlign:'middle'}}),/*#__PURE__*/React.createElement(\"span\",{className:\"image-text\"},rowData.representative.name));}},{key:\"onRowGroupExpand\",value:function onRowGroupExpand(event){this.toast.show({severity:'info',summary:'Row Group Expanded',detail:'Value: '+event.data.representative.name,life:3000});}},{key:\"onRowGroupCollapse\",value:function onRowGroupCollapse(event){this.toast.show({severity:'success',summary:'Row Group Collapsed',detail:'Value: '+event.data.representative.name,life:3000});}},{key:\"calculateCustomerTotal\",value:function calculateCustomerTotal(name){var total=0;if(this.state.customers){var _iterator=_createForOfIteratorHelper(this.state.customers),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var customer=_step.value;if(customer.representative.name===name){total++;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return total;}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"dataTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DataTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Row Grouping\")),/*#__PURE__*/React.createElement(\"p\",null,\"Rows can either be grouped by a separate grouping row or using rowspan.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation datatable-rowgroup-demo\"},/*#__PURE__*/React.createElement(Toast,{ref:function ref(el){return _this3.toast=el;}}),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Subheader Grouping\"),/*#__PURE__*/React.createElement(\"p\",null,\"Group customers by their representative.\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.customers,rowGroupMode:\"subheader\",groupField:\"representative.name\",sortMode:\"single\",sortField:\"representative.name\",sortOrder:1,rowGroupHeaderTemplate:this.headerTemplate,rowGroupFooterTemplate:this.footerTemplate},/*#__PURE__*/React.createElement(Column,{field:\"representative.name\",header:\"Representative\"}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\"}),/*#__PURE__*/React.createElement(Column,{field:\"country\",header:\"Country\",body:this.countryBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"company\",header:\"Company\"}),/*#__PURE__*/React.createElement(Column,{field:\"status\",header:\"Status\",body:this.statusBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"date\",header:\"Date\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Expandable Row Groups\"),/*#__PURE__*/React.createElement(\"p\",null,\"Group customers by their representative.\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.customers,rowGroupMode:\"subheader\",groupField:\"representative.name\",sortMode:\"single\",sortField:\"representative.name\",sortOrder:1,expandableRowGroups:true,expandedRows:this.state.expandedRows,onRowToggle:function onRowToggle(e){return _this3.setState({expandedRows:e.data});},onRowExpand:this.onRowGroupExpand,onRowCollapse:this.onRowGroupCollapse,rowGroupHeaderTemplate:this.headerTemplate,rowGroupFooterTemplate:this.footerTemplate},/*#__PURE__*/React.createElement(Column,{field:\"representative.name\",header:\"Representative\"}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\"}),/*#__PURE__*/React.createElement(Column,{field:\"country\",header:\"Country\",body:this.countryBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"company\",header:\"Company\"}),/*#__PURE__*/React.createElement(Column,{field:\"status\",header:\"Status\",body:this.statusBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"date\",header:\"Date\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"RowSpan Grouping\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.customers,rowGroupMode:\"rowspan\",groupField:\"representative.name\",sortMode:\"single\",sortField:\"representative.name\",sortOrder:1},/*#__PURE__*/React.createElement(Column,{header:\"#\",headerStyle:{width:'3em'},body:function body(data,props){return props.rowIndex+1;}}),/*#__PURE__*/React.createElement(Column,{field:\"representative.name\",header:\"Representative\",body:this.representativeBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\"}),/*#__PURE__*/React.createElement(Column,{field:\"country\",header:\"Country\",body:this.countryBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"company\",header:\"Company\"}),/*#__PURE__*/React.createElement(Column,{field:\"status\",header:\"Status\",body:this.statusBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"date\",header:\"Date\"})))),/*#__PURE__*/React.createElement(DataTableColGroupDemoDoc,null));}}]);return DataTableRowGroupDemo;}(Component);export var DataTableColGroupDemoDoc=/*#__PURE__*/function(_Component2){_inherits(DataTableColGroupDemoDoc,_Component2);var _super2=_createSuper(DataTableColGroupDemoDoc);function DataTableColGroupDemoDoc(props){var _this4;_classCallCheck(this,DataTableColGroupDemoDoc);_this4=_super2.call(this,props);_this4.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport { CustomerService } from '../service/CustomerService';\\nimport './DataTableDemo.css';\\n\\nexport class DataTableRowGroupDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            customers: [],\\n            expandedRowGroups: []\\n        };\\n\\n        this.customerService = new CustomerService();\\n        this.headerTemplate = this.headerTemplate.bind(this);\\n        this.footerTemplate = this.footerTemplate.bind(this);\\n        this.countryBodyTemplate = this.countryBodyTemplate.bind(this);\\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\\n        this.representativeBodyTemplate = this.representativeBodyTemplate.bind(this);\\n        this.onRowGroupExpand = this.onRowGroupExpand.bind(this);\\n        this.onRowGroupCollapse = this.onRowGroupCollapse.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\\n    }\\n\\n    headerTemplate(data) {\\n        return (\\n            <React.Fragment>\\n                <img alt={data.representative.name} src={`showcase/demo/images/avatar/${data.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{data.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    footerTemplate(data) {\\n        return (\\n            <React.Fragment>\\n                <td colSpan=\\\"4\\\" style={{ textAlign: 'right' }}>Total Customers</td>\\n                <td>{this.calculateCustomerTotal(data.representative.name)}</td>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    countryBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    statusBodyTemplate(rowData) {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    representativeBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    onRowGroupExpand(event) {\\n        this.toast.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    onRowGroupCollapse(event) {\\n        this.toast.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    calculateCustomerTotal(name) {\\n        let total = 0;\\n\\n        if (this.state.customers) {\\n            for (let customer of this.state.customers) {\\n                if (customer.representative.name === name) {\\n                    total++;\\n                }\\n            }\\n        }\\n\\n        return total;\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"datatable-rowgroup-demo\\\">\\n                <Toast ref={(el) => this.toast = el}></Toast>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Subheader Grouping</h5>\\n                    <p>Group customers by their representative.</p>\\n                    <DataTable value={this.state.customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                        sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                        rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\\n                        <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"country\\\" header=\\\"Country\\\" body={this.countryBodyTemplate}></Column>\\n                        <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate}></Column>\\n                        <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Expandable Row Groups</h5>\\n                    <p>Group customers by their representative.</p>\\n                    <DataTable value={this.state.customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                        sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                        expandableRowGroups expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\\n                        onRowExpand={this.onRowGroupExpand} onRowCollapse={this.onRowGroupCollapse}\\n                        rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\\n                        <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"country\\\" header=\\\"Country\\\" body={this.countryBodyTemplate}></Column>\\n                        <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate}></Column>\\n                        <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>RowSpan Grouping</h5>\\n                    <DataTable value={this.state.customers} rowGroupMode=\\\"rowspan\\\" groupField=\\\"representative.name\\\"\\n                        sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}>\\n                        <Column header=\\\"#\\\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\\n                        <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={this.representativeBodyTemplate}></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"country\\\" header=\\\"Country\\\" body={this.countryBodyTemplate}></Column>\\n                        <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate}></Column>\\n                        <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport { CustomerService } from '../service/CustomerService';\\nimport './DataTableDemo.css';\\n\\nconst DataTableRowGroupDemo = () => {\\n    const [customers, setCustomers] = useState([]);\\n    const [expandedRows, setExpandedRows] = useState([]);\\n    const toast = useRef(null);\\n    const customerService = new CustomerService();\\n\\n    useEffect(() => {\\n        customerService.getCustomersMedium().then(data => setCustomers(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const headerTemplate = (data) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={data.representative.name} src={`showcase/demo/images/avatar/${data.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{data.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const footerTemplate = (data) => {\\n        return (\\n            <React.Fragment>\\n                <td colSpan=\\\"4\\\" style={{ textAlign: 'right' }}>Total Customers</td>\\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const countryBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    const representativeBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    const onRowGroupExpand = (event) => {\\n        toast.current.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    const onRowGroupCollapse = (event) => {\\n        toast.current.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    const calculateCustomerTotal = (name) => {\\n        let total = 0;\\n\\n        if (customers) {\\n            for (let customer of customers) {\\n                if (customer.representative.name === name) {\\n                    total++;\\n                }\\n            }\\n        }\\n\\n        return total;\\n    }\\n\\n    return (\\n        <div className=\\\"datatable-rowgroup-demo\\\">\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Subheader Grouping</h5>\\n                <p>Group customers by their representative.</p>\\n                <DataTable value={customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Expandable Row Groups</h5>\\n                <p>Group customers by their representative.</p>\\n                <DataTable value={customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\\n                    onRowExpand={onRowGroupExpand} onRowCollapse={onRowGroupCollapse}\\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>RowSpan Grouping</h5>\\n                <DataTable value={customers} rowGroupMode=\\\"rowspan\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}>\\n                    <Column header=\\\"#\\\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={representativeBodyTemplate}></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport { CustomerService } from '../service/CustomerService';\\nimport './DataTableDemo.css';\\n\\nconst DataTableRowGroupDemo = () => {\\n    const [customers, setCustomers] = useState([]);\\n    const [expandedRows, setExpandedRows] = useState([]);\\n    const toast = useRef(null);\\n    const customerService = new CustomerService();\\n\\n    useEffect(() => {\\n        customerService.getCustomersMedium().then(data => setCustomers(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const headerTemplate = (data) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={data.representative.name} src={`showcase/demo/images/avatar/${data.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{data.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const footerTemplate = (data) => {\\n        return (\\n            <React.Fragment>\\n                <td colSpan=\\\"4\\\" style={{ textAlign: 'right' }}>Total Customers</td>\\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const countryBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    const representativeBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    const onRowGroupExpand = (event) => {\\n        toast.current.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    const onRowGroupCollapse = (event) => {\\n        toast.current.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    const calculateCustomerTotal = (name) => {\\n        let total = 0;\\n\\n        if (customers) {\\n            for (let customer of customers) {\\n                if (customer.representative.name === name) {\\n                    total++;\\n                }\\n            }\\n        }\\n\\n        return total;\\n    }\\n\\n    return (\\n        <div className=\\\"datatable-rowgroup-demo\\\">\\n            <Toast ref={toast}></Toast>\\n            <div className=\\\"card\\\">\\n                <h5>Subheader Grouping</h5>\\n                <p>Group customers by their representative.</p>\\n                <DataTable value={customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Expandable Row Groups</h5>\\n                <p>Group customers by their representative.</p>\\n                <DataTable value={customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\\n                    onRowExpand={onRowGroupExpand} onRowCollapse={onRowGroupCollapse}\\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>RowSpan Grouping</h5>\\n                <DataTable value={customers} rowGroupMode=\\\"rowspan\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}>\\n                    <Column header=\\\"#\\\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={representativeBodyTemplate}></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};_this4.extFiles={'src/demo/DataTableDemo.css':{content:\"\\n.datatable-rowgroup-demo .p-rowgroup-footer td {\\n    font-weight: 700;\\n}\\n\\n.datatable-rowgroup-demo .p-rowgroup-header span {\\n    font-weight: 700;\\n}\\n\\n.datatable-rowgroup-demo .p-rowgroup-header .p-row-toggler {\\n    vertical-align: middle;\\n    margin-right: .25rem;\\n}\\n                \"}};return _this4;}_createClass(DataTableColGroupDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DataTableRowGroupDemo',sources:this.sources,service:'CustomerService',data:'customers-medium',extFiles:this.extFiles})));}}]);return DataTableColGroupDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/datatable/DataTableRowGroupDemo.js"],"names":["React","Component","DataTable","Column","Toast","CustomerService","TabView","useLiveEditorTabs","AppInlineHeader","DataTableRowGroupDemo","props","state","customers","expandedRowGroups","customerService","headerTemplate","bind","footerTemplate","countryBodyTemplate","statusBodyTemplate","representativeBodyTemplate","onRowGroupExpand","onRowGroupCollapse","getCustomersMedium","then","data","setState","representative","name","image","e","target","src","verticalAlign","textAlign","calculateCustomerTotal","rowData","country","code","status","event","toast","show","severity","summary","detail","life","total","customer","el","expandedRows","width","rowIndex","DataTableColGroupDemoDoc","sources","tabName","content","extFiles","service"],"mappings":"4lCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,sCAA1B,CACA,OAASC,MAAT,KAAuB,gCAAvB,CACA,OAASC,KAAT,KAAsB,8BAAtB,CACA,OAASC,eAAT,KAAgC,4BAAhC,CACA,OAASC,OAAT,KAAwB,kCAAxB,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CACA,OAASC,eAAT,KAAgC,uBAAhC,CACA,MAAO,sBAAP,CAEA,UAAaC,CAAAA,qBAAb,8HAEI,+BAAYC,KAAZ,CAAmB,uDACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,SAAS,CAAE,EADF,CAETC,iBAAiB,CAAE,EAFV,CAAb,CAKA,MAAKC,eAAL,CAAuB,GAAIT,CAAAA,eAAJ,EAAvB,CACA,MAAKU,cAAL,CAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB,CACA,MAAKC,cAAL,CAAsB,MAAKA,cAAL,CAAoBD,IAApB,+BAAtB,CACA,MAAKE,mBAAL,CAA2B,MAAKA,mBAAL,CAAyBF,IAAzB,+BAA3B,CACA,MAAKG,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBH,IAAxB,+BAA1B,CACA,MAAKI,0BAAL,CAAkC,MAAKA,0BAAL,CAAgCJ,IAAhC,+BAAlC,CACA,MAAKK,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBL,IAAtB,+BAAxB,CACA,MAAKM,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBN,IAAxB,+BAA1B,CAde,aAelB,CAjBL,mEAmBI,4BAAoB,iBAChB,KAAKF,eAAL,CAAqBS,kBAArB,GAA0CC,IAA1C,CAA+C,SAAAC,IAAI,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEd,SAAS,CAAEa,IAAb,CAAd,CAAJ,EAAnD,EACH,CArBL,8BAuBI,wBAAeA,IAAf,CAAqB,CACjB,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,2BAAK,GAAG,CAAEA,IAAI,CAACE,cAAL,CAAoBC,IAA9B,CAAoC,GAAG,uCAAiCH,IAAI,CAACE,cAAL,CAAoBE,KAArD,CAAvC,CAAqG,OAAO,CAAE,iBAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,MAAF,CAASC,GAAT,CAAa,uEAApB,EAA9G,CAA2M,KAAK,CAAC,IAAjN,CAAsN,KAAK,CAAE,CAAEC,aAAa,CAAE,QAAjB,CAA7N,EADJ,cAEI,4BAAM,SAAS,CAAC,YAAhB,EAA8BR,IAAI,CAACE,cAAL,CAAoBC,IAAlD,CAFJ,CADJ,CAMH,CA9BL,8BAgCI,wBAAeH,IAAf,CAAqB,CACjB,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,0BAAI,OAAO,CAAC,GAAZ,CAAgB,KAAK,CAAE,CAAES,SAAS,CAAE,OAAb,CAAvB,oBADJ,cAEI,8BAAK,KAAKC,sBAAL,CAA4BV,IAAI,CAACE,cAAL,CAAoBC,IAAhD,CAAL,CAFJ,CADJ,CAMH,CAvCL,mCAyCI,6BAAoBQ,OAApB,CAA6B,CACzB,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,2BAAK,GAAG,CAAEA,OAAO,CAACC,OAAR,CAAgBT,IAA1B,CAAgC,GAAG,CAAC,2CAApC,CAAgF,OAAO,CAAE,iBAACE,CAAD,QAAOA,CAAAA,CAAC,CAACC,MAAF,CAASC,GAAT,CAAa,uEAApB,EAAzF,CAAsL,SAAS,qBAAeI,OAAO,CAACC,OAAR,CAAgBC,IAA/B,CAA/L,CAAsO,KAAK,CAAC,IAA5O,EADJ,cAEI,4BAAM,SAAS,CAAC,YAAhB,EAA8BF,OAAO,CAACC,OAAR,CAAgBT,IAA9C,CAFJ,CADJ,CAMH,CAhDL,kCAkDI,4BAAmBQ,OAAnB,CAA4B,CACxB,mBAAO,4BAAM,SAAS,iCAA2BA,OAAO,CAACG,MAAnC,CAAf,EAA6DH,OAAO,CAACG,MAArE,CAAP,CACH,CApDL,0CAsDI,oCAA2BH,OAA3B,CAAoC,CAChC,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,2BAAK,GAAG,CAAEA,OAAO,CAACT,cAAR,CAAuBC,IAAjC,CAAuC,GAAG,uCAAiCQ,OAAO,CAACT,cAAR,CAAuBE,KAAxD,CAA1C,CAA2G,OAAO,CAAE,iBAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,MAAF,CAASC,GAAT,CAAa,uEAApB,EAApH,CAAiN,KAAK,CAAC,IAAvN,CAA4N,KAAK,CAAE,CAAEC,aAAa,CAAE,QAAjB,CAAnO,EADJ,cAEI,4BAAM,SAAS,CAAC,YAAhB,EAA8BG,OAAO,CAACT,cAAR,CAAuBC,IAArD,CAFJ,CADJ,CAMH,CA7DL,gCA+DI,0BAAiBY,KAAjB,CAAwB,CACpB,KAAKC,KAAL,CAAWC,IAAX,CAAgB,CAAEC,QAAQ,CAAE,MAAZ,CAAoBC,OAAO,CAAE,oBAA7B,CAAmDC,MAAM,CAAE,UAAYL,KAAK,CAACf,IAAN,CAAWE,cAAX,CAA0BC,IAAjG,CAAuGkB,IAAI,CAAE,IAA7G,CAAhB,EACH,CAjEL,kCAmEI,4BAAmBN,KAAnB,CAA0B,CACtB,KAAKC,KAAL,CAAWC,IAAX,CAAgB,CAAEC,QAAQ,CAAE,SAAZ,CAAuBC,OAAO,CAAE,qBAAhC,CAAuDC,MAAM,CAAE,UAAYL,KAAK,CAACf,IAAN,CAAWE,cAAX,CAA0BC,IAArG,CAA2GkB,IAAI,CAAE,IAAjH,CAAhB,EACH,CArEL,sCAuEI,gCAAuBlB,IAAvB,CAA6B,CACzB,GAAImB,CAAAA,KAAK,CAAG,CAAZ,CAEA,GAAI,KAAKpC,KAAL,CAAWC,SAAf,CAA0B,0CACD,KAAKD,KAAL,CAAWC,SADV,YACtB,+CAA2C,IAAlCoC,CAAAA,QAAkC,aACvC,GAAIA,QAAQ,CAACrB,cAAT,CAAwBC,IAAxB,GAAiCA,IAArC,CAA2C,CACvCmB,KAAK,GACR,CACJ,CALqB,qDAMzB,CAED,MAAOA,CAAAA,KAAP,CACH,CAnFL,sBAqFI,iBAAS,iBACL,mBACI,4CACI,2BAAK,SAAS,CAAC,8BAAf,eACI,oBAAC,eAAD,EAAiB,aAAa,CAAC,WAA/B,eACI,wDAAc,+CAAd,CADJ,cAEI,uGAFJ,CADJ,CADJ,cAQI,2BAAK,SAAS,CAAC,wDAAf,eACI,oBAAC,KAAD,EAAO,GAAG,CAAE,aAACE,EAAD,QAAQ,CAAA,MAAI,CAACR,KAAL,CAAaQ,EAArB,EAAZ,EADJ,cAGI,2BAAK,SAAS,CAAC,MAAf,eACI,mDADJ,cAEI,wEAFJ,cAGI,oBAAC,SAAD,EAAW,KAAK,CAAE,KAAKtC,KAAL,CAAWC,SAA7B,CAAwC,YAAY,CAAC,WAArD,CAAiE,UAAU,CAAC,qBAA5E,CACI,QAAQ,CAAC,QADb,CACsB,SAAS,CAAC,qBADhC,CACsD,SAAS,CAAE,CADjE,CAEI,sBAAsB,CAAE,KAAKG,cAFjC,CAEiD,sBAAsB,CAAE,KAAKE,cAF9E,eAGI,oBAAC,MAAD,EAAQ,KAAK,CAAC,qBAAd,CAAoC,MAAM,CAAC,gBAA3C,EAHJ,cAII,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,EAJJ,cAKI,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,MAAM,CAAC,SAA/B,CAAyC,IAAI,CAAE,KAAKC,mBAApD,EALJ,cAMI,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,MAAM,CAAC,SAA/B,EANJ,cAOI,oBAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,CAAuB,MAAM,CAAC,QAA9B,CAAuC,IAAI,CAAE,KAAKC,kBAAlD,EAPJ,cAQI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,EARJ,CAHJ,CAHJ,cAkBI,2BAAK,SAAS,CAAC,MAAf,eACI,sDADJ,cAEI,wEAFJ,cAGI,oBAAC,SAAD,EAAW,KAAK,CAAE,KAAKR,KAAL,CAAWC,SAA7B,CAAwC,YAAY,CAAC,WAArD,CAAiE,UAAU,CAAC,qBAA5E,CACI,QAAQ,CAAC,QADb,CACsB,SAAS,CAAC,qBADhC,CACsD,SAAS,CAAE,CADjE,CAEI,mBAAmB,KAFvB,CAEwB,YAAY,CAAE,KAAKD,KAAL,CAAWuC,YAFjD,CAE+D,WAAW,CAAE,qBAACpB,CAAD,QAAO,CAAA,MAAI,CAACJ,QAAL,CAAc,CAAEwB,YAAY,CAAEpB,CAAC,CAACL,IAAlB,CAAd,CAAP,EAF5E,CAGI,WAAW,CAAE,KAAKJ,gBAHtB,CAGwC,aAAa,CAAE,KAAKC,kBAH5D,CAII,sBAAsB,CAAE,KAAKP,cAJjC,CAIiD,sBAAsB,CAAE,KAAKE,cAJ9E,eAKI,oBAAC,MAAD,EAAQ,KAAK,CAAC,qBAAd,CAAoC,MAAM,CAAC,gBAA3C,EALJ,cAMI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,EANJ,cAOI,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,MAAM,CAAC,SAA/B,CAAyC,IAAI,CAAE,KAAKC,mBAApD,EAPJ,cAQI,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,MAAM,CAAC,SAA/B,EARJ,cASI,oBAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,CAAuB,MAAM,CAAC,QAA9B,CAAuC,IAAI,CAAE,KAAKC,kBAAlD,EATJ,cAUI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,EAVJ,CAHJ,CAlBJ,cAmCI,2BAAK,SAAS,CAAC,MAAf,eACI,iDADJ,cAEI,oBAAC,SAAD,EAAW,KAAK,CAAE,KAAKR,KAAL,CAAWC,SAA7B,CAAwC,YAAY,CAAC,SAArD,CAA+D,UAAU,CAAC,qBAA1E,CACI,QAAQ,CAAC,QADb,CACsB,SAAS,CAAC,qBADhC,CACsD,SAAS,CAAE,CADjE,eAEI,oBAAC,MAAD,EAAQ,MAAM,CAAC,GAAf,CAAmB,WAAW,CAAE,CAAEuC,KAAK,CAAE,KAAT,CAAhC,CAAkD,IAAI,CAAE,cAAC1B,IAAD,CAAOf,KAAP,QAAiBA,CAAAA,KAAK,CAAC0C,QAAN,CAAiB,CAAlC,EAAxD,EAFJ,cAGI,oBAAC,MAAD,EAAQ,KAAK,CAAC,qBAAd,CAAoC,MAAM,CAAC,gBAA3C,CAA4D,IAAI,CAAE,KAAKhC,0BAAvE,EAHJ,cAII,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,EAJJ,cAKI,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,MAAM,CAAC,SAA/B,CAAyC,IAAI,CAAE,KAAKF,mBAApD,EALJ,cAMI,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,MAAM,CAAC,SAA/B,EANJ,cAOI,oBAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,CAAuB,MAAM,CAAC,QAA9B,CAAuC,IAAI,CAAE,KAAKC,kBAAlD,EAPJ,cAQI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,EARJ,CAFJ,CAnCJ,CARJ,cA0DI,oBAAC,wBAAD,MA1DJ,CADJ,CA8DH,CApJL,mCAA2ClB,SAA3C,EAuJA,UAAaoD,CAAAA,wBAAb,uIAEI,kCAAY3C,KAAZ,CAAmB,2DACf,yBAAMA,KAAN,EAEA,OAAK4C,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,i3OAFF,CADE,CAwJX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,unNAFF,CAxJE,CAgSX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,qnNAFL,CAhSK,CAAf,CAyaA,OAAKC,QAAL,CAAgB,CACZ,6BAA8B,CAC1BD,OAAO,4SADmB,CADlB,CAAhB,CA5ae,cA8blB,CAhcL,0EAkcI,gCAAwB,CACpB,MAAO,MAAP,CACH,CApcL,sBAscI,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,MAEQjD,iBAAiB,CAAC,CAAEqB,IAAI,CAAE,uBAAR,CAAiC0B,OAAO,CAAE,KAAKA,OAA/C,CAAwDI,OAAO,CAAE,iBAAjE,CAAoFjC,IAAI,CAAE,kBAA1F,CAA8GgC,QAAQ,CAAE,KAAKA,QAA7H,CAAD,CAFzB,CADJ,CADJ,CASH,CAhdL,sCAA8CxD,SAA9C","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './DataTableDemo.scss';\r\n\r\nexport class DataTableRowGroupDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customers: [],\r\n            expandedRowGroups: []\r\n        };\r\n\r\n        this.customerService = new CustomerService();\r\n        this.headerTemplate = this.headerTemplate.bind(this);\r\n        this.footerTemplate = this.footerTemplate.bind(this);\r\n        this.countryBodyTemplate = this.countryBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.representativeBodyTemplate = this.representativeBodyTemplate.bind(this);\r\n        this.onRowGroupExpand = this.onRowGroupExpand.bind(this);\r\n        this.onRowGroupCollapse = this.onRowGroupCollapse.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\r\n    }\r\n\r\n    headerTemplate(data) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={data.representative.name} src={`showcase/demo/images/avatar/${data.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{data.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    footerTemplate(data) {\r\n        return (\r\n            <React.Fragment>\r\n                <td colSpan=\"4\" style={{ textAlign: 'right' }}>Total Customers</td>\r\n                <td>{this.calculateCustomerTotal(data.representative.name)}</td>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    countryBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\r\n    }\r\n\r\n    representativeBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onRowGroupExpand(event) {\r\n        this.toast.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    onRowGroupCollapse(event) {\r\n        this.toast.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    calculateCustomerTotal(name) {\r\n        let total = 0;\r\n\r\n        if (this.state.customers) {\r\n            for (let customer of this.state.customers) {\r\n                if (customer.representative.name === name) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Row Grouping</span></h1>\r\n                        <p>Rows can either be grouped by a separate grouping row or using rowspan.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation datatable-rowgroup-demo\">\r\n                    <Toast ref={(el) => this.toast = el}></Toast>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Subheader Grouping</h5>\r\n                        <p>Group customers by their representative.</p>\r\n                        <DataTable value={this.state.customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                            sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                            rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\r\n                            <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                            <Column field=\"company\" header=\"Company\"></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                            <Column field=\"date\" header=\"Date\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Expandable Row Groups</h5>\r\n                        <p>Group customers by their representative.</p>\r\n                        <DataTable value={this.state.customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                            sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                            expandableRowGroups expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\r\n                            onRowExpand={this.onRowGroupExpand} onRowCollapse={this.onRowGroupCollapse}\r\n                            rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\r\n                            <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                            <Column field=\"company\" header=\"Company\"></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                            <Column field=\"date\" header=\"Date\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>RowSpan Grouping</h5>\r\n                        <DataTable value={this.state.customers} rowGroupMode=\"rowspan\" groupField=\"representative.name\"\r\n                            sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}>\r\n                            <Column header=\"#\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\r\n                            <Column field=\"representative.name\" header=\"Representative\" body={this.representativeBodyTemplate}></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                            <Column field=\"company\" header=\"Company\"></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                            <Column field=\"date\" header=\"Date\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableColGroupDemoDoc></DataTableColGroupDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableColGroupDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport './DataTableDemo.css';\r\n\r\nexport class DataTableRowGroupDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customers: [],\r\n            expandedRowGroups: []\r\n        };\r\n\r\n        this.customerService = new CustomerService();\r\n        this.headerTemplate = this.headerTemplate.bind(this);\r\n        this.footerTemplate = this.footerTemplate.bind(this);\r\n        this.countryBodyTemplate = this.countryBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.representativeBodyTemplate = this.representativeBodyTemplate.bind(this);\r\n        this.onRowGroupExpand = this.onRowGroupExpand.bind(this);\r\n        this.onRowGroupCollapse = this.onRowGroupCollapse.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\r\n    }\r\n\r\n    headerTemplate(data) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={data.representative.name} src={\\`showcase/demo/images/avatar/\\${data.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{data.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    footerTemplate(data) {\r\n        return (\r\n            <React.Fragment>\r\n                <td colSpan=\"4\" style={{ textAlign: 'right' }}>Total Customers</td>\r\n                <td>{this.calculateCustomerTotal(data.representative.name)}</td>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    countryBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    representativeBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onRowGroupExpand(event) {\r\n        this.toast.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    onRowGroupCollapse(event) {\r\n        this.toast.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    calculateCustomerTotal(name) {\r\n        let total = 0;\r\n\r\n        if (this.state.customers) {\r\n            for (let customer of this.state.customers) {\r\n                if (customer.representative.name === name) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"datatable-rowgroup-demo\">\r\n                <Toast ref={(el) => this.toast = el}></Toast>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Subheader Grouping</h5>\r\n                    <p>Group customers by their representative.</p>\r\n                    <DataTable value={this.state.customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                        sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                        rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\r\n                        <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                        <Column field=\"company\" header=\"Company\"></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                        <Column field=\"date\" header=\"Date\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Expandable Row Groups</h5>\r\n                    <p>Group customers by their representative.</p>\r\n                    <DataTable value={this.state.customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                        sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                        expandableRowGroups expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\r\n                        onRowExpand={this.onRowGroupExpand} onRowCollapse={this.onRowGroupCollapse}\r\n                        rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\r\n                        <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                        <Column field=\"company\" header=\"Company\"></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                        <Column field=\"date\" header=\"Date\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>RowSpan Grouping</h5>\r\n                    <DataTable value={this.state.customers} rowGroupMode=\"rowspan\" groupField=\"representative.name\"\r\n                        sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}>\r\n                        <Column header=\"#\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\r\n                        <Column field=\"representative.name\" header=\"Representative\" body={this.representativeBodyTemplate}></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                        <Column field=\"company\" header=\"Company\"></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                        <Column field=\"date\" header=\"Date\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableRowGroupDemo = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState([]);\r\n    const toast = useRef(null);\r\n    const customerService = new CustomerService();\r\n\r\n    useEffect(() => {\r\n        customerService.getCustomersMedium().then(data => setCustomers(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const headerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={data.representative.name} src={\\`showcase/demo/images/avatar/\\${data.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{data.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const footerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <td colSpan=\"4\" style={{ textAlign: 'right' }}>Total Customers</td>\r\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const countryBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const representativeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const onRowGroupExpand = (event) => {\r\n        toast.current.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    const onRowGroupCollapse = (event) => {\r\n        toast.current.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    const calculateCustomerTotal = (name) => {\r\n        let total = 0;\r\n\r\n        if (customers) {\r\n            for (let customer of customers) {\r\n                if (customer.representative.name === name) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    return (\r\n        <div className=\"datatable-rowgroup-demo\">\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Subheader Grouping</h5>\r\n                <p>Group customers by their representative.</p>\r\n                <DataTable value={customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Expandable Row Groups</h5>\r\n                <p>Group customers by their representative.</p>\r\n                <DataTable value={customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    onRowExpand={onRowGroupExpand} onRowCollapse={onRowGroupCollapse}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>RowSpan Grouping</h5>\r\n                <DataTable value={customers} rowGroupMode=\"rowspan\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}>\r\n                    <Column header=\"#\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\r\n                    <Column field=\"representative.name\" header=\"Representative\" body={representativeBodyTemplate}></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableRowGroupDemo = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState([]);\r\n    const toast = useRef(null);\r\n    const customerService = new CustomerService();\r\n\r\n    useEffect(() => {\r\n        customerService.getCustomersMedium().then(data => setCustomers(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const headerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={data.representative.name} src={\\`showcase/demo/images/avatar/\\${data.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{data.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const footerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <td colSpan=\"4\" style={{ textAlign: 'right' }}>Total Customers</td>\r\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const countryBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const representativeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const onRowGroupExpand = (event) => {\r\n        toast.current.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    const onRowGroupCollapse = (event) => {\r\n        toast.current.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    const calculateCustomerTotal = (name) => {\r\n        let total = 0;\r\n\r\n        if (customers) {\r\n            for (let customer of customers) {\r\n                if (customer.representative.name === name) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    return (\r\n        <div className=\"datatable-rowgroup-demo\">\r\n            <Toast ref={toast}></Toast>\r\n            <div className=\"card\">\r\n                <h5>Subheader Grouping</h5>\r\n                <p>Group customers by their representative.</p>\r\n                <DataTable value={customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Expandable Row Groups</h5>\r\n                <p>Group customers by their representative.</p>\r\n                <DataTable value={customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    onRowExpand={onRowGroupExpand} onRowCollapse={onRowGroupCollapse}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>RowSpan Grouping</h5>\r\n                <DataTable value={customers} rowGroupMode=\"rowspan\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}>\r\n                    <Column header=\"#\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\r\n                    <Column field=\"representative.name\" header=\"Representative\" body={representativeBodyTemplate}></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'src/demo/DataTableDemo.css': {\r\n                content: `\r\n.datatable-rowgroup-demo .p-rowgroup-footer td {\r\n    font-weight: 700;\r\n}\r\n\r\n.datatable-rowgroup-demo .p-rowgroup-header span {\r\n    font-weight: 700;\r\n}\r\n\r\n.datatable-rowgroup-demo .p-rowgroup-header .p-row-toggler {\r\n    vertical-align: middle;\r\n    margin-right: .25rem;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableRowGroupDemo', sources: this.sources, service: 'CustomerService', data: 'customers-medium', extFiles: this.extFiles  })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}