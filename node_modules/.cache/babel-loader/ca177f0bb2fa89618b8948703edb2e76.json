{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\picklist\\\\PickList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DomHandler from '../utils/DomHandler';\nimport { classNames } from '../utils/ClassNames';\nimport { PickListSubList } from './PickListSubList';\nimport { PickListControls } from './PickListControls';\nimport { PickListTransferControls } from './PickListTransferControls';\nexport var PickList = /*#__PURE__*/function (_Component) {\n  _inherits(PickList, _Component);\n\n  var _super = _createSuper(PickList);\n\n  function PickList(props) {\n    var _this;\n\n    _classCallCheck(this, PickList);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n\n    if (!_this.props.onSourceSelectionChange) {\n      _this.state.sourceSelection = [];\n    }\n\n    if (!_this.props.onTargetSelectionChange) {\n      _this.state.targetSelection = [];\n    }\n\n    _this.onSourceReorder = _this.onSourceReorder.bind(_assertThisInitialized(_this));\n    _this.onTargetReorder = _this.onTargetReorder.bind(_assertThisInitialized(_this));\n    _this.onTransfer = _this.onTransfer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PickList, [{\n    key: \"getSourceSelection\",\n    value: function getSourceSelection() {\n      return this.props.onSourceSelectionChange ? this.props.sourceSelection : this.state.sourceSelection;\n    }\n  }, {\n    key: \"getTargetSelection\",\n    value: function getTargetSelection() {\n      return this.props.onTargetSelectionChange ? this.props.targetSelection : this.state.targetSelection;\n    }\n  }, {\n    key: \"onSourceReorder\",\n    value: function onSourceReorder(event) {\n      this.handleChange(event, event.value, this.props.target);\n      this.reorderedListElement = this.sourceListElement;\n      this.reorderDirection = event.direction;\n    }\n  }, {\n    key: \"onTargetReorder\",\n    value: function onTargetReorder(event) {\n      this.handleChange(event, this.props.source, event.value);\n      this.reorderedListElement = this.targetListElement;\n      this.reorderDirection = event.direction;\n    }\n  }, {\n    key: \"handleScrollPosition\",\n    value: function handleScrollPosition(listElement, direction) {\n      if (listElement) {\n        var listContainer = DomHandler.findSingle(listElement, '.p-picklist-list');\n\n        switch (direction) {\n          case 'up':\n            this.scrollInView(listContainer, -1);\n            break;\n\n          case 'top':\n            listContainer.scrollTop = 0;\n            break;\n\n          case 'down':\n            this.scrollInView(listContainer, 1);\n            break;\n\n          case 'bottom':\n            listContainer.scrollTop = listContainer.scrollHeight;\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event, source, target) {\n      if (this.props.onChange) {\n        this.props.onChange({\n          event: event.originalEvent,\n          source: source,\n          target: target\n        });\n      }\n    }\n  }, {\n    key: \"onTransfer\",\n    value: function onTransfer(event) {\n      var originalEvent = event.originalEvent,\n          source = event.source,\n          target = event.target,\n          direction = event.direction;\n\n      switch (direction) {\n        case 'toTarget':\n          if (this.props.onMoveToTarget) {\n            this.props.onMoveToTarget({\n              originalEvent: originalEvent,\n              value: this.getSourceSelection()\n            });\n          }\n\n          break;\n\n        case 'allToTarget':\n          if (this.props.onMoveAllToTarget) {\n            this.props.onMoveAllToTarget({\n              originalEvent: originalEvent,\n              value: this.props.source\n            });\n          }\n\n          break;\n\n        case 'toSource':\n          if (this.props.onMoveToSource) {\n            this.props.onMoveToSource({\n              originalEvent: originalEvent,\n              value: this.getTargetSelection()\n            });\n          }\n\n          break;\n\n        case 'allToSource':\n          if (this.props.onMoveAllToSource) {\n            this.props.onMoveAllToSource({\n              originalEvent: originalEvent,\n              value: this.props.target\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.onSelectionChange({\n        originalEvent: originalEvent,\n        value: []\n      }, 'sourceSelection', this.props.onSourceSelectionChange);\n      this.onSelectionChange({\n        originalEvent: originalEvent,\n        value: []\n      }, 'targetSelection', this.props.onTargetSelectionChange);\n      this.handleChange(event, source, target);\n    }\n  }, {\n    key: \"scrollInView\",\n    value: function scrollInView(listContainer) {\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var selectedItems = listContainer.getElementsByClassName('p-highlight');\n      DomHandler.scrollInView(listContainer, direction === -1 ? selectedItems[0] : selectedItems[selectedItems.length - 1]);\n    }\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(e, stateKey, callback) {\n      if (callback) {\n        callback(e);\n      } else {\n        this.setState(_defineProperty({}, stateKey, e.value));\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.reorderedListElement) {\n        this.handleScrollPosition(this.reorderedListElement, this.reorderDirection);\n        this.reorderedListElement = null;\n        this.reorderDirection = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = classNames('p-picklist p-component', this.props.className);\n      var sourceSelection = this.getSourceSelection();\n      var targetSelection = this.getTargetSelection();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, this.props.showSourceControls && /*#__PURE__*/React.createElement(PickListControls, {\n        list: this.props.source,\n        selection: sourceSelection,\n        onReorder: this.onSourceReorder,\n        className: \"p-picklist-source-controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(PickListSubList, {\n        ref: function ref(el) {\n          return _this2.sourceListElement = el;\n        },\n        list: this.props.source,\n        selection: sourceSelection,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this2.onSelectionChange(e, 'sourceSelection', _this2.props.onSourceSelectionChange);\n        },\n        itemTemplate: this.props.itemTemplate,\n        header: this.props.sourceHeader,\n        style: this.props.sourceStyle,\n        className: \"p-picklist-source-wrapper\",\n        listClassName: \"p-picklist-source\",\n        metaKeySelection: this.props.metaKeySelection,\n        tabIndex: this.props.tabIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(PickListTransferControls, {\n        onTransfer: this.onTransfer,\n        source: this.props.source,\n        target: this.props.target,\n        sourceSelection: sourceSelection,\n        targetSelection: targetSelection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(PickListSubList, {\n        ref: function ref(el) {\n          return _this2.targetListElement = el;\n        },\n        list: this.props.target,\n        selection: targetSelection,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this2.onSelectionChange(e, 'targetSelection', _this2.props.onTargetSelectionChange);\n        },\n        itemTemplate: this.props.itemTemplate,\n        header: this.props.targetHeader,\n        style: this.props.targetStyle,\n        className: \"p-picklist-target-wrapper\",\n        listClassName: \"p-picklist-target\",\n        metaKeySelection: this.props.metaKeySelection,\n        tabIndex: this.props.tabIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }), this.props.showTargetControls && /*#__PURE__*/React.createElement(PickListControls, {\n        list: this.props.target,\n        selection: targetSelection,\n        onReorder: this.onTargetReorder,\n        className: \"p-picklist-target-controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 51\n        }\n      }));\n    }\n  }]);\n\n  return PickList;\n}(Component);\nPickList.defaultProps = {\n  id: null,\n  source: null,\n  target: null,\n  sourceHeader: null,\n  targetHeader: null,\n  style: null,\n  className: null,\n  sourceStyle: null,\n  targetStyle: null,\n  sourceSelection: null,\n  targetSelection: null,\n  showSourceControls: true,\n  showTargetControls: true,\n  metaKeySelection: true,\n  tabIndex: 0,\n  itemTemplate: null,\n  onChange: null,\n  onMoveToSource: null,\n  onMoveAllToSource: null,\n  onMoveToTarget: null,\n  onMoveAllToTarget: null,\n  onSourceSelectionChange: null,\n  onTargetSelectionChange: null\n};\nPickList.propTypes = {\n  id: PropTypes.string,\n  source: PropTypes.array,\n  target: PropTypes.array,\n  sourceHeader: PropTypes.string,\n  targetHeader: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  sourcestyle: PropTypes.object,\n  targetstyle: PropTypes.object,\n  sourceSelection: PropTypes.any,\n  targetSelection: PropTypes.any,\n  showSourceControls: PropTypes.bool,\n  showTargetControls: PropTypes.bool,\n  metaKeySelection: PropTypes.bool,\n  tabIndex: PropTypes.number,\n  itemTemplate: PropTypes.func,\n  onChange: PropTypes.func,\n  onMoveToSource: PropTypes.func,\n  onMoveAllToSource: PropTypes.func,\n  onMoveToTarget: PropTypes.func,\n  onMoveAllToTarget: PropTypes.func,\n  onSourceSelectionChange: PropTypes.func,\n  onTargetSelectionChange: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/picklist/PickList.js"],"names":["React","Component","PropTypes","DomHandler","classNames","PickListSubList","PickListControls","PickListTransferControls","PickList","props","state","onSourceSelectionChange","sourceSelection","onTargetSelectionChange","targetSelection","onSourceReorder","bind","onTargetReorder","onTransfer","event","handleChange","value","target","reorderedListElement","sourceListElement","reorderDirection","direction","source","targetListElement","listElement","listContainer","findSingle","scrollInView","scrollTop","scrollHeight","onChange","originalEvent","onMoveToTarget","getSourceSelection","onMoveAllToTarget","onMoveToSource","getTargetSelection","onMoveAllToSource","onSelectionChange","selectedItems","getElementsByClassName","length","e","stateKey","callback","setState","handleScrollPosition","className","id","style","showSourceControls","el","itemTemplate","sourceHeader","sourceStyle","metaKeySelection","tabIndex","targetHeader","targetStyle","showTargetControls","defaultProps","propTypes","string","array","object","sourcestyle","targetstyle","any","bool","number","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport {PickListSubList} from './PickListSubList';\r\nimport {PickListControls} from './PickListControls';\r\nimport {PickListTransferControls} from './PickListTransferControls';\r\n\r\nexport class PickList extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        source: null,\r\n        target: null,\r\n        sourceHeader: null,\r\n        targetHeader: null,\r\n        style: null,\r\n        className: null,\r\n        sourceStyle: null,\r\n        targetStyle: null,\r\n        sourceSelection: null,\r\n        targetSelection: null,\r\n        showSourceControls: true,\r\n        showTargetControls: true,\r\n        metaKeySelection: true,\r\n        tabIndex: 0,\r\n        itemTemplate: null,\r\n        onChange: null,\r\n        onMoveToSource: null,\r\n        onMoveAllToSource: null,\r\n        onMoveToTarget: null,\r\n        onMoveAllToTarget: null,\r\n        onSourceSelectionChange: null,\r\n        onTargetSelectionChange: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        source: PropTypes.array,\r\n        target: PropTypes.array,\r\n        sourceHeader: PropTypes.string,\r\n        targetHeader: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        sourcestyle: PropTypes.object,\r\n        targetstyle: PropTypes.object,\r\n        sourceSelection: PropTypes.any,\r\n        targetSelection: PropTypes.any,\r\n        showSourceControls: PropTypes.bool,\r\n        showTargetControls: PropTypes.bool,\r\n        metaKeySelection: PropTypes.bool,\r\n        tabIndex: PropTypes.number,\r\n        itemTemplate: PropTypes.func,\r\n        onChange: PropTypes.func,\r\n        onMoveToSource: PropTypes.func,\r\n        onMoveAllToSource: PropTypes.func,\r\n        onMoveToTarget: PropTypes.func,\r\n        onMoveAllToTarget: PropTypes.func,\r\n        onSourceSelectionChange: PropTypes.func,\r\n        onTargetSelectionChange: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        if (!this.props.onSourceSelectionChange) {\r\n            this.state.sourceSelection = [];\r\n        }\r\n\r\n        if (!this.props.onTargetSelectionChange) {\r\n            this.state.targetSelection = [];\r\n        }\r\n\r\n        this.onSourceReorder = this.onSourceReorder.bind(this);\r\n        this.onTargetReorder = this.onTargetReorder.bind(this);\r\n        this.onTransfer = this.onTransfer.bind(this);\r\n    }\r\n\r\n    getSourceSelection() {\r\n        return this.props.onSourceSelectionChange ? this.props.sourceSelection : this.state.sourceSelection;\r\n    }\r\n\r\n    getTargetSelection() {\r\n        return this.props.onTargetSelectionChange ? this.props.targetSelection : this.state.targetSelection;\r\n    }\r\n\r\n    onSourceReorder(event) {\r\n        this.handleChange(event, event.value, this.props.target);\r\n        this.reorderedListElement = this.sourceListElement;\r\n        this.reorderDirection = event.direction;\r\n    }\r\n\r\n    onTargetReorder(event) {\r\n        this.handleChange(event, this.props.source, event.value);\r\n        this.reorderedListElement = this.targetListElement;\r\n        this.reorderDirection = event.direction;\r\n    }\r\n\r\n    handleScrollPosition(listElement, direction) {\r\n        if (listElement) {\r\n            let listContainer = DomHandler.findSingle(listElement, '.p-picklist-list');\r\n\r\n            switch(direction) {\r\n                case 'up':\r\n                    this.scrollInView(listContainer, -1);\r\n                break;\r\n\r\n                case 'top':\r\n                    listContainer.scrollTop = 0;\r\n                break;\r\n\r\n                case 'down':\r\n                    this.scrollInView(listContainer, 1);\r\n                break;\r\n\r\n                case 'bottom':\r\n                    listContainer.scrollTop = listContainer.scrollHeight;\r\n                break;\r\n\r\n                default:\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange(event, source, target) {\r\n        if(this.props.onChange) {\r\n            this.props.onChange({\r\n                event: event.originalEvent,\r\n                source,\r\n                target,\r\n            });\r\n        }\r\n    }\r\n\r\n    onTransfer(event) {\r\n        const { originalEvent, source, target, direction } = event;\r\n\r\n        switch(direction) {\r\n            case 'toTarget':\r\n                if(this.props.onMoveToTarget) {\r\n                    this.props.onMoveToTarget({\r\n                        originalEvent,\r\n                        value: this.getSourceSelection()\r\n                    })\r\n                }\r\n            break;\r\n\r\n            case 'allToTarget':\r\n                if(this.props.onMoveAllToTarget) {\r\n                    this.props.onMoveAllToTarget({\r\n                        originalEvent,\r\n                        value: this.props.source\r\n                    })\r\n                }\r\n            break;\r\n\r\n            case 'toSource':\r\n                if(this.props.onMoveToSource) {\r\n                    this.props.onMoveToSource({\r\n                        originalEvent,\r\n                        value: this.getTargetSelection()\r\n                    })\r\n                }\r\n            break;\r\n\r\n            case 'allToSource':\r\n                if(this.props.onMoveAllToSource) {\r\n                    this.props.onMoveAllToSource({\r\n                        originalEvent,\r\n                        value: this.props.target\r\n                    })\r\n                }\r\n            break;\r\n\r\n            default:\r\n            break;\r\n        }\r\n\r\n        this.onSelectionChange({ originalEvent, value: [] }, 'sourceSelection', this.props.onSourceSelectionChange);\r\n        this.onSelectionChange({ originalEvent, value: [] }, 'targetSelection', this.props.onTargetSelectionChange);\r\n        this.handleChange(event, source, target);\r\n    }\r\n\r\n    scrollInView(listContainer, direction = 1) {\r\n        let selectedItems = listContainer.getElementsByClassName('p-highlight');\r\n        DomHandler.scrollInView(listContainer, (direction === -1 ? selectedItems[0] : selectedItems[selectedItems.length - 1]));\r\n    }\r\n\r\n    onSelectionChange(e, stateKey, callback) {\r\n        if (callback) {\r\n            callback(e);\r\n        }\r\n        else {\r\n            this.setState({[stateKey]: e.value});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.reorderedListElement) {\r\n            this.handleScrollPosition(this.reorderedListElement, this.reorderDirection);\r\n            this.reorderedListElement = null;\r\n            this.reorderDirection = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-picklist p-component', this.props.className);\r\n        let sourceSelection = this.getSourceSelection();\r\n        let targetSelection = this.getTargetSelection();\r\n\r\n        return (\r\n            <div id={this.props.id} className={className} style={this.props.style}>\r\n                {this.props.showSourceControls && <PickListControls list={this.props.source} selection={sourceSelection}\r\n                            onReorder={this.onSourceReorder} className=\"p-picklist-source-controls\" />}\r\n\r\n                <PickListSubList ref={(el) => this.sourceListElement = el} list={this.props.source} selection={sourceSelection} onSelectionChange={(e) => this.onSelectionChange(e, 'sourceSelection', this.props.onSourceSelectionChange)} itemTemplate={this.props.itemTemplate}\r\n                    header={this.props.sourceHeader} style={this.props.sourceStyle} className=\"p-picklist-source-wrapper\" listClassName=\"p-picklist-source\" metaKeySelection={this.props.metaKeySelection} tabIndex={this.props.tabIndex}/>\r\n\r\n                <PickListTransferControls onTransfer={this.onTransfer} source={this.props.source} target={this.props.target}\r\n                    sourceSelection={sourceSelection} targetSelection={targetSelection} />\r\n\r\n                <PickListSubList ref={(el) => this.targetListElement = el} list={this.props.target} selection={targetSelection} onSelectionChange={(e) => this.onSelectionChange(e, 'targetSelection', this.props.onTargetSelectionChange)}  itemTemplate={this.props.itemTemplate}\r\n                    header={this.props.targetHeader} style={this.props.targetStyle} className=\"p-picklist-target-wrapper\" listClassName=\"p-picklist-target\" metaKeySelection={this.props.metaKeySelection} tabIndex={this.props.tabIndex}/>\r\n\r\n                {this.props.showTargetControls && <PickListControls list={this.props.target} selection={targetSelection}\r\n                            onReorder={this.onTargetReorder} className=\"p-picklist-target-controls\" />}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}