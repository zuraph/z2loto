{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'../../components/datatable/DataTable';import{Column}from'../../components/column/Column';import ProductService from'../service/ProductService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var DataTableSortDemo=/*#__PURE__*/function(_Component){_inherits(DataTableSortDemo,_Component);var _super=_createSuper(DataTableSortDemo);function DataTableSortDemo(props){var _this;_classCallCheck(this,DataTableSortDemo);_this=_super.call(this,props);_this.state={products:[]};_this.productService=new ProductService();_this.priceBodyTemplate=_this.priceBodyTemplate.bind(_assertThisInitialized(_this));return _this;}_createClass(DataTableSortDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.productService.getProductsSmall().then(function(data){return _this2.setState({products:data});});}},{key:\"formatCurrency\",value:function formatCurrency(value){return value.toLocaleString('en-US',{style:'currency',currency:'USD'});}},{key:\"priceBodyTemplate\",value:function priceBodyTemplate(rowData){return this.formatCurrency(rowData.price);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"dataTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DataTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Sort\")),/*#__PURE__*/React.createElement(\"p\",null,\"Enabling sortable property on a column is enough to make a column sortable. Multiple column sorting is enabled using sortMode property and used with metaKey.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Single Column\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.products},/*#__PURE__*/React.createElement(Column,{field:\"code\",header:\"Code\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"category\",header:\"Category\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"quantity\",header:\"Quantity\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"price\",header:\"Price\",body:this.priceBodyTemplate,sortable:true}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Multiple Columns\"),/*#__PURE__*/React.createElement(\"p\",null,\"Use metakey to add a column to the sort selection.\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.products,sortMode:\"multiple\"},/*#__PURE__*/React.createElement(Column,{field:\"code\",header:\"Code\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"category\",header:\"Category\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"quantity\",header:\"Quantity\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"price\",header:\"Price\",body:this.priceBodyTemplate,sortable:true}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Presort\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.products,sortField:\"category\",sortOrder:-1},/*#__PURE__*/React.createElement(Column,{field:\"code\",header:\"Code\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"category\",header:\"Category\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"quantity\",header:\"Quantity\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"price\",header:\"Price\",body:this.priceBodyTemplate,sortable:true}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Removable Sort\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.products,removableSort:true},/*#__PURE__*/React.createElement(Column,{field:\"code\",header:\"Code\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"category\",header:\"Category\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"quantity\",header:\"Quantity\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"price\",header:\"Price\",body:this.priceBodyTemplate,sortable:true})))),/*#__PURE__*/React.createElement(DataTableSortDemoDoc,null));}}]);return DataTableSortDemo;}(Component);export var DataTableSortDemoDoc=/*#__PURE__*/function(_Component2){_inherits(DataTableSortDemoDoc,_Component2);var _super2=_createSuper(DataTableSortDemoDoc);function DataTableSortDemoDoc(props){var _this3;_classCallCheck(this,DataTableSortDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nexport class DataTableSortDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: []\\n        };\\n\\n        this.productService = new ProductService();\\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    formatCurrency(value) {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    priceBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.price);\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Single Column</h5>\\n                    <DataTable value={this.state.products}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multiple Columns</h5>\\n                    <p>Use metakey to add a column to the sort selection.</p>\\n                    <DataTable value={this.state.products} sortMode=\\\"multiple\\\">\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Presort</h5>\\n                    <DataTable value={this.state.products} sortField=\\\"category\\\" sortOrder={-1}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Removable Sort</h5>\\n                    <DataTable value={this.state.products} removableSort>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableSortDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Column</h5>\\n                <DataTable value={products}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple Columns</h5>\\n                <p>Use metakey to add a column to the sort selection.</p>\\n                <DataTable value={products} sortMode=\\\"multiple\\\">\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Presort</h5>\\n                <DataTable value={products} sortField=\\\"category\\\" sortOrder={-1}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Removable Sort</h5>\\n                <DataTable value={products} removableSort>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableSortDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Column</h5>\\n                <DataTable value={products}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple Columns</h5>\\n                <p>Use metakey to add a column to the sort selection.</p>\\n                <DataTable value={products} sortMode=\\\"multiple\\\">\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Presort</h5>\\n                <DataTable value={products} sortField=\\\"category\\\" sortOrder={-1}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Removable Sort</h5>\\n                <DataTable value={products} removableSort>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this3;}_createClass(DataTableSortDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DataTableSortDemo',sources:this.sources,service:'ProductService',data:'products-small'})));}}]);return DataTableSortDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datatable/DataTableSortDemo.js"],"names":["React","Component","DataTable","Column","ProductService","TabView","useLiveEditorTabs","AppInlineHeader","DataTableSortDemo","props","state","products","productService","priceBodyTemplate","bind","getProductsSmall","then","data","setState","value","toLocaleString","style","currency","rowData","formatCurrency","price","DataTableSortDemoDoc","sources","tabName","content","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableSortDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Sort</span></h1>\r\n                        <p>Enabling sortable property on a column is enough to make a column sortable. Multiple column sorting is enabled using sortMode property and\r\n                            used with metaKey.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Single Column</h5>\r\n                        <DataTable value={this.state.products}>\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Multiple Columns</h5>\r\n                        <p>Use metakey to add a column to the sort selection.</p>\r\n                        <DataTable value={this.state.products} sortMode=\"multiple\">\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Presort</h5>\r\n                        <DataTable value={this.state.products} sortField=\"category\" sortOrder={-1}>\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Removable Sort</h5>\r\n                        <DataTable value={this.state.products} removableSort>\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableSortDemoDoc></DataTableSortDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableSortDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class DataTableSortDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Single Column</h5>\r\n                    <DataTable value={this.state.products}>\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multiple Columns</h5>\r\n                    <p>Use metakey to add a column to the sort selection.</p>\r\n                    <DataTable value={this.state.products} sortMode=\"multiple\">\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Presort</h5>\r\n                    <DataTable value={this.state.products} sortField=\"category\" sortOrder={-1}>\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Removable Sort</h5>\r\n                    <DataTable value={this.state.products} removableSort>\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableSortDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Column</h5>\r\n                <DataTable value={products}>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple Columns</h5>\r\n                <p>Use metakey to add a column to the sort selection.</p>\r\n                <DataTable value={products} sortMode=\"multiple\">\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Presort</h5>\r\n                <DataTable value={products} sortField=\"category\" sortOrder={-1}>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Removable Sort</h5>\r\n                <DataTable value={products} removableSort>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableSortDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Column</h5>\r\n                <DataTable value={products}>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple Columns</h5>\r\n                <p>Use metakey to add a column to the sort selection.</p>\r\n                <DataTable value={products} sortMode=\"multiple\">\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Presort</h5>\r\n                <DataTable value={products} sortField=\"category\" sortOrder={-1}>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Removable Sort</h5>\r\n                <DataTable value={products} removableSort>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableSortDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}