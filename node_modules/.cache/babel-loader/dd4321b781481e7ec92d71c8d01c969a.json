{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\contextmenu\\\\ContextMenu.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport ReactDOM from 'react-dom';\nimport DomHandler from '../utils/DomHandler';\nimport { CSSTransition } from 'react-transition-group';\nimport { Ripple } from '../ripple/Ripple';\nimport ObjectUtils from '../utils/ObjectUtils';\n\nvar ContextMenuSub = /*#__PURE__*/function (_Component) {\n  _inherits(ContextMenuSub, _Component);\n\n  var _super = _createSuper(ContextMenuSub);\n\n  function ContextMenuSub(props) {\n    var _this;\n\n    _classCallCheck(this, ContextMenuSub);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activeItem: null\n    };\n    _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));\n    _this.submenuRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ContextMenuSub, [{\n    key: \"onItemMouseEnter\",\n    value: function onItemMouseEnter(event, item) {\n      if (item.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      this.setState({\n        activeItem: item\n      });\n    }\n  }, {\n    key: \"onItemClick\",\n    value: function onItemClick(event, item) {\n      if (item.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      if (!item.url) {\n        event.preventDefault();\n      }\n\n      if (item.command) {\n        item.command({\n          originalEvent: event,\n          item: item\n        });\n      }\n\n      if (!item.items) {\n        this.props.onLeafClick(event);\n      }\n    }\n  }, {\n    key: \"position\",\n    value: function position() {\n      var parentItem = this.submenuRef.current.parentElement;\n      var containerOffset = DomHandler.getOffset(this.submenuRef.current.parentElement);\n      var viewport = DomHandler.getViewport();\n      var sublistWidth = this.submenuRef.current.offsetParent ? this.submenuRef.current.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.submenuRef.current);\n      var itemOuterWidth = DomHandler.getOuterWidth(parentItem.children[0]);\n      this.submenuRef.current.style.top = '0px';\n\n      if (parseInt(containerOffset.left, 10) + itemOuterWidth + sublistWidth > viewport.width - DomHandler.calculateScrollbarWidth()) {\n        this.submenuRef.current.style.left = -1 * sublistWidth + 'px';\n      } else {\n        this.submenuRef.current.style.left = itemOuterWidth + 'px';\n      }\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      this.position();\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.props.root || !this.props.resetMenu;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.isActive()) {\n        this.position();\n      }\n    }\n  }, {\n    key: \"renderSeparator\",\n    value: function renderSeparator(index) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: 'separator_' + index,\n        className: \"p-menu-separator\",\n        role: \"separator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"renderSubmenu\",\n    value: function renderSubmenu(item) {\n      if (item.items) {\n        return /*#__PURE__*/React.createElement(ContextMenuSub, {\n          model: item.items,\n          resetMenu: item !== this.state.activeItem,\n          onLeafClick: this.props.onLeafClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderMenuitem\",\n    value: function renderMenuitem(item, index) {\n      var _this2 = this;\n\n      var active = this.state.activeItem === item;\n      var className = classNames('p-menuitem', {\n        'p-menuitem-active': active\n      }, item.className);\n      var linkClassName = classNames('p-menuitem-link', {\n        'p-disabled': item.disabled\n      });\n      var iconClassName = classNames('p-menuitem-icon', item.icon);\n      var submenuIconClassName = 'p-submenu-icon pi pi-angle-right';\n      var icon = item.icon && /*#__PURE__*/React.createElement(\"span\", {\n        className: iconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 35\n        }\n      });\n      var label = item.label && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-menuitem-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }\n      }, item.label);\n      var submenuIcon = item.items && /*#__PURE__*/React.createElement(\"span\", {\n        className: submenuIconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 43\n        }\n      });\n      var submenu = this.renderSubmenu(item);\n      var content = /*#__PURE__*/React.createElement(\"a\", {\n        href: item.url || '#',\n        className: linkClassName,\n        target: item.target,\n        onClick: function onClick(event) {\n          return _this2.onItemClick(event, item, index);\n        },\n        role: \"menuitem\",\n        \"aria-haspopup\": item.items != null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, icon, label, submenuIcon, /*#__PURE__*/React.createElement(Ripple, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }));\n\n      if (item.template) {\n        var defaultContentOptions = {\n          onClick: function onClick(event) {\n            return _this2.onItemClick(event, item, index);\n          },\n          className: linkClassName,\n          labelClassName: 'p-menuitem-text',\n          iconClassName: iconClassName,\n          submenuIconClassName: submenuIconClassName,\n          element: content,\n          props: this.props,\n          active: active\n        };\n        content = ObjectUtils.getJSXElement(item.template, item, defaultContentOptions);\n      }\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.label + '_' + index,\n        role: \"none\",\n        className: className,\n        style: item.style,\n        onMouseEnter: function onMouseEnter(event) {\n          return _this2.onItemMouseEnter(event, item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, content, submenu);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item, index) {\n      if (item.separator) return this.renderSeparator(index);else return this.renderMenuitem(item, index);\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this3 = this;\n\n      if (this.props.model) {\n        return this.props.model.map(function (item, index) {\n          return _this3.renderItem(item, index);\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = classNames({\n        'p-submenu-list': !this.props.root\n      });\n      var submenu = this.renderMenu();\n      var isActive = this.isActive();\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.submenuRef,\n        classNames: \"p-contextmenusub\",\n        in: isActive,\n        timeout: {\n          enter: 0,\n          exit: 0\n        },\n        unmountOnExit: true,\n        onEnter: this.onEnter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        ref: this.submenuRef,\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, submenu));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.resetMenu === true) {\n        return {\n          activeItem: null\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ContextMenuSub;\n}(Component);\n\nContextMenuSub.defaultProps = {\n  model: null,\n  root: false,\n  className: null,\n  resetMenu: false,\n  onLeafClick: null\n};\nContextMenuSub.propTypes = {\n  model: PropTypes.any,\n  root: PropTypes.bool,\n  className: PropTypes.string,\n  resetMenu: PropTypes.bool,\n  onLeafClick: PropTypes.func\n};\nexport var ContextMenu = /*#__PURE__*/function (_Component2) {\n  _inherits(ContextMenu, _Component2);\n\n  var _super2 = _createSuper(ContextMenu);\n\n  function ContextMenu(props) {\n    var _this4;\n\n    _classCallCheck(this, ContextMenu);\n\n    _this4 = _super2.call(this, props);\n    _this4.state = {\n      visible: false,\n      reshow: false,\n      resetMenu: false\n    };\n    _this4.onMenuClick = _this4.onMenuClick.bind(_assertThisInitialized(_this4));\n    _this4.onLeafClick = _this4.onLeafClick.bind(_assertThisInitialized(_this4));\n    _this4.onMenuMouseEnter = _this4.onMenuMouseEnter.bind(_assertThisInitialized(_this4));\n    _this4.onEnter = _this4.onEnter.bind(_assertThisInitialized(_this4));\n    _this4.onEntered = _this4.onEntered.bind(_assertThisInitialized(_this4));\n    _this4.onExit = _this4.onExit.bind(_assertThisInitialized(_this4));\n    _this4.menuRef = React.createRef();\n    return _this4;\n  }\n\n  _createClass(ContextMenu, [{\n    key: \"onMenuClick\",\n    value: function onMenuClick() {\n      this.setState({\n        resetMenu: false\n      });\n    }\n  }, {\n    key: \"onMenuMouseEnter\",\n    value: function onMenuMouseEnter() {\n      this.setState({\n        resetMenu: false\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show(event) {\n      var _this5 = this;\n\n      if (!(event instanceof Event)) {\n        event.persist();\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n      this.currentEvent = event;\n\n      if (this.state.visible) {\n        this.setState({\n          reshow: true\n        });\n      } else {\n        this.setState({\n          visible: true\n        }, function () {\n          if (_this5.props.onShow) {\n            _this5.props.onShow(_this5.currentEvent);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this6 = this;\n\n      if (this.state.visible && prevState.reshow !== this.state.reshow) {\n        var event = this.currentEvent;\n        this.setState({\n          visible: false,\n          reshow: false,\n          rePosition: false,\n          resetMenu: true\n        }, function () {\n          return _this6.show(event);\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(event) {\n      var _this7 = this;\n\n      if (!(event instanceof Event)) {\n        event.persist();\n      }\n\n      this.currentEvent = event;\n      this.setState({\n        visible: false,\n        reshow: false\n      }, function () {\n        if (_this7.props.onHide) {\n          _this7.props.onHide(_this7.currentEvent);\n        }\n      });\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      if (this.props.autoZIndex) {\n        this.menuRef.current.style.zIndex = String(this.props.baseZIndex + DomHandler.generateZIndex());\n      }\n\n      this.position(this.currentEvent);\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered() {\n      this.bindDocumentListeners();\n    }\n  }, {\n    key: \"onExit\",\n    value: function onExit() {\n      this.currentEvent = null;\n      this.unbindDocumentListeners();\n    }\n  }, {\n    key: \"position\",\n    value: function position(event) {\n      if (event) {\n        var left = event.pageX + 1;\n        var top = event.pageY + 1;\n        var width = this.menuRef.current.offsetParent ? this.menuRef.current.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.menuRef.current);\n        var height = this.menuRef.current.offsetParent ? this.menuRef.current.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.menuRef.current);\n        var viewport = DomHandler.getViewport(); //flip\n\n        if (left + width - document.body.scrollLeft > viewport.width) {\n          left -= width;\n        } //flip\n\n\n        if (top + height - document.body.scrollTop > viewport.height) {\n          top -= height;\n        } //fit\n\n\n        if (left < document.body.scrollLeft) {\n          left = document.body.scrollLeft;\n        } //fit\n\n\n        if (top < document.body.scrollTop) {\n          top = document.body.scrollTop;\n        }\n\n        this.menuRef.current.style.left = left + 'px';\n        this.menuRef.current.style.top = top + 'px';\n      }\n    }\n  }, {\n    key: \"onLeafClick\",\n    value: function onLeafClick(event) {\n      this.setState({\n        resetMenu: true\n      });\n      this.hide(event);\n      event.stopPropagation();\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(event) {\n      return this.menuRef && this.menuRef.current && !(this.menuRef.current.isSameNode(event.target) || this.menuRef.current.contains(event.target));\n    }\n  }, {\n    key: \"bindDocumentListeners\",\n    value: function bindDocumentListeners() {\n      this.bindDocumentResizeListener();\n      this.bindDocumentClickListener();\n    }\n  }, {\n    key: \"unbindDocumentListeners\",\n    value: function unbindDocumentListeners() {\n      this.unbindDocumentResizeListener();\n      this.unbindDocumentClickListener();\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this8 = this;\n\n      if (!this.documentClickListener) {\n        this.documentClickListener = function (event) {\n          if (_this8.isOutsideClicked(event) && event.button !== 2) {\n            _this8.hide(event);\n\n            _this8.setState({\n              resetMenu: true\n            });\n          }\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"bindDocumentContextMenuListener\",\n    value: function bindDocumentContextMenuListener() {\n      var _this9 = this;\n\n      if (!this.documentContextMenuListener) {\n        this.documentContextMenuListener = function (event) {\n          _this9.show(event);\n        };\n\n        document.addEventListener('contextmenu', this.documentContextMenuListener);\n      }\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      var _this10 = this;\n\n      if (!this.documentResizeListener) {\n        this.documentResizeListener = function (event) {\n          if (_this10.state.visible) {\n            _this10.hide(event);\n          }\n        };\n\n        window.addEventListener('resize', this.documentResizeListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"unbindDocumentContextMenuListener\",\n    value: function unbindDocumentContextMenuListener() {\n      if (this.documentContextMenuListener) {\n        document.removeEventListener('contextmenu', this.documentContextMenuListener);\n        this.documentContextMenuListener = null;\n      }\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.global) {\n        this.bindDocumentContextMenuListener();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentListeners();\n      this.unbindDocumentContextMenuListener();\n    }\n  }, {\n    key: \"renderContextMenu\",\n    value: function renderContextMenu() {\n      var className = classNames('p-contextmenu p-component', this.props.className);\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.menuRef,\n        classNames: \"p-contextmenu\",\n        in: this.state.visible,\n        timeout: {\n          enter: 250,\n          exit: 0\n        },\n        unmountOnExit: true,\n        onEnter: this.onEnter,\n        onEntered: this.onEntered,\n        onExit: this.onExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.menuRef,\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        onClick: this.onMenuClick,\n        onMouseEnter: this.onMenuMouseEnter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ContextMenuSub, {\n        model: this.props.model,\n        root: true,\n        resetMenu: this.state.resetMenu,\n        onLeafClick: this.onLeafClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderContextMenu();\n      if (this.props.appendTo) return ReactDOM.createPortal(element, this.props.appendTo);else return element;\n    }\n  }]);\n\n  return ContextMenu;\n}(Component);\nContextMenu.defaultProps = {\n  id: null,\n  model: null,\n  style: null,\n  className: null,\n  global: false,\n  autoZIndex: true,\n  baseZIndex: 0,\n  appendTo: null,\n  onShow: null,\n  onHide: null\n};\nContextMenu.propTypes = {\n  id: PropTypes.string,\n  model: PropTypes.array,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  global: PropTypes.bool,\n  autoZIndex: PropTypes.bool,\n  baseZIndex: PropTypes.number,\n  appendTo: PropTypes.any,\n  onShow: PropTypes.func,\n  onHide: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/contextmenu/ContextMenu.js"],"names":["React","Component","PropTypes","classNames","ReactDOM","DomHandler","CSSTransition","Ripple","ObjectUtils","ContextMenuSub","props","state","activeItem","onEnter","bind","submenuRef","createRef","event","item","disabled","preventDefault","setState","url","command","originalEvent","items","onLeafClick","parentItem","current","parentElement","containerOffset","getOffset","viewport","getViewport","sublistWidth","offsetParent","offsetWidth","getHiddenElementOuterWidth","itemOuterWidth","getOuterWidth","children","style","top","parseInt","left","width","calculateScrollbarWidth","position","root","resetMenu","isActive","index","active","className","linkClassName","iconClassName","icon","submenuIconClassName","label","submenuIcon","submenu","renderSubmenu","content","target","onItemClick","template","defaultContentOptions","onClick","labelClassName","element","getJSXElement","onItemMouseEnter","separator","renderSeparator","renderMenuitem","model","map","renderItem","renderMenu","enter","exit","nextProps","prevState","defaultProps","propTypes","any","bool","string","func","ContextMenu","visible","reshow","onMenuClick","onMenuMouseEnter","onEntered","onExit","menuRef","Event","persist","stopPropagation","currentEvent","onShow","prevProps","rePosition","show","onHide","autoZIndex","zIndex","String","baseZIndex","generateZIndex","bindDocumentListeners","unbindDocumentListeners","pageX","pageY","height","offsetHeight","getHiddenElementOuterHeight","document","body","scrollLeft","scrollTop","hide","isSameNode","contains","bindDocumentResizeListener","bindDocumentClickListener","unbindDocumentResizeListener","unbindDocumentClickListener","documentClickListener","isOutsideClicked","button","addEventListener","documentContextMenuListener","documentResizeListener","window","removeEventListener","global","bindDocumentContextMenuListener","unbindDocumentContextMenuListener","id","renderContextMenu","appendTo","createPortal","array","object","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport ReactDOM from 'react-dom';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Ripple } from '../ripple/Ripple';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\n\r\nclass ContextMenuSub extends Component {\r\n\r\n    static defaultProps = {\r\n        model: null,\r\n        root: false,\r\n        className: null,\r\n        resetMenu: false,\r\n        onLeafClick: null\r\n    };\r\n\r\n    static propTypes = {\r\n        model: PropTypes.any,\r\n        root: PropTypes.bool,\r\n        className: PropTypes.string,\r\n        resetMenu: PropTypes.bool,\r\n        onLeafClick: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeItem: null\r\n        };\r\n\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.submenuRef = React.createRef();\r\n    }\r\n\r\n    onItemMouseEnter(event, item) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            activeItem: item\r\n        });\r\n    }\r\n\r\n    onItemClick(event, item) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (!item.url) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n\r\n        if (!item.items) {\r\n            this.props.onLeafClick(event);\r\n        }\r\n    }\r\n\r\n    position() {\r\n        const parentItem = this.submenuRef.current.parentElement;\r\n        const containerOffset = DomHandler.getOffset(this.submenuRef.current.parentElement)\r\n        const viewport = DomHandler.getViewport();\r\n        const sublistWidth = this.submenuRef.current.offsetParent ? this.submenuRef.current.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.submenuRef.current);\r\n        const itemOuterWidth = DomHandler.getOuterWidth(parentItem.children[0]);\r\n\r\n        this.submenuRef.current.style.top = '0px';\r\n\r\n        if ((parseInt(containerOffset.left, 10) + itemOuterWidth + sublistWidth) > (viewport.width - DomHandler.calculateScrollbarWidth())) {\r\n            this.submenuRef.current.style.left = -1 * sublistWidth + 'px';\r\n        }\r\n        else {\r\n            this.submenuRef.current.style.left = itemOuterWidth + 'px';\r\n        }\r\n    }\r\n\r\n    onEnter() {\r\n        this.position();\r\n    }\r\n\r\n    isActive() {\r\n        return this.props.root || !this.props.resetMenu;\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.resetMenu === true) {\r\n            return {\r\n                activeItem: null\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.isActive()) {\r\n            this.position();\r\n        }\r\n    }\r\n\r\n    renderSeparator(index) {\r\n        return (\r\n            <li key={'separator_' + index} className=\"p-menu-separator\" role=\"separator\"></li>\r\n        );\r\n    }\r\n\r\n    renderSubmenu(item) {\r\n        if (item.items) {\r\n            return (\r\n                <ContextMenuSub model={item.items} resetMenu={item !== this.state.activeItem} onLeafClick={this.props.onLeafClick} />\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderMenuitem(item, index) {\r\n        const active = this.state.activeItem === item;\r\n        const className = classNames('p-menuitem', { 'p-menuitem-active': active }, item.className);\r\n        const linkClassName = classNames('p-menuitem-link', { 'p-disabled': item.disabled });\r\n        const iconClassName = classNames('p-menuitem-icon', item.icon);\r\n        const submenuIconClassName = 'p-submenu-icon pi pi-angle-right';\r\n        const icon = item.icon && <span className={iconClassName}></span>;\r\n        const label = item.label && <span className=\"p-menuitem-text\">{item.label}</span>;\r\n        const submenuIcon = item.items && <span className={submenuIconClassName}></span>;\r\n        const submenu = this.renderSubmenu(item);\r\n        let content = (\r\n            <a href={item.url || '#'} className={linkClassName} target={item.target} onClick={(event) => this.onItemClick(event, item, index)} role=\"menuitem\"\r\n                aria-haspopup={item.items != null}>\r\n                {icon}\r\n                {label}\r\n                {submenuIcon}\r\n                <Ripple />\r\n            </a>\r\n        );\r\n\r\n        if (item.template) {\r\n            const defaultContentOptions = {\r\n                onClick: (event) => this.onItemClick(event, item, index),\r\n                className: linkClassName,\r\n                labelClassName: 'p-menuitem-text',\r\n                iconClassName,\r\n                submenuIconClassName,\r\n                element: content,\r\n                props: this.props,\r\n                active\r\n            };\r\n\r\n            content = ObjectUtils.getJSXElement(item.template, item, defaultContentOptions);\r\n        }\r\n\r\n        return (\r\n            <li key={item.label + '_' + index} role=\"none\" className={className} style={item.style} onMouseEnter={(event) => this.onItemMouseEnter(event, item)}>\r\n                {content}\r\n                {submenu}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    renderItem(item, index) {\r\n        if (item.separator)\r\n            return this.renderSeparator(index);\r\n        else\r\n            return this.renderMenuitem(item, index);\r\n    }\r\n\r\n    renderMenu() {\r\n        if (this.props.model) {\r\n            return (\r\n                this.props.model.map((item, index) => {\r\n                    return this.renderItem(item, index);\r\n                })\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const className = classNames({ 'p-submenu-list': !this.props.root });\r\n        const submenu = this.renderMenu();\r\n        const isActive = this.isActive();\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.submenuRef} classNames=\"p-contextmenusub\" in={isActive} timeout={{ enter: 0, exit: 0 }}\r\n                unmountOnExit onEnter={this.onEnter}>\r\n                <ul ref={this.submenuRef} className={className}>\r\n                    {submenu}\r\n                </ul>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ContextMenu extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        model: null,\r\n        style: null,\r\n        className: null,\r\n        global: false,\r\n        autoZIndex: true,\r\n        baseZIndex: 0,\r\n        appendTo: null,\r\n        onShow: null,\r\n        onHide: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        model: PropTypes.array,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        global: PropTypes.bool,\r\n        autoZIndex: PropTypes.bool,\r\n        baseZIndex: PropTypes.number,\r\n        appendTo: PropTypes.any,\r\n        onShow: PropTypes.func,\r\n        onHide: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false,\r\n            reshow: false,\r\n            resetMenu: false\r\n        };\r\n\r\n        this.onMenuClick = this.onMenuClick.bind(this);\r\n        this.onLeafClick = this.onLeafClick.bind(this);\r\n        this.onMenuMouseEnter = this.onMenuMouseEnter.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.onEntered = this.onEntered.bind(this);\r\n        this.onExit = this.onExit.bind(this);\r\n\r\n        this.menuRef = React.createRef();\r\n    }\r\n\r\n    onMenuClick() {\r\n        this.setState({\r\n            resetMenu: false\r\n        });\r\n    }\r\n\r\n    onMenuMouseEnter() {\r\n        this.setState({\r\n            resetMenu: false\r\n        });\r\n    }\r\n\r\n    show(event) {\r\n        if (!(event instanceof Event)) {\r\n            event.persist();\r\n        }\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        this.currentEvent = event;\r\n\r\n        if (this.state.visible) {\r\n            this.setState({ reshow: true });\r\n        }\r\n        else {\r\n            this.setState({ visible: true }, () => {\r\n                if (this.props.onShow) {\r\n                    this.props.onShow(this.currentEvent);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.visible && prevState.reshow !== this.state.reshow) {\r\n            let event = this.currentEvent;\r\n            this.setState({\r\n                visible: false,\r\n                reshow: false,\r\n                rePosition: false,\r\n                resetMenu: true\r\n            }, () => this.show(event));\r\n        }\r\n    }\r\n\r\n    hide(event) {\r\n        if (!(event instanceof Event)) {\r\n            event.persist();\r\n        }\r\n\r\n        this.currentEvent = event;\r\n        this.setState({ visible: false, reshow: false }, () => {\r\n            if (this.props.onHide) {\r\n                this.props.onHide(this.currentEvent);\r\n            }\r\n        });\r\n    }\r\n\r\n    onEnter() {\r\n        if (this.props.autoZIndex) {\r\n            this.menuRef.current.style.zIndex = String(this.props.baseZIndex + DomHandler.generateZIndex());\r\n        }\r\n\r\n        this.position(this.currentEvent);\r\n    }\r\n\r\n    onEntered() {\r\n        this.bindDocumentListeners();\r\n    }\r\n\r\n    onExit() {\r\n        this.currentEvent = null;\r\n        this.unbindDocumentListeners();\r\n    }\r\n\r\n    position(event) {\r\n        if (event) {\r\n            let left = event.pageX + 1;\r\n            let top = event.pageY + 1;\r\n            let width = this.menuRef.current.offsetParent ? this.menuRef.current.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.menuRef.current);\r\n            let height = this.menuRef.current.offsetParent ? this.menuRef.current.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.menuRef.current);\r\n            let viewport = DomHandler.getViewport();\r\n\r\n            //flip\r\n            if (left + width - document.body.scrollLeft > viewport.width) {\r\n                left -= width;\r\n            }\r\n\r\n            //flip\r\n            if (top + height - document.body.scrollTop > viewport.height) {\r\n                top -= height;\r\n            }\r\n\r\n            //fit\r\n            if (left < document.body.scrollLeft) {\r\n                left = document.body.scrollLeft;\r\n            }\r\n\r\n            //fit\r\n            if (top < document.body.scrollTop) {\r\n                top = document.body.scrollTop;\r\n            }\r\n\r\n            this.menuRef.current.style.left = left + 'px';\r\n            this.menuRef.current.style.top = top + 'px';\r\n        }\r\n    }\r\n\r\n    onLeafClick(event) {\r\n        this.setState({\r\n            resetMenu: true\r\n        });\r\n\r\n        this.hide(event);\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    isOutsideClicked(event) {\r\n        return this.menuRef && this.menuRef.current && !(this.menuRef.current.isSameNode(event.target) || this.menuRef.current.contains(event.target));\r\n    }\r\n\r\n    bindDocumentListeners() {\r\n        this.bindDocumentResizeListener();\r\n        this.bindDocumentClickListener();\r\n    }\r\n\r\n    unbindDocumentListeners() {\r\n        this.unbindDocumentResizeListener();\r\n        this.unbindDocumentClickListener();\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = (event) => {\r\n                if (this.isOutsideClicked(event) && event.button !== 2) {\r\n                    this.hide(event);\r\n\r\n                    this.setState({\r\n                        resetMenu: true\r\n                    });\r\n                }\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    bindDocumentContextMenuListener() {\r\n        if (!this.documentContextMenuListener) {\r\n            this.documentContextMenuListener = (event) => {\r\n                this.show(event);\r\n            };\r\n\r\n            document.addEventListener('contextmenu', this.documentContextMenuListener);\r\n        }\r\n    }\r\n\r\n    bindDocumentResizeListener() {\r\n        if (!this.documentResizeListener) {\r\n            this.documentResizeListener = (event) => {\r\n                if (this.state.visible) {\r\n                    this.hide(event);\r\n                }\r\n            };\r\n\r\n            window.addEventListener('resize', this.documentResizeListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    unbindDocumentContextMenuListener() {\r\n        if (this.documentContextMenuListener) {\r\n            document.removeEventListener('contextmenu', this.documentContextMenuListener);\r\n            this.documentContextMenuListener = null;\r\n        }\r\n    }\r\n\r\n    unbindDocumentResizeListener() {\r\n        if (this.documentResizeListener) {\r\n            window.removeEventListener('resize', this.documentResizeListener);\r\n            this.documentResizeListener = null;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.global) {\r\n            this.bindDocumentContextMenuListener();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentListeners();\r\n        this.unbindDocumentContextMenuListener();\r\n    }\r\n\r\n    renderContextMenu() {\r\n        const className = classNames('p-contextmenu p-component', this.props.className);\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.menuRef} classNames=\"p-contextmenu\" in={this.state.visible} timeout={{ enter: 250, exit: 0 }}\r\n                unmountOnExit onEnter={this.onEnter} onEntered={this.onEntered} onExit={this.onExit}>\r\n                <div ref={this.menuRef} id={this.props.id} className={className} style={this.props.style} onClick={this.onMenuClick} onMouseEnter={this.onMenuMouseEnter}>\r\n                    <ContextMenuSub model={this.props.model} root resetMenu={this.state.resetMenu} onLeafClick={this.onLeafClick} />\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const element = this.renderContextMenu();\r\n\r\n        if (this.props.appendTo)\r\n            return ReactDOM.createPortal(element, this.props.appendTo);\r\n        else\r\n            return element;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}