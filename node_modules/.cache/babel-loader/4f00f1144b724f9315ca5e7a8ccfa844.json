{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\treetable\\\\TreeTable.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FilterUtils from '../utils/FilterUtils';\nimport DomHandler from '../utils/DomHandler';\nimport { Paginator } from '../paginator/Paginator';\nimport { TreeTableHeader } from './TreeTableHeader';\nimport { TreeTableBody } from './TreeTableBody';\nimport { TreeTableFooter } from './TreeTableFooter';\nimport { TreeTableScrollableView } from './TreeTableScrollableView';\nexport var TreeTable = /*#__PURE__*/function (_Component) {\n  _inherits(TreeTable, _Component);\n\n  var _super = _createSuper(TreeTable);\n\n  function TreeTable(props) {\n    var _this;\n\n    _classCallCheck(this, TreeTable);\n\n    _this = _super.call(this, props);\n    var state = {};\n\n    if (!_this.props.onToggle) {\n      _this.state = {\n        expandedKeys: _this.props.expandedKeys\n      };\n    }\n\n    if (!_this.props.onPage) {\n      state.first = props.first;\n      state.rows = props.rows;\n    }\n\n    if (!_this.props.onSort) {\n      state.sortField = props.sortField;\n      state.sortOrder = props.sortOrder;\n      state.multiSortMeta = props.multiSortMeta;\n    }\n\n    if (!_this.props.onFilter) {\n      state.filters = props.filters;\n    }\n\n    if (Object.keys(state).length) {\n      _this.state = state;\n    }\n\n    _this.onToggle = _this.onToggle.bind(_assertThisInitialized(_this));\n    _this.onPageChange = _this.onPageChange.bind(_assertThisInitialized(_this));\n    _this.onSort = _this.onSort.bind(_assertThisInitialized(_this));\n    _this.onFilter = _this.onFilter.bind(_assertThisInitialized(_this));\n    _this.onColumnResizeStart = _this.onColumnResizeStart.bind(_assertThisInitialized(_this));\n    _this.onColumnDragStart = _this.onColumnDragStart.bind(_assertThisInitialized(_this));\n    _this.onColumnDragOver = _this.onColumnDragOver.bind(_assertThisInitialized(_this));\n    _this.onColumnDragLeave = _this.onColumnDragLeave.bind(_assertThisInitialized(_this));\n    _this.onColumnDrop = _this.onColumnDrop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TreeTable, [{\n    key: \"onToggle\",\n    value: function onToggle(event) {\n      if (this.props.onToggle) {\n        this.props.onToggle(event);\n      } else {\n        this.setState({\n          expandedKeys: event.value\n        });\n      }\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(event) {\n      if (this.props.onPage) this.props.onPage(event);else this.setState({\n        first: event.first,\n        rows: event.rows\n      });\n    }\n  }, {\n    key: \"onSort\",\n    value: function onSort(event) {\n      var sortField = event.sortField;\n      var sortOrder = this.getSortField() === event.sortField ? this.getSortOrder() * -1 : this.props.defaultSortOrder;\n      var multiSortMeta;\n      this.columnSortable = event.sortable;\n      this.columnSortFunction = event.sortFunction;\n\n      if (this.props.sortMode === 'multiple') {\n        var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n        multiSortMeta = this.getMultiSortMeta();\n\n        if (multiSortMeta && multiSortMeta instanceof Array) {\n          var sortMeta = multiSortMeta.find(function (sortMeta) {\n            return sortMeta.field === sortField;\n          });\n          sortOrder = sortMeta ? this.getCalculatedSortOrder(sortMeta.order) : sortOrder;\n        }\n\n        if (!multiSortMeta || !metaKey) {\n          multiSortMeta = [];\n        }\n\n        multiSortMeta = this.addSortMeta({\n          field: sortField,\n          order: sortOrder\n        }, multiSortMeta);\n      }\n\n      if (this.props.onSort) {\n        this.props.onSort({\n          sortField: sortField,\n          sortOrder: sortOrder,\n          multiSortMeta: multiSortMeta\n        });\n      } else {\n        this.setState({\n          sortField: sortField,\n          sortOrder: sortOrder,\n          first: 0,\n          multiSortMeta: multiSortMeta\n        });\n      }\n    }\n  }, {\n    key: \"getCalculatedSortOrder\",\n    value: function getCalculatedSortOrder(currentOrder) {\n      return currentOrder * -1;\n    }\n  }, {\n    key: \"addSortMeta\",\n    value: function addSortMeta(meta, multiSortMeta) {\n      var index = -1;\n\n      for (var i = 0; i < multiSortMeta.length; i++) {\n        if (multiSortMeta[i].field === meta.field) {\n          index = i;\n          break;\n        }\n      }\n\n      var value = _toConsumableArray(multiSortMeta);\n\n      if (index >= 0) value[index] = meta;else value.push(meta);\n      return value;\n    }\n  }, {\n    key: \"sortSingle\",\n    value: function sortSingle(data) {\n      return this.sortNodes(data);\n    }\n  }, {\n    key: \"sortNodes\",\n    value: function sortNodes(data) {\n      var _this2 = this;\n\n      var value = _toConsumableArray(data);\n\n      if (this.columnSortable && this.columnSortable === 'custom' && this.columnSortFunction) {\n        value = this.columnSortFunction({\n          field: this.getSortField(),\n          order: this.getSortOrder()\n        });\n      } else {\n        value.sort(function (node1, node2) {\n          var sortField = _this2.getSortField();\n\n          var value1 = ObjectUtils.resolveFieldData(node1.data, sortField);\n          var value2 = ObjectUtils.resolveFieldData(node2.data, sortField);\n          var result = null;\n          if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2, undefined, {\n            numeric: true\n          });else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n          return _this2.getSortOrder() * result;\n        });\n\n        for (var i = 0; i < value.length; i++) {\n          if (value[i].children && value[i].children.length) {\n            value[i].children = this.sortNodes(value[i].children);\n          }\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: \"sortMultiple\",\n    value: function sortMultiple(data) {\n      var multiSortMeta = this.getMultiSortMeta();\n      if (multiSortMeta) return this.sortMultipleNodes(data, multiSortMeta);else return data;\n    }\n  }, {\n    key: \"sortMultipleNodes\",\n    value: function sortMultipleNodes(data, multiSortMeta) {\n      var _this3 = this;\n\n      var value = _toConsumableArray(data);\n\n      value.sort(function (node1, node2) {\n        return _this3.multisortField(node1, node2, multiSortMeta, 0);\n      });\n\n      for (var i = 0; i < value.length; i++) {\n        if (value[i].children && value[i].children.length) {\n          value[i].children = this.sortMultipleNodes(value[i].children, multiSortMeta);\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: \"multisortField\",\n    value: function multisortField(node1, node2, multiSortMeta, index) {\n      var value1 = ObjectUtils.resolveFieldData(node1.data, multiSortMeta[index].field);\n      var value2 = ObjectUtils.resolveFieldData(node2.data, multiSortMeta[index].field);\n      var result = null;\n      if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else {\n        if (value1 === value2) {\n          return multiSortMeta.length - 1 > index ? this.multisortField(node1, node2, multiSortMeta, index + 1) : 0;\n        } else {\n          if ((typeof value1 === 'string' || value1 instanceof String) && (typeof value2 === 'string' || value2 instanceof String)) return multiSortMeta[index].order * value1.localeCompare(value2, undefined, {\n            numeric: true\n          });else result = value1 < value2 ? -1 : 1;\n        }\n      }\n      return multiSortMeta[index].order * result;\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(value, field, mode) {\n      this.onFilter({\n        value: value,\n        field: field,\n        matchMode: mode\n      });\n    }\n  }, {\n    key: \"onFilter\",\n    value: function onFilter(event) {\n      var currentFilters = this.getFilters();\n      var newFilters = currentFilters ? _objectSpread({}, currentFilters) : {};\n      if (!this.isFilterBlank(event.value)) newFilters[event.field] = {\n        value: event.value,\n        matchMode: event.matchMode\n      };else if (newFilters[event.field]) delete newFilters[event.field];\n\n      if (this.props.onFilter) {\n        this.props.onFilter({\n          filters: newFilters\n        });\n      } else {\n        this.setState({\n          first: 0,\n          filters: newFilters\n        });\n      }\n    }\n  }, {\n    key: \"hasFilter\",\n    value: function hasFilter() {\n      var filters = this.getFilters();\n      return filters && Object.keys(filters).length > 0;\n    }\n  }, {\n    key: \"isFilterBlank\",\n    value: function isFilterBlank(filter) {\n      if (filter !== null && filter !== undefined) {\n        if (typeof filter === 'string' && filter.trim().length === 0 || filter instanceof Array && filter.length === 0) return true;else return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"onColumnResizeStart\",\n    value: function onColumnResizeStart(event) {\n      var containerLeft = DomHandler.getOffset(this.container).left;\n      this.resizeColumn = event.columnEl;\n      this.resizeColumnProps = event.column;\n      this.columnResizing = true;\n      this.lastResizerHelperX = event.originalEvent.pageX - containerLeft + this.container.scrollLeft;\n      this.bindColumnResizeEvents();\n    }\n  }, {\n    key: \"onColumnResize\",\n    value: function onColumnResize(event) {\n      var containerLeft = DomHandler.getOffset(this.container).left;\n      DomHandler.addClass(this.container, 'p-unselectable-text');\n      this.resizerHelper.style.height = this.container.offsetHeight + 'px';\n      this.resizerHelper.style.top = 0 + 'px';\n      this.resizerHelper.style.left = event.pageX - containerLeft + this.container.scrollLeft + 'px';\n      this.resizerHelper.style.display = 'block';\n    }\n  }, {\n    key: \"onColumnResizeEnd\",\n    value: function onColumnResizeEnd(event) {\n      var delta = this.resizerHelper.offsetLeft - this.lastResizerHelperX;\n      var columnWidth = this.resizeColumn.offsetWidth;\n      var newColumnWidth = columnWidth + delta;\n      var minWidth = this.resizeColumn.style.minWidth || 15;\n\n      if (columnWidth + delta > parseInt(minWidth, 10)) {\n        if (this.props.columnResizeMode === 'fit') {\n          var nextColumn = this.resizeColumn.nextElementSibling;\n          var nextColumnWidth = nextColumn.offsetWidth - delta;\n\n          if (newColumnWidth > 15 && nextColumnWidth > 15) {\n            if (this.props.scrollable) {\n              var scrollableView = this.findParentScrollableView(this.resizeColumn);\n              var scrollableBodyTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-body-table');\n              var scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n              var scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n              var resizeColumnIndex = DomHandler.index(this.resizeColumn);\n              this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n            } else {\n              this.resizeColumn.style.width = newColumnWidth + 'px';\n\n              if (nextColumn) {\n                nextColumn.style.width = nextColumnWidth + 'px';\n              }\n            }\n          }\n        } else if (this.props.columnResizeMode === 'expand') {\n          if (this.props.scrollable) {\n            var _scrollableView = this.findParentScrollableView(this.resizeColumn);\n\n            var _scrollableBodyTable = DomHandler.findSingle(_scrollableView, 'table.p-treetable-scrollable-body-table');\n\n            var _scrollableHeaderTable = DomHandler.findSingle(_scrollableView, 'table.p-treetable-scrollable-header-table');\n\n            var _scrollableFooterTable = DomHandler.findSingle(_scrollableView, 'table.p-treetable-scrollable-footer-table');\n\n            _scrollableBodyTable.style.width = _scrollableBodyTable.offsetWidth + delta + 'px';\n            _scrollableHeaderTable.style.width = _scrollableHeaderTable.offsetWidth + delta + 'px';\n\n            if (_scrollableFooterTable) {\n              _scrollableFooterTable.style.width = _scrollableHeaderTable.offsetWidth + delta + 'px';\n            }\n\n            var _resizeColumnIndex = DomHandler.index(this.resizeColumn);\n\n            this.resizeColGroup(_scrollableHeaderTable, _resizeColumnIndex, newColumnWidth, null);\n            this.resizeColGroup(_scrollableBodyTable, _resizeColumnIndex, newColumnWidth, null);\n            this.resizeColGroup(_scrollableFooterTable, _resizeColumnIndex, newColumnWidth, null);\n          } else {\n            this.table.style.width = this.table.offsetWidth + delta + 'px';\n            this.resizeColumn.style.width = newColumnWidth + 'px';\n          }\n        }\n\n        if (this.props.onColumnResizeEnd) {\n          this.props.onColumnResizeEnd({\n            element: this.resizeColumn,\n            column: this.resizeColumnProps,\n            delta: delta\n          });\n        }\n      }\n\n      this.resizerHelper.style.display = 'none';\n      this.resizeColumn = null;\n      this.resizeColumnProps = null;\n      DomHandler.removeClass(this.container, 'p-unselectable-text');\n      this.unbindColumnResizeEvents();\n    }\n  }, {\n    key: \"findParentScrollableView\",\n    value: function findParentScrollableView(column) {\n      if (column) {\n        var parent = column.parentElement;\n\n        while (parent && !DomHandler.hasClass(parent, 'p-treetable-scrollable-view')) {\n          parent = parent.parentElement;\n        }\n\n        return parent;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"resizeColGroup\",\n    value: function resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n      if (table) {\n        var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n        if (colGroup) {\n          var col = colGroup.children[resizeColumnIndex];\n          var nextCol = col.nextElementSibling;\n          col.style.width = newColumnWidth + 'px';\n\n          if (nextCol && nextColumnWidth) {\n            nextCol.style.width = nextColumnWidth + 'px';\n          }\n        } else {\n          throw new Error(\"Scrollable tables require a colgroup to support resizable columns\");\n        }\n      }\n    }\n  }, {\n    key: \"bindColumnResizeEvents\",\n    value: function bindColumnResizeEvents() {\n      var _this4 = this;\n\n      this.documentColumnResizeListener = document.addEventListener('mousemove', function (event) {\n        if (_this4.columnResizing) {\n          _this4.onColumnResize(event);\n        }\n      });\n      this.documentColumnResizeEndListener = document.addEventListener('mouseup', function (event) {\n        if (_this4.columnResizing) {\n          _this4.columnResizing = false;\n\n          _this4.onColumnResizeEnd(event);\n        }\n      });\n    }\n  }, {\n    key: \"unbindColumnResizeEvents\",\n    value: function unbindColumnResizeEvents() {\n      document.removeEventListener('document', this.documentColumnResizeListener);\n      document.removeEventListener('document', this.documentColumnResizeEndListener);\n    }\n  }, {\n    key: \"onColumnDragStart\",\n    value: function onColumnDragStart(event) {\n      if (this.columnResizing) {\n        event.preventDefault();\n        return;\n      }\n\n      this.iconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUp);\n      this.iconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorUp);\n      this.draggedColumn = this.findParentHeader(event.target);\n      event.dataTransfer.setData('text', 'b'); // Firefox requires this to make dragging possible\n    }\n  }, {\n    key: \"onColumnDragOver\",\n    value: function onColumnDragOver(event) {\n      var dropHeader = this.findParentHeader(event.target);\n\n      if (this.props.reorderableColumns && this.draggedColumn && dropHeader) {\n        event.preventDefault();\n        var containerOffset = DomHandler.getOffset(this.container);\n        var dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n        if (this.draggedColumn !== dropHeader) {\n          var targetLeft = dropHeaderOffset.left - containerOffset.left; //let targetTop =  containerOffset.top - dropHeaderOffset.top;\n\n          var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n          this.reorderIndicatorUp.style.top = dropHeaderOffset.top - containerOffset.top - (this.iconHeight - 1) + 'px';\n          this.reorderIndicatorDown.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n          if (event.pageX > columnCenter) {\n            this.reorderIndicatorUp.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2) + 'px';\n            this.reorderIndicatorDown.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2) + 'px';\n            this.dropPosition = 1;\n          } else {\n            this.reorderIndicatorUp.style.left = targetLeft - Math.ceil(this.iconWidth / 2) + 'px';\n            this.reorderIndicatorDown.style.left = targetLeft - Math.ceil(this.iconWidth / 2) + 'px';\n            this.dropPosition = -1;\n          }\n\n          this.reorderIndicatorUp.style.display = 'block';\n          this.reorderIndicatorDown.style.display = 'block';\n        }\n      }\n    }\n  }, {\n    key: \"onColumnDragLeave\",\n    value: function onColumnDragLeave(event) {\n      if (this.props.reorderableColumns && this.draggedColumn) {\n        event.preventDefault();\n        this.reorderIndicatorUp.style.display = 'none';\n        this.reorderIndicatorDown.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"onColumnDrop\",\n    value: function onColumnDrop(event) {\n      event.preventDefault();\n\n      if (this.draggedColumn) {\n        var dragIndex = DomHandler.index(this.draggedColumn);\n        var dropIndex = DomHandler.index(this.findParentHeader(event.target));\n        var allowDrop = dragIndex !== dropIndex;\n\n        if (allowDrop && (dropIndex - dragIndex === 1 && this.dropPosition === -1 || dragIndex - dropIndex === 1 && this.dropPosition === 1)) {\n          allowDrop = false;\n        }\n\n        if (allowDrop) {\n          var columns = this.state.columnOrder ? this.getColumns() : React.Children.toArray(this.props.children);\n          ObjectUtils.reorderArray(columns, dragIndex, dropIndex);\n          var columnOrder = [];\n\n          var _iterator = _createForOfIteratorHelper(columns),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var column = _step.value;\n              columnOrder.push(column.props.columnKey || column.props.field);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          this.setState({\n            columnOrder: columnOrder\n          });\n\n          if (this.props.onColReorder) {\n            this.props.onColReorder({\n              dragIndex: dragIndex,\n              dropIndex: dropIndex,\n              columns: columns\n            });\n          }\n        }\n\n        this.reorderIndicatorUp.style.display = 'none';\n        this.reorderIndicatorDown.style.display = 'none';\n        this.draggedColumn.draggable = false;\n        this.draggedColumn = null;\n        this.dropPosition = null;\n      }\n    }\n  }, {\n    key: \"findParentHeader\",\n    value: function findParentHeader(element) {\n      if (element.nodeName === 'TH') {\n        return element;\n      } else {\n        var parent = element.parentElement;\n\n        while (parent.nodeName !== 'TH') {\n          parent = parent.parentElement;\n          if (!parent) break;\n        }\n\n        return parent;\n      }\n    }\n  }, {\n    key: \"getExpandedKeys\",\n    value: function getExpandedKeys() {\n      return this.props.onToggle ? this.props.expandedKeys : this.state.expandedKeys;\n    }\n  }, {\n    key: \"getFirst\",\n    value: function getFirst() {\n      return this.props.onPage ? this.props.first : this.state.first;\n    }\n  }, {\n    key: \"getRows\",\n    value: function getRows() {\n      return this.props.onPage ? this.props.rows : this.state.rows;\n    }\n  }, {\n    key: \"getSortField\",\n    value: function getSortField() {\n      return this.props.onSort ? this.props.sortField : this.state.sortField;\n    }\n  }, {\n    key: \"getSortOrder\",\n    value: function getSortOrder() {\n      return this.props.onSort ? this.props.sortOrder : this.state.sortOrder;\n    }\n  }, {\n    key: \"getMultiSortMeta\",\n    value: function getMultiSortMeta() {\n      return this.props.onSort ? this.props.multiSortMeta : this.state.multiSortMeta;\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return this.props.onFilter ? this.props.filters : this.state.filters;\n    }\n  }, {\n    key: \"findColumnByKey\",\n    value: function findColumnByKey(columns, key) {\n      if (columns && columns.length) {\n        for (var i = 0; i < columns.length; i++) {\n          var child = columns[i];\n\n          if (child.props.columnKey === key || child.props.field === key) {\n            return child;\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getColumns\",\n    value: function getColumns() {\n      var columns = React.Children.toArray(this.props.children);\n\n      if (this.props.reorderableColumns && this.state.columnOrder) {\n        var orderedColumns = [];\n\n        for (var i = 0; i < this.state.columnOrder.length; i++) {\n          orderedColumns.push(this.findColumnByKey(columns, this.state.columnOrder[i]));\n        }\n\n        return orderedColumns;\n      } else {\n        return columns;\n      }\n    }\n  }, {\n    key: \"getTotalRecords\",\n    value: function getTotalRecords(data) {\n      return this.props.lazy ? this.props.totalRecords : data ? data.length : 0;\n    }\n  }, {\n    key: \"isSingleSelectionMode\",\n    value: function isSingleSelectionMode() {\n      return this.props.selectionMode && this.props.selectionMode === 'single';\n    }\n  }, {\n    key: \"isMultipleSelectionMode\",\n    value: function isMultipleSelectionMode() {\n      return this.props.selectionMode && this.props.selectionMode === 'multiple';\n    }\n  }, {\n    key: \"isRowSelectionMode\",\n    value: function isRowSelectionMode() {\n      return this.isSingleSelectionMode() || this.isMultipleSelectionMode();\n    }\n  }, {\n    key: \"getFrozenColumns\",\n    value: function getFrozenColumns(columns) {\n      var frozenColumns = null;\n\n      var _iterator2 = _createForOfIteratorHelper(columns),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var col = _step2.value;\n\n          if (col.props.frozen) {\n            frozenColumns = frozenColumns || [];\n            frozenColumns.push(col);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return frozenColumns;\n    }\n  }, {\n    key: \"getScrollableColumns\",\n    value: function getScrollableColumns(columns) {\n      var scrollableColumns = null;\n\n      var _iterator3 = _createForOfIteratorHelper(columns),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var col = _step3.value;\n\n          if (!col.props.frozen) {\n            scrollableColumns = scrollableColumns || [];\n            scrollableColumns.push(col);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return scrollableColumns;\n    }\n  }, {\n    key: \"filterLocal\",\n    value: function filterLocal(value) {\n      var filteredNodes = [];\n      var filters = this.getFilters();\n      var columns = React.Children.toArray(this.props.children);\n      var isStrictMode = this.props.filterMode === 'strict';\n\n      var _iterator4 = _createForOfIteratorHelper(value),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var node = _step4.value;\n\n          var copyNode = _objectSpread({}, node);\n\n          var localMatch = true;\n          var globalMatch = false;\n\n          for (var j = 0; j < columns.length; j++) {\n            var col = columns[j];\n            var filterMeta = filters ? filters[col.props.field] : null;\n            var filterField = col.props.field;\n            var filterValue = void 0,\n                filterConstraint = void 0,\n                paramsWithoutNode = void 0; //local\n\n            if (filterMeta) {\n              var filterMatchMode = filterMeta.matchMode || col.props.filterMatchMode;\n              filterValue = filterMeta.value;\n              filterConstraint = filterMatchMode === 'custom' ? col.props.filterFunction : FilterUtils[filterMatchMode];\n              paramsWithoutNode = {\n                filterField: filterField,\n                filterValue: filterValue,\n                filterConstraint: filterConstraint,\n                isStrictMode: isStrictMode\n              };\n\n              if (isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode)) || !isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode))) {\n                localMatch = false;\n              }\n\n              if (!localMatch) {\n                break;\n              }\n            } //global\n\n\n            if (this.props.globalFilter && !globalMatch) {\n              var copyNodeForGlobal = _objectSpread({}, copyNode);\n\n              filterValue = this.props.globalFilter;\n              filterConstraint = FilterUtils['contains'];\n              paramsWithoutNode = {\n                filterField: filterField,\n                filterValue: filterValue,\n                filterConstraint: filterConstraint,\n                isStrictMode: isStrictMode\n              };\n\n              if (isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode)) || !isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode))) {\n                globalMatch = true;\n                copyNode = copyNodeForGlobal;\n              }\n            }\n          }\n\n          var matches = localMatch;\n\n          if (this.props.globalFilter) {\n            matches = localMatch && globalMatch;\n          }\n\n          if (matches) {\n            filteredNodes.push(copyNode);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return filteredNodes;\n    }\n  }, {\n    key: \"findFilteredNodes\",\n    value: function findFilteredNodes(node, paramsWithoutNode) {\n      if (node) {\n        var matched = false;\n\n        if (node.children) {\n          var childNodes = _toConsumableArray(node.children);\n\n          node.children = [];\n\n          var _iterator5 = _createForOfIteratorHelper(childNodes),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var childNode = _step5.value;\n\n              var copyChildNode = _objectSpread({}, childNode);\n\n              if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\n                matched = true;\n                node.children.push(copyChildNode);\n              }\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n        }\n\n        if (matched) {\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"isFilterMatched\",\n    value: function isFilterMatched(node, _ref) {\n      var filterField = _ref.filterField,\n          filterValue = _ref.filterValue,\n          filterConstraint = _ref.filterConstraint,\n          isStrictMode = _ref.isStrictMode;\n      var matched = false;\n      var dataFieldValue = ObjectUtils.resolveFieldData(node.data, filterField);\n\n      if (filterConstraint(dataFieldValue, filterValue, this.props.filterLocale)) {\n        matched = true;\n      }\n\n      if (!matched || isStrictMode && !this.isNodeLeaf(node)) {\n        matched = this.findFilteredNodes(node, {\n          filterField: filterField,\n          filterValue: filterValue,\n          filterConstraint: filterConstraint,\n          isStrictMode: isStrictMode\n        }) || matched;\n      }\n\n      return matched;\n    }\n  }, {\n    key: \"isNodeLeaf\",\n    value: function isNodeLeaf(node) {\n      return node.leaf === false ? false : !(node.children && node.children.length);\n    }\n  }, {\n    key: \"processValue\",\n    value: function processValue() {\n      var data = this.props.value;\n\n      if (!this.props.lazy) {\n        if (data && data.length) {\n          if (this.getSortField() || this.getMultiSortMeta()) {\n            if (this.props.sortMode === 'single') data = this.sortSingle(data);else if (this.props.sortMode === 'multiple') data = this.sortMultiple(data);\n          }\n\n          var localFilters = this.getFilters();\n\n          if (localFilters || this.props.globalFilter) {\n            data = this.filterLocal(data, localFilters);\n          }\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"createTableHeader\",\n    value: function createTableHeader(columns, columnGroup) {\n      return /*#__PURE__*/React.createElement(TreeTableHeader, {\n        columns: columns,\n        columnGroup: columnGroup,\n        tabIndex: this.props.tabIndex,\n        onSort: this.onSort,\n        sortField: this.getSortField(),\n        sortOrder: this.getSortOrder(),\n        multiSortMeta: this.getMultiSortMeta(),\n        resizableColumns: this.props.resizableColumns,\n        onResizeStart: this.onColumnResizeStart,\n        reorderableColumns: this.props.reorderableColumns,\n        onDragStart: this.onColumnDragStart,\n        onDragOver: this.onColumnDragOver,\n        onDragLeave: this.onColumnDragLeave,\n        onDrop: this.onColumnDrop,\n        onFilter: this.onFilter,\n        filters: this.getFilters(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"createTableFooter\",\n    value: function createTableFooter(columns, columnGroup) {\n      return /*#__PURE__*/React.createElement(TreeTableFooter, {\n        columns: columns,\n        columnGroup: columnGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"createTableBody\",\n    value: function createTableBody(value, columns) {\n      return /*#__PURE__*/React.createElement(TreeTableBody, {\n        value: value,\n        columns: columns,\n        expandedKeys: this.getExpandedKeys(),\n        onToggle: this.onToggle,\n        onExpand: this.props.onExpand,\n        onCollapse: this.props.onCollapse,\n        paginator: this.props.paginator,\n        first: this.getFirst(),\n        rows: this.getRows(),\n        selectionMode: this.props.selectionMode,\n        selectionKeys: this.props.selectionKeys,\n        onSelectionChange: this.props.onSelectionChange,\n        metaKeySelection: this.props.metaKeySelection,\n        onRowClick: this.props.onRowClick,\n        onSelect: this.props.onSelect,\n        onUnselect: this.props.onUnselect,\n        propagateSelectionUp: this.props.propagateSelectionUp,\n        propagateSelectionDown: this.props.propagateSelectionDown,\n        lazy: this.props.lazy,\n        rowClassName: this.props.rowClassName,\n        emptyMessage: this.props.emptyMessage,\n        loading: this.props.loading,\n        contextMenuSelectionKey: this.props.contextMenuSelectionKey,\n        onContextMenuSelectionChange: this.props.onContextMenuSelectionChange,\n        onContextMenu: this.props.onContextMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"createPaginator\",\n    value: function createPaginator(position, totalRecords) {\n      var className = classNames('p-paginator-' + position, this.props.paginatorClassName);\n      return /*#__PURE__*/React.createElement(Paginator, {\n        first: this.getFirst(),\n        rows: this.getRows(),\n        pageLinkSize: this.props.pageLinkSize,\n        className: className,\n        onPageChange: this.onPageChange,\n        template: this.props.paginatorTemplate,\n        totalRecords: totalRecords,\n        rowsPerPageOptions: this.props.rowsPerPageOptions,\n        currentPageReportTemplate: this.props.currentPageReportTemplate,\n        leftContent: this.props.paginatorLeft,\n        rightContent: this.props.paginatorRight,\n        alwaysShow: this.props.alwaysShowPaginator,\n        dropdownAppendTo: this.props.paginatorDropdownAppendTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"createScrollableView\",\n    value: function createScrollableView(value, columns, frozen, headerColumnGroup, footerColumnGroup) {\n      var header = this.createTableHeader(columns, headerColumnGroup);\n      var footer = this.createTableFooter(columns, footerColumnGroup);\n      var body = this.createTableBody(value, columns);\n      return /*#__PURE__*/React.createElement(TreeTableScrollableView, {\n        columns: columns,\n        header: header,\n        body: body,\n        footer: footer,\n        scrollHeight: this.props.scrollHeight,\n        frozen: frozen,\n        frozenWidth: this.props.frozenWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"renderScrollableTable\",\n    value: function renderScrollableTable(value) {\n      var columns = this.getColumns();\n      var frozenColumns = this.getFrozenColumns(columns);\n      var scrollableColumns = frozenColumns ? this.getScrollableColumns(columns) : columns;\n      var frozenView, scrollableView;\n\n      if (frozenColumns) {\n        frozenView = this.createScrollableView(value, frozenColumns, true, this.props.frozenHeaderColumnGroup, this.props.frozenFooterColumnGroup);\n      }\n\n      scrollableView = this.createScrollableView(value, scrollableColumns, false, this.props.headerColumnGroup, this.props.footerColumnGroup);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-treetable-scrollable-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 13\n        }\n      }, frozenView, scrollableView);\n    }\n  }, {\n    key: \"renderRegularTable\",\n    value: function renderRegularTable(value) {\n      var _this5 = this;\n\n      var columns = this.getColumns();\n      var header = this.createTableHeader(columns, this.props.headerColumnGroup);\n      var footer = this.createTableFooter(columns, this.props.footerColumnGroup);\n      var body = this.createTableBody(value, columns);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-treetable-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        style: this.props.tableStyle,\n        className: this.props.tableClassName,\n        ref: function ref(el) {\n          return _this5.table = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 17\n        }\n      }, header, footer, body));\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable(value) {\n      if (this.props.scrollable) return this.renderScrollableTable(value);else return this.renderRegularTable(value);\n    }\n  }, {\n    key: \"renderLoader\",\n    value: function renderLoader() {\n      if (this.props.loading) {\n        var iconClassName = classNames('p-treetable-loading-icon pi-spin', this.props.loadingIcon);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-treetable-loading\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-treetable-loading-overlay p-component-overlay\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: iconClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var value = this.processValue();\n      var className = classNames('p-treetable p-component', {\n        'p-treetable-hoverable-rows': this.isRowSelectionMode(),\n        'p-treetable-resizable': this.props.resizableColumns,\n        'p-treetable-resizable-fit': this.props.resizableColumns && this.props.columnResizeMode === 'fit',\n        'p-treetable-auto-layout': this.props.autoLayout\n      }, this.props.className);\n      var table = this.renderTable(value);\n      var totalRecords = this.getTotalRecords(value);\n      var headerFacet = this.props.header && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-treetable-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 50\n        }\n      }, this.props.header);\n      var footerFacet = this.props.footer && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-treetable-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 50\n        }\n      }, this.props.footer);\n      var paginatorTop = this.props.paginator && this.props.paginatorPosition !== 'bottom' && this.createPaginator('top', totalRecords);\n      var paginatorBottom = this.props.paginator && this.props.paginatorPosition !== 'top' && this.createPaginator('bottom', totalRecords);\n      var loader = this.renderLoader();\n      var resizeHelper = this.props.resizableColumns && /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this6.resizerHelper = el;\n        },\n        className: \"p-column-resizer-helper\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 61\n        }\n      });\n      var reorderIndicatorUp = this.props.reorderableColumns && /*#__PURE__*/React.createElement(\"span\", {\n        ref: function ref(el) {\n          return _this6.reorderIndicatorUp = el;\n        },\n        className: \"pi pi-arrow-down p-datatable-reorder-indicator-up\",\n        style: {\n          position: 'absolute',\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 69\n        }\n      });\n      var reorderIndicatorDown = this.props.reorderableColumns && /*#__PURE__*/React.createElement(\"span\", {\n        ref: function ref(el) {\n          return _this6.reorderIndicatorDown = el;\n        },\n        className: \"pi pi-arrow-up p-datatable-reorder-indicator-down\",\n        style: {\n          position: 'absolute',\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 71\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        ref: function ref(el) {\n          return _this6.container = el;\n        },\n        \"data-scrollselectors\": \".p-treetable-scrollable-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 13\n        }\n      }, loader, headerFacet, paginatorTop, table, paginatorBottom, footerFacet, resizeHelper, reorderIndicatorUp, reorderIndicatorDown);\n    }\n  }]);\n\n  return TreeTable;\n}(Component);\nTreeTable.defaultProps = {\n  id: null,\n  value: null,\n  header: null,\n  footer: null,\n  style: null,\n  className: null,\n  tableStyle: null,\n  tableClassName: null,\n  expandedKeys: null,\n  paginator: false,\n  paginatorPosition: 'bottom',\n  alwaysShowPaginator: true,\n  paginatorClassName: null,\n  paginatorTemplate: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown',\n  paginatorLeft: null,\n  paginatorRight: null,\n  paginatorDropdownAppendTo: null,\n  pageLinkSize: 5,\n  rowsPerPageOptions: null,\n  currentPageReportTemplate: '({currentPage} of {totalPages})',\n  first: null,\n  rows: null,\n  totalRecords: null,\n  lazy: false,\n  sortField: null,\n  sortOrder: null,\n  multiSortMeta: null,\n  sortMode: 'single',\n  defaultSortOrder: 1,\n  selectionMode: null,\n  selectionKeys: null,\n  contextMenuSelectionKey: null,\n  metaKeySelection: true,\n  propagateSelectionUp: true,\n  propagateSelectionDown: true,\n  autoLayout: false,\n  rowClassName: null,\n  loading: false,\n  loadingIcon: 'pi pi-spinner',\n  tabIndex: 0,\n  scrollable: false,\n  scrollHeight: null,\n  reorderableColumns: false,\n  headerColumnGroup: null,\n  footerColumnGroup: null,\n  frozenHeaderColumnGroup: null,\n  frozenFooterColumnGroup: null,\n  frozenWidth: null,\n  resizableColumns: false,\n  columnResizeMode: 'fit',\n  emptyMessage: \"No records found\",\n  filters: null,\n  globalFilter: null,\n  filterMode: 'lenient',\n  filterLocale: undefined,\n  onFilter: null,\n  onExpand: null,\n  onCollapse: null,\n  onToggle: null,\n  onPage: null,\n  onSort: null,\n  onSelect: null,\n  onUnselect: null,\n  onRowClick: null,\n  onSelectionChange: null,\n  onContextMenuSelectionChange: null,\n  onColumnResizeEnd: null,\n  onColReorder: null,\n  onContextMenu: null\n};\nTreeTable.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.any,\n  header: PropTypes.any,\n  footer: PropTypes.any,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  tableStyle: PropTypes.any,\n  tableClassName: PropTypes.string,\n  expandedKeys: PropTypes.object,\n  paginator: PropTypes.bool,\n  paginatorPosition: PropTypes.string,\n  alwaysShowPaginator: PropTypes.bool,\n  paginatorClassName: PropTypes.string,\n  paginatorTemplate: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  paginatorLeft: PropTypes.any,\n  paginatorRight: PropTypes.any,\n  paginatorDropdownAppendTo: PropTypes.any,\n  pageLinkSize: PropTypes.number,\n  rowsPerPageOptions: PropTypes.array,\n  currentPageReportTemplate: PropTypes.string,\n  first: PropTypes.number,\n  rows: PropTypes.number,\n  totalRecords: PropTypes.number,\n  lazy: PropTypes.bool,\n  sortField: PropTypes.string,\n  sortOrder: PropTypes.number,\n  multiSortMeta: PropTypes.array,\n  sortMode: PropTypes.string,\n  defaultSortOrder: PropTypes.number,\n  selectionMode: PropTypes.string,\n  selectionKeys: PropTypes.any,\n  contextMenuSelectionKey: PropTypes.any,\n  metaKeySelection: PropTypes.bool,\n  propagateSelectionUp: PropTypes.bool,\n  propagateSelectionDown: PropTypes.bool,\n  autoLayout: PropTypes.bool,\n  rowClassName: PropTypes.func,\n  loading: PropTypes.bool,\n  loadingIcon: PropTypes.string,\n  tabIndex: PropTypes.number,\n  scrollable: PropTypes.bool,\n  scrollHeight: PropTypes.string,\n  reorderableColumns: PropTypes.bool,\n  headerColumnGroup: PropTypes.any,\n  footerColumnGroup: PropTypes.any,\n  frozenHeaderColumnGroup: PropTypes.any,\n  frozenFooterColumnGroup: PropTypes.any,\n  frozenWidth: PropTypes.string,\n  resizableColumns: PropTypes.bool,\n  columnResizeMode: PropTypes.string,\n  emptyMessage: PropTypes.string,\n  filters: PropTypes.object,\n  globalFilter: PropTypes.any,\n  filterMode: PropTypes.string,\n  filterLocale: PropTypes.string,\n  onFilter: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCollapse: PropTypes.func,\n  onToggle: PropTypes.func,\n  onPage: PropTypes.func,\n  onSort: PropTypes.func,\n  onSelect: PropTypes.func,\n  onUnselect: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n  onContextMenuSelectionChange: PropTypes.func,\n  onColumnResizeEnd: PropTypes.func,\n  onColReorder: PropTypes.func,\n  onContextMenu: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/treetable/TreeTable.js"],"names":["React","Component","PropTypes","classNames","ObjectUtils","FilterUtils","DomHandler","Paginator","TreeTableHeader","TreeTableBody","TreeTableFooter","TreeTableScrollableView","TreeTable","props","state","onToggle","expandedKeys","onPage","first","rows","onSort","sortField","sortOrder","multiSortMeta","onFilter","filters","Object","keys","length","bind","onPageChange","onColumnResizeStart","onColumnDragStart","onColumnDragOver","onColumnDragLeave","onColumnDrop","event","setState","value","getSortField","getSortOrder","defaultSortOrder","columnSortable","sortable","columnSortFunction","sortFunction","sortMode","metaKey","originalEvent","ctrlKey","getMultiSortMeta","Array","sortMeta","find","field","getCalculatedSortOrder","order","addSortMeta","currentOrder","meta","index","i","push","data","sortNodes","sort","node1","node2","value1","resolveFieldData","value2","result","localeCompare","undefined","numeric","children","sortMultipleNodes","multisortField","String","mode","matchMode","currentFilters","getFilters","newFilters","isFilterBlank","filter","trim","containerLeft","getOffset","container","left","resizeColumn","columnEl","resizeColumnProps","column","columnResizing","lastResizerHelperX","pageX","scrollLeft","bindColumnResizeEvents","addClass","resizerHelper","style","height","offsetHeight","top","display","delta","offsetLeft","columnWidth","offsetWidth","newColumnWidth","minWidth","parseInt","columnResizeMode","nextColumn","nextElementSibling","nextColumnWidth","scrollable","scrollableView","findParentScrollableView","scrollableBodyTable","findSingle","scrollableHeaderTable","scrollableFooterTable","resizeColumnIndex","resizeColGroup","width","table","onColumnResizeEnd","element","removeClass","unbindColumnResizeEvents","parent","parentElement","hasClass","colGroup","nodeName","col","nextCol","Error","documentColumnResizeListener","document","addEventListener","onColumnResize","documentColumnResizeEndListener","removeEventListener","preventDefault","iconWidth","getHiddenElementOuterWidth","reorderIndicatorUp","iconHeight","getHiddenElementOuterHeight","draggedColumn","findParentHeader","target","dataTransfer","setData","dropHeader","reorderableColumns","containerOffset","dropHeaderOffset","targetLeft","columnCenter","reorderIndicatorDown","Math","ceil","dropPosition","dragIndex","dropIndex","allowDrop","columns","columnOrder","getColumns","Children","toArray","reorderArray","columnKey","onColReorder","draggable","key","child","orderedColumns","findColumnByKey","lazy","totalRecords","selectionMode","isSingleSelectionMode","isMultipleSelectionMode","frozenColumns","frozen","scrollableColumns","filteredNodes","isStrictMode","filterMode","node","copyNode","localMatch","globalMatch","j","filterMeta","filterField","filterValue","filterConstraint","paramsWithoutNode","filterMatchMode","filterFunction","findFilteredNodes","isFilterMatched","globalFilter","copyNodeForGlobal","matches","matched","childNodes","childNode","copyChildNode","dataFieldValue","filterLocale","isNodeLeaf","leaf","sortSingle","sortMultiple","localFilters","filterLocal","columnGroup","tabIndex","resizableColumns","getExpandedKeys","onExpand","onCollapse","paginator","getFirst","getRows","selectionKeys","onSelectionChange","metaKeySelection","onRowClick","onSelect","onUnselect","propagateSelectionUp","propagateSelectionDown","rowClassName","emptyMessage","loading","contextMenuSelectionKey","onContextMenuSelectionChange","onContextMenu","position","className","paginatorClassName","pageLinkSize","paginatorTemplate","rowsPerPageOptions","currentPageReportTemplate","paginatorLeft","paginatorRight","alwaysShowPaginator","paginatorDropdownAppendTo","headerColumnGroup","footerColumnGroup","header","createTableHeader","footer","createTableFooter","body","createTableBody","scrollHeight","frozenWidth","getFrozenColumns","getScrollableColumns","frozenView","createScrollableView","frozenHeaderColumnGroup","frozenFooterColumnGroup","tableStyle","tableClassName","el","renderScrollableTable","renderRegularTable","iconClassName","loadingIcon","processValue","isRowSelectionMode","autoLayout","renderTable","getTotalRecords","headerFacet","footerFacet","paginatorTop","paginatorPosition","createPaginator","paginatorBottom","loader","renderLoader","resizeHelper","id","defaultProps","propTypes","string","any","object","bool","oneOfType","number","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport FilterUtils from '../utils/FilterUtils';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { Paginator } from '../paginator/Paginator';\r\nimport { TreeTableHeader } from './TreeTableHeader';\r\nimport { TreeTableBody } from './TreeTableBody';\r\nimport { TreeTableFooter } from './TreeTableFooter';\r\nimport { TreeTableScrollableView} from './TreeTableScrollableView';\r\n\r\nexport class TreeTable extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        header: null,\r\n        footer: null,\r\n        style: null,\r\n        className: null,\r\n        tableStyle: null,\r\n        tableClassName: null,\r\n        expandedKeys: null,\r\n        paginator: false,\r\n        paginatorPosition: 'bottom',\r\n        alwaysShowPaginator: true,\r\n        paginatorClassName: null,\r\n        paginatorTemplate: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown',\r\n        paginatorLeft:null,\r\n        paginatorRight: null,\r\n        paginatorDropdownAppendTo: null,\r\n        pageLinkSize: 5,\r\n        rowsPerPageOptions: null,\r\n        currentPageReportTemplate: '({currentPage} of {totalPages})',\r\n        first: null,\r\n        rows: null,\r\n        totalRecords: null,\r\n        lazy: false,\r\n        sortField: null,\r\n        sortOrder: null,\r\n        multiSortMeta: null,\r\n        sortMode: 'single',\r\n        defaultSortOrder: 1,\r\n        selectionMode: null,\r\n        selectionKeys: null,\r\n        contextMenuSelectionKey: null,\r\n        metaKeySelection: true,\r\n        propagateSelectionUp: true,\r\n        propagateSelectionDown: true,\r\n        autoLayout: false,\r\n        rowClassName: null,\r\n        loading: false,\r\n        loadingIcon: 'pi pi-spinner',\r\n        tabIndex: 0,\r\n        scrollable: false,\r\n        scrollHeight: null,\r\n        reorderableColumns: false,\r\n        headerColumnGroup: null,\r\n        footerColumnGroup: null,\r\n        frozenHeaderColumnGroup: null,\r\n        frozenFooterColumnGroup: null,\r\n        frozenWidth: null,\r\n        resizableColumns: false,\r\n        columnResizeMode: 'fit',\r\n        emptyMessage: \"No records found\",\r\n        filters: null,\r\n        globalFilter: null,\r\n        filterMode: 'lenient',\r\n        filterLocale: undefined,\r\n        onFilter: null,\r\n        onExpand: null,\r\n        onCollapse: null,\r\n        onToggle: null,\r\n        onPage: null,\r\n        onSort: null,\r\n        onSelect: null,\r\n        onUnselect: null,\r\n        onRowClick: null,\r\n        onSelectionChange: null,\r\n        onContextMenuSelectionChange: null,\r\n        onColumnResizeEnd: null,\r\n        onColReorder: null,\r\n        onContextMenu: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.any,\r\n        header: PropTypes.any,\r\n        footer: PropTypes.any,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        tableStyle: PropTypes.any,\r\n        tableClassName: PropTypes.string,\r\n        expandedKeys: PropTypes.object,\r\n        paginator: PropTypes.bool,\r\n        paginatorPosition: PropTypes.string,\r\n        alwaysShowPaginator: PropTypes.bool,\r\n        paginatorClassName: PropTypes.string,\r\n        paginatorTemplate: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n        paginatorLeft: PropTypes.any,\r\n        paginatorRight: PropTypes.any,\r\n        paginatorDropdownAppendTo: PropTypes.any,\r\n        pageLinkSize: PropTypes.number,\r\n        rowsPerPageOptions: PropTypes.array,\r\n        currentPageReportTemplate: PropTypes.string,\r\n        first: PropTypes.number,\r\n        rows: PropTypes.number,\r\n        totalRecords: PropTypes.number,\r\n        lazy: PropTypes.bool,\r\n        sortField: PropTypes.string,\r\n        sortOrder: PropTypes.number,\r\n        multiSortMeta: PropTypes.array,\r\n        sortMode: PropTypes.string,\r\n        defaultSortOrder: PropTypes.number,\r\n        selectionMode: PropTypes.string,\r\n        selectionKeys: PropTypes.any,\r\n        contextMenuSelectionKey: PropTypes.any,\r\n        metaKeySelection: PropTypes.bool,\r\n        propagateSelectionUp: PropTypes.bool,\r\n        propagateSelectionDown: PropTypes.bool,\r\n        autoLayout: PropTypes.bool,\r\n        rowClassName: PropTypes.func,\r\n        loading: PropTypes.bool,\r\n        loadingIcon: PropTypes.string,\r\n        tabIndex: PropTypes.number,\r\n        scrollable: PropTypes.bool,\r\n        scrollHeight: PropTypes.string,\r\n        reorderableColumns: PropTypes.bool,\r\n        headerColumnGroup: PropTypes.any,\r\n        footerColumnGroup: PropTypes.any,\r\n        frozenHeaderColumnGroup: PropTypes.any,\r\n        frozenFooterColumnGroup: PropTypes.any,\r\n        frozenWidth: PropTypes.string,\r\n        resizableColumns: PropTypes.bool,\r\n        columnResizeMode: PropTypes.string,\r\n        emptyMessage: PropTypes.string,\r\n        filters: PropTypes.object,\r\n        globalFilter: PropTypes.any,\r\n        filterMode: PropTypes.string,\r\n        filterLocale: PropTypes.string,\r\n        onFilter: PropTypes.func,\r\n        onExpand: PropTypes.func,\r\n        onCollapse: PropTypes.func,\r\n        onToggle: PropTypes.func,\r\n        onPage: PropTypes.func,\r\n        onSort: PropTypes.func,\r\n        onSelect: PropTypes.func,\r\n        onUnselect: PropTypes.func,\r\n        onRowClick: PropTypes.func,\r\n        onSelectionChange: PropTypes.func,\r\n        onContextMenuSelectionChange: PropTypes.func,\r\n        onColumnResizeEnd: PropTypes.func,\r\n        onColReorder: PropTypes.func,\r\n        onContextMenu: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let state = {};\r\n\r\n        if (!this.props.onToggle) {\r\n            this.state = {\r\n                expandedKeys: this.props.expandedKeys\r\n            };\r\n        }\r\n\r\n        if (!this.props.onPage) {\r\n            state.first = props.first;\r\n            state.rows = props.rows;\r\n        }\r\n\r\n        if (!this.props.onSort) {\r\n            state.sortField = props.sortField;\r\n            state.sortOrder = props.sortOrder;\r\n            state.multiSortMeta = props.multiSortMeta;\r\n        }\r\n\r\n        if (!this.props.onFilter) {\r\n            state.filters = props.filters;\r\n        }\r\n\r\n        if (Object.keys(state).length) {\r\n            this.state = state;\r\n        }\r\n\r\n        this.onToggle = this.onToggle.bind(this);\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onColumnResizeStart = this.onColumnResizeStart.bind(this);\r\n        this.onColumnDragStart = this.onColumnDragStart.bind(this);\r\n        this.onColumnDragOver = this.onColumnDragOver.bind(this);\r\n        this.onColumnDragLeave = this.onColumnDragLeave.bind(this);\r\n        this.onColumnDrop = this.onColumnDrop.bind(this);\r\n    }\r\n\r\n    onToggle(event) {\r\n        if (this.props.onToggle) {\r\n            this.props.onToggle(event);\r\n        }\r\n        else {\r\n            this.setState({\r\n                expandedKeys: event.value\r\n            });\r\n        }\r\n    }\r\n\r\n    onPageChange(event) {\r\n        if (this.props.onPage)\r\n            this.props.onPage(event);\r\n        else\r\n            this.setState({first: event.first, rows: event.rows});\r\n    }\r\n\r\n    onSort(event) {\r\n        let sortField = event.sortField;\r\n        let sortOrder = (this.getSortField() === event.sortField) ? this.getSortOrder() * -1 : this.props.defaultSortOrder;\r\n        let multiSortMeta;\r\n\r\n        this.columnSortable = event.sortable;\r\n        this.columnSortFunction = event.sortFunction;\r\n\r\n        if (this.props.sortMode === 'multiple') {\r\n            let metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\r\n            multiSortMeta = this.getMultiSortMeta();\r\n\r\n            if (multiSortMeta && multiSortMeta instanceof Array) {\r\n                const sortMeta = multiSortMeta.find(sortMeta => sortMeta.field === sortField);\r\n                sortOrder = sortMeta ? this.getCalculatedSortOrder(sortMeta.order) : sortOrder;\r\n            }\r\n\r\n            if (!multiSortMeta || !metaKey) {\r\n                multiSortMeta = [];\r\n            }\r\n\r\n            multiSortMeta = this.addSortMeta({field: sortField, order: sortOrder}, multiSortMeta);\r\n        }\r\n\r\n        if (this.props.onSort) {\r\n            this.props.onSort({\r\n                sortField: sortField,\r\n                sortOrder: sortOrder,\r\n                multiSortMeta: multiSortMeta\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                sortField: sortField,\r\n                sortOrder: sortOrder,\r\n                first: 0,\r\n                multiSortMeta: multiSortMeta\r\n            });\r\n        }\r\n    }\r\n\r\n    getCalculatedSortOrder(currentOrder) {\r\n        return currentOrder * -1;\r\n    }\r\n\r\n    addSortMeta(meta, multiSortMeta) {\r\n        let index = -1;\r\n        for (let i = 0; i < multiSortMeta.length; i++) {\r\n            if (multiSortMeta[i].field === meta.field) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let value = [...multiSortMeta];\r\n        if(index >= 0)\r\n            value[index] = meta;\r\n        else\r\n            value.push(meta);\r\n\r\n        return value;\r\n    }\r\n\r\n    sortSingle(data) {\r\n        return this.sortNodes(data);\r\n    }\r\n\r\n    sortNodes(data) {\r\n        let value = [...data];\r\n\r\n        if(this.columnSortable && this.columnSortable === 'custom' && this.columnSortFunction) {\r\n            value = this.columnSortFunction({\r\n                field: this.getSortField(),\r\n                order: this.getSortOrder()\r\n            });\r\n        }\r\n        else {\r\n            value.sort((node1, node2) => {\r\n                const sortField = this.getSortField();\r\n                const value1 = ObjectUtils.resolveFieldData(node1.data, sortField);\r\n                const value2 = ObjectUtils.resolveFieldData(node2.data, sortField);\r\n                let result = null;\r\n\r\n                if (value1 == null && value2 != null)\r\n                    result = -1;\r\n                else if (value1 != null && value2 == null)\r\n                    result = 1;\r\n                else if (value1 == null && value2 == null)\r\n                    result = 0;\r\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\r\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\r\n                else\r\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\r\n\r\n                return (this.getSortOrder() * result);\r\n            });\r\n\r\n            for (let i = 0; i < value.length; i++) {\r\n                if (value[i].children && value[i].children.length) {\r\n                    value[i].children = this.sortNodes(value[i].children);\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    sortMultiple(data) {\r\n        let multiSortMeta = this.getMultiSortMeta();\r\n\r\n        if (multiSortMeta)\r\n            return this.sortMultipleNodes(data, multiSortMeta);\r\n        else\r\n            return data;\r\n    }\r\n\r\n    sortMultipleNodes(data, multiSortMeta) {\r\n        let value = [...data];\r\n        value.sort((node1, node2) => {\r\n            return this.multisortField(node1, node2, multiSortMeta, 0);\r\n        });\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            if (value[i].children && value[i].children.length) {\r\n                value[i].children = this.sortMultipleNodes(value[i].children, multiSortMeta);\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    multisortField(node1, node2, multiSortMeta, index) {\r\n        const value1 = ObjectUtils.resolveFieldData(node1.data, multiSortMeta[index].field);\r\n        const value2 = ObjectUtils.resolveFieldData(node2.data, multiSortMeta[index].field);\r\n        let result = null;\r\n\r\n        if (value1 == null && value2 != null)\r\n            result = -1;\r\n        else if (value1 != null && value2 == null)\r\n            result = 1;\r\n        else if (value1 == null && value2 == null)\r\n            result = 0;\r\n        else {\r\n            if (value1 === value2)  {\r\n                return (multiSortMeta.length - 1) > (index) ? (this.multisortField(node1, node2, multiSortMeta, index + 1)) : 0;\r\n            }\r\n            else {\r\n                if ((typeof value1 === 'string' || value1 instanceof String) && (typeof value2 === 'string' || value2 instanceof String))\r\n                    return (multiSortMeta[index].order * value1.localeCompare(value2, undefined, { numeric: true }));\r\n                else\r\n                    result = (value1 < value2) ? -1 : 1;\r\n            }\r\n        }\r\n\r\n        return (multiSortMeta[index].order * result);\r\n    }\r\n\r\n    filter(value, field, mode) {\r\n        this.onFilter({\r\n            value: value,\r\n            field: field,\r\n            matchMode: mode\r\n        });\r\n    }\r\n\r\n    onFilter(event) {\r\n        let currentFilters = this.getFilters();\r\n        let newFilters = currentFilters ? {...currentFilters} : {};\r\n\r\n        if(!this.isFilterBlank(event.value))\r\n            newFilters[event.field] = {value: event.value, matchMode: event.matchMode};\r\n        else if(newFilters[event.field])\r\n            delete newFilters[event.field];\r\n\r\n        if (this.props.onFilter) {\r\n            this.props.onFilter({\r\n                filters: newFilters\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                first: 0,\r\n                filters: newFilters\r\n            });\r\n        }\r\n    }\r\n\r\n    hasFilter() {\r\n        let filters = this.getFilters();\r\n\r\n        return filters && Object.keys(filters).length > 0;\r\n    }\r\n\r\n    isFilterBlank(filter) {\r\n        if(filter !== null && filter !== undefined) {\r\n            if((typeof filter === 'string' && filter.trim().length === 0) || (filter instanceof Array && filter.length === 0))\r\n                return true;\r\n            else\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onColumnResizeStart(event) {\r\n        let containerLeft = DomHandler.getOffset(this.container).left;\r\n        this.resizeColumn = event.columnEl;\r\n        this.resizeColumnProps = event.column;\r\n        this.columnResizing = true;\r\n        this.lastResizerHelperX = (event.originalEvent.pageX - containerLeft + this.container.scrollLeft);\r\n\r\n        this.bindColumnResizeEvents();\r\n    }\r\n\r\n    onColumnResize(event) {\r\n        let containerLeft = DomHandler.getOffset(this.container).left;\r\n        DomHandler.addClass(this.container, 'p-unselectable-text');\r\n        this.resizerHelper.style.height = this.container.offsetHeight + 'px';\r\n        this.resizerHelper.style.top = 0 + 'px';\r\n        this.resizerHelper.style.left = (event.pageX - containerLeft + this.container.scrollLeft) + 'px';\r\n\r\n        this.resizerHelper.style.display = 'block';\r\n    }\r\n\r\n    onColumnResizeEnd(event) {\r\n        let delta = this.resizerHelper.offsetLeft - this.lastResizerHelperX;\r\n        let columnWidth = this.resizeColumn.offsetWidth;\r\n        let newColumnWidth = columnWidth + delta;\r\n        let minWidth = this.resizeColumn.style.minWidth||15;\r\n\r\n        if(columnWidth + delta > parseInt(minWidth, 10)) {\r\n            if(this.props.columnResizeMode === 'fit') {\r\n                let nextColumn = this.resizeColumn.nextElementSibling;\r\n                let nextColumnWidth = nextColumn.offsetWidth - delta;\r\n\r\n                if(newColumnWidth > 15 && nextColumnWidth > 15) {\r\n                    if(this.props.scrollable) {\r\n                        let scrollableView = this.findParentScrollableView(this.resizeColumn);\r\n                        let scrollableBodyTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-body-table');\r\n                        let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\r\n                        let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\r\n                        let resizeColumnIndex = DomHandler.index(this.resizeColumn);\r\n\r\n                        this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                        this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                        this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                    }\r\n                    else {\r\n                        this.resizeColumn.style.width = newColumnWidth + 'px';\r\n                        if(nextColumn) {\r\n                            nextColumn.style.width = nextColumnWidth + 'px';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(this.props.columnResizeMode === 'expand') {\r\n                if (this.props.scrollable) {\r\n                    let scrollableView = this.findParentScrollableView(this.resizeColumn);\r\n                    let scrollableBodyTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-body-table');\r\n                    let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\r\n                    let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\r\n                    scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\r\n                    scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\r\n                    if(scrollableFooterTable) {\r\n                        scrollableFooterTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\r\n                    }\r\n                    let resizeColumnIndex = DomHandler.index(this.resizeColumn);\r\n\r\n                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\r\n                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\r\n                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\r\n                }\r\n                else {\r\n                    this.table.style.width = this.table.offsetWidth + delta + 'px';\r\n                    this.resizeColumn.style.width = newColumnWidth + 'px';\r\n                }\r\n            }\r\n\r\n            if(this.props.onColumnResizeEnd) {\r\n                this.props.onColumnResizeEnd({\r\n                    element: this.resizeColumn,\r\n                    column: this.resizeColumnProps,\r\n                    delta: delta\r\n                });\r\n            }\r\n        }\r\n\r\n        this.resizerHelper.style.display = 'none';\r\n        this.resizeColumn = null;\r\n        this.resizeColumnProps = null;\r\n        DomHandler.removeClass(this.container, 'p-unselectable-text');\r\n\r\n        this.unbindColumnResizeEvents();\r\n    }\r\n\r\n    findParentScrollableView(column) {\r\n        if (column) {\r\n            let parent = column.parentElement;\r\n            while (parent && !DomHandler.hasClass(parent, 'p-treetable-scrollable-view')) {\r\n                parent = parent.parentElement;\r\n            }\r\n\r\n            return parent;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\r\n        if(table) {\r\n            let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\r\n\r\n            if(colGroup) {\r\n                let col = colGroup.children[resizeColumnIndex];\r\n                let nextCol = col.nextElementSibling;\r\n                col.style.width = newColumnWidth + 'px';\r\n\r\n                if (nextCol && nextColumnWidth) {\r\n                    nextCol.style.width = nextColumnWidth + 'px';\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Scrollable tables require a colgroup to support resizable columns\");\r\n            }\r\n        }\r\n    }\r\n\r\n    bindColumnResizeEvents() {\r\n        this.documentColumnResizeListener = document.addEventListener('mousemove', (event) => {\r\n            if(this.columnResizing) {\r\n                this.onColumnResize(event);\r\n            }\r\n        });\r\n\r\n        this.documentColumnResizeEndListener = document.addEventListener('mouseup', (event) => {\r\n            if(this.columnResizing) {\r\n                this.columnResizing = false;\r\n                this.onColumnResizeEnd(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    unbindColumnResizeEvents() {\r\n        document.removeEventListener('document', this.documentColumnResizeListener);\r\n        document.removeEventListener('document', this.documentColumnResizeEndListener);\r\n    }\r\n\r\n    onColumnDragStart(event) {\r\n        if(this.columnResizing) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        this.iconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUp);\r\n        this.iconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorUp);\r\n\r\n        this.draggedColumn = this.findParentHeader(event.target);\r\n        event.dataTransfer.setData('text', 'b'); // Firefox requires this to make dragging possible\r\n    }\r\n\r\n    onColumnDragOver(event) {\r\n        let dropHeader = this.findParentHeader(event.target);\r\n        if(this.props.reorderableColumns && this.draggedColumn && dropHeader) {\r\n            event.preventDefault();\r\n            let containerOffset = DomHandler.getOffset(this.container);\r\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\r\n\r\n            if(this.draggedColumn !== dropHeader) {\r\n                let targetLeft =  dropHeaderOffset.left - containerOffset.left;\r\n                //let targetTop =  containerOffset.top - dropHeaderOffset.top;\r\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\r\n\r\n                this.reorderIndicatorUp.style.top = dropHeaderOffset.top - containerOffset.top - (this.iconHeight - 1) + 'px';\r\n                this.reorderIndicatorDown.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\r\n\r\n                if(event.pageX > columnCenter) {\r\n                    this.reorderIndicatorUp.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDown.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2))+ 'px';\r\n                    this.dropPosition = 1;\r\n                }\r\n                else {\r\n                    this.reorderIndicatorUp.style.left = (targetLeft - Math.ceil(this.iconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDown.style.left = (targetLeft - Math.ceil(this.iconWidth / 2))+ 'px';\r\n                    this.dropPosition = -1;\r\n                }\r\n\r\n                this.reorderIndicatorUp.style.display = 'block';\r\n                this.reorderIndicatorDown.style.display = 'block';\r\n            }\r\n        }\r\n    }\r\n\r\n    onColumnDragLeave(event) {\r\n        if(this.props.reorderableColumns && this.draggedColumn) {\r\n            event.preventDefault();\r\n            this.reorderIndicatorUp.style.display = 'none';\r\n            this.reorderIndicatorDown.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    onColumnDrop(event) {\r\n        event.preventDefault();\r\n        if(this.draggedColumn) {\r\n            let dragIndex = DomHandler.index(this.draggedColumn);\r\n            let dropIndex = DomHandler.index(this.findParentHeader(event.target));\r\n            let allowDrop = (dragIndex !== dropIndex);\r\n            if(allowDrop && ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dragIndex - dropIndex === 1 && this.dropPosition === 1))) {\r\n                allowDrop = false;\r\n            }\r\n\r\n            if(allowDrop) {\r\n                let columns = this.state.columnOrder ? this.getColumns() : React.Children.toArray(this.props.children);\r\n                ObjectUtils.reorderArray(columns, dragIndex, dropIndex);\r\n                let columnOrder = [];\r\n                for(let column of columns) {\r\n                    columnOrder.push(column.props.columnKey||column.props.field);\r\n                }\r\n\r\n                this.setState({\r\n                    columnOrder: columnOrder\r\n                });\r\n\r\n                if (this.props.onColReorder) {\r\n                    this.props.onColReorder({\r\n                        dragIndex: dragIndex,\r\n                        dropIndex: dropIndex,\r\n                        columns: columns\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.reorderIndicatorUp.style.display = 'none';\r\n            this.reorderIndicatorDown.style.display = 'none';\r\n            this.draggedColumn.draggable = false;\r\n            this.draggedColumn = null;\r\n            this.dropPosition = null;\r\n        }\r\n    }\r\n\r\n    findParentHeader(element) {\r\n        if(element.nodeName === 'TH') {\r\n            return element;\r\n        }\r\n        else {\r\n            let parent = element.parentElement;\r\n            while(parent.nodeName !== 'TH') {\r\n                parent = parent.parentElement;\r\n                if(!parent) break;\r\n            }\r\n            return parent;\r\n        }\r\n    }\r\n\r\n    getExpandedKeys() {\r\n        return this.props.onToggle ? this.props.expandedKeys : this.state.expandedKeys;\r\n    }\r\n\r\n    getFirst() {\r\n        return this.props.onPage ? this.props.first : this.state.first;\r\n    }\r\n\r\n    getRows() {\r\n        return this.props.onPage ? this.props.rows : this.state.rows;\r\n    }\r\n\r\n    getSortField() {\r\n        return this.props.onSort ? this.props.sortField : this.state.sortField;\r\n    }\r\n\r\n    getSortOrder() {\r\n        return this.props.onSort ? this.props.sortOrder : this.state.sortOrder;\r\n    }\r\n\r\n    getMultiSortMeta() {\r\n        return this.props.onSort ? this.props.multiSortMeta : this.state.multiSortMeta;\r\n    }\r\n\r\n    getFilters() {\r\n        return this.props.onFilter ? this.props.filters : this.state.filters;\r\n    }\r\n\r\n    findColumnByKey(columns, key) {\r\n        if(columns && columns.length) {\r\n            for(let i = 0; i < columns.length; i++) {\r\n                let child = columns[i];\r\n                if(child.props.columnKey === key || child.props.field === key) {\r\n                    return child;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getColumns() {\r\n        let columns = React.Children.toArray(this.props.children);\r\n\r\n        if(this.props.reorderableColumns && this.state.columnOrder) {\r\n            let orderedColumns = [];\r\n            for(let i = 0; i < this.state.columnOrder.length; i++) {\r\n                orderedColumns.push(this.findColumnByKey(columns, this.state.columnOrder[i]));\r\n            }\r\n\r\n            return orderedColumns;\r\n        }\r\n        else {\r\n            return columns;\r\n        }\r\n    }\r\n\r\n    getTotalRecords(data) {\r\n        return this.props.lazy ? this.props.totalRecords : data ? data.length : 0;\r\n    }\r\n\r\n    isSingleSelectionMode() {\r\n        return this.props.selectionMode && this.props.selectionMode === 'single';\r\n    }\r\n\r\n    isMultipleSelectionMode() {\r\n        return this.props.selectionMode && this.props.selectionMode === 'multiple';\r\n    }\r\n\r\n    isRowSelectionMode() {\r\n        return this.isSingleSelectionMode() || this.isMultipleSelectionMode();\r\n    }\r\n\r\n    getFrozenColumns(columns) {\r\n        let frozenColumns = null;\r\n\r\n        for(let col of columns) {\r\n            if(col.props.frozen) {\r\n                frozenColumns = frozenColumns||[];\r\n                frozenColumns.push(col);\r\n            }\r\n        }\r\n\r\n        return frozenColumns;\r\n    }\r\n\r\n    getScrollableColumns(columns) {\r\n        let scrollableColumns = null;\r\n\r\n        for(let col of columns) {\r\n            if(!col.props.frozen) {\r\n                scrollableColumns = scrollableColumns||[];\r\n                scrollableColumns.push(col);\r\n            }\r\n        }\r\n\r\n        return scrollableColumns;\r\n    }\r\n\r\n    filterLocal(value) {\r\n        let filteredNodes = [];\r\n        let filters = this.getFilters();\r\n        let columns = React.Children.toArray(this.props.children);\r\n        const isStrictMode = this.props.filterMode === 'strict';\r\n\r\n        for (let node of value) {\r\n            let copyNode = {...node};\r\n            let localMatch = true;\r\n            let globalMatch = false;\r\n\r\n            for (let j = 0; j < columns.length; j++) {\r\n                let col = columns[j];\r\n                let filterMeta = filters ? filters[col.props.field] : null;\r\n                let filterField = col.props.field;\r\n                let filterValue, filterConstraint, paramsWithoutNode;\r\n\r\n                //local\r\n                if (filterMeta) {\r\n                    let filterMatchMode = filterMeta.matchMode || col.props.filterMatchMode;\r\n                    filterValue = filterMeta.value;\r\n                    filterConstraint = filterMatchMode === 'custom' ? col.props.filterFunction : FilterUtils[filterMatchMode];\r\n                    paramsWithoutNode = {filterField, filterValue, filterConstraint, isStrictMode};\r\n                    if ((isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode))) ||\r\n                        (!isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode)))) {\r\n                            localMatch = false;\r\n                    }\r\n\r\n                    if (!localMatch) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //global\r\n                if (this.props.globalFilter && !globalMatch) {\r\n                    let copyNodeForGlobal = {...copyNode};\r\n                    filterValue = this.props.globalFilter;\r\n                    filterConstraint = FilterUtils['contains'];\r\n                    paramsWithoutNode = {filterField, filterValue, filterConstraint, isStrictMode};\r\n                    if ((isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode))) ||\r\n                        (!isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode)))) {\r\n                            globalMatch = true;\r\n                            copyNode = copyNodeForGlobal;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let matches = localMatch;\r\n            if (this.props.globalFilter) {\r\n                matches = localMatch && globalMatch;\r\n            }\r\n\r\n            if (matches) {\r\n                filteredNodes.push(copyNode);\r\n            }\r\n        }\r\n\r\n        return filteredNodes;\r\n    }\r\n\r\n    findFilteredNodes(node, paramsWithoutNode) {\r\n        if (node) {\r\n            let matched = false;\r\n            if (node.children) {\r\n                let childNodes = [...node.children];\r\n                node.children = [];\r\n                for (let childNode of childNodes) {\r\n                    let copyChildNode = {...childNode};\r\n                    if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\r\n                        matched = true;\r\n                        node.children.push(copyChildNode);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (matched) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isFilterMatched(node, {filterField, filterValue, filterConstraint, isStrictMode}) {\r\n        let matched = false;\r\n        let dataFieldValue = ObjectUtils.resolveFieldData(node.data, filterField);\r\n        if (filterConstraint(dataFieldValue, filterValue, this.props.filterLocale)) {\r\n            matched = true;\r\n        }\r\n\r\n        if (!matched || (isStrictMode && !this.isNodeLeaf(node))) {\r\n            matched = this.findFilteredNodes(node, {filterField, filterValue, filterConstraint, isStrictMode}) || matched;\r\n        }\r\n\r\n        return matched;\r\n    }\r\n\r\n    isNodeLeaf(node) {\r\n        return node.leaf === false ? false : !(node.children && node.children.length);\r\n    }\r\n\r\n    processValue() {\r\n        let data = this.props.value;\r\n\r\n        if (!this.props.lazy) {\r\n            if(data && data.length) {\r\n                if(this.getSortField() || this.getMultiSortMeta()) {\r\n                    if(this.props.sortMode === 'single')\r\n                        data = this.sortSingle(data);\r\n                    else if(this.props.sortMode === 'multiple')\r\n                        data = this.sortMultiple(data);\r\n                }\r\n\r\n                let localFilters = this.getFilters();\r\n                if (localFilters || this.props.globalFilter) {\r\n                    data = this.filterLocal(data, localFilters);\r\n                }\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    createTableHeader(columns, columnGroup) {\r\n        return (\r\n            <TreeTableHeader columns={columns} columnGroup={columnGroup} tabIndex={this.props.tabIndex}\r\n                        onSort={this.onSort} sortField={this.getSortField()} sortOrder={this.getSortOrder()} multiSortMeta={this.getMultiSortMeta()}\r\n                        resizableColumns={this.props.resizableColumns} onResizeStart={this.onColumnResizeStart}\r\n                        reorderableColumns={this.props.reorderableColumns} onDragStart={this.onColumnDragStart}\r\n                        onDragOver={this.onColumnDragOver} onDragLeave={this.onColumnDragLeave} onDrop={this.onColumnDrop}\r\n                        onFilter={this.onFilter} filters={this.getFilters()}/>\r\n        );\r\n    }\r\n\r\n    createTableFooter(columns, columnGroup) {\r\n        return (\r\n            <TreeTableFooter columns={columns} columnGroup={columnGroup} />\r\n        );\r\n    }\r\n\r\n    createTableBody(value, columns) {\r\n        return (\r\n            <TreeTableBody value={value} columns={columns} expandedKeys={this.getExpandedKeys()}\r\n                        onToggle={this.onToggle} onExpand={this.props.onExpand} onCollapse={this.props.onCollapse}\r\n                        paginator={this.props.paginator} first={this.getFirst()} rows={this.getRows()}\r\n                        selectionMode={this.props.selectionMode} selectionKeys={this.props.selectionKeys} onSelectionChange={this.props.onSelectionChange}\r\n                        metaKeySelection={this.props.metaKeySelection} onRowClick={this.props.onRowClick} onSelect={this.props.onSelect} onUnselect={this.props.onUnselect}\r\n                        propagateSelectionUp={this.props.propagateSelectionUp} propagateSelectionDown={this.props.propagateSelectionDown}\r\n                        lazy={this.props.lazy} rowClassName={this.props.rowClassName} emptyMessage={this.props.emptyMessage} loading={this.props.loading}\r\n                        contextMenuSelectionKey={this.props.contextMenuSelectionKey} onContextMenuSelectionChange={this.props.onContextMenuSelectionChange} onContextMenu={this.props.onContextMenu}/>\r\n        );\r\n    }\r\n\r\n    createPaginator(position, totalRecords) {\r\n        const className = classNames('p-paginator-' + position, this.props.paginatorClassName);\r\n\r\n        return (\r\n            <Paginator first={this.getFirst()} rows={this.getRows()} pageLinkSize={this.props.pageLinkSize} className={className}\r\n                    onPageChange={this.onPageChange} template={this.props.paginatorTemplate}\r\n                    totalRecords={totalRecords} rowsPerPageOptions={this.props.rowsPerPageOptions} currentPageReportTemplate={this.props.currentPageReportTemplate}\r\n                    leftContent={this.props.paginatorLeft} rightContent={this.props.paginatorRight} alwaysShow={this.props.alwaysShowPaginator} dropdownAppendTo={this.props.paginatorDropdownAppendTo} />\r\n        )\r\n    }\r\n\r\n    createScrollableView(value, columns, frozen, headerColumnGroup, footerColumnGroup) {\r\n        const header = this.createTableHeader(columns, headerColumnGroup);\r\n        const footer = this.createTableFooter(columns, footerColumnGroup);\r\n        const body = this.createTableBody(value, columns);\r\n\r\n        return (\r\n            <TreeTableScrollableView columns={columns} header={header} body={body} footer={footer}\r\n                scrollHeight={this.props.scrollHeight} frozen={frozen} frozenWidth={this.props.frozenWidth} />\r\n        );\r\n    }\r\n\r\n    renderScrollableTable(value) {\r\n        const columns = this.getColumns();\r\n        let frozenColumns = this.getFrozenColumns(columns);\r\n        let scrollableColumns = frozenColumns ? this.getScrollableColumns(columns) : columns;\r\n        let frozenView, scrollableView;\r\n        if (frozenColumns) {\r\n            frozenView = this.createScrollableView(value, frozenColumns, true, this.props.frozenHeaderColumnGroup, this.props.frozenFooterColumnGroup);\r\n        }\r\n\r\n        scrollableView = this.createScrollableView(value, scrollableColumns, false, this.props.headerColumnGroup, this.props.footerColumnGroup);\r\n\r\n        return (\r\n            <div className=\"p-treetable-scrollable-wrapper\">\r\n                {frozenView}\r\n                {scrollableView}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderRegularTable(value) {\r\n        const columns = this.getColumns();\r\n        const header = this.createTableHeader(columns, this.props.headerColumnGroup);\r\n        const footer = this.createTableFooter(columns, this.props.footerColumnGroup);\r\n        const body = this.createTableBody(value, columns);\r\n\r\n        return (\r\n            <div className=\"p-treetable-wrapper\">\r\n                <table style={this.props.tableStyle} className={this.props.tableClassName} ref={el => this.table = el}>\r\n                    {header}\r\n                    {footer}\r\n                    {body}\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTable(value) {\r\n        if (this.props.scrollable)\r\n            return this.renderScrollableTable(value);\r\n        else\r\n            return this.renderRegularTable(value);\r\n    }\r\n\r\n    renderLoader() {\r\n        if (this.props.loading) {\r\n            const iconClassName = classNames('p-treetable-loading-icon pi-spin', this.props.loadingIcon);\r\n\r\n            return (\r\n                <div className=\"p-treetable-loading\">\r\n                    <div className=\"p-treetable-loading-overlay p-component-overlay\">\r\n                        <i className={iconClassName}></i>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const value = this.processValue();\r\n        const className = classNames('p-treetable p-component', {\r\n            'p-treetable-hoverable-rows': this.isRowSelectionMode(),\r\n            'p-treetable-resizable': this.props.resizableColumns,\r\n            'p-treetable-resizable-fit': (this.props.resizableColumns && this.props.columnResizeMode === 'fit'),\r\n            'p-treetable-auto-layout': this.props.autoLayout\r\n        }, this.props.className);\r\n        const table = this.renderTable(value);\r\n        const totalRecords = this.getTotalRecords(value);\r\n        const headerFacet = this.props.header && <div className=\"p-treetable-header\">{this.props.header}</div>;\r\n        const footerFacet = this.props.footer && <div className=\"p-treetable-footer\">{this.props.footer}</div>;\r\n        const paginatorTop = this.props.paginator && this.props.paginatorPosition !== 'bottom' && this.createPaginator('top', totalRecords);\r\n        const paginatorBottom = this.props.paginator && this.props.paginatorPosition !== 'top' && this.createPaginator('bottom', totalRecords);\r\n        const loader = this.renderLoader();\r\n        const resizeHelper = this.props.resizableColumns && <div ref={(el) => {this.resizerHelper = el;}} className=\"p-column-resizer-helper\" style={{display:'none'}}></div>;\r\n        const reorderIndicatorUp = this.props.reorderableColumns && <span ref={el => this.reorderIndicatorUp = el} className=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style={{position: 'absolute', display: 'none'}} />\r\n        const reorderIndicatorDown = this.props.reorderableColumns && <span ref={el => this.reorderIndicatorDown = el} className=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style={{position: 'absolute', display: 'none'}} />;\r\n\r\n        return (\r\n            <div id={this.props.id} className={className} style={this.props.style} ref={el => this.container = el} data-scrollselectors=\".p-treetable-scrollable-body\">\r\n                {loader}\r\n                {headerFacet}\r\n                {paginatorTop}\r\n                {table}\r\n                {paginatorBottom}\r\n                {footerFacet}\r\n                {resizeHelper}\r\n                {reorderIndicatorUp}\r\n                {reorderIndicatorDown}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}