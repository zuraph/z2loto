{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\cascadeselect\\\\CascadeSelectDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var CascadeSelectDoc = /*#__PURE__*/function (_Component) {\n  _inherits(CascadeSelectDoc, _Component);\n\n  var _super = _createSuper(CascadeSelectDoc);\n\n  function CascadeSelectDoc(props) {\n    var _this;\n\n    _classCallCheck(this, CascadeSelectDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { CascadeSelect } from 'primereact/cascadeselect';\\n\\nexport class CascadeSelectDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            selectedCity1: null,\\n            selectedCity2: null\\n        };\\n\\n        this.countries = [\\n            {\\n                name: 'Australia',\\n                code: 'AU',\\n                states: [\\n                    {\\n                        name: 'New South Wales',\\n                        cities: [\\n                            {cname: 'Sydney', code: 'A-SY'},\\n                            {cname: 'Newcastle', code: 'A-NE'},\\n                            {cname: 'Wollongong', code: 'A-WO'}\\n                        ]\\n                    },\\n                    {\\n                        name: 'Queensland',\\n                        cities: [\\n                            {cname: 'Brisbane', code: 'A-BR'},\\n                            {cname: 'Townsville', code: 'A-TO'}\\n                        ]\\n                    },\\n\\n                ]\\n            },\\n            {\\n                name: 'Canada',\\n                code: 'CA',\\n                states: [\\n                    {\\n                        name: 'Quebec',\\n                        cities: [\\n                            {cname: 'Montreal', code: 'C-MO'},\\n                            {cname: 'Quebec City', code: 'C-QU'}\\n                        ]\\n                    },\\n                    {\\n                        name: 'Ontario',\\n                        cities: [\\n                            {cname: 'Ottawa', code: 'C-OT'},\\n                            {cname: 'Toronto', code: 'C-TO'}\\n                        ]\\n                    },\\n\\n                ]\\n            },\\n            {\\n                name: 'United States',\\n                code: 'US',\\n                states: [\\n                    {\\n                        name: 'California',\\n                        cities: [\\n                            {cname: 'Los Angeles', code: 'US-LA'},\\n                            {cname: 'San Diego', code: 'US-SD'},\\n                            {cname: 'San Francisco', code: 'US-SF'}\\n                        ]\\n                    },\\n                    {\\n                        name: 'Florida',\\n                        cities: [\\n                            {cname: 'Jacksonville', code: 'US-JA'},\\n                            {cname: 'Miami', code: 'US-MI'},\\n                            {cname: 'Tampa', code: 'US-TA'},\\n                            {cname: 'Orlando', code: 'US-OR'}\\n                        ]\\n                    },\\n                    {\\n                        name: 'Texas',\\n                        cities: [\\n                            {cname: 'Austin', code: 'US-AU'},\\n                            {cname: 'Dallas', code: 'US-DA'},\\n                            {cname: 'Houston', code: 'US-HO'}\\n                        ]\\n                    }\\n                ]\\n            }\\n        ];\\n    }\\n\\n    countryOptionTemplate(option) {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                {option.states && <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\\n                                       className={`flag flag-${option.code.toLowerCase()}`} />}\\n                {option.cities && <i className=\\\"pi pi-compass p-mr-2\\\"/>}\\n                {option.cname && <i className=\\\"pi pi-map-marker p-mr-2\\\"/>}\\n                <span>{option.cname || option.name}</span>\\n            </div>\\n        );\\n    }\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <CascadeSelect  value={this.state.selectedCity1} options={this.countries}  optionLabel={\\\"cname\\\"} optionGroupLabel={\\\"name\\\"} optionGroupChildren={['states', 'cities']}\\n                                    style={{minWidth: '14rem'}} placeholder={\\\"Select a City\\\"} onChange={event => this.setState({selectedCity1: event.value})}/>\\n\\n                    <h5>Templating</h5>\\n                    <CascadeSelect  value={this.state.selectedCity2} options={this.countries}  optionLabel={\\\"cname\\\"} optionGroupLabel={\\\"name\\\"} optionGroupChildren={['states', 'cities']}\\n                                    style={{minWidth: '14rem'}} placeholder={\\\"Select a City\\\"} onChange={event => this.setState({selectedCity2: event.value})}  itemTemplate={this.countryOptionTemplate}/>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { CascadeSelect } from 'primereact/cascadeselect';\\n\\nconst CascadeSelectDemo = () => {\\n    const [selectedCity1, setSelectedCity1] = useState(null);\\n    const [selectedCity2, setSelectedCity2] = useState(null);\\n    const countries = [\\n                {\\n                    name: 'Australia',\\n                    code: 'AU',\\n                    states: [\\n                        {\\n                            name: 'New South Wales',\\n                            cities: [\\n                                {cname: 'Sydney', code: 'A-SY'},\\n                                {cname: 'Newcastle', code: 'A-NE'},\\n                                {cname: 'Wollongong', code: 'A-WO'}\\n                            ]\\n                        },\\n                        {\\n                            name: 'Queensland',\\n                            cities: [\\n                                {cname: 'Brisbane', code: 'A-BR'},\\n                                {cname: 'Townsville', code: 'A-TO'}\\n                            ]\\n                        },\\n\\n                    ]\\n                },\\n                {\\n                    name: 'Canada',\\n                    code: 'CA',\\n                    states: [\\n                        {\\n                            name: 'Quebec',\\n                            cities: [\\n                                {cname: 'Montreal', code: 'C-MO'},\\n                                {cname: 'Quebec City', code: 'C-QU'}\\n                            ]\\n                        },\\n                        {\\n                            name: 'Ontario',\\n                            cities: [\\n                                {cname: 'Ottawa', code: 'C-OT'},\\n                                {cname: 'Toronto', code: 'C-TO'}\\n                            ]\\n                        },\\n\\n                    ]\\n                },\\n                {\\n                    name: 'United States',\\n                    code: 'US',\\n                    states: [\\n                        {\\n                            name: 'California',\\n                            cities: [\\n                                {cname: 'Los Angeles', code: 'US-LA'},\\n                                {cname: 'San Diego', code: 'US-SD'},\\n                                {cname: 'San Francisco', code: 'US-SF'}\\n                            ]\\n                        },\\n                        {\\n                            name: 'Florida',\\n                            cities: [\\n                                {cname: 'Jacksonville', code: 'US-JA'},\\n                                {cname: 'Miami', code: 'US-MI'},\\n                                {cname: 'Tampa', code: 'US-TA'},\\n                                {cname: 'Orlando', code: 'US-OR'}\\n                            ]\\n                        },\\n                        {\\n                            name: 'Texas',\\n                            cities: [\\n                                {cname: 'Austin', code: 'US-AU'},\\n                                {cname: 'Dallas', code: 'US-DA'},\\n                                {cname: 'Houston', code: 'US-HO'}\\n                            ]\\n                        }\\n                    ]\\n                }\\n            ];\\n\\n    const countryOptionTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                {option.states && <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\\n                                       className={`flag flag-${option.code.toLowerCase()}`} />}\\n                {option.cities && <i className=\\\"pi pi-compass p-mr-2\\\"/>}\\n                {option.cname && <i className=\\\"pi pi-map-marker p-mr-2\\\"/>}\\n                <span>{option.cname || option.name}</span>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <CascadeSelect  value={selectedCity1} options={countries}  optionLabel={\\\"cname\\\"} optionGroupLabel={\\\"name\\\"} optionGroupChildren={['states', 'cities']}\\n                                style={{minWidth: '14rem'}} placeholder={\\\"Select a City\\\"} onChange={event => setSelectedCity1(event.value)}/>\\n\\n                <h5>Templating</h5>\\n                <CascadeSelect  value={selectedCity2} options={countries}  optionLabel={\\\"cname\\\"} optionGroupLabel={\\\"name\\\"} optionGroupChildren={['states', 'cities']}\\n                                style={{minWidth: '14rem'}} placeholder={\\\"Select a City\\\"} onChange={event =>  setSelectedCity2(event.value)}  itemTemplate={countryOptionTemplate}/>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { CascadeSelect } from 'primereact/cascadeselect';\\n\\nconst CascadeSelectDemo = () => {\\n    const [selectedCity1, setSelectedCity1] = useState(null);\\n    const [selectedCity2, setSelectedCity2] = useState(null);\\n    const countries = [\\n                {\\n                    name: 'Australia',\\n                    code: 'AU',\\n                    states: [\\n                        {\\n                            name: 'New South Wales',\\n                            cities: [\\n                                {cname: 'Sydney', code: 'A-SY'},\\n                                {cname: 'Newcastle', code: 'A-NE'},\\n                                {cname: 'Wollongong', code: 'A-WO'}\\n                            ]\\n                        },\\n                        {\\n                            name: 'Queensland',\\n                            cities: [\\n                                {cname: 'Brisbane', code: 'A-BR'},\\n                                {cname: 'Townsville', code: 'A-TO'}\\n                            ]\\n                        },\\n\\n                    ]\\n                },\\n                {\\n                    name: 'Canada',\\n                    code: 'CA',\\n                    states: [\\n                        {\\n                            name: 'Quebec',\\n                            cities: [\\n                                {cname: 'Montreal', code: 'C-MO'},\\n                                {cname: 'Quebec City', code: 'C-QU'}\\n                            ]\\n                        },\\n                        {\\n                            name: 'Ontario',\\n                            cities: [\\n                                {cname: 'Ottawa', code: 'C-OT'},\\n                                {cname: 'Toronto', code: 'C-TO'}\\n                            ]\\n                        },\\n\\n                    ]\\n                },\\n                {\\n                    name: 'United States',\\n                    code: 'US',\\n                    states: [\\n                        {\\n                            name: 'California',\\n                            cities: [\\n                                {cname: 'Los Angeles', code: 'US-LA'},\\n                                {cname: 'San Diego', code: 'US-SD'},\\n                                {cname: 'San Francisco', code: 'US-SF'}\\n                            ]\\n                        },\\n                        {\\n                            name: 'Florida',\\n                            cities: [\\n                                {cname: 'Jacksonville', code: 'US-JA'},\\n                                {cname: 'Miami', code: 'US-MI'},\\n                                {cname: 'Tampa', code: 'US-TA'},\\n                                {cname: 'Orlando', code: 'US-OR'}\\n                            ]\\n                        },\\n                        {\\n                            name: 'Texas',\\n                            cities: [\\n                                {cname: 'Austin', code: 'US-AU'},\\n                                {cname: 'Dallas', code: 'US-DA'},\\n                                {cname: 'Houston', code: 'US-HO'}\\n                            ]\\n                        }\\n                    ]\\n                }\\n            ];\\n\\n    const countryOptionTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                {option.states && <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\\n                                       className={`flag flag-${option.code.toLowerCase()}`} />}\\n                {option.cities && <i className=\\\"pi pi-compass p-mr-2\\\"/>}\\n                {option.cname && <i className=\\\"pi pi-map-marker p-mr-2\\\"/>}\\n                <span>{option.cname || option.name}</span>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <CascadeSelect  value={selectedCity1} options={countries}  optionLabel={\\\"cname\\\"} optionGroupLabel={\\\"name\\\"} optionGroupChildren={['states', 'cities']}\\n                                style={{minWidth: '14rem'}} placeholder={\\\"Select a City\\\"} onChange={event => setSelectedCity1(event.value)}/>\\n\\n                <h5>Templating</h5>\\n                <CascadeSelect  value={selectedCity2} options={countries}  optionLabel={\\\"cname\\\"} optionGroupLabel={\\\"name\\\"} optionGroupChildren={['states', 'cities']}\\n                                style={{minWidth: '14rem'}} placeholder={\\\"Select a City\\\"} onChange={event =>  setSelectedCity2(event.value)}  itemTemplate={countryOptionTemplate}/>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CascadeSelectDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 1\n        }\n      }, \"\\nimport { CascadeSelect } from 'primereact/cascadeselect';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }\n      }, \"CascadeSelect requires a value to bind and a collection of arbitrary objects with a nested hierarchy. \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 130\n        }\n      }, \"optionGroupLabel\"), \"is used for the text of a category and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 68\n        }\n      }, \"optionGroupChildren\"), \" is to define the children of the category. Note that order of the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 161\n        }\n      }, \"optionGroupChildren\"), \"matters and it should correspond to the data hierarchy.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 1\n        }\n      }, \"\\n<CascadeSelect  value={selectedCity} options={countries}  optionLabel={\\\"cname\\\"} optionGroupLabel={\\\"name\\\"} optionGroupChildren={['states', 'cities']}\\n                style={{minWidth: '14rem'}} placeholder={\\\"Select a City\\\"} onChange={event => setSelectedCity1(event.value)}/>\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 1\n        }\n      }, \"\\nconst countries = [\\n    {\\n        name: 'Australia',\\n        code: 'AU',\\n        states: [\\n            {\\n                name: 'New South Wales',\\n                cities: [\\n                    {cname: 'Sydney', code: 'A-SY'},\\n                    {cname: 'Newcastle', code: 'A-NE'},\\n                    {cname: 'Wollongong', code: 'A-WO'}\\n                ]\\n            },\\n            {\\n                name: 'Queensland',\\n                cities: [\\n                    {cname: 'Brisbane', code: 'A-BR'},\\n                    {cname: 'Townsville', code: 'A-TO'}\\n                ]\\n            },\\n\\n        ]\\n    },\\n    {\\n        name: 'Canada',\\n        code: 'CA',\\n        states: [\\n            {\\n                name: 'Quebec',\\n                cities: [\\n                    {cname: 'Montreal', code: 'C-MO'},\\n                    {cname: 'Quebec City', code: 'C-QU'}\\n                ]\\n            },\\n            {\\n                name: 'Ontario',\\n                cities: [\\n                    {cname: 'Ottawa', code: 'C-OT'},\\n                    {cname: 'Toronto', code: 'C-TO'}\\n                ]\\n            },\\n\\n        ]\\n    },\\n    {\\n        name: 'United States',\\n        code: 'US',\\n        states: [\\n            {\\n                name: 'California',\\n                cities: [\\n                    {cname: 'Los Angeles', code: 'US-LA'},\\n                    {cname: 'San Diego', code: 'US-SD'},\\n                    {cname: 'San Francisco', code: 'US-SF'}\\n                ]\\n            },\\n            {\\n                name: 'Florida',\\n                cities: [\\n                    {cname: 'Jacksonville', code: 'US-JA'},\\n                    {cname: 'Miami', code: 'US-MI'},\\n                    {cname: 'Tampa', code: 'US-TA'},\\n                    {cname: 'Orlando', code: 'US-OR'}\\n                ]\\n            },\\n            {\\n                name: 'Texas',\\n                cities: [\\n                    {cname: 'Austin', code: 'US-AU'},\\n                    {cname: 'Dallas', code: 'US-DA'},\\n                    {cname: 'Houston', code: 'US-HO'}\\n                ]\\n            }\\n        ]\\n    }\\n]\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }\n      }, \"Templating\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 25\n        }\n      }, \"Content of an item can be customized with the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 74\n        }\n      }, \"itemTemplate\"), \" prop.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 1\n        }\n      }, \"\\n<CascadeSelect value={selectedCity2} options={countries}  optionLabel={\\\"cname\\\"} optionGroupLabel={\\\"name\\\"} optionGroupChildren={['states', 'cities']}\\n    style={{minWidth: '14rem'}} placeholder={\\\"Select a City\\\"} onChange={event => setSelectedCity2(event.value)} itemTemplate={countryOptionTemplate}/>\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 1\n        }\n      }, \"\\nconst countryOptionTemplate = (option) => {\\n    return (\\n        <div className=\\\"country-item\\\">\\n            {option.states && <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\\n                                   className={`flag flag-${option.code.toLowerCase()}`} />}\\n            {option.cities && <i className=\\\"pi pi-compass p-mr-2\\\"/>}\\n            {option.cname && <i className=\\\"pi pi-map-marker p-mr-2\\\"/>}\\n            <span>{option.cname || option.name}</span>\\n        </div>\\n    );\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 41\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 41\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 41\n        }\n      }, \"object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 41\n        }\n      }, \"Inline style of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 41\n        }\n      }, \"Style class of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 41\n        }\n      }, \"options\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 41\n        }\n      }, \"array\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 41\n        }\n      }, \"An array of selectitems to display as the available options.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 41\n        }\n      }, \"optionLabel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 41\n        }\n      }, \"Property name or getter function to use as the label of an option.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 41\n        }\n      }, \"optionValue\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 41\n        }\n      }, \"Property name or getter function to use as the value of an option, defaults to the option itself when not defined.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 41\n        }\n      }, \"optionGroupLabel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 41\n        }\n      }, \"Property name or getter function to use as the label of an option group.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 41\n        }\n      }, \"optionGroupChildren\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 41\n        }\n      }, \"Property name or getter function to retrieve the items of a group.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 41\n        }\n      }, \"placeholder\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 41\n        }\n      }, \"Default text to display when no option is selected.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 41\n        }\n      }, \"disabled\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 41\n        }\n      }, \"When present, it specifies that the component should be disabled.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 41\n        }\n      }, \"dataKey\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 41\n        }\n      }, \"A property to uniquely identify an option.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 41\n        }\n      }, \"tabIndex\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 41\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 41\n        }\n      }, \"Index of the element in tabbing order.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 41\n        }\n      }, \"inputId\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 41\n        }\n      }, \"Identifier of the underlying input element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 41\n        }\n      }, \"ariaLabelledBy\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 41\n        }\n      }, \"Establishes relationships between the component and label(s) where its value should be one or more element IDs.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 41\n        }\n      }, \"appendTo\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 41\n        }\n      }, \"Id of the element or \\\"body\\\" for document where the overlay should be appended to.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 41\n        }\n      }, \"itemTemplate\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 41\n        }\n      }, \"The template of items.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 25\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 41\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 41\n        }\n      }, \"onChange\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: Original event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 81\n        }\n      }), \"event.value: Value of the checkbox \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke on value change\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 41\n        }\n      }, \"onGroupChange\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 41\n        }\n      }, \"event: Browser event.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a group changes.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 41\n        }\n      }, \"onBeforeShow\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 41\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke before the overlay is shown.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 41\n        }\n      }, \"onBeforeHide\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 41\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke before the overlay is hidden.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 41\n        }\n      }, \"onShow\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 41\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when the overlay is shown.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 41\n        }\n      }, \"onHide\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 41\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when the overlay is hidden.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 25\n        }\n      }, \"Following is the list of structural style classes, for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 105\n        }\n      }, \"theming\"), \" page.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 41\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 41\n        }\n      }, \"p-cascadeselect\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 41\n        }\n      }, \"Container element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 41\n        }\n      }, \"p-cascadeselect-label\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 41\n        }\n      }, \"Element to display label of selected option.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 41\n        }\n      }, \"p-cascadeselect-trigger\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 41\n        }\n      }, \"Icon element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 41\n        }\n      }, \"p-cascadeselect-panel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 41\n        }\n      }, \"Icon element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 41\n        }\n      }, \"p-cascadeselect-items-wrapper\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 41\n        }\n      }, \"Wrapper element of items list.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 41\n        }\n      }, \"p-cascadeselect-items\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 41\n        }\n      }, \"List element of items.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 41\n        }\n      }, \"p-cascadeselect-item\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 41\n        }\n      }, \"An item in the list.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 25\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 25\n        }\n      }, \"None.\")), useLiveEditorTabs({\n        name: 'CascadeSelectDemo',\n        sources: this.sources\n      })));\n    }\n  }]);\n\n  return CascadeSelectDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/cascadeselect/CascadeSelectDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","CascadeSelectDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class CascadeSelectDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { CascadeSelect } from 'primereact/cascadeselect';\r\n\r\nexport class CascadeSelectDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedCity1: null,\r\n            selectedCity2: null\r\n        };\r\n\r\n        this.countries = [\r\n            {\r\n                name: 'Australia',\r\n                code: 'AU',\r\n                states: [\r\n                    {\r\n                        name: 'New South Wales',\r\n                        cities: [\r\n                            {cname: 'Sydney', code: 'A-SY'},\r\n                            {cname: 'Newcastle', code: 'A-NE'},\r\n                            {cname: 'Wollongong', code: 'A-WO'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Queensland',\r\n                        cities: [\r\n                            {cname: 'Brisbane', code: 'A-BR'},\r\n                            {cname: 'Townsville', code: 'A-TO'}\r\n                        ]\r\n                    },\r\n\r\n                ]\r\n            },\r\n            {\r\n                name: 'Canada',\r\n                code: 'CA',\r\n                states: [\r\n                    {\r\n                        name: 'Quebec',\r\n                        cities: [\r\n                            {cname: 'Montreal', code: 'C-MO'},\r\n                            {cname: 'Quebec City', code: 'C-QU'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Ontario',\r\n                        cities: [\r\n                            {cname: 'Ottawa', code: 'C-OT'},\r\n                            {cname: 'Toronto', code: 'C-TO'}\r\n                        ]\r\n                    },\r\n\r\n                ]\r\n            },\r\n            {\r\n                name: 'United States',\r\n                code: 'US',\r\n                states: [\r\n                    {\r\n                        name: 'California',\r\n                        cities: [\r\n                            {cname: 'Los Angeles', code: 'US-LA'},\r\n                            {cname: 'San Diego', code: 'US-SD'},\r\n                            {cname: 'San Francisco', code: 'US-SF'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Florida',\r\n                        cities: [\r\n                            {cname: 'Jacksonville', code: 'US-JA'},\r\n                            {cname: 'Miami', code: 'US-MI'},\r\n                            {cname: 'Tampa', code: 'US-TA'},\r\n                            {cname: 'Orlando', code: 'US-OR'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Texas',\r\n                        cities: [\r\n                            {cname: 'Austin', code: 'US-AU'},\r\n                            {cname: 'Dallas', code: 'US-DA'},\r\n                            {cname: 'Houston', code: 'US-HO'}\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n\r\n    countryOptionTemplate(option) {\r\n        return (\r\n            <div className=\"country-item\">\r\n                {option.states && <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\r\n                                       className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />}\r\n                {option.cities && <i className=\"pi pi-compass p-mr-2\"/>}\r\n                {option.cname && <i className=\"pi pi-map-marker p-mr-2\"/>}\r\n                <span>{option.cname || option.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <CascadeSelect  value={this.state.selectedCity1} options={this.countries}  optionLabel={\"cname\"} optionGroupLabel={\"name\"} optionGroupChildren={['states', 'cities']}\r\n                                    style={{minWidth: '14rem'}} placeholder={\"Select a City\"} onChange={event => this.setState({selectedCity1: event.value})}/>\r\n\r\n                    <h5>Templating</h5>\r\n                    <CascadeSelect  value={this.state.selectedCity2} options={this.countries}  optionLabel={\"cname\"} optionGroupLabel={\"name\"} optionGroupChildren={['states', 'cities']}\r\n                                    style={{minWidth: '14rem'}} placeholder={\"Select a City\"} onChange={event => this.setState({selectedCity2: event.value})}  itemTemplate={this.countryOptionTemplate}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { CascadeSelect } from 'primereact/cascadeselect';\r\n\r\nconst CascadeSelectDemo = () => {\r\n    const [selectedCity1, setSelectedCity1] = useState(null);\r\n    const [selectedCity2, setSelectedCity2] = useState(null);\r\n    const countries = [\r\n                {\r\n                    name: 'Australia',\r\n                    code: 'AU',\r\n                    states: [\r\n                        {\r\n                            name: 'New South Wales',\r\n                            cities: [\r\n                                {cname: 'Sydney', code: 'A-SY'},\r\n                                {cname: 'Newcastle', code: 'A-NE'},\r\n                                {cname: 'Wollongong', code: 'A-WO'}\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Queensland',\r\n                            cities: [\r\n                                {cname: 'Brisbane', code: 'A-BR'},\r\n                                {cname: 'Townsville', code: 'A-TO'}\r\n                            ]\r\n                        },\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'Canada',\r\n                    code: 'CA',\r\n                    states: [\r\n                        {\r\n                            name: 'Quebec',\r\n                            cities: [\r\n                                {cname: 'Montreal', code: 'C-MO'},\r\n                                {cname: 'Quebec City', code: 'C-QU'}\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Ontario',\r\n                            cities: [\r\n                                {cname: 'Ottawa', code: 'C-OT'},\r\n                                {cname: 'Toronto', code: 'C-TO'}\r\n                            ]\r\n                        },\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'United States',\r\n                    code: 'US',\r\n                    states: [\r\n                        {\r\n                            name: 'California',\r\n                            cities: [\r\n                                {cname: 'Los Angeles', code: 'US-LA'},\r\n                                {cname: 'San Diego', code: 'US-SD'},\r\n                                {cname: 'San Francisco', code: 'US-SF'}\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Florida',\r\n                            cities: [\r\n                                {cname: 'Jacksonville', code: 'US-JA'},\r\n                                {cname: 'Miami', code: 'US-MI'},\r\n                                {cname: 'Tampa', code: 'US-TA'},\r\n                                {cname: 'Orlando', code: 'US-OR'}\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Texas',\r\n                            cities: [\r\n                                {cname: 'Austin', code: 'US-AU'},\r\n                                {cname: 'Dallas', code: 'US-DA'},\r\n                                {cname: 'Houston', code: 'US-HO'}\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ];\r\n\r\n    const countryOptionTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                {option.states && <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\r\n                                       className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />}\r\n                {option.cities && <i className=\"pi pi-compass p-mr-2\"/>}\r\n                {option.cname && <i className=\"pi pi-map-marker p-mr-2\"/>}\r\n                <span>{option.cname || option.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <CascadeSelect  value={selectedCity1} options={countries}  optionLabel={\"cname\"} optionGroupLabel={\"name\"} optionGroupChildren={['states', 'cities']}\r\n                                style={{minWidth: '14rem'}} placeholder={\"Select a City\"} onChange={event => setSelectedCity1(event.value)}/>\r\n\r\n                <h5>Templating</h5>\r\n                <CascadeSelect  value={selectedCity2} options={countries}  optionLabel={\"cname\"} optionGroupLabel={\"name\"} optionGroupChildren={['states', 'cities']}\r\n                                style={{minWidth: '14rem'}} placeholder={\"Select a City\"} onChange={event =>  setSelectedCity2(event.value)}  itemTemplate={countryOptionTemplate}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { CascadeSelect } from 'primereact/cascadeselect';\r\n\r\nconst CascadeSelectDemo = () => {\r\n    const [selectedCity1, setSelectedCity1] = useState(null);\r\n    const [selectedCity2, setSelectedCity2] = useState(null);\r\n    const countries = [\r\n                {\r\n                    name: 'Australia',\r\n                    code: 'AU',\r\n                    states: [\r\n                        {\r\n                            name: 'New South Wales',\r\n                            cities: [\r\n                                {cname: 'Sydney', code: 'A-SY'},\r\n                                {cname: 'Newcastle', code: 'A-NE'},\r\n                                {cname: 'Wollongong', code: 'A-WO'}\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Queensland',\r\n                            cities: [\r\n                                {cname: 'Brisbane', code: 'A-BR'},\r\n                                {cname: 'Townsville', code: 'A-TO'}\r\n                            ]\r\n                        },\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'Canada',\r\n                    code: 'CA',\r\n                    states: [\r\n                        {\r\n                            name: 'Quebec',\r\n                            cities: [\r\n                                {cname: 'Montreal', code: 'C-MO'},\r\n                                {cname: 'Quebec City', code: 'C-QU'}\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Ontario',\r\n                            cities: [\r\n                                {cname: 'Ottawa', code: 'C-OT'},\r\n                                {cname: 'Toronto', code: 'C-TO'}\r\n                            ]\r\n                        },\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'United States',\r\n                    code: 'US',\r\n                    states: [\r\n                        {\r\n                            name: 'California',\r\n                            cities: [\r\n                                {cname: 'Los Angeles', code: 'US-LA'},\r\n                                {cname: 'San Diego', code: 'US-SD'},\r\n                                {cname: 'San Francisco', code: 'US-SF'}\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Florida',\r\n                            cities: [\r\n                                {cname: 'Jacksonville', code: 'US-JA'},\r\n                                {cname: 'Miami', code: 'US-MI'},\r\n                                {cname: 'Tampa', code: 'US-TA'},\r\n                                {cname: 'Orlando', code: 'US-OR'}\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Texas',\r\n                            cities: [\r\n                                {cname: 'Austin', code: 'US-AU'},\r\n                                {cname: 'Dallas', code: 'US-DA'},\r\n                                {cname: 'Houston', code: 'US-HO'}\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ];\r\n\r\n    const countryOptionTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                {option.states && <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\r\n                                       className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />}\r\n                {option.cities && <i className=\"pi pi-compass p-mr-2\"/>}\r\n                {option.cname && <i className=\"pi pi-map-marker p-mr-2\"/>}\r\n                <span>{option.cname || option.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <CascadeSelect  value={selectedCity1} options={countries}  optionLabel={\"cname\"} optionGroupLabel={\"name\"} optionGroupChildren={['states', 'cities']}\r\n                                style={{minWidth: '14rem'}} placeholder={\"Select a City\"} onChange={event => setSelectedCity1(event.value)}/>\r\n\r\n                <h5>Templating</h5>\r\n                <CascadeSelect  value={selectedCity2} options={countries}  optionLabel={\"cname\"} optionGroupLabel={\"name\"} optionGroupChildren={['states', 'cities']}\r\n                                style={{minWidth: '14rem'}} placeholder={\"Select a City\"} onChange={event =>  setSelectedCity2(event.value)}  itemTemplate={countryOptionTemplate}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { CascadeSelect } from 'primereact/cascadeselect';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>CascadeSelect requires a value to bind and a collection of arbitrary objects with a nested hierarchy. <i>optionGroupLabel</i>\r\n                            is used for the text of a category and <i>optionGroupChildren</i> is to define the children of the category. Note that order of the <i>optionGroupChildren</i>\r\n                            matters and it should correspond to the data hierarchy.</p>\r\n<CodeHighlight>\r\n{`\r\n<CascadeSelect  value={selectedCity} options={countries}  optionLabel={\"cname\"} optionGroupLabel={\"name\"} optionGroupChildren={['states', 'cities']}\r\n                style={{minWidth: '14rem'}} placeholder={\"Select a City\"} onChange={event => setSelectedCity1(event.value)}/>\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst countries = [\r\n    {\r\n        name: 'Australia',\r\n        code: 'AU',\r\n        states: [\r\n            {\r\n                name: 'New South Wales',\r\n                cities: [\r\n                    {cname: 'Sydney', code: 'A-SY'},\r\n                    {cname: 'Newcastle', code: 'A-NE'},\r\n                    {cname: 'Wollongong', code: 'A-WO'}\r\n                ]\r\n            },\r\n            {\r\n                name: 'Queensland',\r\n                cities: [\r\n                    {cname: 'Brisbane', code: 'A-BR'},\r\n                    {cname: 'Townsville', code: 'A-TO'}\r\n                ]\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        name: 'Canada',\r\n        code: 'CA',\r\n        states: [\r\n            {\r\n                name: 'Quebec',\r\n                cities: [\r\n                    {cname: 'Montreal', code: 'C-MO'},\r\n                    {cname: 'Quebec City', code: 'C-QU'}\r\n                ]\r\n            },\r\n            {\r\n                name: 'Ontario',\r\n                cities: [\r\n                    {cname: 'Ottawa', code: 'C-OT'},\r\n                    {cname: 'Toronto', code: 'C-TO'}\r\n                ]\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        name: 'United States',\r\n        code: 'US',\r\n        states: [\r\n            {\r\n                name: 'California',\r\n                cities: [\r\n                    {cname: 'Los Angeles', code: 'US-LA'},\r\n                    {cname: 'San Diego', code: 'US-SD'},\r\n                    {cname: 'San Francisco', code: 'US-SF'}\r\n                ]\r\n            },\r\n            {\r\n                name: 'Florida',\r\n                cities: [\r\n                    {cname: 'Jacksonville', code: 'US-JA'},\r\n                    {cname: 'Miami', code: 'US-MI'},\r\n                    {cname: 'Tampa', code: 'US-TA'},\r\n                    {cname: 'Orlando', code: 'US-OR'}\r\n                ]\r\n            },\r\n            {\r\n                name: 'Texas',\r\n                cities: [\r\n                    {cname: 'Austin', code: 'US-AU'},\r\n                    {cname: 'Dallas', code: 'US-DA'},\r\n                    {cname: 'Houston', code: 'US-HO'}\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]\r\n`}\r\n</CodeHighlight>\r\n\r\n\r\n                        <h5>Templating</h5>\r\n                        <p>Content of an item can be customized with the <i>itemTemplate</i> prop.</p>\r\n<CodeHighlight>\r\n{`\r\n<CascadeSelect value={selectedCity2} options={countries}  optionLabel={\"cname\"} optionGroupLabel={\"name\"} optionGroupChildren={['states', 'cities']}\r\n    style={{minWidth: '14rem'}} placeholder={\"Select a City\"} onChange={event => setSelectedCity2(event.value)} itemTemplate={countryOptionTemplate}/>\r\n`}\r\n</CodeHighlight>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst countryOptionTemplate = (option) => {\r\n    return (\r\n        <div className=\"country-item\">\r\n            {option.states && <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\r\n                                   className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />}\r\n            {option.cities && <i className=\"pi pi-compass p-mr-2\"/>}\r\n            {option.cname && <i className=\"pi pi-map-marker p-mr-2\"/>}\r\n            <span>{option.cname || option.name}</span>\r\n        </div>\r\n    );\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>options</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of selectitems to display as the available options.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>optionLabel</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Property name or getter function to use as the label of an option.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>optionValue</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Property name or getter function to use as the value of an option, defaults to the option itself when not defined.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>optionGroupLabel</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Property name or getter function to use as the label of an option group.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>optionGroupChildren</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Property name or getter function to retrieve the items of a group.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>placeholder</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Default text to display when no option is selected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>disabled</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the component should be disabled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>dataKey</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>A property to uniquely identify an option.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tabIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Index of the element in tabbing order.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>inputId</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Identifier of the underlying input element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>ariaLabelledBy</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>appendTo</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Id of the element or \"body\" for document where the overlay should be appended to.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>itemTemplate</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>The template of items.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onChange</td>\r\n                                        <td>event.originalEvent: Original event <br />\r\n                                            event.value: Value of the checkbox </td>\r\n                                        <td>Callback to invoke on value change</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onGroupChange</td>\r\n                                        <td>event: Browser event.</td>\r\n                                        <td>Callback to invoke when a group changes.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onBeforeShow</td>\r\n                                        <td>-</td>\r\n                                        <td>Callback to invoke before the overlay is shown.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onBeforeHide</td>\r\n                                        <td>-</td>\r\n                                        <td>Callback to invoke before the overlay is hidden.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onShow</td>\r\n                                        <td>-</td>\r\n                                        <td>Callback to invoke when the overlay is shown.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onHide</td>\r\n                                        <td>-</td>\r\n                                        <td>Callback to invoke when the overlay is hidden.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\">theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-cascadeselect</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-cascadeselect-label</td>\r\n                                        <td>Element to display label of selected option.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-cascadeselect-trigger</td>\r\n                                        <td>Icon element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-cascadeselect-panel</td>\r\n                                        <td>Icon element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-cascadeselect-items-wrapper</td>\r\n                                        <td>Wrapper element of items list.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-cascadeselect-items</td>\r\n                                        <td>List element of items.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-cascadeselect-item</td>\r\n                                        <td>An item in the list.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'CascadeSelectDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}