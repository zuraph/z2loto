{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\tree\\\\Tree.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { UITreeNode } from './UITreeNode';\nexport var Tree = /*#__PURE__*/function (_Component) {\n  _inherits(Tree, _Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree(props) {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      filter: ''\n    };\n\n    if (!_this.props.onToggle) {\n      _this.state['expandedKeys'] = _this.props.expandedKeys;\n    }\n\n    _this.isNodeLeaf = _this.isNodeLeaf.bind(_assertThisInitialized(_this));\n    _this.onToggle = _this.onToggle.bind(_assertThisInitialized(_this));\n    _this.onDragStart = _this.onDragStart.bind(_assertThisInitialized(_this));\n    _this.onDragEnd = _this.onDragEnd.bind(_assertThisInitialized(_this));\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_this));\n    _this.onDropPoint = _this.onDropPoint.bind(_assertThisInitialized(_this));\n    _this.onFilterInputChange = _this.onFilterInputChange.bind(_assertThisInitialized(_this));\n    _this.onFilterInputKeyDown = _this.onFilterInputKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"getExpandedKeys\",\n    value: function getExpandedKeys() {\n      return this.props.onToggle ? this.props.expandedKeys : this.state.expandedKeys;\n    }\n  }, {\n    key: \"getRootNode\",\n    value: function getRootNode() {\n      return this.props.filter && this.filteredNodes ? this.filteredNodes : this.props.value;\n    }\n  }, {\n    key: \"onToggle\",\n    value: function onToggle(event) {\n      if (this.props.onToggle) {\n        this.props.onToggle(event);\n      } else {\n        this.setState({\n          expandedKeys: event.value\n        });\n      }\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(event) {\n      this.dragState = {\n        path: event.path,\n        index: event.index\n      };\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd() {\n      this.dragState = null;\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      if (this.validateDropNode(this.dragState.path, event.path)) {\n        var value = JSON.parse(JSON.stringify(this.props.value));\n        var dragPaths = this.dragState.path.split('-');\n        dragPaths.pop();\n        var dragNodeParent = this.findNode(value, dragPaths);\n        var dragNode = dragNodeParent ? dragNodeParent.children[this.dragState.index] : value[this.dragState.index];\n        var dropNode = this.findNode(value, event.path.split('-'));\n        if (dropNode.children) dropNode.children.push(dragNode);else dropNode.children = [dragNode];\n        if (dragNodeParent) dragNodeParent.children.splice(this.dragState.index, 1);else value.splice(this.dragState.index, 1);\n\n        if (this.props.onDragDrop) {\n          this.props.onDragDrop({\n            originalEvent: event.originalEvent,\n            value: value,\n            dragNode: dragNode,\n            dropNode: dropNode,\n            dropIndex: event.index\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onDropPoint\",\n    value: function onDropPoint(event) {\n      if (this.validateDropPoint(event)) {\n        var value = JSON.parse(JSON.stringify(this.props.value));\n        var dragPaths = this.dragState.path.split('-');\n        dragPaths.pop();\n        var dropPaths = event.path.split('-');\n        dropPaths.pop();\n        var dragNodeParent = this.findNode(value, dragPaths);\n        var dropNodeParent = this.findNode(value, dropPaths);\n        var dragNode = dragNodeParent ? dragNodeParent.children[this.dragState.index] : value[this.dragState.index];\n        var siblings = this.areSiblings(this.dragState.path, event.path);\n        if (dragNodeParent) dragNodeParent.children.splice(this.dragState.index, 1);else value.splice(this.dragState.index, 1);\n\n        if (event.position < 0) {\n          var dropIndex = siblings ? this.dragState.index > event.index ? event.index : event.index - 1 : event.index;\n          if (dropNodeParent) dropNodeParent.children.splice(dropIndex, 0, dragNode);else value.splice(dropIndex, 0, dragNode);\n        } else {\n          if (dropNodeParent) dropNodeParent.children.push(dragNode);else value.push(dragNode);\n        }\n\n        if (this.props.onDragDrop) {\n          this.props.onDragDrop({\n            originalEvent: event.originalEvent,\n            value: value,\n            dragNode: dragNode,\n            dropNode: dropNodeParent,\n            dropIndex: event.index\n          });\n        }\n      }\n    }\n  }, {\n    key: \"validateDrop\",\n    value: function validateDrop(dragPath, dropPath) {\n      if (!dragPath) {\n        return false;\n      } else {\n        //same node\n        if (dragPath === dropPath) {\n          return false;\n        } //parent dropped on an descendant\n\n\n        if (dropPath.indexOf(dragPath) === 0) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  }, {\n    key: \"validateDropNode\",\n    value: function validateDropNode(dragPath, dropPath) {\n      var validateDrop = this.validateDrop(dragPath, dropPath);\n\n      if (validateDrop) {\n        //child dropped on parent\n        if (dragPath.indexOf('-') > 0 && dragPath.substring(0, dragPath.lastIndexOf('-')) === dropPath) {\n          return false;\n        }\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"validateDropPoint\",\n    value: function validateDropPoint(event) {\n      var validateDrop = this.validateDrop(this.dragState.path, event.path);\n\n      if (validateDrop) {\n        //child dropped to next sibling's drop point\n        if (event.position === -1 && this.areSiblings(this.dragState.path, event.path) && this.dragState.index + 1 === event.index) {\n          return false;\n        }\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"areSiblings\",\n    value: function areSiblings(path1, path2) {\n      if (path1.length === 1 && path2.length === 1) return true;else return path1.substring(0, path1.lastIndexOf('-')) === path2.substring(0, path2.lastIndexOf('-'));\n    }\n  }, {\n    key: \"findNode\",\n    value: function findNode(value, path) {\n      if (path.length === 0) {\n        return null;\n      } else {\n        var index = parseInt(path[0], 10);\n        var nextSearchRoot = value.children ? value.children[index] : value[index];\n\n        if (path.length === 1) {\n          return nextSearchRoot;\n        } else {\n          path.shift();\n          return this.findNode(nextSearchRoot, path);\n        }\n      }\n    }\n  }, {\n    key: \"isNodeLeaf\",\n    value: function isNodeLeaf(node) {\n      return node.leaf === false ? false : !(node.children && node.children.length);\n    }\n  }, {\n    key: \"onFilterInputKeyDown\",\n    value: function onFilterInputKeyDown(event) {\n      //enter\n      if (event.which === 13) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onFilterInputChange\",\n    value: function onFilterInputChange(event) {\n      this.filterChanged = true;\n      this.setState({\n        filter: event.target.value\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter() {\n      if (!this.filterChanged) {\n        return;\n      }\n\n      if (this.state.filter === '') {\n        this.filteredNodes = this.props.value;\n      } else {\n        this.filteredNodes = [];\n        var searchFields = this.props.filterBy.split(',');\n        var filterText = this.state.filter.toLocaleLowerCase(this.props.filterLocale);\n        var isStrictMode = this.props.filterMode === 'strict';\n\n        var _iterator = _createForOfIteratorHelper(this.props.value),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var node = _step.value;\n\n            var copyNode = _objectSpread({}, node);\n\n            var paramsWithoutNode = {\n              searchFields: searchFields,\n              filterText: filterText,\n              isStrictMode: isStrictMode\n            };\n\n            if (isStrictMode && (this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode)) || !isStrictMode && (this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode))) {\n              this.filteredNodes.push(copyNode);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      this.filterChanged = false;\n    }\n  }, {\n    key: \"findFilteredNodes\",\n    value: function findFilteredNodes(node, paramsWithoutNode) {\n      if (node) {\n        var matched = false;\n\n        if (node.children) {\n          var childNodes = _toConsumableArray(node.children);\n\n          node.children = [];\n\n          var _iterator2 = _createForOfIteratorHelper(childNodes),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var childNode = _step2.value;\n\n              var copyChildNode = _objectSpread({}, childNode);\n\n              if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\n                matched = true;\n                node.children.push(copyChildNode);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n\n        if (matched) {\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"isFilterMatched\",\n    value: function isFilterMatched(node, _ref) {\n      var searchFields = _ref.searchFields,\n          filterText = _ref.filterText,\n          isStrictMode = _ref.isStrictMode;\n      var matched = false;\n\n      var _iterator3 = _createForOfIteratorHelper(searchFields),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var field = _step3.value;\n          var fieldValue = String(ObjectUtils.resolveFieldData(node, field)).toLocaleLowerCase(this.props.filterLocale);\n\n          if (fieldValue.indexOf(filterText) > -1) {\n            matched = true;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (!matched || isStrictMode && !this.isNodeLeaf(node)) {\n        matched = this.findFilteredNodes(node, {\n          searchFields: searchFields,\n          filterText: filterText,\n          isStrictMode: isStrictMode\n        }) || matched;\n      }\n\n      return matched;\n    }\n  }, {\n    key: \"renderRootChild\",\n    value: function renderRootChild(node, index, last) {\n      return /*#__PURE__*/React.createElement(UITreeNode, {\n        key: node.key || node.label,\n        node: node,\n        index: index,\n        last: last,\n        path: String(index),\n        disabled: this.props.disabled,\n        selectionMode: this.props.selectionMode,\n        selectionKeys: this.props.selectionKeys,\n        onSelectionChange: this.props.onSelectionChange,\n        metaKeySelection: this.props.metaKeySelection,\n        contextMenuSelectionKey: this.props.contextMenuSelectionKey,\n        onContextMenuSelectionChange: this.props.onContextMenuSelectionChange,\n        onContextMenu: this.props.onContextMenu,\n        propagateSelectionDown: this.props.propagateSelectionDown,\n        propagateSelectionUp: this.props.propagateSelectionUp,\n        onExpand: this.props.onExpand,\n        onCollapse: this.props.onCollapse,\n        onSelect: this.props.onSelect,\n        onUnselect: this.props.onUnselect,\n        expandedKeys: this.getExpandedKeys(),\n        onToggle: this.onToggle,\n        nodeTemplate: this.props.nodeTemplate,\n        isNodeLeaf: this.isNodeLeaf,\n        dragdropScope: this.props.dragdropScope,\n        onDragStart: this.onDragStart,\n        onDragEnd: this.onDragEnd,\n        onDrop: this.onDrop,\n        onDropPoint: this.onDropPoint,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"renderRootChildren\",\n    value: function renderRootChildren() {\n      var _this2 = this;\n\n      if (this.props.filter) {\n        this.filterChanged = true;\n        this.filter();\n      }\n\n      var value = this.getRootNode();\n      return value.map(function (node, index) {\n        return _this2.renderRootChild(node, index, index === value.length - 1);\n      });\n    }\n  }, {\n    key: \"renderModel\",\n    value: function renderModel() {\n      if (this.props.value) {\n        var rootNodes = this.renderRootChildren();\n        var contentClass = classNames('p-tree-container', this.props.contentClassName);\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          className: contentClass,\n          role: \"tree\",\n          \"aria-label\": this.props.ariaLabel,\n          \"aria-labelledby\": this.props.ariaLabelledBy,\n          style: this.props.contentStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }\n        }, rootNodes);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderLoader\",\n    value: function renderLoader() {\n      if (this.props.loading) {\n        var icon = classNames('p-tree-loading-icon pi-spin', this.props.loadingIcon);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-tree-loading-overlay p-component-overlay\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: icon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderFilter\",\n    value: function renderFilter() {\n      if (this.props.filter) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-tree-filter-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          className: \"p-tree-filter p-inputtext p-component\",\n          placeholder: this.props.filterPlaceholder,\n          onKeyDown: this.onFilterInputKeyDown,\n          onChange: this.onFilterInputChange,\n          disabled: this.props.disabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-tree-filter-icon pi pi-search\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = classNames('p-tree p-component', this.props.className, {\n        'p-tree-selectable': this.props.selectionMode,\n        'p-tree-loading': this.props.loading,\n        'p-disabled': this.props.disabled\n      });\n      var loader = this.renderLoader();\n      var content = this.renderModel();\n      var filter = this.renderFilter();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }\n      }, loader, filter, content);\n    }\n  }]);\n\n  return Tree;\n}(Component);\nTree.defaultProps = {\n  id: null,\n  value: null,\n  disabled: false,\n  selectionMode: null,\n  selectionKeys: null,\n  onSelectionChange: null,\n  contextMenuSelectionKey: null,\n  onContextMenuSelectionChange: null,\n  expandedKeys: null,\n  style: null,\n  className: null,\n  contentStyle: null,\n  contentClassName: null,\n  metaKeySelection: true,\n  propagateSelectionUp: true,\n  propagateSelectionDown: true,\n  loading: false,\n  loadingIcon: 'pi pi-spinner',\n  dragdropScope: null,\n  filter: false,\n  filterBy: 'label',\n  filterMode: 'lenient',\n  filterPlaceholder: null,\n  filterLocale: undefined,\n  nodeTemplate: null,\n  onSelect: null,\n  onUnselect: null,\n  onExpand: null,\n  onCollapse: null,\n  onToggle: null,\n  onDragDrop: null,\n  onContextMenu: null\n};\nTree.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.any,\n  disabled: PropTypes.bool,\n  selectionMode: PropTypes.string,\n  selectionKeys: PropTypes.any,\n  onSelectionChange: PropTypes.func,\n  contextMenuSelectionKey: PropTypes.any,\n  onContextMenuSelectionChange: PropTypes.func,\n  expandedKeys: PropTypes.object,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  contentStyle: PropTypes.object,\n  contentClassName: PropTypes.string,\n  metaKeySelection: PropTypes.bool,\n  propagateSelectionUp: PropTypes.bool,\n  propagateSelectionDown: PropTypes.bool,\n  loading: PropTypes.bool,\n  loadingIcon: PropTypes.string,\n  dragdropScope: PropTypes.string,\n  filter: PropTypes.bool,\n  filterBy: PropTypes.any,\n  filterMode: PropTypes.string,\n  filterPlaceholder: PropTypes.string,\n  filterLocale: PropTypes.string,\n  nodeTemplate: PropTypes.func,\n  onSelect: PropTypes.func,\n  onUnselect: PropTypes.func,\n  onExpand: PropTypes.func,\n  onCollapse: PropTypes.func,\n  onToggle: PropTypes.func,\n  onDragDrop: PropTypes.func,\n  onContextMenu: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/tree/Tree.js"],"names":["React","Component","PropTypes","classNames","ObjectUtils","UITreeNode","Tree","props","state","filter","onToggle","expandedKeys","isNodeLeaf","bind","onDragStart","onDragEnd","onDrop","onDropPoint","onFilterInputChange","onFilterInputKeyDown","filteredNodes","value","event","setState","dragState","path","index","validateDropNode","JSON","parse","stringify","dragPaths","split","pop","dragNodeParent","findNode","dragNode","children","dropNode","push","splice","onDragDrop","originalEvent","dropIndex","validateDropPoint","dropPaths","dropNodeParent","siblings","areSiblings","position","dragPath","dropPath","indexOf","validateDrop","substring","lastIndexOf","path1","path2","length","parseInt","nextSearchRoot","shift","node","leaf","which","preventDefault","filterChanged","target","searchFields","filterBy","filterText","toLocaleLowerCase","filterLocale","isStrictMode","filterMode","copyNode","paramsWithoutNode","findFilteredNodes","isFilterMatched","matched","childNodes","childNode","copyChildNode","field","fieldValue","String","resolveFieldData","last","key","label","disabled","selectionMode","selectionKeys","onSelectionChange","metaKeySelection","contextMenuSelectionKey","onContextMenuSelectionChange","onContextMenu","propagateSelectionDown","propagateSelectionUp","onExpand","onCollapse","onSelect","onUnselect","getExpandedKeys","nodeTemplate","dragdropScope","getRootNode","map","renderRootChild","rootNodes","renderRootChildren","contentClass","contentClassName","ariaLabel","ariaLabelledBy","contentStyle","loading","icon","loadingIcon","filterPlaceholder","className","loader","renderLoader","content","renderModel","renderFilter","id","style","defaultProps","undefined","propTypes","string","any","bool","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport {UITreeNode} from './UITreeNode';\r\n\r\nexport class Tree extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        disabled: false,\r\n        selectionMode: null,\r\n        selectionKeys: null,\r\n        onSelectionChange: null,\r\n        contextMenuSelectionKey: null,\r\n        onContextMenuSelectionChange: null,\r\n        expandedKeys: null,\r\n        style: null,\r\n        className: null,\r\n        contentStyle: null,\r\n        contentClassName: null,\r\n        metaKeySelection: true,\r\n        propagateSelectionUp: true,\r\n        propagateSelectionDown: true,\r\n        loading: false,\r\n        loadingIcon: 'pi pi-spinner',\r\n        dragdropScope: null,\r\n        filter: false,\r\n        filterBy: 'label',\r\n        filterMode: 'lenient',\r\n        filterPlaceholder: null,\r\n        filterLocale: undefined,\r\n        nodeTemplate: null,\r\n        onSelect: null,\r\n        onUnselect: null,\r\n        onExpand: null,\r\n        onCollapse: null,\r\n        onToggle: null,\r\n        onDragDrop: null,\r\n        onContextMenu: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.any,\r\n        disabled: PropTypes.bool,\r\n        selectionMode: PropTypes.string,\r\n        selectionKeys: PropTypes.any,\r\n        onSelectionChange: PropTypes.func,\r\n        contextMenuSelectionKey: PropTypes.any,\r\n        onContextMenuSelectionChange: PropTypes.func,\r\n        expandedKeys: PropTypes.object,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        contentStyle: PropTypes.object,\r\n        contentClassName: PropTypes.string,\r\n        metaKeySelection: PropTypes.bool,\r\n        propagateSelectionUp: PropTypes.bool,\r\n        propagateSelectionDown: PropTypes.bool,\r\n        loading: PropTypes.bool,\r\n        loadingIcon: PropTypes.string,\r\n        dragdropScope: PropTypes.string,\r\n        filter: PropTypes.bool,\r\n        filterBy: PropTypes.any,\r\n        filterMode: PropTypes.string,\r\n        filterPlaceholder: PropTypes.string,\r\n        filterLocale: PropTypes.string,\r\n        nodeTemplate: PropTypes.func,\r\n        onSelect: PropTypes.func,\r\n        onUnselect: PropTypes.func,\r\n        onExpand: PropTypes.func,\r\n        onCollapse: PropTypes.func,\r\n        onToggle: PropTypes.func,\r\n        onDragDrop: PropTypes.func,\r\n        onContextMenu: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n\r\n        if (!this.props.onToggle) {\r\n            this.state['expandedKeys'] = this.props.expandedKeys;\r\n        }\r\n\r\n        this.isNodeLeaf = this.isNodeLeaf.bind(this);\r\n        this.onToggle = this.onToggle.bind(this);\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.onDropPoint = this.onDropPoint.bind(this);\r\n        this.onFilterInputChange = this.onFilterInputChange.bind(this);\r\n        this.onFilterInputKeyDown = this.onFilterInputKeyDown.bind(this);\r\n    }\r\n\r\n    getExpandedKeys() {\r\n        return this.props.onToggle ? this.props.expandedKeys : this.state.expandedKeys;\r\n    }\r\n\r\n    getRootNode() {\r\n        return (this.props.filter && this.filteredNodes) ? this.filteredNodes : this.props.value;\r\n    }\r\n\r\n    onToggle(event) {\r\n        if (this.props.onToggle) {\r\n            this.props.onToggle(event);\r\n        }\r\n        else {\r\n            this.setState({\r\n                expandedKeys: event.value\r\n            });\r\n        }\r\n    }\r\n\r\n    onDragStart(event) {\r\n        this.dragState = {\r\n            path: event.path,\r\n            index: event.index\r\n        }\r\n    }\r\n\r\n    onDragEnd() {\r\n        this.dragState = null;\r\n    }\r\n\r\n    onDrop(event) {\r\n        if (this.validateDropNode(this.dragState.path, event.path)) {\r\n            let value = JSON.parse(JSON.stringify(this.props.value));\r\n            let dragPaths = this.dragState.path.split('-');\r\n            dragPaths.pop();\r\n            let dragNodeParent = this.findNode(value, dragPaths);\r\n            let dragNode = dragNodeParent ? dragNodeParent.children[this.dragState.index] : value[this.dragState.index];\r\n            let dropNode = this.findNode(value, event.path.split('-'));\r\n\r\n            if (dropNode.children)\r\n                dropNode.children.push(dragNode);\r\n            else\r\n                dropNode.children = [dragNode];\r\n\r\n            if (dragNodeParent)\r\n                dragNodeParent.children.splice(this.dragState.index, 1);\r\n            else\r\n                value.splice(this.dragState.index, 1);\r\n\r\n            if (this.props.onDragDrop) {\r\n                this.props.onDragDrop({\r\n                    originalEvent: event.originalEvent,\r\n                    value: value,\r\n                    dragNode,\r\n                    dropNode,\r\n                    dropIndex: event.index\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropPoint(event) {\r\n        if (this.validateDropPoint(event)) {\r\n            let value = JSON.parse(JSON.stringify(this.props.value));\r\n            let dragPaths = this.dragState.path.split('-');\r\n            dragPaths.pop();\r\n            let dropPaths = event.path.split('-');\r\n            dropPaths.pop();\r\n            let dragNodeParent = this.findNode(value, dragPaths);\r\n            let dropNodeParent = this.findNode(value, dropPaths);\r\n            let dragNode = dragNodeParent ? dragNodeParent.children[this.dragState.index] : value[this.dragState.index];\r\n            let siblings = this.areSiblings(this.dragState.path, event.path);\r\n\r\n            if (dragNodeParent)\r\n                dragNodeParent.children.splice(this.dragState.index, 1);\r\n            else\r\n                value.splice(this.dragState.index, 1);\r\n\r\n            if (event.position < 0) {\r\n                let dropIndex = (siblings) ? (this.dragState.index > event.index) ? event.index : event.index - 1 : event.index;\r\n\r\n                if (dropNodeParent)\r\n                    dropNodeParent.children.splice(dropIndex, 0, dragNode);\r\n                else\r\n                    value.splice(dropIndex, 0, dragNode);\r\n            }\r\n            else {\r\n                if (dropNodeParent)\r\n                    dropNodeParent.children.push(dragNode);\r\n                else\r\n                    value.push(dragNode);\r\n            }\r\n\r\n            if (this.props.onDragDrop) {\r\n                this.props.onDragDrop({\r\n                    originalEvent: event.originalEvent,\r\n                    value: value,\r\n                    dragNode,\r\n                    dropNode: dropNodeParent,\r\n                    dropIndex: event.index\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    validateDrop(dragPath, dropPath) {\r\n        if (!dragPath) {\r\n            return false;\r\n        }\r\n        else {\r\n            //same node\r\n            if (dragPath === dropPath) {\r\n                return false;\r\n            }\r\n\r\n            //parent dropped on an descendant\r\n            if (dropPath.indexOf(dragPath) === 0) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    validateDropNode(dragPath, dropPath) {\r\n        let validateDrop = this.validateDrop(dragPath, dropPath);\r\n        if (validateDrop) {\r\n            //child dropped on parent\r\n            if (dragPath.indexOf('-') > 0 && dragPath.substring(0, dragPath.lastIndexOf('-')) === dropPath) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    validateDropPoint(event) {\r\n        let validateDrop = this.validateDrop(this.dragState.path, event.path);\r\n        if (validateDrop) {\r\n            //child dropped to next sibling's drop point\r\n            if (event.position === -1 && this.areSiblings(this.dragState.path, event.path) && (this.dragState.index +1 === event.index)) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    areSiblings(path1, path2) {\r\n        if (path1.length === 1 && path2.length === 1)\r\n            return true;\r\n        else\r\n            return path1.substring(0, path1.lastIndexOf('-')) === path2.substring(0, path2.lastIndexOf('-'));\r\n    }\r\n\r\n    findNode(value, path) {\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            const index = parseInt(path[0], 10);\r\n            const nextSearchRoot = value.children ? value.children[index] : value[index];\r\n\r\n            if (path.length === 1) {\r\n                return nextSearchRoot;\r\n            }\r\n            else {\r\n                path.shift();\r\n                return this.findNode(nextSearchRoot, path);\r\n            }\r\n        }\r\n    }\r\n\r\n    isNodeLeaf(node) {\r\n        return node.leaf === false ? false : !(node.children && node.children.length);\r\n    }\r\n\r\n    onFilterInputKeyDown(event) {\r\n        //enter\r\n        if (event.which === 13) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onFilterInputChange(event) {\r\n        this.filterChanged = true;\r\n        this.setState({filter: event.target.value});\r\n    }\r\n\r\n    filter() {\r\n        if (!this.filterChanged) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.filter === '') {\r\n            this.filteredNodes = this.props.value;\r\n        }\r\n        else {\r\n            this.filteredNodes = [];\r\n            const searchFields = this.props.filterBy.split(',');\r\n            const filterText = this.state.filter.toLocaleLowerCase(this.props.filterLocale);\r\n            const isStrictMode = this.props.filterMode === 'strict';\r\n            for(let node of this.props.value) {\r\n                let copyNode = {...node};\r\n                let paramsWithoutNode = {searchFields, filterText, isStrictMode};\r\n                if ((isStrictMode && (this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode))) ||\r\n                    (!isStrictMode && (this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode)))) {\r\n                    this.filteredNodes.push(copyNode);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filterChanged = false;\r\n    }\r\n\r\n    findFilteredNodes(node, paramsWithoutNode) {\r\n        if (node) {\r\n            let matched = false;\r\n            if (node.children) {\r\n                let childNodes = [...node.children];\r\n                node.children = [];\r\n                for (let childNode of childNodes) {\r\n                    let copyChildNode = {...childNode};\r\n                    if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\r\n                        matched = true;\r\n                        node.children.push(copyChildNode);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (matched) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isFilterMatched(node, {searchFields, filterText, isStrictMode}) {\r\n        let matched = false;\r\n        for(let field of searchFields) {\r\n            let fieldValue = String(ObjectUtils.resolveFieldData(node, field)).toLocaleLowerCase(this.props.filterLocale);\r\n            if(fieldValue.indexOf(filterText) > -1) {\r\n                matched = true;\r\n            }\r\n        }\r\n\r\n        if (!matched || (isStrictMode && !this.isNodeLeaf(node))) {\r\n            matched = this.findFilteredNodes(node, {searchFields, filterText, isStrictMode}) || matched;\r\n        }\r\n\r\n        return matched;\r\n    }\r\n\r\n    renderRootChild(node, index, last) {\r\n        return (\r\n            <UITreeNode key={node.key||node.label} node={node} index={index} last={last} path={String(index)} disabled={this.props.disabled} selectionMode={this.props.selectionMode}\r\n                    selectionKeys={this.props.selectionKeys} onSelectionChange={this.props.onSelectionChange} metaKeySelection={this.props.metaKeySelection}\r\n                    contextMenuSelectionKey={this.props.contextMenuSelectionKey} onContextMenuSelectionChange={this.props.onContextMenuSelectionChange} onContextMenu={this.props.onContextMenu}\r\n                    propagateSelectionDown={this.props.propagateSelectionDown} propagateSelectionUp={this.props.propagateSelectionUp}\r\n                    onExpand={this.props.onExpand} onCollapse={this.props.onCollapse} onSelect={this.props.onSelect} onUnselect={this.props.onUnselect}\r\n                    expandedKeys={this.getExpandedKeys()} onToggle={this.onToggle} nodeTemplate={this.props.nodeTemplate} isNodeLeaf={this.isNodeLeaf}\r\n                    dragdropScope={this.props.dragdropScope} onDragStart={this.onDragStart} onDragEnd={this.onDragEnd} onDrop={this.onDrop} onDropPoint={this.onDropPoint}  />\r\n        );\r\n    }\r\n\r\n    renderRootChildren() {\r\n        if (this.props.filter) {\r\n            this.filterChanged = true;\r\n            this.filter();\r\n        }\r\n\r\n        const value = this.getRootNode();\r\n        return (\r\n            value.map((node, index) => this.renderRootChild(node, index, (index === value.length - 1)))\r\n        );\r\n    }\r\n\r\n    renderModel() {\r\n        if (this.props.value) {\r\n            const rootNodes = this.renderRootChildren();\r\n            let contentClass = classNames('p-tree-container', this.props.contentClassName);\r\n\r\n            return (\r\n                <ul className={contentClass} role=\"tree\" aria-label={this.props.ariaLabel} aria-labelledby={this.props.ariaLabelledBy} style={this.props.contentStyle}>\r\n                    {rootNodes}\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderLoader() {\r\n        if (this.props.loading) {\r\n            let icon = classNames('p-tree-loading-icon pi-spin', this.props.loadingIcon);\r\n\r\n            return (\r\n                <div className=\"p-tree-loading-overlay p-component-overlay\">\r\n                    <i className={icon} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderFilter() {\r\n        if (this.props.filter) {\r\n            return <div className=\"p-tree-filter-container\">\r\n                        <input type=\"text\" autoComplete=\"off\" className=\"p-tree-filter p-inputtext p-component\" placeholder={this.props.filterPlaceholder}\r\n                            onKeyDown={this.onFilterInputKeyDown} onChange={this.onFilterInputChange} disabled={this.props.disabled}/>\r\n                        <span className=\"p-tree-filter-icon pi pi-search\"></span>\r\n                   </div>;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-tree p-component', this.props.className, {\r\n            'p-tree-selectable': this.props.selectionMode,\r\n            'p-tree-loading': this.props.loading,\r\n            'p-disabled': this.props.disabled\r\n        });\r\n        const loader = this.renderLoader();\r\n        const content = this.renderModel();\r\n        const filter = this.renderFilter();\r\n\r\n        return (\r\n            <div id={this.props.id} className={className} style={this.props.style}>\r\n                {loader}\r\n                {filter}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}