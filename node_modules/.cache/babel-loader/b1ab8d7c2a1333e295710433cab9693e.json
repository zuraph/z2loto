{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\datatable\\\\ScrollableView.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport DomHandler from '../utils/DomHandler';\nexport var ScrollableView = /*#__PURE__*/function (_Component) {\n  _inherits(ScrollableView, _Component);\n\n  var _super = _createSuper(ScrollableView);\n\n  function ScrollableView(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollableView);\n\n    _this = _super.call(this, props);\n    _this.onHeaderScroll = _this.onHeaderScroll.bind(_assertThisInitialized(_this));\n    _this.onBodyScroll = _this.onBodyScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollableView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setScrollHeight();\n\n      if (!this.props.frozen) {\n        var scrollBarWidth = DomHandler.calculateScrollbarWidth();\n        this.scrollHeaderBox.style.marginRight = scrollBarWidth + 'px';\n\n        if (this.scrollFooterBox) {\n          this.scrollFooterBox.style.marginRight = scrollBarWidth + 'px';\n        }\n      } else {\n        this.scrollBody.style.paddingBottom = DomHandler.calculateScrollbarWidth() + 'px';\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.scrollHeight !== prevProps.scrollHeight) {\n        this.setScrollHeight();\n      }\n\n      if (!this.props.frozen && this.props.virtualScroll) {\n        this.virtualScroller.style.height = this.props.totalRecords * this.props.virtualRowHeight + 'px';\n      }\n\n      if (this.virtualScrollCallback && !this.props.loading) {\n        this.virtualScrollCallback();\n        this.virtualScrollCallback = null;\n      }\n    }\n  }, {\n    key: \"setScrollHeight\",\n    value: function setScrollHeight() {\n      if (this.props.scrollHeight) {\n        var frozenView = this.container.previousElementSibling;\n\n        if (frozenView) {\n          var frozenScrollBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\n          this.scrollBody.style.maxHeight = frozenScrollBody.style.maxHeight;\n        } else {\n          if (this.props.scrollHeight.indexOf('%') !== -1) {\n            var datatableContainer = this.findDataTableContainer(this.container);\n            this.scrollBody.style.visibility = 'hidden';\n            this.scrollBody.style.height = '100px'; //temporary height to calculate static height\n\n            var containerHeight = DomHandler.getOuterHeight(datatableContainer);\n            var relativeHeight = DomHandler.getOuterHeight(datatableContainer.parentElement) * parseInt(this.props.scrollHeight, 10) / 100;\n            var staticHeight = containerHeight - 100; //total height of headers, footers, paginators\n\n            var scrollBodyHeight = relativeHeight - staticHeight;\n\n            if (this.props.frozen) {\n              scrollBodyHeight -= DomHandler.calculateScrollbarWidth();\n            }\n\n            this.scrollBody.style.height = 'auto';\n            this.scrollBody.style.maxHeight = scrollBodyHeight + 'px';\n            this.scrollBody.style.visibility = 'visible';\n          } else {\n            this.scrollBody.style.maxHeight = this.props.scrollHeight;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"findDataTableContainer\",\n    value: function findDataTableContainer(element) {\n      if (element) {\n        var el = element;\n\n        while (el && !DomHandler.hasClass(el, 'p-datatable')) {\n          el = el.parentElement;\n        }\n\n        return el;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"onHeaderScroll\",\n    value: function onHeaderScroll() {\n      this.scrollHeader.scrollLeft = 0;\n    }\n  }, {\n    key: \"onBodyScroll\",\n    value: function onBodyScroll() {\n      var _this2 = this;\n\n      var frozenView = this.container.previousElementSibling;\n      var frozenScrollBody;\n\n      if (frozenView) {\n        frozenScrollBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\n      }\n\n      this.scrollHeaderBox.style.marginLeft = -1 * this.scrollBody.scrollLeft + 'px';\n\n      if (this.scrollFooterBox) {\n        this.scrollFooterBox.style.marginLeft = -1 * this.scrollBody.scrollLeft + 'px';\n      }\n\n      if (frozenScrollBody) {\n        frozenScrollBody.scrollTop = this.scrollBody.scrollTop;\n      }\n\n      if (this.props.virtualScroll) {\n        var viewport = DomHandler.getClientHeight(this.scrollBody);\n        var tableHeight = DomHandler.getOuterHeight(this.scrollTable);\n        var pageHeight = this.props.virtualRowHeight * this.props.rows;\n        var virtualTableHeight = DomHandler.getOuterHeight(this.virtualScroller);\n        var pageCount = virtualTableHeight / pageHeight || 1;\n        var scrollBodyTop = this.scrollTable.style.top || '0';\n\n        if (this.scrollBody.scrollTop + viewport > parseFloat(scrollBodyTop) + tableHeight || this.scrollBody.scrollTop < parseFloat(scrollBodyTop)) {\n          if (this.loadingTable) {\n            this.loadingTable.style.display = 'table';\n            this.loadingTable.style.top = this.scrollBody.scrollTop + 'px';\n          }\n\n          var page = Math.floor(this.scrollBody.scrollTop * pageCount / this.scrollBody.scrollHeight) + 1;\n\n          if (this.props.onVirtualScroll) {\n            this.props.onVirtualScroll({\n              page: page\n            });\n\n            this.virtualScrollCallback = function () {\n              if (_this2.loadingTable) {\n                _this2.loadingTable.style.display = 'none';\n              }\n\n              _this2.scrollTable.style.top = (page - 1) * pageHeight + 'px';\n            };\n          }\n        }\n      }\n    }\n  }, {\n    key: \"renderColGroup\",\n    value: function renderColGroup() {\n      var _this3 = this;\n\n      if (this.props.columns && this.props.columns.length) {\n        return /*#__PURE__*/React.createElement(\"colgroup\", {\n          className: \"p-datatable-scrollable-colgroup\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }\n        }, this.props.columns.map(function (col, i) {\n          return /*#__PURE__*/React.createElement(\"col\", {\n            key: col.props.field + '_' + i,\n            style: col.props.headerStyle || col.props.style,\n            className: col.props.headerClassName || col.props.className,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 57\n            }\n          });\n        }));\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderLoadingTable\",\n    value: function renderLoadingTable(colGroup) {\n      var _this4 = this;\n\n      if (this.props.virtualScroll) {\n        return /*#__PURE__*/React.createElement(\"table\", {\n          ref: function ref(el) {\n            return _this4.loadingTable = el;\n          },\n          style: {\n            top: '0',\n            display: 'none'\n          },\n          className: \"p-datatable-scrollable-body-table p-datatable-loading-virtual-table p-datatable-virtual-table\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }\n        }, colGroup, this.props.loadingBody);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var className = classNames('p-datatable-scrollable-view', {\n        'p-datatable-frozen-view': this.props.frozen,\n        'p-datatable-unfrozen-view': !this.props.frozen && this.props.frozenWidth\n      });\n      var tableBodyClassName = classNames('p-datatable-scrollable-body-table', this.props.tableClassName, {\n        'p-datatable-virtual-table': this.props.virtualScroll\n      });\n      var tableHeaderClassName = classNames('p-datatable-scrollable-header-table', this.props.tableClassName);\n      var tableFooterClassName = classNames('p-datatable-scrollable-footer-table', this.props.tableClassName);\n      var tableBodyStyle = Object.assign({\n        top: '0'\n      }, this.props.tableStyle);\n      var width = this.props.columns ? this.props.frozen ? this.props.frozenWidth : 'calc(100% - ' + this.props.frozenWidth + ')' : 0;\n      var left = this.props.frozen ? null : this.props.frozenWidth;\n      var colGroup = this.renderColGroup();\n      var loadingTable = this.renderLoadingTable(colGroup);\n      var scrollableBodyStyle = !this.props.frozen && this.props.scrollHeight ? {\n        overflowY: 'scroll'\n      } : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        style: {\n          width: width,\n          left: left\n        },\n        ref: function ref(el) {\n          _this5.container = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-scrollable-header\",\n        ref: function ref(el) {\n          _this5.scrollHeader = el;\n        },\n        onScroll: this.onHeaderScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-scrollable-header-box\",\n        ref: function ref(el) {\n          _this5.scrollHeaderBox = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: tableHeaderClassName,\n        style: this.props.tableStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, colGroup, this.props.header, this.props.frozenBody))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-scrollable-body\",\n        ref: function ref(el) {\n          _this5.scrollBody = el;\n        },\n        style: scrollableBodyStyle,\n        onScroll: this.onBodyScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        ref: function ref(el) {\n          return _this5.scrollTable = el;\n        },\n        style: tableBodyStyle,\n        className: tableBodyClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, colGroup, this.props.body), loadingTable, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-virtual-scroller\",\n        ref: function ref(el) {\n          _this5.virtualScroller = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-scrollable-footer\",\n        ref: function ref(el) {\n          _this5.scrollFooter = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-scrollable-footer-box\",\n        ref: function ref(el) {\n          _this5.scrollFooterBox = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: tableFooterClassName,\n        style: this.props.tableStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 26\n        }\n      }, colGroup, this.props.footer))));\n    }\n  }]);\n\n  return ScrollableView;\n}(Component);\nScrollableView.defaultProps = {\n  header: null,\n  body: null,\n  footer: null,\n  columns: null,\n  frozen: null,\n  frozenWidth: null,\n  frozenBody: null,\n  virtualScroll: false,\n  virtualRowHeight: null,\n  rows: null,\n  totalRecords: null,\n  loading: false,\n  tableStyle: null,\n  tableClassName: null,\n  onVirtualScroll: null\n};\nScrollableView.propTypes = {\n  header: PropTypes.any,\n  body: PropTypes.any,\n  footer: PropTypes.any,\n  columns: PropTypes.array,\n  frozen: PropTypes.bool,\n  frozenWidth: PropTypes.string,\n  frozenBody: PropTypes.any,\n  virtualScroll: PropTypes.bool,\n  virtualRowHeight: PropTypes.number,\n  rows: PropTypes.number,\n  totalRcords: PropTypes.number,\n  loading: PropTypes.bool,\n  tableStyle: PropTypes.any,\n  tableClassName: PropTypes.string,\n  onVirtualScroll: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/datatable/ScrollableView.js"],"names":["React","Component","PropTypes","classNames","DomHandler","ScrollableView","props","onHeaderScroll","bind","onBodyScroll","setScrollHeight","frozen","scrollBarWidth","calculateScrollbarWidth","scrollHeaderBox","style","marginRight","scrollFooterBox","scrollBody","paddingBottom","prevProps","prevState","snapshot","scrollHeight","virtualScroll","virtualScroller","height","totalRecords","virtualRowHeight","virtualScrollCallback","loading","frozenView","container","previousElementSibling","frozenScrollBody","findSingle","maxHeight","indexOf","datatableContainer","findDataTableContainer","visibility","containerHeight","getOuterHeight","relativeHeight","parentElement","parseInt","staticHeight","scrollBodyHeight","element","el","hasClass","scrollHeader","scrollLeft","marginLeft","scrollTop","viewport","getClientHeight","tableHeight","scrollTable","pageHeight","rows","virtualTableHeight","pageCount","scrollBodyTop","top","parseFloat","loadingTable","display","page","Math","floor","onVirtualScroll","columns","length","map","col","i","field","headerStyle","headerClassName","className","colGroup","loadingBody","frozenWidth","tableBodyClassName","tableClassName","tableHeaderClassName","tableFooterClassName","tableBodyStyle","Object","assign","tableStyle","width","left","renderColGroup","renderLoadingTable","scrollableBodyStyle","overflowY","header","frozenBody","body","scrollFooter","footer","defaultProps","propTypes","any","array","bool","string","number","totalRcords","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport DomHandler from '../utils/DomHandler';\r\n\r\nexport class ScrollableView extends Component {\r\n\r\n     static defaultProps = {\r\n        header: null,\r\n        body: null,\r\n        footer: null,\r\n        columns: null,\r\n        frozen: null,\r\n        frozenWidth: null,\r\n        frozenBody: null,\r\n        virtualScroll: false,\r\n        virtualRowHeight: null,\r\n        rows: null,\r\n        totalRecords: null,\r\n        loading: false,\r\n        tableStyle: null,\r\n        tableClassName: null,\r\n        onVirtualScroll: null\r\n     }\r\n\r\n    static propTypes = {\r\n        header: PropTypes.any,\r\n        body: PropTypes.any,\r\n        footer: PropTypes.any,\r\n        columns: PropTypes.array,\r\n        frozen: PropTypes.bool,\r\n        frozenWidth: PropTypes.string,\r\n        frozenBody: PropTypes.any,\r\n        virtualScroll: PropTypes.bool,\r\n        virtualRowHeight: PropTypes.number,\r\n        rows: PropTypes.number,\r\n        totalRcords: PropTypes.number,\r\n        loading: PropTypes.bool,\r\n        tableStyle: PropTypes.any,\r\n        tableClassName: PropTypes.string,\r\n        onVirtualScroll: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onHeaderScroll = this.onHeaderScroll.bind(this);\r\n        this.onBodyScroll = this.onBodyScroll.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setScrollHeight();\r\n\r\n        if (!this.props.frozen) {\r\n            let scrollBarWidth = DomHandler.calculateScrollbarWidth();\r\n\r\n            this.scrollHeaderBox.style.marginRight = scrollBarWidth + 'px';\r\n            if (this.scrollFooterBox) {\r\n                this.scrollFooterBox.style.marginRight = scrollBarWidth + 'px';\r\n            }\r\n        }\r\n        else {\r\n            this.scrollBody.style.paddingBottom = DomHandler.calculateScrollbarWidth() + 'px';\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.scrollHeight !== prevProps.scrollHeight) {\r\n            this.setScrollHeight();\r\n        }\r\n\r\n        if (!this.props.frozen && this.props.virtualScroll) {\r\n            this.virtualScroller.style.height = this.props.totalRecords * this.props.virtualRowHeight + 'px';\r\n        }\r\n\r\n        if (this.virtualScrollCallback && !this.props.loading) {\r\n            this.virtualScrollCallback();\r\n            this.virtualScrollCallback = null;\r\n        }\r\n    }\r\n\r\n    setScrollHeight() {\r\n        if(this.props.scrollHeight) {\r\n            let frozenView = this.container.previousElementSibling;\r\n            if(frozenView) {\r\n                let frozenScrollBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\r\n                this.scrollBody.style.maxHeight = frozenScrollBody.style.maxHeight;\r\n            }\r\n            else {\r\n                if(this.props.scrollHeight.indexOf('%') !== -1) {\r\n                    let datatableContainer = this.findDataTableContainer(this.container);\r\n                    this.scrollBody.style.visibility = 'hidden';\r\n                    this.scrollBody.style.height = '100px';         //temporary height to calculate static height\r\n                    let containerHeight = DomHandler.getOuterHeight(datatableContainer);\r\n                    let relativeHeight = DomHandler.getOuterHeight(datatableContainer.parentElement) * parseInt(this.props.scrollHeight, 10) / 100;\r\n                    let staticHeight = containerHeight - 100;       //total height of headers, footers, paginators\r\n                    let scrollBodyHeight = (relativeHeight - staticHeight);\r\n\r\n                    if (this.props.frozen) {\r\n                        scrollBodyHeight -= DomHandler.calculateScrollbarWidth();\r\n                    }\r\n\r\n                    this.scrollBody.style.height = 'auto';\r\n                    this.scrollBody.style.maxHeight = scrollBodyHeight + 'px';\r\n                    this.scrollBody.style.visibility = 'visible';\r\n                }\r\n                else {\r\n                    this.scrollBody.style.maxHeight = this.props.scrollHeight;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findDataTableContainer(element) {\r\n        if(element) {\r\n            let el = element;\r\n            while(el && !DomHandler.hasClass(el, 'p-datatable')) {\r\n                el = el.parentElement;\r\n            }\r\n\r\n            return el;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onHeaderScroll() {\r\n        this.scrollHeader.scrollLeft = 0;\r\n    }\r\n\r\n    onBodyScroll() {\r\n        let frozenView = this.container.previousElementSibling;\r\n        let frozenScrollBody;\r\n        if(frozenView) {\r\n            frozenScrollBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\r\n        }\r\n\r\n        this.scrollHeaderBox.style.marginLeft = -1 * this.scrollBody.scrollLeft + 'px';\r\n        if(this.scrollFooterBox) {\r\n            this.scrollFooterBox.style.marginLeft = -1 * this.scrollBody.scrollLeft + 'px';\r\n        }\r\n\r\n        if(frozenScrollBody) {\r\n            frozenScrollBody.scrollTop = this.scrollBody.scrollTop;\r\n        }\r\n\r\n        if(this.props.virtualScroll) {\r\n            let viewport = DomHandler.getClientHeight(this.scrollBody);\r\n            let tableHeight = DomHandler.getOuterHeight(this.scrollTable);\r\n            let pageHeight = this.props.virtualRowHeight * this.props.rows;\r\n            let virtualTableHeight = DomHandler.getOuterHeight(this.virtualScroller);\r\n            let pageCount = (virtualTableHeight / pageHeight)||1;\r\n            let scrollBodyTop = this.scrollTable.style.top||'0';\r\n\r\n            if(this.scrollBody.scrollTop + viewport > parseFloat(scrollBodyTop) + tableHeight || this.scrollBody.scrollTop < parseFloat(scrollBodyTop)) {\r\n                if (this.loadingTable) {\r\n                    this.loadingTable.style.display = 'table';\r\n                    this.loadingTable.style.top = this.scrollBody.scrollTop + 'px';\r\n                }\r\n\r\n                let page = Math.floor((this.scrollBody.scrollTop * pageCount) / (this.scrollBody.scrollHeight)) + 1;\r\n                if(this.props.onVirtualScroll) {\r\n                    this.props.onVirtualScroll({\r\n                        page: page\r\n                    });\r\n\r\n                    this.virtualScrollCallback = () => {\r\n                        if (this.loadingTable) {\r\n                            this.loadingTable.style.display = 'none';\r\n                        }\r\n\r\n                        this.scrollTable.style.top = ((page - 1) * pageHeight) + 'px';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    renderColGroup() {\r\n        if(this.props.columns && this.props.columns.length) {\r\n            return (\r\n                <colgroup className=\"p-datatable-scrollable-colgroup\">\r\n                    {this.props.columns.map((col, i) => <col key={col.props.field + '_' + i} style={col.props.headerStyle || col.props.style} className={col.props.headerClassName || col.props.className}/>)}\r\n                </colgroup>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderLoadingTable(colGroup) {\r\n        if (this.props.virtualScroll) {\r\n            return (\r\n                <table ref={el => this.loadingTable = el} style={{top:'0', display: 'none'}} className=\"p-datatable-scrollable-body-table p-datatable-loading-virtual-table p-datatable-virtual-table\">\r\n                    {colGroup}\r\n                    {this.props.loadingBody}\r\n                </table>\r\n            )\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-datatable-scrollable-view', {'p-datatable-frozen-view': this.props.frozen, 'p-datatable-unfrozen-view': !this.props.frozen && this.props.frozenWidth});\r\n        let tableBodyClassName = classNames('p-datatable-scrollable-body-table', this.props.tableClassName, {'p-datatable-virtual-table': this.props.virtualScroll});\r\n        let tableHeaderClassName = classNames('p-datatable-scrollable-header-table', this.props.tableClassName);\r\n        let tableFooterClassName = classNames('p-datatable-scrollable-footer-table', this.props.tableClassName);\r\n        let tableBodyStyle = Object.assign({top:'0'}, this.props.tableStyle);\r\n        let width = this.props.columns ? (this.props.frozen ? this.props.frozenWidth : 'calc(100% - ' + this.props.frozenWidth + ')') : 0;\r\n        let left = this.props.frozen ? null : this.props.frozenWidth;\r\n        let colGroup = this.renderColGroup();\r\n        let loadingTable = this.renderLoadingTable(colGroup);\r\n        let scrollableBodyStyle = !this.props.frozen && this.props.scrollHeight ? { overflowY: 'scroll' } : null;\r\n\r\n        return (\r\n            <div className={className} style={{width: width, left: left}} ref={(el) => { this.container = el; }}>\r\n                <div className=\"p-datatable-scrollable-header\" ref={(el) => { this.scrollHeader= el; }} onScroll={this.onHeaderScroll}>\r\n                    <div className=\"p-datatable-scrollable-header-box\" ref={(el) => { this.scrollHeaderBox = el; }}>\r\n                        <table className={tableHeaderClassName} style={this.props.tableStyle}>\r\n                            {colGroup}\r\n                            {this.props.header}\r\n                            {this.props.frozenBody}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-datatable-scrollable-body\" ref={(el) => { this.scrollBody = el; }} style={scrollableBodyStyle} onScroll={this.onBodyScroll}>\r\n                    <table ref={el => this.scrollTable = el} style={tableBodyStyle} className={tableBodyClassName}>\r\n                        {colGroup}\r\n                        {this.props.body}\r\n                    </table>\r\n                    {loadingTable}\r\n                    <div className=\"p-datatable-virtual-scroller\" ref={(el) => { this.virtualScroller = el; }}></div>\r\n                </div>\r\n                <div className=\"p-datatable-scrollable-footer\" ref={(el) => { this.scrollFooter = el; }}>\r\n                    <div className=\"p-datatable-scrollable-footer-box\" ref={(el) => { this.scrollFooterBox = el; }}>\r\n                         <table className={tableFooterClassName} style={this.props.tableStyle}>\r\n                            {colGroup}\r\n                            {this.props.footer}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}