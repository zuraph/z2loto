{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\messages\\\\MessagesDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var MessagesDoc = /*#__PURE__*/function (_Component) {\n  _inherits(MessagesDoc, _Component);\n\n  var _super = _createSuper(MessagesDoc);\n\n  function MessagesDoc(props) {\n    var _this;\n\n    _classCallCheck(this, MessagesDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Messages } from 'primereact/messages';\\nimport { Message } from 'primereact/message';\\nimport { InputText } from 'primereact/inputtext';\\nimport { Button } from 'primereact/button';\\n\\nexport class MessagesDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.addMessages = this.addMessages.bind(this);\\n        this.clearMessages = this.clearMessages.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.msgs1.show([\\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\\n        ]);\\n\\n        this.msgs3.show({\\n            severity: 'info', sticky: true, content: (\\n                <React.Fragment>\\n                    <img alt=\\\"logo\\\" src=\\\"showcase/images/logo.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" />\\n                    <div className=\\\"p-ml-2\\\">Always bet on Prime.</div>\\n                </React.Fragment>\\n            )\\n        });\\n    }\\n\\n    addMessages() {\\n        this.msgs2.show([\\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\\n        ]);\\n    }\\n\\n    clearMessages() {\\n        this.msgs2.clear();\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Severities</h5>\\n                    <Messages ref={(el) => this.msgs1 = el} />\\n\\n                    <h5>Dynamic</h5>\\n                    <Button type=\\\"button\\\" onClick={this.addMessages} label=\\\"Show\\\" className=\\\"p-mr-2\\\" />\\n                    <Button type=\\\"button\\\" onClick={this.clearMessages} icon=\\\"pi pi-times\\\" label=\\\"Clear\\\" className=\\\"p-button-secondary\\\" />\\n\\n                    <Messages ref={(el) => this.msgs2 = el} />\\n\\n                    <h5>Static Content</h5>\\n                    <Messages ref={(el) => this.msgs3 = el} />\\n\\n                    <h5>Inline Message</h5>\\n                    <p>Message component is used to display inline messages mostly within forms.</p>\\n                    <div className=\\\"p-grid\\\">\\n                        <div className=\\\"p-col-12 p-md-3\\\">\\n                            <Message severity=\\\"info\\\" text=\\\"Message Content\\\" />\\n                        </div>\\n                        <div className=\\\"p-col-12 p-md-3\\\">\\n                            <Message severity=\\\"success\\\" text=\\\"Message Content\\\" />\\n                        </div>\\n                        <div className=\\\"p-col-12 p-md-3\\\">\\n                            <Message severity=\\\"warn\\\" text=\\\"Message Content\\\" />\\n                        </div>\\n                        <div className=\\\"p-col-12 p-md-3\\\">\\n                            <Message severity=\\\"error\\\" text=\\\"Message Content\\\" />\\n                        </div>\\n                    </div>\\n\\n                    <h5>Validation Message</h5>\\n                    <div className=\\\"p-formgroup-inline p-mb-2\\\">\\n                        <label htmlFor=\\\"username1\\\" className=\\\"p-sr-only\\\">Username</label>\\n                        <InputText id=\\\"username1\\\" placeholder=\\\"Username\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                        <Message severity=\\\"error\\\" text=\\\"Username is required\\\" />\\n                    </div>\\n                    <div className=\\\"p-formgroup-inline\\\">\\n                        <label htmlFor=\\\"email\\\" className=\\\"p-sr-only\\\">email</label>\\n                        <InputText id=\\\"email\\\" placeholder=\\\"Email\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                        <Message severity=\\\"error\\\" />\\n                    </div>\\n\\n                    <h5>Form Layout</h5>\\n                    <div className=\\\"p-field p-fluid\\\">\\n                        <label htmlFor=\\\"username2\\\">Username</label>\\n                        <InputText id=\\\"username2\\\" aria-describedby=\\\"username-help\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                        <small id=\\\"username-help\\\" className=\\\"p-error\\\">Username is not available.</small>\\n                    </div>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useEffect, useRef } from 'react';\\nimport { Messages } from 'primereact/messages';\\nimport { Message } from 'primereact/message';\\nimport { InputText } from 'primereact/inputtext';\\nimport { Button } from 'primereact/button';\\n\\nconst MessagesDemo = () => {\\n    const msgs1 = useRef(null);\\n    const msgs2 = useRef(null);\\n    const msgs3 = useRef(null);\\n\\n    useEffect(() => {\\n        msgs1.current.show([\\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\\n        ]);\\n\\n        msgs3.current.show({\\n            severity: 'info', sticky: true, content: (\\n                <React.Fragment>\\n                    <img alt=\\\"logo\\\" src=\\\"showcase/images/logo.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" />\\n                    <div className=\\\"p-ml-2\\\">Always bet on Prime.</div>\\n                </React.Fragment>\\n            )\\n        });\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const addMessages = () => {\\n        msgs2.current.show([\\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\\n        ]);\\n    }\\n\\n    const clearMessages = () => {\\n        msgs2.current.clear();\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Severities</h5>\\n                <Messages ref={msgs1} />\\n\\n                <h5>Dynamic</h5>\\n                <Button type=\\\"button\\\" onClick={addMessages} label=\\\"Show\\\" className=\\\"p-mr-2\\\" />\\n                <Button type=\\\"button\\\" onClick={clearMessages} icon=\\\"pi pi-times\\\" label=\\\"Clear\\\" className=\\\"p-button-secondary\\\" />\\n\\n                <Messages ref={msgs2} />\\n\\n                <h5>Static Content</h5>\\n                <Messages ref={msgs3} />\\n\\n                <h5>Inline Message</h5>\\n                <p>Message component is used to display inline messages mostly within forms.</p>\\n                <div className=\\\"p-grid\\\">\\n                    <div className=\\\"p-col-12 p-md-3\\\">\\n                        <Message severity=\\\"info\\\" text=\\\"Message Content\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-12 p-md-3\\\">\\n                        <Message severity=\\\"success\\\" text=\\\"Message Content\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-12 p-md-3\\\">\\n                        <Message severity=\\\"warn\\\" text=\\\"Message Content\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-12 p-md-3\\\">\\n                        <Message severity=\\\"error\\\" text=\\\"Message Content\\\" />\\n                    </div>\\n                </div>\\n\\n                <h5>Validation Message</h5>\\n                <div className=\\\"p-formgroup-inline p-mb-2\\\">\\n                    <label htmlFor=\\\"username1\\\" className=\\\"p-sr-only\\\">Username</label>\\n                    <InputText id=\\\"username1\\\" placeholder=\\\"Username\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                    <Message severity=\\\"error\\\" text=\\\"Username is required\\\" />\\n                </div>\\n                <div className=\\\"p-formgroup-inline\\\">\\n                    <label htmlFor=\\\"email\\\" className=\\\"p-sr-only\\\">email</label>\\n                    <InputText id=\\\"email\\\" placeholder=\\\"Email\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                    <Message severity=\\\"error\\\" />\\n                </div>\\n\\n                <h5>Form Layout</h5>\\n                <div className=\\\"p-field p-fluid\\\">\\n                    <label htmlFor=\\\"username2\\\">Username</label>\\n                    <InputText id=\\\"username2\\\" aria-describedby=\\\"username-help\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                    <small id=\\\"username-help\\\" className=\\\"p-error\\\">Username is not available.</small>\\n                </div>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useEffect, useRef } from 'react';\\nimport { Messages } from 'primereact/messages';\\nimport { Message } from 'primereact/message';\\nimport { InputText } from 'primereact/inputtext';\\nimport { Button } from 'primereact/button';\\n\\nconst MessagesDemo = () => {\\n    const msgs1 = useRef(null);\\n    const msgs2 = useRef(null);\\n    const msgs3 = useRef(null);\\n\\n    useEffect(() => {\\n        msgs1.current.show([\\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\\n        ]);\\n\\n        msgs3.current.show({\\n            severity: 'info', sticky: true, content: (\\n                <React.Fragment>\\n                    <img alt=\\\"logo\\\" src=\\\"showcase/images/logo.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" />\\n                    <div className=\\\"p-ml-2\\\">Always bet on Prime.</div>\\n                </React.Fragment>\\n            )\\n        });\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const addMessages = () => {\\n        msgs2.current.show([\\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\\n        ]);\\n    }\\n\\n    const clearMessages = () => {\\n        msgs2.current.clear();\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Severities</h5>\\n                <Messages ref={msgs1} />\\n\\n                <h5>Dynamic</h5>\\n                <Button type=\\\"button\\\" onClick={addMessages} label=\\\"Show\\\" className=\\\"p-mr-2\\\" />\\n                <Button type=\\\"button\\\" onClick={clearMessages} icon=\\\"pi pi-times\\\" label=\\\"Clear\\\" className=\\\"p-button-secondary\\\" />\\n\\n                <Messages ref={msgs2} />\\n\\n                <h5>Static Content</h5>\\n                <Messages ref={msgs3} />\\n\\n                <h5>Inline Message</h5>\\n                <p>Message component is used to display inline messages mostly within forms.</p>\\n                <div className=\\\"p-grid\\\">\\n                    <div className=\\\"p-col-12 p-md-3\\\">\\n                        <Message severity=\\\"info\\\" text=\\\"Message Content\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-12 p-md-3\\\">\\n                        <Message severity=\\\"success\\\" text=\\\"Message Content\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-12 p-md-3\\\">\\n                        <Message severity=\\\"warn\\\" text=\\\"Message Content\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-12 p-md-3\\\">\\n                        <Message severity=\\\"error\\\" text=\\\"Message Content\\\" />\\n                    </div>\\n                </div>\\n\\n                <h5>Validation Message</h5>\\n                <div className=\\\"p-formgroup-inline p-mb-2\\\">\\n                    <label htmlFor=\\\"username1\\\" className=\\\"p-sr-only\\\">Username</label>\\n                    <InputText id=\\\"username1\\\" placeholder=\\\"Username\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                    <Message severity=\\\"error\\\" text=\\\"Username is required\\\" />\\n                </div>\\n                <div className=\\\"p-formgroup-inline\\\">\\n                    <label htmlFor=\\\"email\\\" className=\\\"p-sr-only\\\">email</label>\\n                    <InputText id=\\\"email\\\" placeholder=\\\"Email\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                    <Message severity=\\\"error\\\" />\\n                </div>\\n\\n                <h5>Form Layout</h5>\\n                <div className=\\\"p-field p-fluid\\\">\\n                    <label htmlFor=\\\"username2\\\">Username</label>\\n                    <InputText id=\\\"username2\\\" aria-describedby=\\\"username-help\\\" className=\\\"p-invalid p-mr-2\\\" />\\n                    <small id=\\\"username-help\\\" className=\\\"p-error\\\">Username is not available.</small>\\n                </div>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(MessagesDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 1\n        }\n      }, \"\\nimport { Messages } from 'primereact/messages';\\nimport { Message } from 'primereact/message';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }\n      }, \"A single message is specified by the Message interface in PrimeReact that defines various properties such as severity, summary and detail. Messages are displayed by using the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 72\n        }\n      }, \"show\"), \" method on the ref of the Messages instance.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      }, \"Note that for animations, messages requires react-transition-group package.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 1\n        }\n      }, \"\\n<Messages ref={messages}></Messages>\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 1\n        }\n      }, \"\\nmessages.current.show({severity: 'success', summary: 'Success Message', detail: 'Order submitted'});\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }\n      }, \"Message API\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 41\n        }\n      }, \"severity\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 41\n        }\n      }, \"Severity of the message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 41\n        }\n      }, \"content\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 41\n        }\n      }, \"element\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 41\n        }\n      }, \"Template of the message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 41\n        }\n      }, \"summary\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 41\n        }\n      }, \"element\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 41\n        }\n      }, \"Summary content of the message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 41\n        }\n      }, \"detail\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 41\n        }\n      }, \"element\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 41\n        }\n      }, \"Detail content of the message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 41\n        }\n      }, \"closable\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 41\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 41\n        }\n      }, \"Whether the message can be closed manually using the close icon.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 41\n        }\n      }, \"sticky\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 41\n        }\n      }, \"element\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 41\n        }\n      }, \"When enabled, message is not removed automatically.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 41\n        }\n      }, \"life\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 41\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 41\n        }\n      }, \"3000\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 41\n        }\n      }, \"Delay in milliseconds to close the message automatically.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }\n      }, \"Severities\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 25\n        }\n      }, \"There are four possible values for the severity of a message.\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 29\n        }\n      }, \"success\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }\n      }, \"info\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }\n      }, \"warn\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 29\n        }\n      }, \"error\")), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }\n      }, \"Showing Messages\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 25\n        }\n      }, \"Show method accepts either a single message or an array of messages.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 1\n        }\n      }, \"\\n<Messages ref={messages}></Messages>\\n\\n<Button onClick={showSuccess} label=\\\"Success\\\" className=\\\"p-button-success\\\" />\\n<Button onClick={showInfo} label=\\\"Info\\\" className=\\\"p-button-info\\\" />\\n<Button onClick={showWarn} label=\\\"Warn\\\" className=\\\"p-button-warning\\\" />\\n<Button onClick={showError} label=\\\"Error\\\" className=\\\"p-button-danger\\\" />\\n<Button onClick={showMultiple} label=\\\"Multiple\\\" />\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 1\n        }\n      }, \"\\nconst showSuccess = () => {\\n    messages.current.show({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });\\n}\\n\\nconst showInfo = () => {\\n    messages.current.show({ severity: 'info', summary: 'Info Message', detail: 'PrimeReact rocks' });\\n}\\n\\nconst showWarn = () => {\\n    messages.current.show({ severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes' });\\n}\\n\\nconst showError = () => {\\n    messages.current.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\\n}\\n\\nconst showMultiple = () => {\\n    messages.current.show([\\n        {severity:'info', summary:'Message 1', detail:'PrimeReact rocks'},\\n        {severity:'info', summary:'Message 2', detail:'PrimeReact rocks'},\\n        {severity:'info', summary:'Message 3', detail:'PrimeFaces rocks'}\\n    ]);\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }\n      }, \"Clearing Messages\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 28\n        }\n      }, \"clear()\"), \" method removes all messages.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 1\n        }\n      }, \"\\nmessages.current.clear();\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 25\n        }\n      }, \"Replacing Messages\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 28\n        }\n      }, \"replace(newMessages)\"), \" method adds new messages after removing all old messages.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 1\n        }\n      }, \"\\nmessages.current.replace(newMessages);\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 25\n        }\n      }, \"Closable\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }\n      }, \"Messages are closable by default resulting in a close icon being displayed on top right corner. In order to disable closable messages, set \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 167\n        }\n      }, \"closable\"), \" to false.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 1\n        }\n      }, \"\\nmessages.current.show({closable: false, severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }\n      }, \"Sticky\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }\n      }, \"Messages are cleared automatically after the timeout defined by \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 92\n        }\n      }, \"life\"), \" property which is 3 seconds by default. Use \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 148\n        }\n      }, \"sticky\"), \" mode to make them stay until they are manually removed.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 1\n        }\n      }, \"\\n//sticky\\nmessages.current.show({ sticky: true, severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\\n\\n//automatically removed after 5 seconds\\nmessages.current.show({ life: 5000, severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }\n      }, \"Message Component\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 25\n        }\n      }, \"Message component is useful in cases where a single message needs to be displayed related to an element such as forms. It has two properties, \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 170\n        }\n      }, \"severity\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 190\n        }\n      }, \"text\"), \" of the message.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 1\n        }\n      }, \"\\n<h5>Inline Message CSS</h5>\\n<p>CSS helpers to display inline messages mostly within forms.</p>\\n<Message severity=\\\"info\\\" text=\\\"PrimeNG Rocks\\\"></Message>\\n<Message severity=\\\"success\\\" text=\\\"Record Saved\\\"></Message>\\n<Message severity=\\\"warn\\\" text=\\\"Are you sure?\\\"></Message>\\n<Message severity=\\\"error\\\" text=\\\"Field is required\\\"></Message>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 25\n        }\n      }, \"Properties of Message\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 41\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 41\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 41\n        }\n      }, \"Style class of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 41\n        }\n      }, \"Inline style of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 41\n        }\n      }, \"severity\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 41\n        }\n      }, \"Severity level of the message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 41\n        }\n      }, \"Message text.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 41\n        }\n      }, \"content\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 41\n        }\n      }, \"element\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 41\n        }\n      }, \"Template of the message.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 25\n        }\n      }, \"Properties of Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 41\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 41\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 41\n        }\n      }, \"Style class of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 41\n        }\n      }, \"Inline style of the element.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 25\n        }\n      }, \"Events of Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 41\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 41\n        }\n      }, \"onRemove\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 41\n        }\n      }, \"message: Removed message \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a message is removed.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 41\n        }\n      }, \"onClick\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 41\n        }\n      }, \"message: Clicked message \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a message gets clicked.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 25\n        }\n      }, \"Following is the list of structural style classes, for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 105\n        }\n      }, \" theming\"), \" page.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 41\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 41\n        }\n      }, \"p-messages\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 41\n        }\n      }, \"Container element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 41\n        }\n      }, \"p-messages-info\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 41\n        }\n      }, \"Container element when displaying info messages.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 41\n        }\n      }, \"p-messages-warn\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 41\n        }\n      }, \"Container element when displaying warning messages.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 41\n        }\n      }, \"p-messages-error\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 41\n        }\n      }, \"Container element when displaying error messages.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 41\n        }\n      }, \"p-messages-success\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 41\n        }\n      }, \"Container element when displaying success messages.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 41\n        }\n      }, \"p-messages-close\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 41\n        }\n      }, \"Close icon.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 41\n        }\n      }, \"p-messages-icon\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 41\n        }\n      }, \"Severity icon.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 41\n        }\n      }, \"p-messages-summary\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 41\n        }\n      }, \"Summary of a message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 41\n        }\n      }, \"p-messages-detail\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 41\n        }\n      }, \"Detail of a message.\")))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 29\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 33\n        }\n      }, \"react-transition-group\")))), useLiveEditorTabs({\n        name: 'MessagesDemo',\n        sources: this.sources\n      })));\n    }\n  }]);\n\n  return MessagesDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/messages/MessagesDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","MessagesDoc","props","sources","tabName","content","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kCAAlC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AAEA,WAAaC,WAAb;AAAA;;AAAA;;AAEI,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,OAAL,GAAe;AACX,eAAS;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OADE;AA4GX,eAAS;AACLD,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OA5GE;AAiNX,YAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,OAAO;AAFL;AAjNK,KAAf;AAHe;AA0TlB;;AA5TL;AAAA;AAAA,WA8TI,iCAAwB;AACpB,aAAO,KAAP;AACH;AAhUL;AAAA;AAAA,WAkUI,kBAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GAFoB,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAC+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD/C,iDAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAbJ,eAepB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAfoB,eAqBpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHArBoB,eA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA3BJ,eA4BI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,CAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJJ,CAbJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAJJ,CAnBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAJJ,CAzBJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAJJ,CA/BJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAJJ,CArCJ,CATJ,CADJ,CA5BJ,eAqFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBArFJ,eAsFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAtFJ,eAwFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CAxFJ,eA+FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA/FJ,eAgGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAhGJ,eAkGpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oaAlGoB,eA8GpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,q2BA9GoB,eA0II;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA1IJ,eA2II;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH,kCA3IJ,eA6IpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA7IoB,eAmJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAnJJ,eAoJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAH,+DApJJ,eAsJpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAtJoB,eA4JI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5JJ,eA6JI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qKAA8I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA9I,eA7JJ,eA+JpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIA/JoB,eAqKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArKJ,eAsKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAnE,gEAA2H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3H,6DAtKJ,eAyKpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ySAzKoB,eAoLI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BApLJ,eAqLI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wKAAiJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAjJ,wBAAqK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAArK,qBArLJ,eAsLpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8WAtLoB,eAiMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAjMJ,eAkMI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJJ,CAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJJ,CAbJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAJJ,CAnBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,CAzBJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,CA/BJ,CATJ,CADJ,CAlMJ,eAqPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCArPJ,eAsPI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJJ,CAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJJ,CAbJ,CATJ,CADJ,CAtPJ,eAuRI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAvRJ,eAwRI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAHJ,CANJ,CARJ,CADJ,CAxRJ,eAgTI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhTJ,eAiTI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGAAgF,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhF,WAjTJ,eAkTI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAFJ,CALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFJ,CATJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,CAbJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFJ,CAjBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CArBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CAzBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,CA7BJ,eAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CAjCJ,CAPJ,CADJ,eAgDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhDJ,eAiDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAjDJ,CAlTJ,CADJ,EA4WQL,iBAAiB,CAAC;AAAEM,QAAAA,IAAI,EAAE,cAAR;AAAwBH,QAAAA,OAAO,EAAE,KAAKA;AAAtC,OAAD,CA5WzB,CADJ,CADJ;AAmXH;AAtrBL;;AAAA;AAAA,EAAiCR,SAAjC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class MessagesDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Messages } from 'primereact/messages';\r\nimport { Message } from 'primereact/message';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\n\r\nexport class MessagesDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addMessages = this.addMessages.bind(this);\r\n        this.clearMessages = this.clearMessages.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.msgs1.show([\r\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\r\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\r\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\r\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\r\n        ]);\r\n\r\n        this.msgs3.show({\r\n            severity: 'info', sticky: true, content: (\r\n                <React.Fragment>\r\n                    <img alt=\"logo\" src=\"showcase/images/logo.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" />\r\n                    <div className=\"p-ml-2\">Always bet on Prime.</div>\r\n                </React.Fragment>\r\n            )\r\n        });\r\n    }\r\n\r\n    addMessages() {\r\n        this.msgs2.show([\r\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\r\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\r\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\r\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\r\n        ]);\r\n    }\r\n\r\n    clearMessages() {\r\n        this.msgs2.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Severities</h5>\r\n                    <Messages ref={(el) => this.msgs1 = el} />\r\n\r\n                    <h5>Dynamic</h5>\r\n                    <Button type=\"button\" onClick={this.addMessages} label=\"Show\" className=\"p-mr-2\" />\r\n                    <Button type=\"button\" onClick={this.clearMessages} icon=\"pi pi-times\" label=\"Clear\" className=\"p-button-secondary\" />\r\n\r\n                    <Messages ref={(el) => this.msgs2 = el} />\r\n\r\n                    <h5>Static Content</h5>\r\n                    <Messages ref={(el) => this.msgs3 = el} />\r\n\r\n                    <h5>Inline Message</h5>\r\n                    <p>Message component is used to display inline messages mostly within forms.</p>\r\n                    <div className=\"p-grid\">\r\n                        <div className=\"p-col-12 p-md-3\">\r\n                            <Message severity=\"info\" text=\"Message Content\" />\r\n                        </div>\r\n                        <div className=\"p-col-12 p-md-3\">\r\n                            <Message severity=\"success\" text=\"Message Content\" />\r\n                        </div>\r\n                        <div className=\"p-col-12 p-md-3\">\r\n                            <Message severity=\"warn\" text=\"Message Content\" />\r\n                        </div>\r\n                        <div className=\"p-col-12 p-md-3\">\r\n                            <Message severity=\"error\" text=\"Message Content\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h5>Validation Message</h5>\r\n                    <div className=\"p-formgroup-inline p-mb-2\">\r\n                        <label htmlFor=\"username1\" className=\"p-sr-only\">Username</label>\r\n                        <InputText id=\"username1\" placeholder=\"Username\" className=\"p-invalid p-mr-2\" />\r\n                        <Message severity=\"error\" text=\"Username is required\" />\r\n                    </div>\r\n                    <div className=\"p-formgroup-inline\">\r\n                        <label htmlFor=\"email\" className=\"p-sr-only\">email</label>\r\n                        <InputText id=\"email\" placeholder=\"Email\" className=\"p-invalid p-mr-2\" />\r\n                        <Message severity=\"error\" />\r\n                    </div>\r\n\r\n                    <h5>Form Layout</h5>\r\n                    <div className=\"p-field p-fluid\">\r\n                        <label htmlFor=\"username2\">Username</label>\r\n                        <InputText id=\"username2\" aria-describedby=\"username-help\" className=\"p-invalid p-mr-2\" />\r\n                        <small id=\"username-help\" className=\"p-error\">Username is not available.</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Messages } from 'primereact/messages';\r\nimport { Message } from 'primereact/message';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\n\r\nconst MessagesDemo = () => {\r\n    const msgs1 = useRef(null);\r\n    const msgs2 = useRef(null);\r\n    const msgs3 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        msgs1.current.show([\r\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\r\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\r\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\r\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\r\n        ]);\r\n\r\n        msgs3.current.show({\r\n            severity: 'info', sticky: true, content: (\r\n                <React.Fragment>\r\n                    <img alt=\"logo\" src=\"showcase/images/logo.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" />\r\n                    <div className=\"p-ml-2\">Always bet on Prime.</div>\r\n                </React.Fragment>\r\n            )\r\n        });\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const addMessages = () => {\r\n        msgs2.current.show([\r\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\r\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\r\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\r\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\r\n        ]);\r\n    }\r\n\r\n    const clearMessages = () => {\r\n        msgs2.current.clear();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Severities</h5>\r\n                <Messages ref={msgs1} />\r\n\r\n                <h5>Dynamic</h5>\r\n                <Button type=\"button\" onClick={addMessages} label=\"Show\" className=\"p-mr-2\" />\r\n                <Button type=\"button\" onClick={clearMessages} icon=\"pi pi-times\" label=\"Clear\" className=\"p-button-secondary\" />\r\n\r\n                <Messages ref={msgs2} />\r\n\r\n                <h5>Static Content</h5>\r\n                <Messages ref={msgs3} />\r\n\r\n                <h5>Inline Message</h5>\r\n                <p>Message component is used to display inline messages mostly within forms.</p>\r\n                <div className=\"p-grid\">\r\n                    <div className=\"p-col-12 p-md-3\">\r\n                        <Message severity=\"info\" text=\"Message Content\" />\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-3\">\r\n                        <Message severity=\"success\" text=\"Message Content\" />\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-3\">\r\n                        <Message severity=\"warn\" text=\"Message Content\" />\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-3\">\r\n                        <Message severity=\"error\" text=\"Message Content\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <h5>Validation Message</h5>\r\n                <div className=\"p-formgroup-inline p-mb-2\">\r\n                    <label htmlFor=\"username1\" className=\"p-sr-only\">Username</label>\r\n                    <InputText id=\"username1\" placeholder=\"Username\" className=\"p-invalid p-mr-2\" />\r\n                    <Message severity=\"error\" text=\"Username is required\" />\r\n                </div>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <label htmlFor=\"email\" className=\"p-sr-only\">email</label>\r\n                    <InputText id=\"email\" placeholder=\"Email\" className=\"p-invalid p-mr-2\" />\r\n                    <Message severity=\"error\" />\r\n                </div>\r\n\r\n                <h5>Form Layout</h5>\r\n                <div className=\"p-field p-fluid\">\r\n                    <label htmlFor=\"username2\">Username</label>\r\n                    <InputText id=\"username2\" aria-describedby=\"username-help\" className=\"p-invalid p-mr-2\" />\r\n                    <small id=\"username-help\" className=\"p-error\">Username is not available.</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Messages } from 'primereact/messages';\r\nimport { Message } from 'primereact/message';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\n\r\nconst MessagesDemo = () => {\r\n    const msgs1 = useRef(null);\r\n    const msgs2 = useRef(null);\r\n    const msgs3 = useRef(null);\r\n\r\n    useEffect(() => {\r\n        msgs1.current.show([\r\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\r\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\r\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\r\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\r\n        ]);\r\n\r\n        msgs3.current.show({\r\n            severity: 'info', sticky: true, content: (\r\n                <React.Fragment>\r\n                    <img alt=\"logo\" src=\"showcase/images/logo.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" />\r\n                    <div className=\"p-ml-2\">Always bet on Prime.</div>\r\n                </React.Fragment>\r\n            )\r\n        });\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const addMessages = () => {\r\n        msgs2.current.show([\r\n            { severity: 'success', summary: 'Success', detail: 'Message Content', sticky: true },\r\n            { severity: 'info', summary: 'Info', detail: 'Message Content', sticky: true },\r\n            { severity: 'warn', summary: 'Warning', detail: 'Message Content', sticky: true },\r\n            { severity: 'error', summary: 'Error', detail: 'Message Content', sticky: true }\r\n        ]);\r\n    }\r\n\r\n    const clearMessages = () => {\r\n        msgs2.current.clear();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Severities</h5>\r\n                <Messages ref={msgs1} />\r\n\r\n                <h5>Dynamic</h5>\r\n                <Button type=\"button\" onClick={addMessages} label=\"Show\" className=\"p-mr-2\" />\r\n                <Button type=\"button\" onClick={clearMessages} icon=\"pi pi-times\" label=\"Clear\" className=\"p-button-secondary\" />\r\n\r\n                <Messages ref={msgs2} />\r\n\r\n                <h5>Static Content</h5>\r\n                <Messages ref={msgs3} />\r\n\r\n                <h5>Inline Message</h5>\r\n                <p>Message component is used to display inline messages mostly within forms.</p>\r\n                <div className=\"p-grid\">\r\n                    <div className=\"p-col-12 p-md-3\">\r\n                        <Message severity=\"info\" text=\"Message Content\" />\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-3\">\r\n                        <Message severity=\"success\" text=\"Message Content\" />\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-3\">\r\n                        <Message severity=\"warn\" text=\"Message Content\" />\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-3\">\r\n                        <Message severity=\"error\" text=\"Message Content\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <h5>Validation Message</h5>\r\n                <div className=\"p-formgroup-inline p-mb-2\">\r\n                    <label htmlFor=\"username1\" className=\"p-sr-only\">Username</label>\r\n                    <InputText id=\"username1\" placeholder=\"Username\" className=\"p-invalid p-mr-2\" />\r\n                    <Message severity=\"error\" text=\"Username is required\" />\r\n                </div>\r\n                <div className=\"p-formgroup-inline\">\r\n                    <label htmlFor=\"email\" className=\"p-sr-only\">email</label>\r\n                    <InputText id=\"email\" placeholder=\"Email\" className=\"p-invalid p-mr-2\" />\r\n                    <Message severity=\"error\" />\r\n                </div>\r\n\r\n                <h5>Form Layout</h5>\r\n                <div className=\"p-field p-fluid\">\r\n                    <label htmlFor=\"username2\">Username</label>\r\n                    <InputText id=\"username2\" aria-describedby=\"username-help\" className=\"p-invalid p-mr-2\" />\r\n                    <small id=\"username-help\" className=\"p-error\">Username is not available.</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Messages } from 'primereact/messages';\r\nimport { Message } from 'primereact/message';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>A single message is specified by the Message interface in PrimeReact that defines various properties such as severity,\r\n               summary and detail. Messages are displayed by using the <i>show</i> method on the ref of the Messages instance.</p>\r\n\r\n                        <p>Note that for animations, messages requires react-transition-group package.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Messages ref={messages}></Messages>\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nmessages.current.show({severity: 'success', summary: 'Success Message', detail: 'Order submitted'});\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Message API</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>severity</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Severity of the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>content</td>\r\n                                        <td>element</td>\r\n                                        <td>null</td>\r\n                                        <td>Template of the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>summary</td>\r\n                                        <td>element</td>\r\n                                        <td>null</td>\r\n                                        <td>Summary content of the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>detail</td>\r\n                                        <td>element</td>\r\n                                        <td>null</td>\r\n                                        <td>Detail content of the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>closable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether the message can be closed manually using the close icon.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>sticky</td>\r\n                                        <td>element</td>\r\n                                        <td>null</td>\r\n                                        <td>When enabled, message is not removed automatically.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>life</td>\r\n                                        <td>number</td>\r\n                                        <td>3000</td>\r\n                                        <td>Delay in milliseconds to close the message automatically.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Severities</h5>\r\n                        <p>There are four possible values for the severity of a message.</p>\r\n\r\n                        <ul>\r\n                            <li>success</li>\r\n                            <li>info</li>\r\n                            <li>warn</li>\r\n                            <li>error</li>\r\n                        </ul>\r\n\r\n                        <h5>Showing Messages</h5>\r\n                        <p>Show method accepts either a single message or an array of messages.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Messages ref={messages}></Messages>\r\n\r\n<Button onClick={showSuccess} label=\"Success\" className=\"p-button-success\" />\r\n<Button onClick={showInfo} label=\"Info\" className=\"p-button-info\" />\r\n<Button onClick={showWarn} label=\"Warn\" className=\"p-button-warning\" />\r\n<Button onClick={showError} label=\"Error\" className=\"p-button-danger\" />\r\n<Button onClick={showMultiple} label=\"Multiple\" />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst showSuccess = () => {\r\n    messages.current.show({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });\r\n}\r\n\r\nconst showInfo = () => {\r\n    messages.current.show({ severity: 'info', summary: 'Info Message', detail: 'PrimeReact rocks' });\r\n}\r\n\r\nconst showWarn = () => {\r\n    messages.current.show({ severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes' });\r\n}\r\n\r\nconst showError = () => {\r\n    messages.current.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n}\r\n\r\nconst showMultiple = () => {\r\n    messages.current.show([\r\n        {severity:'info', summary:'Message 1', detail:'PrimeReact rocks'},\r\n        {severity:'info', summary:'Message 2', detail:'PrimeReact rocks'},\r\n        {severity:'info', summary:'Message 3', detail:'PrimeFaces rocks'}\r\n    ]);\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Clearing Messages</h5>\r\n                        <p><i>clear()</i> method removes all messages.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nmessages.current.clear();\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Replacing Messages</h5>\r\n                        <p><i>replace(newMessages)</i> method adds new messages after removing all old messages.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nmessages.current.replace(newMessages);\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Closable</h5>\r\n                        <p>Messages are closable by default resulting in a close icon being displayed on top right corner. In order to disable closable messages, set <i>closable</i> to false.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nmessages.current.show({closable: false, severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Sticky</h5>\r\n                        <p>Messages are cleared automatically after the timeout defined by <i>life</i> property which is 3 seconds by default. Use <i>sticky</i> mode to make them stay until\r\n                they are manually removed.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\n//sticky\r\nmessages.current.show({ sticky: true, severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n\r\n//automatically removed after 5 seconds\r\nmessages.current.show({ life: 5000, severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n`}\r\n</CodeHighlight>\r\n\r\n\r\n                        <h5>Message Component</h5>\r\n                        <p>Message component is useful in cases where a single message needs to be displayed related to an element such as forms. It has two properties, <i>severity</i> and <i>text</i> of the message.</p>\r\n<CodeHighlight>\r\n{`\r\n<h5>Inline Message CSS</h5>\r\n<p>CSS helpers to display inline messages mostly within forms.</p>\r\n<Message severity=\"info\" text=\"PrimeNG Rocks\"></Message>\r\n<Message severity=\"success\" text=\"Record Saved\"></Message>\r\n<Message severity=\"warn\" text=\"Are you sure?\"></Message>\r\n<Message severity=\"error\" text=\"Field is required\"></Message>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties of Message</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>severity</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Severity level of the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Message text.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>content</td>\r\n                                        <td>element</td>\r\n                                        <td>null</td>\r\n                                        <td>Template of the message.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Properties of Messages</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the element.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events of Messages</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onRemove</td>\r\n                                        <td>message: Removed message </td>\r\n                                        <td>Callback to invoke when a message is removed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onClick</td>\r\n                                        <td>message: Clicked message </td>\r\n                                        <td>Callback to invoke when a message gets clicked.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-messages</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-messages-info</td>\r\n                                        <td>Container element when displaying info messages.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-messages-warn</td>\r\n                                        <td>Container element when displaying warning messages.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-messages-error</td>\r\n                                        <td>Container element when displaying error messages.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-messages-success</td>\r\n                                        <td>Container element when displaying success messages.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-messages-close</td>\r\n                                        <td>Close icon.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-messages-icon</td>\r\n                                        <td>Severity icon.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-messages-summary</td>\r\n                                        <td>Summary of a message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-messages-detail</td>\r\n                                        <td>Detail of a message.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <h5>Dependencies</h5>\r\n                            <ul>\r\n                                <li>react-transition-group</li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'MessagesDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}