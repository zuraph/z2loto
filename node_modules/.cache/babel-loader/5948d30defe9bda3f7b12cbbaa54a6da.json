{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\datatable\\\\DataTableContextMenuDemo.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from '../../components/datatable/DataTable';\nimport { Column } from '../../components/column/Column';\nimport { ContextMenu } from '../../components/contextmenu/ContextMenu';\nimport { Toast } from '../../components/toast/Toast';\nimport ProductService from '../service/ProductService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var DataTableContextMenuDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableContextMenuDemo, _Component);\n\n  var _super = _createSuper(DataTableContextMenuDemo);\n\n  function DataTableContextMenuDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableContextMenuDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      products: [],\n      selectedProduct: null\n    };\n    _this.menuModel = [{\n      label: 'View',\n      icon: 'pi pi-fw pi-search',\n      command: function command() {\n        return _this.viewProduct(_this.state.selectedProduct);\n      }\n    }, {\n      label: 'Delete',\n      icon: 'pi pi-fw pi-times',\n      command: function command() {\n        return _this.deleteProduct(_this.state.selectedProduct);\n      }\n    }];\n    _this.productService = new ProductService();\n    _this.viewProduct = _this.viewProduct.bind(_assertThisInitialized(_this));\n    _this.deleteProduct = _this.deleteProduct.bind(_assertThisInitialized(_this));\n    _this.priceBodyTemplate = _this.priceBodyTemplate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataTableContextMenuDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.productService.getProductsSmall().then(function (data) {\n        return _this2.setState({\n          products: data\n        });\n      });\n    }\n  }, {\n    key: \"viewProduct\",\n    value: function viewProduct(product) {\n      this.toast.show({\n        severity: 'info',\n        summary: 'Product Selected',\n        detail: product.name\n      });\n    }\n  }, {\n    key: \"deleteProduct\",\n    value: function deleteProduct(product) {\n      var products = _toConsumableArray(this.state.products);\n\n      products = products.filter(function (p) {\n        return p.id !== product.id;\n      });\n      this.toast.show({\n        severity: 'info',\n        summary: 'Product Deleted',\n        detail: product.name\n      });\n      this.setState({\n        products: products\n      });\n    }\n  }, {\n    key: \"formatCurrency\",\n    value: function formatCurrency(value) {\n      return value.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      });\n    }\n  }, {\n    key: \"priceBodyTemplate\",\n    value: function priceBodyTemplate(rowData) {\n      return this.formatCurrency(rowData.price);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, \"DataTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 39\n        }\n      }, \"ContextMenu\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"DataTable has exclusive integration with ContextMenu.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        ref: function ref(el) {\n          _this3.toast = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(ContextMenu, {\n        model: this.menuModel,\n        ref: function ref(el) {\n          return _this3.cm = el;\n        },\n        onHide: function onHide() {\n          return _this3.setState({\n            selectedProduct: null\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        contextMenuSelection: this.state.selectedProduct,\n        onContextMenuSelectionChange: function onContextMenuSelectionChange(e) {\n          return _this3.setState({\n            selectedProduct: e.value\n          });\n        },\n        onContextMenu: function onContextMenu(e) {\n          return _this3.cm.show(e.originalEvent);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"price\",\n        header: \"Price\",\n        body: this.priceBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(DataTableContextMenuDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataTableContextMenuDemo;\n}(Component);\nexport var DataTableContextMenuDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataTableContextMenuDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataTableContextMenuDemoDoc);\n\n  function DataTableContextMenuDemoDoc(props) {\n    var _this4;\n\n    _classCallCheck(this, DataTableContextMenuDemoDoc);\n\n    _this4 = _super2.call(this, props);\n    _this4.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { ContextMenu } from 'primereact/contextmenu';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nexport class DataTableContextMenuDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: [],\\n            selectedProduct: null\\n        };\\n\\n        this.menuModel = [\\n            {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.state.selectedProduct)},\\n            {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.state.selectedProduct)}\\n        ];\\n\\n        this.productService = new ProductService();\\n        this.viewProduct = this.viewProduct.bind(this);\\n        this.deleteProduct = this.deleteProduct.bind(this);\\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    viewProduct(product) {\\n        this.toast.show({severity: 'info', summary: 'Product Selected', detail: product.name});\\n    }\\n\\n    deleteProduct(product) {\\n        let products = [...this.state.products];\\n        products = products.filter((p) => p.id !== product.id);\\n\\n        this.toast.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\\n        this.setState({ products });\\n    }\\n\\n    formatCurrency(value) {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    priceBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.price);\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => { this.toast = el; }}></Toast>\\n\\n                <ContextMenu model={this.menuModel} ref={el => this.cm = el} onHide={() => this.setState({ selectedProduct: null })}/>\\n\\n                <div className=\\\"card\\\">\\n                    <DataTable value={this.state.products} contextMenuSelection={this.state.selectedProduct}\\n                        onContextMenuSelectionChange={e => this.setState({ selectedProduct: e.value })}\\n                        onContextMenu={e => this.cm.show(e.originalEvent)}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} />\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { ContextMenu } from 'primereact/contextmenu';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableContextMenuDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [selectedProduct, setSelectedProduct] = useState(null);\\n    const toast = useRef(null);\\n    const cm = useRef(null);\\n    const menuModel = [\\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\\n    ];\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const viewProduct = (product) => {\\n        toast.current.show({severity: 'info', summary: 'Product Selected', detail: product.name});\\n    }\\n\\n    const deleteProduct = (product) => {\\n        let _products = [...products];\\n        _products = _products.filter((p) => p.id !== product.id);\\n\\n        toast.current.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\\n        setProducts(_products);\\n    }\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <ContextMenu model={menuModel} ref={cm} onHide={() => setSelectedProduct(null)}/>\\n\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} contextMenuSelection={selectedProduct}\\n                    onContextMenuSelectionChange={e => setSelectedProduct(e.value)}\\n                    onContextMenu={e => cm.current.show(e.originalEvent)}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} />\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { ContextMenu } from 'primereact/contextmenu';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableContextMenuDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [selectedProduct, setSelectedProduct] = useState(null);\\n    const toast = useRef(null);\\n    const cm = useRef(null);\\n    const menuModel = [\\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\\n    ];\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const viewProduct = (product) => {\\n        toast.current.show({severity: 'info', summary: 'Product Selected', detail: product.name});\\n    }\\n\\n    const deleteProduct = (product) => {\\n        let _products = [...products];\\n        _products = _products.filter((p) => p.id !== product.id);\\n\\n        toast.current.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\\n        setProducts(_products);\\n    }\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <ContextMenu model={menuModel} ref={cm} onHide={() => setSelectedProduct(null)}/>\\n\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} contextMenuSelection={selectedProduct}\\n                    onContextMenuSelectionChange={e => setSelectedProduct(e.value)}\\n                    onContextMenu={e => cm.current.show(e.originalEvent)}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} />\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this4;\n  }\n\n  _createClass(DataTableContextMenuDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataTableContextMenuDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products-small'\n      })));\n    }\n  }]);\n\n  return DataTableContextMenuDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datatable/DataTableContextMenuDemo.js"],"names":["React","Component","DataTable","Column","ContextMenu","Toast","ProductService","TabView","useLiveEditorTabs","AppInlineHeader","DataTableContextMenuDemo","props","state","products","selectedProduct","menuModel","label","icon","command","viewProduct","deleteProduct","productService","bind","priceBodyTemplate","getProductsSmall","then","data","setState","product","toast","show","severity","summary","detail","name","filter","p","id","value","toLocaleString","style","currency","rowData","formatCurrency","price","el","cm","e","originalEvent","DataTableContextMenuDemoDoc","sources","tabName","content","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { ContextMenu } from '../../components/contextmenu/ContextMenu';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport ProductService from '../service/ProductService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableContextMenuDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            selectedProduct: null\r\n        };\r\n\r\n        this.menuModel = [\r\n            {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.state.selectedProduct)},\r\n            {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.state.selectedProduct)}\r\n        ];\r\n\r\n        this.productService = new ProductService();\r\n        this.viewProduct = this.viewProduct.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    viewProduct(product) {\r\n        this.toast.show({severity: 'info', summary: 'Product Selected', detail: product.name});\r\n    }\r\n\r\n    deleteProduct(product) {\r\n        let products = [...this.state.products];\r\n        products = products.filter((p) => p.id !== product.id);\r\n\r\n        this.toast.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\r\n        this.setState({ products });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>ContextMenu</span></h1>\r\n                        <p>DataTable has exclusive integration with ContextMenu.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <Toast ref={(el) => { this.toast = el; }}></Toast>\r\n\r\n                    <ContextMenu model={this.menuModel} ref={el => this.cm = el} onHide={() => this.setState({ selectedProduct: null })}/>\r\n\r\n                    <div className=\"card\">\r\n                        <DataTable value={this.state.products} contextMenuSelection={this.state.selectedProduct}\r\n                            onContextMenuSelectionChange={e => this.setState({ selectedProduct: e.value })}\r\n                            onContextMenu={e => this.cm.show(e.originalEvent)}>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} />\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableContextMenuDemoDoc></DataTableContextMenuDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableContextMenuDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ContextMenu } from 'primereact/contextmenu';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class DataTableContextMenuDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            selectedProduct: null\r\n        };\r\n\r\n        this.menuModel = [\r\n            {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.state.selectedProduct)},\r\n            {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.state.selectedProduct)}\r\n        ];\r\n\r\n        this.productService = new ProductService();\r\n        this.viewProduct = this.viewProduct.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    viewProduct(product) {\r\n        this.toast.show({severity: 'info', summary: 'Product Selected', detail: product.name});\r\n    }\r\n\r\n    deleteProduct(product) {\r\n        let products = [...this.state.products];\r\n        products = products.filter((p) => p.id !== product.id);\r\n\r\n        this.toast.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\r\n        this.setState({ products });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => { this.toast = el; }}></Toast>\r\n\r\n                <ContextMenu model={this.menuModel} ref={el => this.cm = el} onHide={() => this.setState({ selectedProduct: null })}/>\r\n\r\n                <div className=\"card\">\r\n                    <DataTable value={this.state.products} contextMenuSelection={this.state.selectedProduct}\r\n                        onContextMenuSelectionChange={e => this.setState({ selectedProduct: e.value })}\r\n                        onContextMenu={e => this.cm.show(e.originalEvent)}>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ContextMenu } from 'primereact/contextmenu';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableContextMenuDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const toast = useRef(null);\r\n    const cm = useRef(null);\r\n    const menuModel = [\r\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\r\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\r\n    ];\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const viewProduct = (product) => {\r\n        toast.current.show({severity: 'info', summary: 'Product Selected', detail: product.name});\r\n    }\r\n\r\n    const deleteProduct = (product) => {\r\n        let _products = [...products];\r\n        _products = _products.filter((p) => p.id !== product.id);\r\n\r\n        toast.current.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\r\n        setProducts(_products);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <ContextMenu model={menuModel} ref={cm} onHide={() => setSelectedProduct(null)}/>\r\n\r\n            <div className=\"card\">\r\n                <DataTable value={products} contextMenuSelection={selectedProduct}\r\n                    onContextMenuSelectionChange={e => setSelectedProduct(e.value)}\r\n                    onContextMenu={e => cm.current.show(e.originalEvent)}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ContextMenu } from 'primereact/contextmenu';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableContextMenuDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const toast = useRef(null);\r\n    const cm = useRef(null);\r\n    const menuModel = [\r\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\r\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\r\n    ];\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const viewProduct = (product) => {\r\n        toast.current.show({severity: 'info', summary: 'Product Selected', detail: product.name});\r\n    }\r\n\r\n    const deleteProduct = (product) => {\r\n        let _products = [...products];\r\n        _products = _products.filter((p) => p.id !== product.id);\r\n\r\n        toast.current.show({severity: 'info', summary: 'Product Deleted', detail: product.name});\r\n        setProducts(_products);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <ContextMenu model={menuModel} ref={cm} onHide={() => setSelectedProduct(null)}/>\r\n\r\n            <div className=\"card\">\r\n                <DataTable value={products} contextMenuSelection={selectedProduct}\r\n                    onContextMenuSelectionChange={e => setSelectedProduct(e.value)}\r\n                    onContextMenu={e => cm.current.show(e.originalEvent)}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableContextMenuDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}