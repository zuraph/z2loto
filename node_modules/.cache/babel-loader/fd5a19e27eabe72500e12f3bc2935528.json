{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\multiselect\\\\MultiSelect.js\";\nimport { classNames } from '../utils/ClassNames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { tip } from '../tooltip/Tooltip';\nimport DomHandler from '../utils/DomHandler';\nimport FilterUtils from '../utils/FilterUtils';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { MultiSelectHeader } from './MultiSelectHeader';\nimport { MultiSelectItem } from './MultiSelectItem';\nimport { MultiSelectPanel } from './MultiSelectPanel';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport var MultiSelect = /*#__PURE__*/function (_Component) {\n  _inherits(MultiSelect, _Component);\n\n  var _super = _createSuper(MultiSelect);\n\n  function MultiSelect(props) {\n    var _this;\n\n    _classCallCheck(this, MultiSelect);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      filter: '',\n      focused: false,\n      overlayVisible: false\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.onOptionClick = _this.onOptionClick.bind(_assertThisInitialized(_this));\n    _this.onOptionKeyDown = _this.onOptionKeyDown.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onFilter = _this.onFilter.bind(_assertThisInitialized(_this));\n    _this.onCloseClick = _this.onCloseClick.bind(_assertThisInitialized(_this));\n    _this.onToggleAll = _this.onToggleAll.bind(_assertThisInitialized(_this));\n    _this.onOverlayEnter = _this.onOverlayEnter.bind(_assertThisInitialized(_this));\n    _this.onOverlayEntered = _this.onOverlayEntered.bind(_assertThisInitialized(_this));\n    _this.onOverlayExit = _this.onOverlayExit.bind(_assertThisInitialized(_this));\n    _this.onOverlayExited = _this.onOverlayExited.bind(_assertThisInitialized(_this));\n    _this.onPanelClick = _this.onPanelClick.bind(_assertThisInitialized(_this));\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.overlayRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(MultiSelect, [{\n    key: \"onPanelClick\",\n    value: function onPanelClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.container\n      });\n    }\n  }, {\n    key: \"allowOptionSelect\",\n    value: function allowOptionSelect() {\n      return !this.props.selectionLimit || !this.props.value || this.props.value && this.props.value.length < this.props.selectionLimit;\n    }\n  }, {\n    key: \"onOptionClick\",\n    value: function onOptionClick(event) {\n      var originalEvent = event.originalEvent,\n          option = event.option;\n      var optionValue = this.getOptionValue(option);\n      var selectionIndex = this.findSelectionIndex(optionValue);\n      var allowOptionSelect = this.allowOptionSelect();\n      if (selectionIndex !== -1) this.updateModel(originalEvent, this.props.value.filter(function (val, i) {\n        return i !== selectionIndex;\n      }));else if (allowOptionSelect) this.updateModel(originalEvent, [].concat(_toConsumableArray(this.props.value || []), [optionValue]));\n    }\n  }, {\n    key: \"onOptionKeyDown\",\n    value: function onOptionKeyDown(event) {\n      var originalEvent = event.originalEvent;\n      var listItem = originalEvent.currentTarget;\n\n      switch (originalEvent.which) {\n        //down\n        case 40:\n          var nextItem = this.findNextItem(listItem);\n\n          if (nextItem) {\n            nextItem.focus();\n          }\n\n          originalEvent.preventDefault();\n          break;\n        //up\n\n        case 38:\n          var prevItem = this.findPrevItem(listItem);\n\n          if (prevItem) {\n            prevItem.focus();\n          }\n\n          originalEvent.preventDefault();\n          break;\n        //enter and space\n\n        case 13:\n        case 32:\n          this.onOptionClick(event);\n          originalEvent.preventDefault();\n          break;\n        //escape\n\n        case 27:\n          this.hide();\n          this.focusInput.focus();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"findNextItem\",\n    value: function findNextItem(item) {\n      var nextItem = item.nextElementSibling;\n      if (nextItem) return !DomHandler.hasClass(nextItem, 'p-multiselect-item') ? this.findNextItem(nextItem) : nextItem;else return null;\n    }\n  }, {\n    key: \"findPrevItem\",\n    value: function findPrevItem(item) {\n      var prevItem = item.previousElementSibling;\n      if (prevItem) return !DomHandler.hasClass(prevItem, 'p-multiselect-item') ? this.findPrevItem(prevItem) : prevItem;else return null;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (!this.props.disabled && !this.isPanelClicked(event) && !DomHandler.hasClass(event.target, 'p-multiselect-token-icon') && !this.isClearClicked(event)) {\n        if (this.state.overlayVisible) {\n          this.hide();\n        } else {\n          this.show();\n        }\n\n        this.focusInput.focus();\n      }\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      switch (event.which) {\n        //down\n        case 40:\n          if (!this.state.overlayVisible && event.altKey) {\n            this.show();\n            event.preventDefault();\n          }\n\n          break;\n        //space\n\n        case 32:\n          if (!this.state.overlayVisible) {\n            this.show();\n            event.preventDefault();\n          }\n\n          break;\n        //escape\n\n        case 27:\n          this.hide();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"onToggleAll\",\n    value: function onToggleAll(event) {\n      var newValue;\n\n      if (event.checked) {\n        newValue = [];\n      } else {\n        var options = this.hasFilter() ? this.filterOptions(this.props.options) : this.props.options;\n\n        if (options) {\n          newValue = [];\n\n          var _iterator = _createForOfIteratorHelper(options),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var option = _step.value;\n              newValue.push(this.getOptionValue(option));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n\n      this.updateModel(event.originalEvent, newValue);\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(event, value) {\n      if (this.props.onChange) {\n        this.props.onChange({\n          originalEvent: event,\n          value: value,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.id,\n            value: value\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onFilter\",\n    value: function onFilter(event) {\n      this.setState({\n        filter: event.query\n      });\n    }\n  }, {\n    key: \"resetFilter\",\n    value: function resetFilter() {\n      this.setState({\n        filter: ''\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.setState({\n        overlayVisible: true\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.setState({\n        overlayVisible: false\n      });\n    }\n  }, {\n    key: \"onOverlayEnter\",\n    value: function onOverlayEnter() {\n      this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\n      this.alignPanel();\n    }\n  }, {\n    key: \"onOverlayEntered\",\n    value: function onOverlayEntered() {\n      this.bindDocumentClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n    }\n  }, {\n    key: \"onOverlayExit\",\n    value: function onOverlayExit() {\n      this.unbindDocumentClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n    }\n  }, {\n    key: \"onOverlayExited\",\n    value: function onOverlayExited() {\n      if (this.props.filter && this.props.resetFilterOnHide) {\n        this.resetFilter();\n      }\n    }\n  }, {\n    key: \"alignPanel\",\n    value: function alignPanel() {\n      var container = this.label.parentElement;\n\n      if (this.props.appendTo) {\n        this.overlayRef.current.style.minWidth = DomHandler.getWidth(container) + 'px';\n        DomHandler.absolutePosition(this.overlayRef.current, container);\n      } else {\n        DomHandler.relativePosition(this.overlayRef.current, container);\n      }\n    }\n  }, {\n    key: \"onCloseClick\",\n    value: function onCloseClick(event) {\n      this.hide();\n      this.focusInput.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }, {\n    key: \"findSelectionIndex\",\n    value: function findSelectionIndex(value) {\n      var index = -1;\n\n      if (this.props.value) {\n        var key = this.equalityKey();\n\n        for (var i = 0; i < this.props.value.length; i++) {\n          if (ObjectUtils.equals(this.props.value[i], value, key)) {\n            index = i;\n            break;\n          }\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(option) {\n      return this.findSelectionIndex(this.getOptionValue(option)) !== -1;\n    }\n  }, {\n    key: \"getLabelByValue\",\n    value: function getLabelByValue(val) {\n      var label = null;\n\n      for (var i = 0; i < this.props.options.length; i++) {\n        var option = this.props.options[i];\n        var optionValue = this.getOptionValue(option);\n        var key = this.equalityKey();\n\n        if (ObjectUtils.equals(optionValue, val, key)) {\n          label = this.getOptionLabel(option);\n          break;\n        }\n      }\n\n      return label;\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      var _this2 = this;\n\n      event.persist();\n      this.setState({\n        focused: true\n      }, function () {\n        if (_this2.props.onFocus) {\n          _this2.props.onFocus(event);\n        }\n      });\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      var _this3 = this;\n\n      event.persist();\n      this.setState({\n        focused: false\n      }, function () {\n        if (_this3.props.onBlur) {\n          _this3.props.onBlur(event);\n        }\n      });\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this4 = this;\n\n      if (!this.documentClickListener) {\n        this.documentClickListener = function (event) {\n          if (_this4.state.overlayVisible && _this4.isOutsideClicked(event)) {\n            _this4.hide();\n          }\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this5 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, function () {\n          if (_this5.state.overlayVisible) {\n            _this5.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"bindResizeListener\",\n    value: function bindResizeListener() {\n      var _this6 = this;\n\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this6.state.overlayVisible) {\n            _this6.hide();\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    }\n  }, {\n    key: \"unbindResizeListener\",\n    value: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(event) {\n      return this.container && !(this.container.isSameNode(event.target) || this.isClearClicked(event) || this.container.contains(event.target) || this.isPanelClicked(event));\n    }\n  }, {\n    key: \"isClearClicked\",\n    value: function isClearClicked(event) {\n      return DomHandler.hasClass(event.target, 'p-multiselect-clear-icon');\n    }\n  }, {\n    key: \"isPanelClicked\",\n    value: function isPanelClicked(event) {\n      return this.overlayRef && this.overlayRef.current && this.overlayRef.current.contains(event.target);\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentClickListener();\n      this.unbindResizeListener();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"hasFilter\",\n    value: function hasFilter() {\n      return this.state.filter && this.state.filter.trim().length > 0;\n    }\n  }, {\n    key: \"isAllChecked\",\n    value: function isAllChecked(visibleOptions) {\n      if (this.hasFilter()) return this.props.value && visibleOptions && visibleOptions.length && this.props.value.length === visibleOptions.length;else return this.props.value && this.props.options && this.props.value.length === this.props.options.length;\n    }\n  }, {\n    key: \"filterOptions\",\n    value: function filterOptions(options) {\n      if (options) {\n        var filterValue = this.state.filter.trim().toLocaleLowerCase(this.props.filterLocale);\n        var searchFields = this.props.filterBy ? this.props.filterBy.split(',') : [this.props.optionLabel || 'label'];\n        return FilterUtils.filter(options, searchFields, filterValue, this.props.filterMatchMode, this.props.filterLocale);\n      }\n    }\n  }, {\n    key: \"getOptionLabel\",\n    value: function getOptionLabel(option) {\n      return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : option && option['label'] !== undefined ? option['label'] : option;\n    }\n  }, {\n    key: \"getOptionValue\",\n    value: function getOptionValue(option) {\n      return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : option && option['value'] !== undefined ? option['value'] : option;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !this.props.value || this.props.value.length === 0;\n    }\n  }, {\n    key: \"equalityKey\",\n    value: function equalityKey() {\n      return this.props.optionValue ? null : this.props.dataKey;\n    }\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity() {\n      return this.nativeSelect.checkValidity();\n    }\n  }, {\n    key: \"removeChip\",\n    value: function removeChip(event, item) {\n      var key = this.equalityKey();\n      var value = this.props.value.filter(function (val) {\n        return !ObjectUtils.equals(val, item, key);\n      });\n      this.updateModel(event, value);\n    }\n  }, {\n    key: \"getSelectedItemsLabel\",\n    value: function getSelectedItemsLabel() {\n      var pattern = /{(.*?)}/;\n\n      if (pattern.test(this.props.selectedItemsLabel)) {\n        return this.props.selectedItemsLabel.replace(this.props.selectedItemsLabel.match(pattern)[0], this.props.value.length + '');\n      }\n\n      return this.props.selectedItemsLabel;\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      var label;\n\n      if (!this.isEmpty() && !this.props.fixedPlaceholder) {\n        label = '';\n\n        for (var i = 0; i < this.props.value.length; i++) {\n          if (i !== 0) {\n            label += ',';\n          }\n\n          label += this.getLabelByValue(this.props.value[i]);\n        }\n\n        if (this.props.value.length <= this.props.maxSelectedLabels) {\n          return label;\n        } else {\n          return this.getSelectedItemsLabel();\n        }\n      }\n\n      return label;\n    }\n  }, {\n    key: \"getLabelContent\",\n    value: function getLabelContent() {\n      var _this7 = this;\n\n      if (this.props.selectedItemTemplate) {\n        if (!this.isEmpty()) {\n          if (this.props.value.length <= this.props.maxSelectedLabels) {\n            return this.props.value.map(function (val, index) {\n              var item = ObjectUtils.getJSXElement(_this7.props.selectedItemTemplate, val);\n              return /*#__PURE__*/React.createElement(React.Fragment, {\n                key: index,\n                __self: _this7,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 29\n                }\n              }, item);\n            });\n          } else {\n            return this.getSelectedItemsLabel();\n          }\n        } else {\n          return ObjectUtils.getJSXElement(this.props.selectedItemTemplate);\n        }\n      } else {\n        if (this.props.display === 'chip' && !this.isEmpty()) {\n          return this.props.value.map(function (val) {\n            var label = _this7.getLabelByValue(val);\n\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"p-multiselect-token\",\n              key: label,\n              __self: _this7,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"p-multiselect-token-label\",\n              __self: _this7,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 33\n              }\n            }, label), !_this7.props.disabled && /*#__PURE__*/React.createElement(\"span\", {\n              className: \"p-multiselect-token-icon pi pi-times-circle\",\n              onClick: function onClick(e) {\n                return _this7.removeChip(e, val);\n              },\n              __self: _this7,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 59\n              }\n            }));\n          });\n        }\n\n        return this.getLabel();\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.container,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader(items) {\n      return /*#__PURE__*/React.createElement(MultiSelectHeader, {\n        filter: this.props.filter,\n        filterValue: this.state.filter,\n        onFilter: this.onFilter,\n        filterPlaceholder: this.props.filterPlaceholder,\n        onClose: this.onCloseClick,\n        onToggleAll: this.onToggleAll,\n        allChecked: this.isAllChecked(items),\n        template: this.props.panelHeaderTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      if (this.props.panelFooterTemplate) {\n        var content = ObjectUtils.getJSXElement(this.props.panelFooterTemplate, this.props);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-multiselect-footer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 17\n          }\n        }, content);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderClearIcon\",\n    value: function renderClearIcon() {\n      var _this8 = this;\n\n      var empty = this.isEmpty();\n\n      if (!empty && this.props.showClear && !this.props.disabled) {\n        return /*#__PURE__*/React.createElement(\"i\", {\n          className: \"p-multiselect-clear-icon pi pi-times\",\n          onClick: function onClick(e) {\n            return _this8.updateModel(e, null);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      var _this9 = this;\n\n      var empty = this.isEmpty();\n      var content = this.getLabelContent();\n      var labelClassName = classNames('p-multiselect-label', {\n        'p-placeholder': empty && this.props.placeholder,\n        'p-multiselect-label-empty': empty && !this.props.placeholder && !this.props.selectedItemTemplate,\n        'p-multiselect-items-label': !empty && this.props.value.length > this.props.maxSelectedLabels\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this9.label = el;\n        },\n        className: \"p-multiselect-label-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: labelClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 17\n        }\n      }, content || this.props.placeholder || 'empty'));\n    }\n  }, {\n    key: \"renderHiddenSelect\",\n    value: function renderHiddenSelect() {\n      var _this10 = this;\n\n      var selectedOptions = this.props.value ? this.props.value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: _this10.getOptionLabel(option) + '_' + index,\n          value: _this10.getOptionValue(option),\n          __self: _this10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 90\n          }\n        });\n      }) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-hidden-accessible p-multiselect-hidden-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        ref: function ref(el) {\n          return _this10.nativeSelect = el;\n        },\n        required: this.props.required,\n        name: this.props.name,\n        tabIndex: -1,\n        \"aria-hidden\": \"true\",\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 17\n        }\n      }, selectedOptions));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this11 = this;\n\n      var className = classNames('p-multiselect p-component p-inputwrapper', {\n        'p-multiselect-chip': this.props.display === 'chip',\n        'p-disabled': this.props.disabled,\n        'p-multiselect-clearable': this.props.showClear && !this.props.disabled,\n        'p-focus': this.state.focused,\n        'p-inputwrapper-filled': this.props.value && this.props.value.length > 0,\n        'p-inputwrapper-focus': this.state.focused || this.state.overlayVisible\n      }, this.props.className);\n      var panelClassName = classNames({\n        'p-multiselect-limited': !this.allowOptionSelect()\n      }, this.props.panelClassName);\n      var label = this.renderLabel();\n      var clearIcon = this.renderClearIcon();\n      var hiddenSelect = this.renderHiddenSelect();\n      var items = this.props.options;\n      var hasFilter = this.hasFilter();\n\n      if (hasFilter) {\n        items = this.filterOptions(items);\n      }\n\n      if (items && items.length) {\n        items = items.map(function (option, index) {\n          var optionLabel = _this11.getOptionLabel(option);\n\n          return /*#__PURE__*/React.createElement(MultiSelectItem, {\n            key: optionLabel + '_' + index,\n            label: optionLabel,\n            option: option,\n            disabled: option.disabled,\n            template: _this11.props.itemTemplate,\n            selected: _this11.isSelected(option),\n            onClick: _this11.onOptionClick,\n            onKeyDown: _this11.onOptionKeyDown,\n            tabIndex: _this11.props.tabIndex,\n            __self: _this11,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 21\n            }\n          });\n        });\n      } else if (hasFilter) {\n        var emptyFilterMessage = ObjectUtils.getJSXElement(this.props.emptyFilterMessage, this.props);\n        items = /*#__PURE__*/React.createElement(\"li\", {\n          className: \"p-multiselect-empty-message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 17\n          }\n        }, emptyFilterMessage);\n      }\n\n      var header = this.renderHeader(items);\n      var footer = this.renderFooter();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.id,\n        className: className,\n        onClick: this.onClick,\n        ref: function ref(el) {\n          return _this11.container = el;\n        },\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 13\n        }\n      }, hiddenSelect, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-hidden-accessible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: function ref(el) {\n          return _this11.focusInput = el;\n        },\n        id: this.props.inputId,\n        readOnly: true,\n        type: \"text\",\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        role: \"listbox\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-labelledby\": this.props.ariaLabelledBy,\n        \"aria-expanded\": this.state.overlayVisible,\n        disabled: this.props.disabled,\n        tabIndex: this.props.tabIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 21\n        }\n      })), label, clearIcon, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-multiselect-trigger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-multiselect-trigger-icon pi pi-chevron-down p-c\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(MultiSelectPanel, {\n        ref: this.overlayRef,\n        header: header,\n        footer: footer,\n        appendTo: this.props.appendTo,\n        onClick: this.onPanelClick,\n        scrollHeight: this.props.scrollHeight,\n        panelClassName: panelClassName,\n        panelStyle: this.props.panelStyle,\n        in: this.state.overlayVisible,\n        onEnter: this.onOverlayEnter,\n        onEntered: this.onOverlayEntered,\n        onExit: this.onOverlayExit,\n        onExited: this.onOverlayExited,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 17\n        }\n      }, items));\n    }\n  }]);\n\n  return MultiSelect;\n}(Component);\nMultiSelect.defaultProps = {\n  id: null,\n  name: null,\n  value: null,\n  options: null,\n  optionLabel: null,\n  optionValue: null,\n  display: 'comma',\n  style: null,\n  className: null,\n  panelClassName: null,\n  panelStyle: null,\n  scrollHeight: '200px',\n  placeholder: null,\n  fixedPlaceholder: false,\n  disabled: false,\n  showClear: false,\n  filter: false,\n  filterBy: null,\n  filterMatchMode: 'contains',\n  filterPlaceholder: null,\n  filterLocale: undefined,\n  emptyFilterMessage: 'No results found',\n  resetFilterOnHide: false,\n  tabIndex: 0,\n  dataKey: null,\n  inputId: null,\n  required: false,\n  appendTo: null,\n  tooltip: null,\n  tooltipOptions: null,\n  maxSelectedLabels: 3,\n  selectionLimit: null,\n  selectedItemsLabel: '{0} items selected',\n  ariaLabelledBy: null,\n  itemTemplate: null,\n  selectedItemTemplate: null,\n  panelHeaderTemplate: null,\n  panelFooterTemplate: null,\n  onChange: null,\n  onFocus: null,\n  onBlur: null\n};\nMultiSelect.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.any,\n  options: PropTypes.array,\n  optionLabel: PropTypes.string,\n  optionValue: PropTypes.string,\n  display: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  panelClassName: PropTypes.string,\n  panelStyle: PropTypes.object,\n  scrollHeight: PropTypes.string,\n  placeholder: PropTypes.string,\n  fixedPlaceholder: PropTypes.bool,\n  disabled: PropTypes.bool,\n  showClear: PropTypes.bool,\n  filter: PropTypes.bool,\n  filterBy: PropTypes.string,\n  filterMatchMode: PropTypes.string,\n  filterPlaceholder: PropTypes.string,\n  filterLocale: PropTypes.string,\n  emptyFilterMessage: PropTypes.any,\n  resetFilterOnHide: PropTypes.bool,\n  tabIndex: PropTypes.number,\n  dataKey: PropTypes.string,\n  inputId: PropTypes.string,\n  required: PropTypes.bool,\n  appendTo: PropTypes.object,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  maxSelectedLabels: PropTypes.number,\n  selectionLimit: PropTypes.number,\n  selectedItemsLabel: PropTypes.string,\n  ariaLabelledBy: PropTypes.string,\n  itemTemplate: PropTypes.any,\n  selectedItemTemplate: PropTypes.any,\n  panelHeaderTemplate: PropTypes.any,\n  panelFooterTemplate: PropTypes.any,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/multiselect/MultiSelect.js"],"names":["classNames","PropTypes","React","Component","tip","DomHandler","FilterUtils","ObjectUtils","MultiSelectHeader","MultiSelectItem","MultiSelectPanel","UniqueComponentId","ConnectedOverlayScrollHandler","OverlayEventBus","MultiSelect","props","state","filter","focused","overlayVisible","onClick","bind","onKeyDown","onOptionClick","onOptionKeyDown","onFocus","onBlur","onFilter","onCloseClick","onToggleAll","onOverlayEnter","onOverlayEntered","onOverlayExit","onOverlayExited","onPanelClick","id","overlayRef","createRef","event","emit","originalEvent","target","container","selectionLimit","value","length","option","optionValue","getOptionValue","selectionIndex","findSelectionIndex","allowOptionSelect","updateModel","val","i","listItem","currentTarget","which","nextItem","findNextItem","focus","preventDefault","prevItem","findPrevItem","hide","focusInput","item","nextElementSibling","hasClass","previousElementSibling","disabled","isPanelClicked","isClearClicked","show","altKey","newValue","checked","options","hasFilter","filterOptions","push","onChange","stopPropagation","name","setState","query","current","style","zIndex","String","generateZIndex","alignPanel","bindDocumentClickListener","bindScrollListener","bindResizeListener","unbindDocumentClickListener","unbindScrollListener","unbindResizeListener","resetFilterOnHide","resetFilter","label","parentElement","appendTo","minWidth","getWidth","absolutePosition","relativePosition","index","key","equalityKey","equals","getOptionLabel","persist","documentClickListener","isOutsideClicked","document","addEventListener","scrollHandler","resizeListener","window","removeEventListener","isSameNode","contains","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","trim","visibleOptions","filterValue","toLocaleLowerCase","filterLocale","searchFields","filterBy","split","optionLabel","filterMatchMode","resolveFieldData","undefined","dataKey","nativeSelect","checkValidity","pattern","test","selectedItemsLabel","replace","match","isEmpty","fixedPlaceholder","getLabelByValue","maxSelectedLabels","getSelectedItemsLabel","selectedItemTemplate","map","getJSXElement","display","e","removeChip","getLabel","items","filterPlaceholder","isAllChecked","panelHeaderTemplate","panelFooterTemplate","empty","showClear","getLabelContent","labelClassName","placeholder","el","selectedOptions","required","className","panelClassName","renderLabel","clearIcon","renderClearIcon","hiddenSelect","renderHiddenSelect","itemTemplate","isSelected","tabIndex","emptyFilterMessage","header","renderHeader","footer","renderFooter","inputId","ariaLabelledBy","scrollHeight","panelStyle","defaultProps","propTypes","string","any","array","object","bool","number","func"],"mappings":"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","sourcesContent":["import { classNames } from '../utils/ClassNames';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport FilterUtils from '../utils/FilterUtils';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { MultiSelectHeader } from './MultiSelectHeader';\r\nimport { MultiSelectItem } from './MultiSelectItem';\r\nimport { MultiSelectPanel } from './MultiSelectPanel';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport class MultiSelect extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        name: null,\r\n        value: null,\r\n        options: null,\r\n        optionLabel: null,\r\n        optionValue: null,\r\n        display: 'comma',\r\n        style: null,\r\n        className: null,\r\n        panelClassName: null,\r\n        panelStyle: null,\r\n        scrollHeight: '200px',\r\n        placeholder: null,\r\n        fixedPlaceholder: false,\r\n        disabled: false,\r\n        showClear: false,\r\n        filter: false,\r\n        filterBy: null,\r\n        filterMatchMode: 'contains',\r\n        filterPlaceholder: null,\r\n        filterLocale: undefined,\r\n        emptyFilterMessage: 'No results found',\r\n        resetFilterOnHide: false,\r\n        tabIndex: 0,\r\n        dataKey: null,\r\n        inputId: null,\r\n        required: false,\r\n        appendTo: null,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        maxSelectedLabels: 3,\r\n        selectionLimit: null,\r\n        selectedItemsLabel: '{0} items selected',\r\n        ariaLabelledBy: null,\r\n        itemTemplate: null,\r\n        selectedItemTemplate: null,\r\n        panelHeaderTemplate: null,\r\n        panelFooterTemplate: null,\r\n        onChange: null,\r\n        onFocus: null,\r\n        onBlur: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        value: PropTypes.any,\r\n        options: PropTypes.array,\r\n        optionLabel: PropTypes.string,\r\n        optionValue: PropTypes.string,\r\n        display: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        panelClassName: PropTypes.string,\r\n        panelStyle: PropTypes.object,\r\n        scrollHeight: PropTypes.string,\r\n        placeholder: PropTypes.string,\r\n        fixedPlaceholder: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        showClear: PropTypes.bool,\r\n        filter: PropTypes.bool,\r\n        filterBy: PropTypes.string,\r\n        filterMatchMode: PropTypes.string,\r\n        filterPlaceholder: PropTypes.string,\r\n        filterLocale: PropTypes.string,\r\n        emptyFilterMessage: PropTypes.any,\r\n        resetFilterOnHide: PropTypes.bool,\r\n        tabIndex: PropTypes.number,\r\n        dataKey: PropTypes.string,\r\n        inputId: PropTypes.string,\r\n        required: PropTypes.bool,\r\n        appendTo: PropTypes.object,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        maxSelectedLabels: PropTypes.number,\r\n        selectionLimit: PropTypes.number,\r\n        selectedItemsLabel: PropTypes.string,\r\n        ariaLabelledBy: PropTypes.string,\r\n        itemTemplate: PropTypes.any,\r\n        selectedItemTemplate: PropTypes.any,\r\n        panelHeaderTemplate: PropTypes.any,\r\n        panelFooterTemplate: PropTypes.any,\r\n        onChange: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: '',\r\n            focused: false,\r\n            overlayVisible: false\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onOptionClick = this.onOptionClick.bind(this);\r\n        this.onOptionKeyDown = this.onOptionKeyDown.bind(this);\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onCloseClick = this.onCloseClick.bind(this);\r\n        this.onToggleAll = this.onToggleAll.bind(this);\r\n        this.onOverlayEnter = this.onOverlayEnter.bind(this);\r\n        this.onOverlayEntered = this.onOverlayEntered.bind(this);\r\n        this.onOverlayExit = this.onOverlayExit.bind(this);\r\n        this.onOverlayExited = this.onOverlayExited.bind(this);\r\n        this.onPanelClick = this.onPanelClick.bind(this);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.overlayRef = React.createRef();\r\n    }\r\n\r\n    onPanelClick(event) {\r\n        OverlayEventBus.emit('overlay-click', {\r\n            originalEvent: event,\r\n            target: this.container\r\n        });\r\n    }\r\n\r\n    allowOptionSelect() {\r\n        return !this.props.selectionLimit || !this.props.value || (this.props.value && this.props.value.length < this.props.selectionLimit);\r\n    }\r\n\r\n    onOptionClick(event) {\r\n        let { originalEvent, option } = event;\r\n        let optionValue = this.getOptionValue(option);\r\n        let selectionIndex = this.findSelectionIndex(optionValue);\r\n        let allowOptionSelect = this.allowOptionSelect();\r\n\r\n        if (selectionIndex !== -1)\r\n            this.updateModel(originalEvent, this.props.value.filter((val, i) => i !== selectionIndex));\r\n        else if (allowOptionSelect)\r\n            this.updateModel(originalEvent, [...this.props.value || [], optionValue]);\r\n    }\r\n\r\n    onOptionKeyDown(event) {\r\n        const originalEvent = event.originalEvent;\r\n        let listItem = originalEvent.currentTarget;\r\n\r\n        switch (originalEvent.which) {\r\n            //down\r\n            case 40:\r\n                let nextItem = this.findNextItem(listItem);\r\n                if (nextItem) {\r\n                    nextItem.focus();\r\n                }\r\n\r\n                originalEvent.preventDefault();\r\n                break;\r\n\r\n            //up\r\n            case 38:\r\n                let prevItem = this.findPrevItem(listItem);\r\n                if (prevItem) {\r\n                    prevItem.focus();\r\n                }\r\n\r\n                originalEvent.preventDefault();\r\n                break;\r\n\r\n            //enter and space\r\n            case 13:\r\n            case 32:\r\n                this.onOptionClick(event);\r\n                originalEvent.preventDefault();\r\n                break;\r\n\r\n            //escape\r\n            case 27:\r\n                this.hide();\r\n                this.focusInput.focus();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    findNextItem(item) {\r\n        let nextItem = item.nextElementSibling;\r\n\r\n        if (nextItem)\r\n            return !DomHandler.hasClass(nextItem, 'p-multiselect-item') ? this.findNextItem(nextItem) : nextItem;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    findPrevItem(item) {\r\n        let prevItem = item.previousElementSibling;\r\n\r\n        if (prevItem)\r\n            return !DomHandler.hasClass(prevItem, 'p-multiselect-item') ? this.findPrevItem(prevItem) : prevItem;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    onClick(event) {\r\n        if (!this.props.disabled && !this.isPanelClicked(event) && !DomHandler.hasClass(event.target, 'p-multiselect-token-icon') && !this.isClearClicked(event)) {\r\n            if (this.state.overlayVisible) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                this.show();\r\n            }\r\n\r\n            this.focusInput.focus();\r\n        }\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        switch (event.which) {\r\n            //down\r\n            case 40:\r\n                if (!this.state.overlayVisible && event.altKey) {\r\n                    this.show();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n\r\n            //space\r\n            case 32:\r\n                if (!this.state.overlayVisible) {\r\n                    this.show();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n\r\n            //escape\r\n            case 27:\r\n                this.hide();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onToggleAll(event) {\r\n        let newValue;\r\n\r\n        if (event.checked) {\r\n            newValue = [];\r\n        }\r\n        else {\r\n            let options = this.hasFilter() ? this.filterOptions(this.props.options) : this.props.options;\r\n            if (options) {\r\n                newValue = [];\r\n                for (let option of options) {\r\n                    newValue.push(this.getOptionValue(option));\r\n                }\r\n            }\r\n        }\r\n\r\n        this.updateModel(event.originalEvent, newValue);\r\n    }\r\n\r\n    updateModel(event, value) {\r\n        if (this.props.onChange) {\r\n            this.props.onChange({\r\n                originalEvent: event,\r\n                value: value,\r\n                stopPropagation: () => { },\r\n                preventDefault: () => { },\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.id,\r\n                    value: value\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onFilter(event) {\r\n        this.setState({ filter: event.query });\r\n    }\r\n\r\n    resetFilter() {\r\n        this.setState({ filter: '' });\r\n    }\r\n\r\n    show() {\r\n        this.setState({ overlayVisible: true });\r\n    }\r\n\r\n    hide() {\r\n        this.setState({ overlayVisible: false });\r\n    }\r\n\r\n    onOverlayEnter() {\r\n        this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\r\n        this.alignPanel();\r\n    }\r\n\r\n    onOverlayEntered() {\r\n        this.bindDocumentClickListener();\r\n        this.bindScrollListener();\r\n        this.bindResizeListener();\r\n    }\r\n\r\n    onOverlayExit() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindScrollListener();\r\n        this.unbindResizeListener();\r\n    }\r\n\r\n    onOverlayExited() {\r\n        if (this.props.filter && this.props.resetFilterOnHide) {\r\n            this.resetFilter();\r\n        }\r\n    }\r\n\r\n    alignPanel() {\r\n        const container = this.label.parentElement;\r\n        if (this.props.appendTo) {\r\n            this.overlayRef.current.style.minWidth = DomHandler.getWidth(container) + 'px';\r\n            DomHandler.absolutePosition(this.overlayRef.current, container);\r\n        }\r\n        else {\r\n            DomHandler.relativePosition(this.overlayRef.current, container);\r\n        }\r\n    }\r\n\r\n    onCloseClick(event) {\r\n        this.hide();\r\n        this.focusInput.focus();\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    findSelectionIndex(value) {\r\n        let index = -1;\r\n\r\n        if (this.props.value) {\r\n            const key = this.equalityKey();\r\n            for (let i = 0; i < this.props.value.length; i++) {\r\n                if (ObjectUtils.equals(this.props.value[i], value, key)) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    isSelected(option) {\r\n        return this.findSelectionIndex(this.getOptionValue(option)) !== -1;\r\n    }\r\n\r\n    getLabelByValue(val) {\r\n        let label = null;\r\n\r\n        for (let i = 0; i < this.props.options.length; i++) {\r\n            let option = this.props.options[i];\r\n            let optionValue = this.getOptionValue(option);\r\n            let key = this.equalityKey();\r\n\r\n            if (ObjectUtils.equals(optionValue, val, key)) {\r\n                label = this.getOptionLabel(option);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return label;\r\n    }\r\n\r\n    onFocus(event) {\r\n        event.persist();\r\n\r\n        this.setState({ focused: true }, () => {\r\n            if (this.props.onFocus) {\r\n                this.props.onFocus(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    onBlur(event) {\r\n        event.persist();\r\n\r\n        this.setState({ focused: false }, () => {\r\n            if (this.props.onBlur) {\r\n                this.props.onBlur(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = (event) => {\r\n                if (this.state.overlayVisible && this.isOutsideClicked(event)) {\r\n                    this.hide();\r\n                }\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    bindResizeListener() {\r\n        if (!this.resizeListener) {\r\n            this.resizeListener = () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            window.addEventListener('resize', this.resizeListener);\r\n        }\r\n    }\r\n\r\n    unbindResizeListener() {\r\n        if (this.resizeListener) {\r\n            window.removeEventListener('resize', this.resizeListener);\r\n            this.resizeListener = null;\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(event) {\r\n        return this.container && !(this.container.isSameNode(event.target) || this.isClearClicked(event) || this.container.contains(event.target)\r\n            || this.isPanelClicked(event));\r\n    }\r\n\r\n    isClearClicked(event) {\r\n        return DomHandler.hasClass(event.target, 'p-multiselect-clear-icon')\r\n    }\r\n\r\n    isPanelClicked(event) {\r\n        return this.overlayRef && this.overlayRef.current && this.overlayRef.current.contains(event.target);\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindResizeListener();\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    hasFilter() {\r\n        return this.state.filter && this.state.filter.trim().length > 0;\r\n    }\r\n\r\n    isAllChecked(visibleOptions) {\r\n        if (this.hasFilter())\r\n            return this.props.value && visibleOptions && visibleOptions.length && (this.props.value.length === visibleOptions.length);\r\n        else\r\n            return this.props.value && this.props.options && (this.props.value.length === this.props.options.length);\r\n    }\r\n\r\n    filterOptions(options) {\r\n        if (options) {\r\n            let filterValue = this.state.filter.trim().toLocaleLowerCase(this.props.filterLocale);\r\n            let searchFields = this.props.filterBy ? this.props.filterBy.split(',') : [this.props.optionLabel || 'label'];\r\n            return FilterUtils.filter(options, searchFields, filterValue, this.props.filterMatchMode, this.props.filterLocale);\r\n        }\r\n    }\r\n\r\n    getOptionLabel(option) {\r\n        return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : (option && option['label'] !== undefined ? option['label'] : option);\r\n    }\r\n\r\n    getOptionValue(option) {\r\n        return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : (option && option['value'] !== undefined ? option['value'] : option);\r\n    }\r\n\r\n    isEmpty() {\r\n        return !this.props.value || this.props.value.length === 0;\r\n    }\r\n\r\n    equalityKey() {\r\n        return this.props.optionValue ? null : this.props.dataKey;\r\n    }\r\n\r\n    checkValidity() {\r\n        return this.nativeSelect.checkValidity();\r\n    }\r\n\r\n    removeChip(event, item) {\r\n        let key = this.equalityKey();\r\n        let value = this.props.value.filter(val => !ObjectUtils.equals(val, item, key));\r\n\r\n        this.updateModel(event, value);\r\n    }\r\n\r\n    getSelectedItemsLabel() {\r\n        let pattern = /{(.*?)}/;\r\n        if (pattern.test(this.props.selectedItemsLabel)) {\r\n            return this.props.selectedItemsLabel.replace(this.props.selectedItemsLabel.match(pattern)[0], this.props.value.length + '');\r\n        }\r\n\r\n        return this.props.selectedItemsLabel;\r\n    }\r\n\r\n    getLabel() {\r\n        let label;\r\n\r\n        if (!this.isEmpty() && !this.props.fixedPlaceholder) {\r\n            label = '';\r\n            for (let i = 0; i < this.props.value.length; i++) {\r\n                if (i !== 0) {\r\n                    label += ',';\r\n                }\r\n                label += this.getLabelByValue(this.props.value[i]);\r\n            }\r\n\r\n            if (this.props.value.length <= this.props.maxSelectedLabels) {\r\n                return label;\r\n            }\r\n            else {\r\n                return this.getSelectedItemsLabel();\r\n            }\r\n        }\r\n\r\n        return label;\r\n    }\r\n\r\n    getLabelContent() {\r\n        if (this.props.selectedItemTemplate) {\r\n            if (!this.isEmpty()) {\r\n                if (this.props.value.length <= this.props.maxSelectedLabels) {\r\n                    return this.props.value.map((val, index) => {\r\n                        const item = ObjectUtils.getJSXElement(this.props.selectedItemTemplate, val);\r\n\r\n                        return (\r\n                            <React.Fragment key={index}>{item}</React.Fragment>\r\n                        );\r\n                    });\r\n                }\r\n                else {\r\n                    return this.getSelectedItemsLabel();\r\n                }\r\n            }\r\n            else {\r\n                return ObjectUtils.getJSXElement(this.props.selectedItemTemplate);\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.display === 'chip' && !this.isEmpty()) {\r\n                return (\r\n                    this.props.value.map((val) => {\r\n                        const label = this.getLabelByValue(val);\r\n                        return (\r\n                            <div className=\"p-multiselect-token\" key={label}>\r\n                                <span className=\"p-multiselect-token-label\">{label}</span>\r\n                                { !this.props.disabled && <span className=\"p-multiselect-token-icon pi pi-times-circle\" onClick={(e) => this.removeChip(e, val)}></span>}\r\n                            </div>\r\n                        )\r\n                    })\r\n                );\r\n            }\r\n\r\n            return this.getLabel();\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.container,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    renderHeader(items) {\r\n        return (\r\n            <MultiSelectHeader filter={this.props.filter} filterValue={this.state.filter} onFilter={this.onFilter} filterPlaceholder={this.props.filterPlaceholder}\r\n                onClose={this.onCloseClick} onToggleAll={this.onToggleAll} allChecked={this.isAllChecked(items)} template={this.props.panelHeaderTemplate} />\r\n        );\r\n    }\r\n\r\n    renderFooter() {\r\n        if (this.props.panelFooterTemplate) {\r\n            const content = ObjectUtils.getJSXElement(this.props.panelFooterTemplate, this.props);\r\n\r\n            return (\r\n                <div className=\"p-multiselect-footer\">\r\n                    {content}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderClearIcon() {\r\n        const empty = this.isEmpty();\r\n        if (!empty && this.props.showClear && !this.props.disabled) {\r\n            return (\r\n                <i className=\"p-multiselect-clear-icon pi pi-times\" onClick={(e) => this.updateModel(e, null)}></i>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderLabel() {\r\n        const empty = this.isEmpty();\r\n        const content = this.getLabelContent();\r\n        const labelClassName = classNames('p-multiselect-label', {\r\n            'p-placeholder': empty && this.props.placeholder,\r\n            'p-multiselect-label-empty': empty && !this.props.placeholder && !this.props.selectedItemTemplate,\r\n            'p-multiselect-items-label': !empty && this.props.value.length > this.props.maxSelectedLabels\r\n        });\r\n\r\n        return (\r\n            <div ref={(el) => this.label = el} className=\"p-multiselect-label-container\">\r\n                <div className={labelClassName}>{content || this.props.placeholder || 'empty'}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderHiddenSelect() {\r\n        let selectedOptions = this.props.value ? this.props.value.map((option, index) => <option key={this.getOptionLabel(option) + '_' + index} value={this.getOptionValue(option)}></option>) : null;\r\n\r\n        return (\r\n            <div className=\"p-hidden-accessible p-multiselect-hidden-select\">\r\n                <select ref={(el) => this.nativeSelect = el} required={this.props.required} name={this.props.name} tabIndex={-1} aria-hidden=\"true\" multiple>\r\n                    {selectedOptions}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-multiselect p-component p-inputwrapper', {\r\n            'p-multiselect-chip': this.props.display === 'chip',\r\n            'p-disabled': this.props.disabled,\r\n            'p-multiselect-clearable': this.props.showClear && !this.props.disabled,\r\n            'p-focus': this.state.focused,\r\n            'p-inputwrapper-filled': this.props.value && this.props.value.length > 0,\r\n            'p-inputwrapper-focus': this.state.focused || this.state.overlayVisible\r\n        }, this.props.className);\r\n        let panelClassName = classNames({ 'p-multiselect-limited': !this.allowOptionSelect() }, this.props.panelClassName);\r\n        let label = this.renderLabel();\r\n        let clearIcon = this.renderClearIcon();\r\n        let hiddenSelect = this.renderHiddenSelect();\r\n        let items = this.props.options;\r\n        const hasFilter = this.hasFilter();\r\n\r\n        if (hasFilter) {\r\n            items = this.filterOptions(items);\r\n        }\r\n\r\n        if (items && items.length) {\r\n            items = items.map((option, index) => {\r\n                let optionLabel = this.getOptionLabel(option);\r\n\r\n                return (\r\n                    <MultiSelectItem key={optionLabel + '_' + index} label={optionLabel} option={option} disabled={option.disabled} template={this.props.itemTemplate}\r\n                        selected={this.isSelected(option)} onClick={this.onOptionClick} onKeyDown={this.onOptionKeyDown} tabIndex={this.props.tabIndex} />\r\n                );\r\n            });\r\n        }\r\n        else if (hasFilter) {\r\n            const emptyFilterMessage = ObjectUtils.getJSXElement(this.props.emptyFilterMessage, this.props);\r\n            items = (\r\n                <li className=\"p-multiselect-empty-message\">\r\n                    {emptyFilterMessage}\r\n                </li>\r\n            );\r\n        }\r\n\r\n        let header = this.renderHeader(items);\r\n        let footer = this.renderFooter();\r\n\r\n        return (\r\n            <div id={this.id} className={className} onClick={this.onClick} ref={el => this.container = el} style={this.props.style}>\r\n                {hiddenSelect}\r\n                <div className=\"p-hidden-accessible\">\r\n                    <input ref={el => this.focusInput = el} id={this.props.inputId} readOnly type=\"text\" onFocus={this.onFocus} onBlur={this.onBlur} onKeyDown={this.onKeyDown}\r\n                        role=\"listbox\" aria-haspopup=\"listbox\" aria-labelledby={this.props.ariaLabelledBy} aria-expanded={this.state.overlayVisible} disabled={this.props.disabled} tabIndex={this.props.tabIndex} />\r\n                </div>\r\n                {label}\r\n                {clearIcon}\r\n                <div className=\"p-multiselect-trigger\">\r\n                    <span className=\"p-multiselect-trigger-icon pi pi-chevron-down p-c\"></span>\r\n                </div>\r\n                <MultiSelectPanel ref={this.overlayRef} header={header} footer={footer} appendTo={this.props.appendTo} onClick={this.onPanelClick}\r\n                    scrollHeight={this.props.scrollHeight} panelClassName={panelClassName} panelStyle={this.props.panelStyle}\r\n                    in={this.state.overlayVisible} onEnter={this.onOverlayEnter} onEntered={this.onOverlayEntered} onExit={this.onOverlayExit} onExited={this.onOverlayExited}>\r\n                    {items}\r\n                </MultiSelectPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}