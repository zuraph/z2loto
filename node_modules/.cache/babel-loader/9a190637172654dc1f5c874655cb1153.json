{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TreeTable}from'../../components/treetable/TreeTable';import{Column}from'../../components/column/Column';import{NodeService}from'../service/NodeService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var TreeTableSortDemo=/*#__PURE__*/function(_Component){_inherits(TreeTableSortDemo,_Component);var _super=_createSuper(TreeTableSortDemo);function TreeTableSortDemo(props){var _this;_classCallCheck(this,TreeTableSortDemo);_this=_super.call(this,props);_this.state={nodes1:[],nodes2:[]};_this.nodeservice=new NodeService();return _this;}_createClass(TreeTableSortDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.nodeservice.getTreeTableNodes().then(function(data){_this2.setState({nodes1:data});var nodes2=data;nodes2.push({data:{name:'Documents',size:'100kb',type:'Link'}});_this2.setState({nodes2:nodes2});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"treeTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"TreeTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Sort\")),/*#__PURE__*/React.createElement(\"p\",null,\"TreeTable supports both single column and multiple column sorting.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Single Column Sorting\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes1,defaultSortOrder:-1},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true,sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",sortable:true}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Multiple Column Sorting\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes2,sortMode:\"multiple\",defaultSortOrder:-1},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true,sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",sortable:true})))),/*#__PURE__*/React.createElement(TreeTableSortDemoDoc,null));}}]);return TreeTableSortDemo;}(Component);var TreeTableSortDemoDoc=/*#__PURE__*/function(_Component2){_inherits(TreeTableSortDemoDoc,_Component2);var _super2=_createSuper(TreeTableSortDemoDoc);function TreeTableSortDemoDoc(props){var _this3;_classCallCheck(this,TreeTableSortDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport class TreeTableSortDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes1: [],\\n            nodes2: []\\n        };\\n\\n        this.nodeservice = new NodeService();\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => {\\n            this.setState({ nodes1: data });\\n\\n            let nodes2 = data;\\n            nodes2.push({\\n                data: {\\n                    name: 'Documents',\\n                    size: '100kb',\\n                    type: 'Link'\\n                }\\n            });\\n\\n            this.setState({\\n                nodes2\\n            });\\n        });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Single Column Sorting</h5>\\n                    <TreeTable value={this.state.nodes1} defaultSortOrder={-1}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multiple Column Sorting</h5>\\n                    <TreeTable value={this.state.nodes2} sortMode=\\\"multiple\\\" defaultSortOrder={-1}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableSortDemo = () => {\\n    const [nodes1, setNodes1] = useState([]);\\n    const [nodes2, setNodes2] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => {\\n            setNodes1(data);\\n\\n            let _nodes2 = data;\\n            _nodes2.push({\\n                data: {\\n                    name: 'Documents',\\n                    size: '100kb',\\n                    type: 'Link'\\n                }\\n            });\\n\\n            setNodes2(_nodes2);\\n        });\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Column Sorting</h5>\\n                <TreeTable value={nodes1} defaultSortOrder={-1}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple Column Sorting</h5>\\n                <TreeTable value={nodes2} sortMode=\\\"multiple\\\" defaultSortOrder={-1}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableSortDemo = () => {\\n    const [nodes1, setNodes1] = useState([]);\\n    const [nodes2, setNodes2] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => {\\n            setNodes1(data);\\n\\n            let _nodes2 = data;\\n            _nodes2.push({\\n                data: {\\n                    name: 'Documents',\\n                    size: '100kb',\\n                    type: 'Link'\\n                }\\n            });\\n\\n            setNodes2(_nodes2);\\n        });\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Column Sorting</h5>\\n                <TreeTable value={nodes1} defaultSortOrder={-1}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple Column Sorting</h5>\\n                <TreeTable value={nodes2} sortMode=\\\"multiple\\\" defaultSortOrder={-1}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this3;}_createClass(TreeTableSortDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'TreeTableSortDemo',sources:this.sources,service:'NodeService',data:'treetablenodes'})));}}]);return TreeTableSortDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/treetable/TreeTableSortDemo.js"],"names":["React","Component","TreeTable","Column","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableSortDemo","props","state","nodes1","nodes2","nodeservice","getTreeTableNodes","then","data","setState","push","name","size","type","TreeTableSortDemoDoc","sources","tabName","content","service"],"mappings":"wpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,sCAA1B,CACA,OAASC,MAAT,KAAuB,gCAAvB,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,OAASC,OAAT,KAAwB,kCAAxB,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CACA,OAASC,eAAT,KAAgC,uBAAhC,CAEA,UAAaC,CAAAA,iBAAb,sHAEI,2BAAYC,KAAZ,CAAmB,mDACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,MAAM,CAAE,EADC,CAETC,MAAM,CAAE,EAFC,CAAb,CAKA,MAAKC,WAAL,CAAmB,GAAIT,CAAAA,WAAJ,EAAnB,CAPe,aAQlB,CAVL,+DAYI,4BAAoB,iBAChB,KAAKS,WAAL,CAAiBC,iBAAjB,GAAqCC,IAArC,CAA0C,SAAAC,IAAI,CAAI,CAC9C,MAAI,CAACC,QAAL,CAAc,CAAEN,MAAM,CAAEK,IAAV,CAAd,EAEA,GAAIJ,CAAAA,MAAM,CAAGI,IAAb,CACAJ,MAAM,CAACM,IAAP,CAAY,CACRF,IAAI,CAAE,CACFG,IAAI,CAAE,WADJ,CAEFC,IAAI,CAAE,OAFJ,CAGFC,IAAI,CAAE,MAHJ,CADE,CAAZ,EAQA,MAAI,CAACJ,QAAL,CAAc,CACVL,MAAM,CAANA,MADU,CAAd,EAGH,CAfD,EAgBH,CA7BL,sBA+BI,iBAAS,CACL,mBACI,4CACI,2BAAK,SAAS,CAAC,8BAAf,eACI,oBAAC,eAAD,EAAiB,aAAa,CAAC,WAA/B,eACI,wDAAc,uCAAd,CADJ,cAEI,kGAFJ,CADJ,CADJ,cAQI,2BAAK,SAAS,CAAC,gCAAf,eACI,2BAAK,SAAS,CAAC,MAAf,eACI,sDADJ,cAEI,oBAAC,SAAD,EAAW,KAAK,CAAE,KAAKF,KAAL,CAAWC,MAA7B,CAAqC,gBAAgB,CAAE,CAAC,CAAxD,eACI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,CAAmC,QAAQ,KAA3C,CAA4C,QAAQ,KAApD,EADJ,cAEI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,CAAmC,QAAQ,KAA3C,EAFJ,cAGI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,CAAmC,QAAQ,KAA3C,EAHJ,CAFJ,CADJ,cAUI,2BAAK,SAAS,CAAC,MAAf,eACI,wDADJ,cAEI,oBAAC,SAAD,EAAW,KAAK,CAAE,KAAKD,KAAL,CAAWE,MAA7B,CAAqC,QAAQ,CAAC,UAA9C,CAAyD,gBAAgB,CAAE,CAAC,CAA5E,eACI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,CAAmC,QAAQ,KAA3C,CAA4C,QAAQ,KAApD,EADJ,cAEI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,CAAmC,QAAQ,KAA3C,EAFJ,cAGI,oBAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,MAAM,CAAC,MAA5B,CAAmC,QAAQ,KAA3C,EAHJ,CAFJ,CAVJ,CARJ,cA4BI,oBAAC,oBAAD,MA5BJ,CADJ,CAgCH,CAhEL,+BAAuCX,SAAvC,E,GAmEMqB,CAAAA,oB,+HAEF,8BAAYb,KAAZ,CAAmB,uDACf,yBAAMA,KAAN,EAEA,OAAKc,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,0+DAFF,CADE,CAkEX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,6yDAFF,CAlEE,CAwHX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,6yDAFL,CAxHK,CAAf,CAHe,cAkLlB,C,sEAED,gCAAwB,CACpB,MAAO,MAAP,CACH,C,sBAED,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,MAEQnB,iBAAiB,CAAC,CAAEa,IAAI,CAAE,mBAAR,CAA6BI,OAAO,CAAE,KAAKA,OAA3C,CAAoDG,OAAO,CAAE,aAA7D,CAA4EV,IAAI,CAAE,gBAAlF,CAAD,CAFzB,CADJ,CADJ,CASH,C,kCApM8Bf,S","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class TreeTableSortDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes1: [],\r\n            nodes2: []\r\n        };\r\n\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => {\r\n            this.setState({ nodes1: data });\r\n\r\n            let nodes2 = data;\r\n            nodes2.push({\r\n                data: {\r\n                    name: 'Documents',\r\n                    size: '100kb',\r\n                    type: 'Link'\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                nodes2\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Sort</span></h1>\r\n                        <p>TreeTable supports both single column and multiple column sorting.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Single Column Sorting</h5>\r\n                        <TreeTable value={this.state.nodes1} defaultSortOrder={-1}>\r\n                            <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                            <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                            <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Multiple Column Sorting</h5>\r\n                        <TreeTable value={this.state.nodes2} sortMode=\"multiple\" defaultSortOrder={-1}>\r\n                            <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                            <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                            <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableSortDemoDoc />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass TreeTableSortDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport class TreeTableSortDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes1: [],\r\n            nodes2: []\r\n        };\r\n\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => {\r\n            this.setState({ nodes1: data });\r\n\r\n            let nodes2 = data;\r\n            nodes2.push({\r\n                data: {\r\n                    name: 'Documents',\r\n                    size: '100kb',\r\n                    type: 'Link'\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                nodes2\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Single Column Sorting</h5>\r\n                    <TreeTable value={this.state.nodes1} defaultSortOrder={-1}>\r\n                        <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                        <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                        <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multiple Column Sorting</h5>\r\n                    <TreeTable value={this.state.nodes2} sortMode=\"multiple\" defaultSortOrder={-1}>\r\n                        <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                        <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                        <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableSortDemo = () => {\r\n    const [nodes1, setNodes1] = useState([]);\r\n    const [nodes2, setNodes2] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => {\r\n            setNodes1(data);\r\n\r\n            let _nodes2 = data;\r\n            _nodes2.push({\r\n                data: {\r\n                    name: 'Documents',\r\n                    size: '100kb',\r\n                    type: 'Link'\r\n                }\r\n            });\r\n\r\n            setNodes2(_nodes2);\r\n        });\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Column Sorting</h5>\r\n                <TreeTable value={nodes1} defaultSortOrder={-1}>\r\n                    <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                    <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                    <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple Column Sorting</h5>\r\n                <TreeTable value={nodes2} sortMode=\"multiple\" defaultSortOrder={-1}>\r\n                    <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                    <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                    <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableSortDemo = () => {\r\n    const [nodes1, setNodes1] = useState([]);\r\n    const [nodes2, setNodes2] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => {\r\n            setNodes1(data);\r\n\r\n            let _nodes2 = data;\r\n            _nodes2.push({\r\n                data: {\r\n                    name: 'Documents',\r\n                    size: '100kb',\r\n                    type: 'Link'\r\n                }\r\n            });\r\n\r\n            setNodes2(_nodes2);\r\n        });\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Column Sorting</h5>\r\n                <TreeTable value={nodes1} defaultSortOrder={-1}>\r\n                    <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                    <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                    <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple Column Sorting</h5>\r\n                <TreeTable value={nodes2} sortMode=\"multiple\" defaultSortOrder={-1}>\r\n                    <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                    <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                    <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableSortDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}