{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\inputtext\\\\InputTextDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nexport var InputTextDoc = /*#__PURE__*/function (_Component) {\n  _inherits(InputTextDoc, _Component);\n\n  var _super = _createSuper(InputTextDoc);\n\n  function InputTextDoc(props) {\n    var _this;\n\n    _classCallCheck(this, InputTextDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { InputText } from 'primereact/inputtext';\\n\\nexport class InputTextDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            value1: '',\\n            value2: '',\\n            value3: '',\\n            value4: '',\\n            value5: ''\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <InputText value={this.state.value1} onChange={(e) => this.setState({value1: e.target.value})} />\\n                    <span className=\\\"p-ml-2\\\">{this.state.value1}</span>\\n\\n                    <h5>Floating Label</h5>\\n                    <span className=\\\"p-float-label\\\">\\n                        <InputText id=\\\"username\\\" value={this.state.value2} onChange={(e) => this.setState({value2: e.target.value})} />\\n                        <label htmlFor=\\\"username\\\">Username</label>\\n                    </span>\\n\\n                    <h5>Left Icon</h5>\\n                    <span className=\\\"p-input-icon-left\\\">\\n                        <i className=\\\"pi pi-search\\\" />\\n                        <InputText value={this.state.value3} onChange={(e) => this.setState({value3: e.target.value})} placeholder=\\\"Search\\\" />\\n                    </span>\\n\\n                    <h5>Right Icon</h5>\\n                    <span className=\\\"p-input-icon-right\\\">\\n                        <i className=\\\"pi pi-spin pi-spinner\\\" />\\n                        <InputText value={this.state.value4} onChange={(e) => this.setState({value4: e.target.value})} />\\n                    </span>\\n\\n                    <h5>Help Text</h5>\\n                    <div className=\\\"p-field\\\">\\n                        <label htmlFor=\\\"username1\\\" className=\\\"p-d-block\\\">Username</label>\\n                        <InputText id=\\\"username1\\\" aria-describedby=\\\"username1-help\\\" className=\\\"p-d-block\\\"/>\\n                        <small id=\\\"username1-help\\\" className=\\\"p-d-block\\\">Enter your username to reset your password.</small>\\n                    </div>\\n\\n                    <h5>Invalid</h5>\\n                    <div className=\\\"p-field\\\">\\n                        <label htmlFor=\\\"username2\\\" className=\\\"p-d-block\\\">Username</label>\\n                        <InputText id=\\\"username2\\\" aria-describedby=\\\"username2-help\\\" className=\\\"p-invalid p-d-block\\\" />\\n                        <small id=\\\"username2-help\\\" className=\\\"p-error p-d-block\\\">Username is not available.</small>\\n                    </div>\\n\\n                    <h5>Disabled</h5>\\n                    <InputText value={this.state.value5} disabled />\\n\\n                    <h5>Sizes</h5>\\n                    <div className=\\\"sizes\\\">\\n                        <InputText type=\\\"text\\\" className=\\\"p-inputtext-sm p-d-block p-mb-2\\\" placeholder=\\\"Small\\\" />\\n                        <InputText type=\\\"text\\\" className=\\\"p-d-block p-mb-2\\\" placeholder=\\\"Normal\\\" />\\n                        <InputText type=\\\"text\\\" className=\\\"p-inputtext-lg p-d-block\\\"  placeholder=\\\"Large\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { InputText } from 'primereact/inputtext';\\n\\nconst InputTextDemo = () => {\\n    const [value1, setValue1] = useState('');\\n    const [value2, setValue2] = useState('');\\n    const [value3, setValue3] = useState('');\\n    const [value4, setValue4] = useState('');\\n    const [value5, setValue5] = useState('');\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <InputText value={value1} onChange={(e) => setValue1(e.target.value)} />\\n                <span className=\\\"p-ml-2\\\">{value1}</span>\\n\\n                <h5>Floating Label</h5>\\n                <span className=\\\"p-float-label\\\">\\n                    <InputText id=\\\"username\\\" value={value2} onChange={(e) => setValue2(e.target.value)} />\\n                    <label htmlFor=\\\"username\\\">Username</label>\\n                </span>\\n\\n                <h5>Left Icon</h5>\\n                <span className=\\\"p-input-icon-left\\\">\\n                    <i className=\\\"pi pi-search\\\" />\\n                    <InputText value={value3} onChange={(e) => setValue3(e.target.value)} placeholder=\\\"Search\\\" />\\n                </span>\\n\\n                <h5>Right Icon</h5>\\n                <span className=\\\"p-input-icon-right\\\">\\n                    <i className=\\\"pi pi-spin pi-spinner\\\" />\\n                    <InputText value={value4} onChange={(e) => setValue4(e.target.value)} />\\n                </span>\\n\\n                <h5>Help Text</h5>\\n                <div className=\\\"p-field\\\">\\n                    <label htmlFor=\\\"username1\\\" className=\\\"p-d-block\\\">Username</label>\\n                    <InputText id=\\\"username1\\\" aria-describedby=\\\"username1-help\\\" className=\\\"p-d-block\\\"/>\\n                    <small id=\\\"username1-help\\\" className=\\\"p-d-block\\\">Enter your username to reset your password.</small>\\n                </div>\\n\\n                <h5>Invalid</h5>\\n                <div className=\\\"p-field\\\">\\n                    <label htmlFor=\\\"username2\\\" className=\\\"p-d-block\\\">Username</label>\\n                    <InputText id=\\\"username2\\\" aria-describedby=\\\"username2-help\\\" className=\\\"p-invalid p-d-block\\\" />\\n                    <small id=\\\"username2-help\\\" className=\\\"p-error p-d-block\\\">Username is not available.</small>\\n                </div>\\n\\n                <h5>Disabled</h5>\\n                <InputText value={value5} disabled />\\n\\n                <h5>Sizes</h5>\\n                <div className=\\\"sizes\\\">\\n                    <InputText type=\\\"text\\\" className=\\\"p-inputtext-sm p-d-block p-mb-2\\\" placeholder=\\\"Small\\\" />\\n                    <InputText type=\\\"text\\\" className=\\\"p-d-block p-mb-2\\\" placeholder=\\\"Normal\\\" />\\n                    <InputText type=\\\"text\\\" className=\\\"p-inputtext-lg p-d-block\\\"  placeholder=\\\"Large\\\" />\\n                </div>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { InputText } from 'primereact/inputtext';\\n\\nconst InputTextDemo = () => {\\n    const [value1, setValue1] = useState('');\\n    const [value2, setValue2] = useState('');\\n    const [value3, setValue3] = useState('');\\n    const [value4, setValue4] = useState('');\\n    const [value5, setValue5] = useState('');\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <InputText value={value1} onChange={(e) => setValue1(e.target.value)} />\\n                <span className=\\\"p-ml-2\\\">{value1}</span>\\n\\n                <h5>Floating Label</h5>\\n                <span className=\\\"p-float-label\\\">\\n                    <InputText id=\\\"username\\\" value={value2} onChange={(e) => setValue2(e.target.value)} />\\n                    <label htmlFor=\\\"username\\\">Username</label>\\n                </span>\\n\\n                <h5>Left Icon</h5>\\n                <span className=\\\"p-input-icon-left\\\">\\n                    <i className=\\\"pi pi-search\\\" />\\n                    <InputText value={value3} onChange={(e) => setValue3(e.target.value)} placeholder=\\\"Search\\\" />\\n                </span>\\n\\n                <h5>Right Icon</h5>\\n                <span className=\\\"p-input-icon-right\\\">\\n                    <i className=\\\"pi pi-spin pi-spinner\\\" />\\n                    <InputText value={value4} onChange={(e) => setValue4(e.target.value)} />\\n                </span>\\n\\n                <h5>Help Text</h5>\\n                <div className=\\\"p-field\\\">\\n                    <label htmlFor=\\\"username1\\\" className=\\\"p-d-block\\\">Username</label>\\n                    <InputText id=\\\"username1\\\" aria-describedby=\\\"username1-help\\\" className=\\\"p-d-block\\\"/>\\n                    <small id=\\\"username1-help\\\" className=\\\"p-d-block\\\">Enter your username to reset your password.</small>\\n                </div>\\n\\n                <h5>Invalid</h5>\\n                <div className=\\\"p-field\\\">\\n                    <label htmlFor=\\\"username2\\\" className=\\\"p-d-block\\\">Username</label>\\n                    <InputText id=\\\"username2\\\" aria-describedby=\\\"username2-help\\\" className=\\\"p-invalid p-d-block\\\" />\\n                    <small id=\\\"username2-help\\\" className=\\\"p-error p-d-block\\\">Username is not available.</small>\\n                </div>\\n\\n                <h5>Disabled</h5>\\n                <InputText value={value5} disabled />\\n\\n                <h5>Sizes</h5>\\n                <div className=\\\"sizes\\\">\\n                    <InputText type=\\\"text\\\" className=\\\"p-inputtext-sm p-d-block p-mb-2\\\" placeholder=\\\"Small\\\" />\\n                    <InputText type=\\\"text\\\" className=\\\"p-d-block p-mb-2\\\" placeholder=\\\"Normal\\\" />\\n                    <InputText type=\\\"text\\\" className=\\\"p-inputtext-lg p-d-block\\\"  placeholder=\\\"Large\\\" />\\n                </div>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(InputTextDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 1\n        }\n      }, \"\\nimport { InputText } from 'primereact/inputtext';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }\n      }, \"InputText is used as a controlled input with \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 73\n        }\n      }, \"value\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 90\n        }\n      }, \"onChange\"), \" properties.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 1\n        }\n      }, \"\\n<InputText value={value} onChange={(e) => setValue(e.target.value)} />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }\n      }, \"Float Label\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }, \"A floating label is implemented by wrapping the input and the label inside a container having \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 122\n        }\n      }, \".p-float-label\"), \" style class.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 1\n        }\n      }, \"\\n<span className=\\\"p-float-label\\\">\\n    <InputText id=\\\"in\\\" value={value} onChange={(e) => setValue(e.target.value)} />\\n    <label htmlFor=\\\"in\\\">Username</label>\\n</span>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }\n      }, \"KeyFilter\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }, \"InputText has built-in key filtering support to block certain keys, refer to \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/keyfilter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 105\n        }\n      }, \"keyfilter\"), \" page for more information.\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, \"InputText passes any valid attribute to the underlying input element. Extended properties are as follows;\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 41\n        }\n      }, \"keyfilter\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 41\n        }\n      }, \"string/regex\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 41\n        }\n      }, \"Format definition of the keys to block.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 41\n        }\n      }, \"validateOnly\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 41\n        }\n      }, \"When enabled, instead of blocking keys, input is validated internally to test against the regular expression.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 41\n        }\n      }, \"tooltip\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 41\n        }\n      }, \"Content of the tooltip.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 41\n        }\n      }, \"tooltipOptions\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 41\n        }\n      }, \"object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 41\n        }\n      }, \"Configuration of the tooltip, refer to the tooltip documentation for more information.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }\n      }, \"Following is the list of structural style classes, for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 105\n        }\n      }, \"theming\"), \" page.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 41\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 41\n        }\n      }, \"p-inputtext\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 41\n        }\n      }, \"Input element\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }\n      }, \"None.\")), useLiveEditorTabs({\n        name: 'InputTextDemo',\n        sources: this.sources\n      })));\n    }\n  }]);\n\n  return InputTextDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/inputtext/InputTextDoc.js"],"names":["React","Component","Link","TabView","TabPanel","useLiveEditorTabs","CodeHighlight","InputTextDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\n\r\nexport class InputTextDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nexport class InputTextDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value1: '',\r\n            value2: '',\r\n            value3: '',\r\n            value4: '',\r\n            value5: ''\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <InputText value={this.state.value1} onChange={(e) => this.setState({value1: e.target.value})} />\r\n                    <span className=\"p-ml-2\">{this.state.value1}</span>\r\n\r\n                    <h5>Floating Label</h5>\r\n                    <span className=\"p-float-label\">\r\n                        <InputText id=\"username\" value={this.state.value2} onChange={(e) => this.setState({value2: e.target.value})} />\r\n                        <label htmlFor=\"username\">Username</label>\r\n                    </span>\r\n\r\n                    <h5>Left Icon</h5>\r\n                    <span className=\"p-input-icon-left\">\r\n                        <i className=\"pi pi-search\" />\r\n                        <InputText value={this.state.value3} onChange={(e) => this.setState({value3: e.target.value})} placeholder=\"Search\" />\r\n                    </span>\r\n\r\n                    <h5>Right Icon</h5>\r\n                    <span className=\"p-input-icon-right\">\r\n                        <i className=\"pi pi-spin pi-spinner\" />\r\n                        <InputText value={this.state.value4} onChange={(e) => this.setState({value4: e.target.value})} />\r\n                    </span>\r\n\r\n                    <h5>Help Text</h5>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"username1\" className=\"p-d-block\">Username</label>\r\n                        <InputText id=\"username1\" aria-describedby=\"username1-help\" className=\"p-d-block\"/>\r\n                        <small id=\"username1-help\" className=\"p-d-block\">Enter your username to reset your password.</small>\r\n                    </div>\r\n\r\n                    <h5>Invalid</h5>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"username2\" className=\"p-d-block\">Username</label>\r\n                        <InputText id=\"username2\" aria-describedby=\"username2-help\" className=\"p-invalid p-d-block\" />\r\n                        <small id=\"username2-help\" className=\"p-error p-d-block\">Username is not available.</small>\r\n                    </div>\r\n\r\n                    <h5>Disabled</h5>\r\n                    <InputText value={this.state.value5} disabled />\r\n\r\n                    <h5>Sizes</h5>\r\n                    <div className=\"sizes\">\r\n                        <InputText type=\"text\" className=\"p-inputtext-sm p-d-block p-mb-2\" placeholder=\"Small\" />\r\n                        <InputText type=\"text\" className=\"p-d-block p-mb-2\" placeholder=\"Normal\" />\r\n                        <InputText type=\"text\" className=\"p-inputtext-lg p-d-block\"  placeholder=\"Large\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nconst InputTextDemo = () => {\r\n    const [value1, setValue1] = useState('');\r\n    const [value2, setValue2] = useState('');\r\n    const [value3, setValue3] = useState('');\r\n    const [value4, setValue4] = useState('');\r\n    const [value5, setValue5] = useState('');\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <InputText value={value1} onChange={(e) => setValue1(e.target.value)} />\r\n                <span className=\"p-ml-2\">{value1}</span>\r\n\r\n                <h5>Floating Label</h5>\r\n                <span className=\"p-float-label\">\r\n                    <InputText id=\"username\" value={value2} onChange={(e) => setValue2(e.target.value)} />\r\n                    <label htmlFor=\"username\">Username</label>\r\n                </span>\r\n\r\n                <h5>Left Icon</h5>\r\n                <span className=\"p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <InputText value={value3} onChange={(e) => setValue3(e.target.value)} placeholder=\"Search\" />\r\n                </span>\r\n\r\n                <h5>Right Icon</h5>\r\n                <span className=\"p-input-icon-right\">\r\n                    <i className=\"pi pi-spin pi-spinner\" />\r\n                    <InputText value={value4} onChange={(e) => setValue4(e.target.value)} />\r\n                </span>\r\n\r\n                <h5>Help Text</h5>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"username1\" className=\"p-d-block\">Username</label>\r\n                    <InputText id=\"username1\" aria-describedby=\"username1-help\" className=\"p-d-block\"/>\r\n                    <small id=\"username1-help\" className=\"p-d-block\">Enter your username to reset your password.</small>\r\n                </div>\r\n\r\n                <h5>Invalid</h5>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"username2\" className=\"p-d-block\">Username</label>\r\n                    <InputText id=\"username2\" aria-describedby=\"username2-help\" className=\"p-invalid p-d-block\" />\r\n                    <small id=\"username2-help\" className=\"p-error p-d-block\">Username is not available.</small>\r\n                </div>\r\n\r\n                <h5>Disabled</h5>\r\n                <InputText value={value5} disabled />\r\n\r\n                <h5>Sizes</h5>\r\n                <div className=\"sizes\">\r\n                    <InputText type=\"text\" className=\"p-inputtext-sm p-d-block p-mb-2\" placeholder=\"Small\" />\r\n                    <InputText type=\"text\" className=\"p-d-block p-mb-2\" placeholder=\"Normal\" />\r\n                    <InputText type=\"text\" className=\"p-inputtext-lg p-d-block\"  placeholder=\"Large\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nconst InputTextDemo = () => {\r\n    const [value1, setValue1] = useState('');\r\n    const [value2, setValue2] = useState('');\r\n    const [value3, setValue3] = useState('');\r\n    const [value4, setValue4] = useState('');\r\n    const [value5, setValue5] = useState('');\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <InputText value={value1} onChange={(e) => setValue1(e.target.value)} />\r\n                <span className=\"p-ml-2\">{value1}</span>\r\n\r\n                <h5>Floating Label</h5>\r\n                <span className=\"p-float-label\">\r\n                    <InputText id=\"username\" value={value2} onChange={(e) => setValue2(e.target.value)} />\r\n                    <label htmlFor=\"username\">Username</label>\r\n                </span>\r\n\r\n                <h5>Left Icon</h5>\r\n                <span className=\"p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <InputText value={value3} onChange={(e) => setValue3(e.target.value)} placeholder=\"Search\" />\r\n                </span>\r\n\r\n                <h5>Right Icon</h5>\r\n                <span className=\"p-input-icon-right\">\r\n                    <i className=\"pi pi-spin pi-spinner\" />\r\n                    <InputText value={value4} onChange={(e) => setValue4(e.target.value)} />\r\n                </span>\r\n\r\n                <h5>Help Text</h5>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"username1\" className=\"p-d-block\">Username</label>\r\n                    <InputText id=\"username1\" aria-describedby=\"username1-help\" className=\"p-d-block\"/>\r\n                    <small id=\"username1-help\" className=\"p-d-block\">Enter your username to reset your password.</small>\r\n                </div>\r\n\r\n                <h5>Invalid</h5>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"username2\" className=\"p-d-block\">Username</label>\r\n                    <InputText id=\"username2\" aria-describedby=\"username2-help\" className=\"p-invalid p-d-block\" />\r\n                    <small id=\"username2-help\" className=\"p-error p-d-block\">Username is not available.</small>\r\n                </div>\r\n\r\n                <h5>Disabled</h5>\r\n                <InputText value={value5} disabled />\r\n\r\n                <h5>Sizes</h5>\r\n                <div className=\"sizes\">\r\n                    <InputText type=\"text\" className=\"p-inputtext-sm p-d-block p-mb-2\" placeholder=\"Small\" />\r\n                    <InputText type=\"text\" className=\"p-d-block p-mb-2\" placeholder=\"Normal\" />\r\n                    <InputText type=\"text\" className=\"p-inputtext-lg p-d-block\"  placeholder=\"Large\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { InputText } from 'primereact/inputtext';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>InputText is used as a controlled input with <i>value</i> and <i>onChange</i> properties.</p>\r\n<CodeHighlight>\r\n{`\r\n<InputText value={value} onChange={(e) => setValue(e.target.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Float Label</h5>\r\n                        <p>A floating label is implemented by wrapping the input and the label inside a container having <i>.p-float-label</i> style class.</p>\r\n<CodeHighlight>\r\n{`\r\n<span className=\"p-float-label\">\r\n    <InputText id=\"in\" value={value} onChange={(e) => setValue(e.target.value)} />\r\n    <label htmlFor=\"in\">Username</label>\r\n</span>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>KeyFilter</h5>\r\n                        <p>InputText has built-in key filtering support to block certain keys, refer to <Link to=\"/keyfilter\">keyfilter</Link> page for more information.</p>\r\n\r\n                        <h5>Properties</h5>\r\n                        <p>InputText passes any valid attribute to the underlying input element. Extended properties are as follows;</p>\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>keyfilter</td>\r\n                                        <td>string/regex</td>\r\n                                        <td>null</td>\r\n                                        <td>Format definition of the keys to block.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>validateOnly</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When enabled, instead of blocking keys, input is validated internally to test against the regular expression.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltip</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Content of the tooltip.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltipOptions</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\">theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-inputtext</td>\r\n                                        <td>Input element</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'InputTextDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}