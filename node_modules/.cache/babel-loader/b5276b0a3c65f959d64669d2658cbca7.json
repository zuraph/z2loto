{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{classNames}from'../utils/ClassNames';import DomHandler from'../utils/DomHandler';export var TreeTableScrollableView=/*#__PURE__*/function(_Component){_inherits(TreeTableScrollableView,_Component);var _super=_createSuper(TreeTableScrollableView);function TreeTableScrollableView(props){var _this;_classCallCheck(this,TreeTableScrollableView);_this=_super.call(this,props);_this.onHeaderScroll=_this.onHeaderScroll.bind(_assertThisInitialized(_this));_this.onBodyScroll=_this.onBodyScroll.bind(_assertThisInitialized(_this));return _this;}_createClass(TreeTableScrollableView,[{key:\"componentDidMount\",value:function componentDidMount(){this.setScrollHeight();if(!this.props.frozen){var scrollBarWidth=DomHandler.calculateScrollbarWidth();this.scrollHeaderBox.style.marginRight=scrollBarWidth+'px';if(this.scrollFooterBox){this.scrollFooterBox.style.marginRight=scrollBarWidth+'px';}}else{this.scrollBody.style.paddingBottom=DomHandler.calculateScrollbarWidth()+'px';}}},{key:\"setScrollHeight\",value:function setScrollHeight(){if(this.props.scrollHeight){if(this.props.scrollHeight.indexOf('%')!==-1){var datatableContainer=this.findDataTableContainer(this.container);this.scrollBody.style.visibility='hidden';this.scrollBody.style.height='100px';//temporary height to calculate static height\nvar containerHeight=DomHandler.getOuterHeight(datatableContainer);var relativeHeight=DomHandler.getOuterHeight(datatableContainer.parentElement)*parseInt(this.props.scrollHeight,10)/100;var staticHeight=containerHeight-100;//total height of headers, footers, paginators\nvar scrollBodyHeight=relativeHeight-staticHeight;this.scrollBody.style.height='auto';this.scrollBody.style.maxHeight=scrollBodyHeight+'px';this.scrollBody.style.visibility='visible';}else{this.scrollBody.style.maxHeight=this.props.scrollHeight;}}}},{key:\"findDataTableContainer\",value:function findDataTableContainer(element){if(element){var el=element;while(el&&!DomHandler.hasClass(el,'p-treetable')){el=el.parentElement;}return el;}else{return null;}}},{key:\"onHeaderScroll\",value:function onHeaderScroll(){this.scrollHeader.scrollLeft=0;}},{key:\"onBodyScroll\",value:function onBodyScroll(){var frozenView=this.container.previousElementSibling;var frozenScrollBody;if(frozenView){frozenScrollBody=DomHandler.findSingle(frozenView,'.p-treetable-scrollable-body');}this.scrollHeaderBox.style.marginLeft=-1*this.scrollBody.scrollLeft+'px';if(this.scrollFooterBox){this.scrollFooterBox.style.marginLeft=-1*this.scrollBody.scrollLeft+'px';}if(frozenScrollBody){frozenScrollBody.scrollTop=this.scrollBody.scrollTop;}}},{key:\"calculateRowHeight\",value:function calculateRowHeight(){var row=DomHandler.findSingle(this.scrollTable,'tr:not(.p-treetable-emptymessage-row)');if(row){this.rowHeight=DomHandler.getOuterHeight(row);}}},{key:\"renderColGroup\",value:function renderColGroup(){if(this.props.columns&&this.props.columns.length){return/*#__PURE__*/React.createElement(\"colgroup\",{className:\"p-treetable-scrollable-colgroup\"},this.props.columns.map(function(col,i){return/*#__PURE__*/React.createElement(\"col\",{key:col.field+'_'+i});}));}else{return null;}}},{key:\"render\",value:function render(){var _this2=this;var className=classNames('p-treetable-scrollable-view',{'p-treetable-frozen-view':this.props.frozen,'p-treetable-unfrozen-view':!this.props.frozen&&this.props.frozenWidth});var width=this.props.frozen?this.props.frozenWidth:'calc(100% - '+this.props.frozenWidth+')';var left=this.props.frozen?null:this.props.frozenWidth;var colGroup=this.renderColGroup();var scrollableBodyStyle=!this.props.frozen&&this.props.scrollHeight?{overflowY:'scroll'}:null;return/*#__PURE__*/React.createElement(\"div\",{className:className,style:{width:width,left:left},ref:function ref(el){_this2.container=el;}},/*#__PURE__*/React.createElement(\"div\",{className:\"p-treetable-scrollable-header\",ref:function ref(el){_this2.scrollHeader=el;},onScroll:this.onHeaderScroll},/*#__PURE__*/React.createElement(\"div\",{className:\"p-treetable-scrollable-header-box\",ref:function ref(el){_this2.scrollHeaderBox=el;}},/*#__PURE__*/React.createElement(\"table\",{className:\"p-treetable-scrollable-header-table\"},colGroup,this.props.header))),/*#__PURE__*/React.createElement(\"div\",{className:\"p-treetable-scrollable-body\",ref:function ref(el){_this2.scrollBody=el;},style:scrollableBodyStyle,onScroll:this.onBodyScroll},/*#__PURE__*/React.createElement(\"table\",{ref:function ref(el){_this2.scrollTable=el;},style:{top:'0'},className:\"p-treetable-scrollable-body-table\"},colGroup,this.props.body)),/*#__PURE__*/React.createElement(\"div\",{className:\"p-treetable-scrollable-footer\",ref:function ref(el){_this2.scrollFooter=el;}},/*#__PURE__*/React.createElement(\"div\",{className:\"p-treetable-scrollable-footer-box\",ref:function ref(el){_this2.scrollFooterBox=el;}},/*#__PURE__*/React.createElement(\"table\",{className:\"p-treetable-scrollable-footer-table\"},colGroup,this.props.footer))));}}]);return TreeTableScrollableView;}(Component);TreeTableScrollableView.defaultProps={header:null,body:null,footer:null,columns:null,frozen:null,frozenWidth:null,frozenBody:null};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/treetable/TreeTableScrollableView.js"],"names":["React","Component","classNames","DomHandler","TreeTableScrollableView","props","onHeaderScroll","bind","onBodyScroll","setScrollHeight","frozen","scrollBarWidth","calculateScrollbarWidth","scrollHeaderBox","style","marginRight","scrollFooterBox","scrollBody","paddingBottom","scrollHeight","indexOf","datatableContainer","findDataTableContainer","container","visibility","height","containerHeight","getOuterHeight","relativeHeight","parentElement","parseInt","staticHeight","scrollBodyHeight","maxHeight","element","el","hasClass","scrollHeader","scrollLeft","frozenView","previousElementSibling","frozenScrollBody","findSingle","marginLeft","scrollTop","row","scrollTable","rowHeight","columns","length","map","col","i","field","className","frozenWidth","width","left","colGroup","renderColGroup","scrollableBodyStyle","overflowY","header","top","body","scrollFooter","footer","defaultProps","frozenBody"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport DomHandler from '../utils/DomHandler';\r\n\r\nexport class TreeTableScrollableView extends Component {\r\n\r\n     static defaultProps = {\r\n        header: null,\r\n        body: null,\r\n        footer: null,\r\n        columns: null,\r\n        frozen: null,\r\n        frozenWidth: null,\r\n        frozenBody: null\r\n     }\r\n\r\n    static propTypes = {\r\n        header: PropTypes.any,\r\n        body: PropTypes.any,\r\n        footer: PropTypes.any,\r\n        columns: PropTypes.array,\r\n        frozen: PropTypes.bool,\r\n        frozenWidth: PropTypes.string,\r\n        frozenBody: PropTypes.any\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onHeaderScroll = this.onHeaderScroll.bind(this);\r\n        this.onBodyScroll = this.onBodyScroll.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setScrollHeight();\r\n\r\n        if (!this.props.frozen) {\r\n            let scrollBarWidth = DomHandler.calculateScrollbarWidth();\r\n\r\n            this.scrollHeaderBox.style.marginRight = scrollBarWidth + 'px';\r\n            if(this.scrollFooterBox) {\r\n                this.scrollFooterBox.style.marginRight = scrollBarWidth + 'px';\r\n            }\r\n        }\r\n        else {\r\n            this.scrollBody.style.paddingBottom = DomHandler.calculateScrollbarWidth() + 'px';\r\n        }\r\n    }\r\n\r\n    setScrollHeight() {\r\n        if(this.props.scrollHeight) {\r\n            if(this.props.scrollHeight.indexOf('%') !== -1) {\r\n                let datatableContainer = this.findDataTableContainer(this.container);\r\n                this.scrollBody.style.visibility = 'hidden';\r\n                this.scrollBody.style.height = '100px';         //temporary height to calculate static height\r\n                let containerHeight = DomHandler.getOuterHeight(datatableContainer);\r\n                let relativeHeight = DomHandler.getOuterHeight(datatableContainer.parentElement) * parseInt(this.props.scrollHeight, 10) / 100;\r\n                let staticHeight = containerHeight - 100;       //total height of headers, footers, paginators\r\n                let scrollBodyHeight = (relativeHeight - staticHeight);\r\n\r\n                this.scrollBody.style.height = 'auto';\r\n                this.scrollBody.style.maxHeight = scrollBodyHeight + 'px';\r\n                this.scrollBody.style.visibility = 'visible';\r\n            }\r\n            else {\r\n                this.scrollBody.style.maxHeight = this.props.scrollHeight;\r\n            }\r\n        }\r\n    }\r\n\r\n    findDataTableContainer(element) {\r\n        if(element) {\r\n            let el = element;\r\n            while(el && !DomHandler.hasClass(el, 'p-treetable')) {\r\n                el = el.parentElement;\r\n            }\r\n\r\n            return el;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onHeaderScroll() {\r\n        this.scrollHeader.scrollLeft = 0;\r\n    }\r\n\r\n    onBodyScroll() {\r\n        let frozenView = this.container.previousElementSibling;\r\n        let frozenScrollBody;\r\n        if(frozenView) {\r\n            frozenScrollBody = DomHandler.findSingle(frozenView, '.p-treetable-scrollable-body');\r\n        }\r\n\r\n        this.scrollHeaderBox.style.marginLeft = -1 * this.scrollBody.scrollLeft + 'px';\r\n        if(this.scrollFooterBox) {\r\n            this.scrollFooterBox.style.marginLeft = -1 * this.scrollBody.scrollLeft + 'px';\r\n        }\r\n\r\n        if(frozenScrollBody) {\r\n            frozenScrollBody.scrollTop = this.scrollBody.scrollTop;\r\n        }\r\n    }\r\n\r\n    calculateRowHeight() {\r\n        let row = DomHandler.findSingle(this.scrollTable, 'tr:not(.p-treetable-emptymessage-row)');\r\n        if(row) {\r\n            this.rowHeight = DomHandler.getOuterHeight(row);\r\n        }\r\n    }\r\n\r\n    renderColGroup() {\r\n        if(this.props.columns && this.props.columns.length) {\r\n            return (\r\n                <colgroup className=\"p-treetable-scrollable-colgroup\">\r\n                    {this.props.columns.map((col, i) => <col key={col.field + '_' + i} />)}\r\n                </colgroup>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-treetable-scrollable-view', {'p-treetable-frozen-view': this.props.frozen, 'p-treetable-unfrozen-view': !this.props.frozen && this.props.frozenWidth});\r\n        let width = this.props.frozen ? this.props.frozenWidth : 'calc(100% - ' + this.props.frozenWidth + ')';\r\n        let left = this.props.frozen ? null : this.props.frozenWidth;\r\n        let colGroup = this.renderColGroup();\r\n        let scrollableBodyStyle = !this.props.frozen && this.props.scrollHeight ? { overflowY: 'scroll' } : null;\r\n\r\n        return (\r\n            <div className={className} style={{width: width, left: left}} ref={(el) => { this.container = el; }}>\r\n                <div className=\"p-treetable-scrollable-header\" ref={(el) => { this.scrollHeader= el; }} onScroll={this.onHeaderScroll}>\r\n                    <div className=\"p-treetable-scrollable-header-box\" ref={(el) => { this.scrollHeaderBox = el; }}>\r\n                        <table className=\"p-treetable-scrollable-header-table\">\r\n                            {colGroup}\r\n                            {this.props.header}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-treetable-scrollable-body\" ref={(el) => { this.scrollBody = el; }} style={scrollableBodyStyle} onScroll={this.onBodyScroll}>\r\n                    <table ref={(el) => { this.scrollTable = el; }} style={{top:'0'}} className=\"p-treetable-scrollable-body-table\">\r\n                        {colGroup}\r\n                        {this.props.body}\r\n                    </table>\r\n                </div>\r\n                <div className=\"p-treetable-scrollable-footer\" ref={(el) => { this.scrollFooter = el; }}>\r\n                    <div className=\"p-treetable-scrollable-footer-box\" ref={(el) => { this.scrollFooterBox = el; }}>\r\n                         <table className=\"p-treetable-scrollable-footer-table\">\r\n                            {colGroup}\r\n                            {this.props.footer}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}