{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import ReactDOM from'react-dom';import{classNames}from'../utils/ClassNames';import{CSSTransition}from'react-transition-group';var ColorPickerPanelComponent=/*#__PURE__*/function(_Component){_inherits(ColorPickerPanelComponent,_Component);var _super=_createSuper(ColorPickerPanelComponent);function ColorPickerPanelComponent(){_classCallCheck(this,ColorPickerPanelComponent);return _super.apply(this,arguments);}_createClass(ColorPickerPanelComponent,[{key:\"renderElement\",value:function renderElement(){var className=classNames('p-colorpicker-panel',{'p-colorpicker-overlay-panel':!this.props.inline,'p-disabled':this.props.disabled});return/*#__PURE__*/React.createElement(CSSTransition,{nodeRef:this.props.forwardRef,classNames:\"p-connected-overlay\",in:this.props.in,timeout:{enter:120,exit:100},unmountOnExit:true,onEnter:this.props.onEnter,onEntered:this.props.onEntered,onExit:this.props.onExit},/*#__PURE__*/React.createElement(\"div\",{ref:this.props.forwardRef,className:className,onClick:this.props.onClick},this.props.children));}},{key:\"render\",value:function render(){var element=this.renderElement();if(this.props.appendTo){return ReactDOM.createPortal(element,this.props.appendTo);}else{return element;}}}]);return ColorPickerPanelComponent;}(Component);ColorPickerPanelComponent.defaultProps={appendTo:null,inline:false,disabled:false,onClick:null};export var ColorPickerPanel=React.forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(ColorPickerPanelComponent,Object.assign({forwardRef:ref},props));});","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/colorpicker/ColorPickerPanel.js"],"names":["React","Component","ReactDOM","classNames","CSSTransition","ColorPickerPanelComponent","className","props","inline","disabled","forwardRef","in","enter","exit","onEnter","onEntered","onExit","onClick","children","element","renderElement","appendTo","createPortal","defaultProps","ColorPickerPanel","ref"],"mappings":"wsBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,aAAT,KAA8B,wBAA9B,C,GAEMC,CAAAA,yB,mUAgBF,wBAAgB,CACZ,GAAIC,CAAAA,SAAS,CAAGH,UAAU,CAAC,qBAAD,CAAwB,CAC9C,8BAA+B,CAAC,KAAKI,KAAL,CAAWC,MADG,CAE9C,aAAc,KAAKD,KAAL,CAAWE,QAFqB,CAAxB,CAA1B,CAKA,mBACI,oBAAC,aAAD,EAAe,OAAO,CAAE,KAAKF,KAAL,CAAWG,UAAnC,CAA+C,UAAU,CAAC,qBAA1D,CAAgF,EAAE,CAAE,KAAKH,KAAL,CAAWI,EAA/F,CAAmG,OAAO,CAAE,CAAEC,KAAK,CAAE,GAAT,CAAcC,IAAI,CAAE,GAApB,CAA5G,CACI,aAAa,KADjB,CACkB,OAAO,CAAE,KAAKN,KAAL,CAAWO,OADtC,CAC+C,SAAS,CAAE,KAAKP,KAAL,CAAWQ,SADrE,CACgF,MAAM,CAAE,KAAKR,KAAL,CAAWS,MADnG,eAEI,2BAAK,GAAG,CAAE,KAAKT,KAAL,CAAWG,UAArB,CAAiC,SAAS,CAAEJ,SAA5C,CAAuD,OAAO,CAAE,KAAKC,KAAL,CAAWU,OAA3E,EACK,KAAKV,KAAL,CAAWW,QADhB,CAFJ,CADJ,CAQH,C,sBAED,iBAAS,CACL,GAAIC,CAAAA,OAAO,CAAG,KAAKC,aAAL,EAAd,CAEA,GAAI,KAAKb,KAAL,CAAWc,QAAf,CAAyB,CACrB,MAAOnB,CAAAA,QAAQ,CAACoB,YAAT,CAAsBH,OAAtB,CAA+B,KAAKZ,KAAL,CAAWc,QAA1C,CAAP,CACH,CAFD,IAGK,CACD,MAAOF,CAAAA,OAAP,CACH,CACJ,C,uCAzCmClB,S,EAAlCI,yB,CAEKkB,Y,CAAe,CAClBF,QAAQ,CAAE,IADQ,CAElBb,MAAM,CAAE,KAFU,CAGlBC,QAAQ,CAAE,KAHQ,CAIlBQ,OAAO,CAAE,IAJS,C,CA0C1B,MAAO,IAAMO,CAAAA,gBAAgB,CAAGxB,KAAK,CAACU,UAAN,CAAiB,SAACH,KAAD,CAAQkB,GAAR,qBAAgB,oBAAC,yBAAD,gBAA2B,UAAU,CAAEA,GAAvC,EAAgDlB,KAAhD,EAAhB,EAAjB,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass ColorPickerPanelComponent extends Component {\r\n\r\n    static defaultProps = {\r\n        appendTo: null,\r\n        inline: false,\r\n        disabled: false,\r\n        onClick: null\r\n    }\r\n\r\n    static propTypes = {\r\n        appendTo: PropTypes.any,\r\n        inline: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        onClick: PropTypes.func\r\n    }\r\n\r\n    renderElement() {\r\n        let className = classNames('p-colorpicker-panel', {\r\n            'p-colorpicker-overlay-panel': !this.props.inline,\r\n            'p-disabled': this.props.disabled\r\n        });\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.props.forwardRef} classNames=\"p-connected-overlay\" in={this.props.in} timeout={{ enter: 120, exit: 100 }}\r\n                unmountOnExit onEnter={this.props.onEnter} onEntered={this.props.onEntered} onExit={this.props.onExit}>\r\n                <div ref={this.props.forwardRef} className={className} onClick={this.props.onClick}>\r\n                    {this.props.children}\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let element = this.renderElement();\r\n\r\n        if (this.props.appendTo) {\r\n            return ReactDOM.createPortal(element, this.props.appendTo);\r\n        }\r\n        else {\r\n            return element;\r\n        }\r\n    }\r\n}\r\n\r\nexport const ColorPickerPanel = React.forwardRef((props, ref) => <ColorPickerPanelComponent forwardRef={ref} {...props} />);\r\n"]},"metadata":{},"sourceType":"module"}