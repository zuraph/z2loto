{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var EditorDoc=/*#__PURE__*/function(_Component){_inherits(EditorDoc,_Component);var _super=_createSuper(EditorDoc);function EditorDoc(props){var _this;_classCallCheck(this,EditorDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Editor } from 'primereact/editor';\\n\\nexport class EditorDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            text1: '<div>Hello World!</div><div>PrimeReact <b>Editor</b> Rocks</div><div><br></div>',\\n            text2: ''\\n        };\\n    }\\n\\n    renderHeader() {\\n        return (\\n            <span className=\\\"ql-formats\\\">\\n                <button className=\\\"ql-bold\\\" aria-label=\\\"Bold\\\"></button>\\n                <button className=\\\"ql-italic\\\" aria-label=\\\"Italic\\\"></button>\\n                <button className=\\\"ql-underline\\\" aria-label=\\\"Underline\\\"></button>\\n            </span>\\n        );\\n    }\\n\\n    render() {\\n        const header = this.renderHeader();\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Default</h5>\\n                    <Editor style={{ height: '320px' }} value={this.state.text1} onTextChange={(e) => this.setState({ text1: e.htmlValue })} />\\n\\n                    <h5>Customized</h5>\\n                    <Editor headerTemplate={header} style={{ height: '320px' }} value={this.state.text2} onTextChange={(e) => this.setState({ text2: e.htmlValue })} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Editor } from 'primereact/editor';\\n\\nconst EditorDemo = () => {\\n    const [text1, setText1] = useState('<div>Hello World!</div><div>PrimeReact <b>Editor</b> Rocks</div><div><br></div>');\\n    const [text2, setText2] = useState('');\\n\\n    const renderHeader = () => {\\n        return (\\n            <span className=\\\"ql-formats\\\">\\n                <button className=\\\"ql-bold\\\" aria-label=\\\"Bold\\\"></button>\\n                <button className=\\\"ql-italic\\\" aria-label=\\\"Italic\\\"></button>\\n                <button className=\\\"ql-underline\\\" aria-label=\\\"Underline\\\"></button>\\n            </span>\\n        );\\n    }\\n\\n    const header = renderHeader();\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Default</h5>\\n                <Editor style={{ height: '320px' }} value={text1} onTextChange={(e) => setText1(e.htmlValue)} />\\n\\n                <h5>Customized</h5>\\n                <Editor headerTemplate={header} style={{ height: '320px' }} value={text2} onTextChange={(e) => setText2(e.htmlValue)} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Editor } from 'primereact/editor';\\n\\nconst EditorDemo = () => {\\n    const [text1, setText1] = useState<string>('<div>Hello World!</div><div>PrimeReact <b>Editor</b> Rocks</div><div><br></div>');\\n    const [text2, setText2] = useState<string>('');\\n\\n    const renderHeader = () => {\\n        return (\\n            <span className=\\\"ql-formats\\\">\\n                <button className=\\\"ql-bold\\\" aria-label=\\\"Bold\\\"></button>\\n                <button className=\\\"ql-italic\\\" aria-label=\\\"Italic\\\"></button>\\n                <button className=\\\"ql-underline\\\" aria-label=\\\"Underline\\\"></button>\\n            </span>\\n        );\\n    }\\n\\n    const header = renderHeader();\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Default</h5>\\n                <Editor style={{ height: '320px' }} value={text1} onTextChange={(e) => setText1(e.htmlValue)} />\\n\\n                <h5>Customized</h5>\\n                <Editor headerTemplate={header} style={{ height: '320px' }} value={text2} onTextChange={(e) => setText2(e.htmlValue)} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this;}_createClass(EditorDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { Editor } from 'primereact/editor';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"Editor is used as a controlled component with \",/*#__PURE__*/React.createElement(\"i\",null,\"value\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onTextChange\"),\" properties.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Editor style={{height:'320px'}} value={text} onTextChange={(e) => setText(e.htmlValue)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Toolbar\"),/*#__PURE__*/React.createElement(\"p\",null,\"Editor provides a default toolbar with common options, to customize it define your elements with the \",/*#__PURE__*/React.createElement(\"i\",null,\"headerTemplate\"),\". Refer to \",/*#__PURE__*/React.createElement(\"a\",{href:\"http://quilljs.com/docs/modules/toolbar/\"},\"Quill documentation\"),\" for available controls.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\nconst header = (\\n    <span className=\\\"ql-formats\\\">\\n        <button className=\\\"ql-bold\\\" aria-label=\\\"Bold\\\"></button>\\n        <button className=\\\"ql-italic\\\" aria-label=\\\"Italic\\\"></button>\\n        <button className=\\\"ql-underline\\\" aria-label=\\\"Underline\\\"></button>\\n    </span>\\n);\\n\\n<Editor style={{height:'320px'}} value={text} onTextChange={(e) => setText(e.htmlValue)} headerTemplate={header}/>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the content.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the container.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the container.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"placeholder\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Placeholder text to show when editor is empty.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"readOnly\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether to instantiate the editor to read-only mode.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"modules\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Modules configuration, see \",/*#__PURE__*/React.createElement(\"a\",{href:\"http://quilljs.com/docs/modules/\"},\"here\"),\" for available options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"formats\"),/*#__PURE__*/React.createElement(\"td\",null,\"string[]\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whitelist of formats to display, see \",/*#__PURE__*/React.createElement(\"a\",{href:\"http://quilljs.com/docs/formats/\"},\"here\"),\" for available options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"headerTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style and modules of the toolbar.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onTextChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.delta: Representation of the change.\",/*#__PURE__*/React.createElement(\"br\",null),\"event.source: Source of change. Will be either \\\"user\\\" or \\\"api\\\".\",/*#__PURE__*/React.createElement(\"br\",null),\"event.htmlValue: Current value as html.\",/*#__PURE__*/React.createElement(\"br\",null),\"event.textValue: Current value as text.\",/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when text of editor changes.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onSelectionChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.range: Object with index and length keys indicating where the selection exists.\",/*#__PURE__*/React.createElement(\"br\",null),\"event.oldRange: Object with index and length keys indicating where the previous selection was.\",/*#__PURE__*/React.createElement(\"br\",null),\"event.source: Source of change. Will be either \\\"user\\\" or \\\"api\\\".\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when selected text of editor changes.\"))))),/*#__PURE__*/React.createElement(\"p\",null,\"Refer to \",/*#__PURE__*/React.createElement(\"a\",{href:\"http://beta.quilljs.com/docs/api/#events\"},\"Quill documentation\"),\" for more information.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-editor-container\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-editor-toolbar\"),/*#__PURE__*/React.createElement(\"td\",null,\"Toolbar of the editor\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-editor-content\"),/*#__PURE__*/React.createElement(\"td\",null,\"Editable area\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"http://quilljs.com\"},\"Quill\"),\" Editor 1.3+.\"),/*#__PURE__*/React.createElement(\"p\",null,\"Resources of quill needs to be added to your application.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nnpm install quill --save\\n\")),useLiveEditorTabs({name:'EditorDemo',sources:this.sources,dependencies:{\"quill\":\"1.3.7\"}})));}}]);return EditorDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/editor/EditorDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","EditorDoc","props","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class EditorDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Editor } from 'primereact/editor';\r\n\r\nexport class EditorDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text1: '<div>Hello World!</div><div>PrimeReact <b>Editor</b> Rocks</div><div><br></div>',\r\n            text2: ''\r\n        };\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <span className=\"ql-formats\">\r\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Default</h5>\r\n                    <Editor style={{ height: '320px' }} value={this.state.text1} onTextChange={(e) => this.setState({ text1: e.htmlValue })} />\r\n\r\n                    <h5>Customized</h5>\r\n                    <Editor headerTemplate={header} style={{ height: '320px' }} value={this.state.text2} onTextChange={(e) => this.setState({ text2: e.htmlValue })} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Editor } from 'primereact/editor';\r\n\r\nconst EditorDemo = () => {\r\n    const [text1, setText1] = useState('<div>Hello World!</div><div>PrimeReact <b>Editor</b> Rocks</div><div><br></div>');\r\n    const [text2, setText2] = useState('');\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <span className=\"ql-formats\">\r\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const header = renderHeader();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Default</h5>\r\n                <Editor style={{ height: '320px' }} value={text1} onTextChange={(e) => setText1(e.htmlValue)} />\r\n\r\n                <h5>Customized</h5>\r\n                <Editor headerTemplate={header} style={{ height: '320px' }} value={text2} onTextChange={(e) => setText2(e.htmlValue)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Editor } from 'primereact/editor';\r\n\r\nconst EditorDemo = () => {\r\n    const [text1, setText1] = useState<string>('<div>Hello World!</div><div>PrimeReact <b>Editor</b> Rocks</div><div><br></div>');\r\n    const [text2, setText2] = useState<string>('');\r\n\r\n    const renderHeader = () => {\r\n        return (\r\n            <span className=\"ql-formats\">\r\n                <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const header = renderHeader();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Default</h5>\r\n                <Editor style={{ height: '320px' }} value={text1} onTextChange={(e) => setText1(e.htmlValue)} />\r\n\r\n                <h5>Customized</h5>\r\n                <Editor headerTemplate={header} style={{ height: '320px' }} value={text2} onTextChange={(e) => setText2(e.htmlValue)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Editor } from 'primereact/editor';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Editor is used as a controlled component with <i>value</i> and <i>onTextChange</i> properties.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Editor style={{height:'320px'}} value={text} onTextChange={(e) => setText(e.htmlValue)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Toolbar</h5>\r\n                        <p>Editor provides a default toolbar with common options, to customize it define your elements with the <i>headerTemplate</i>. Refer to <a href=\"http://quilljs.com/docs/modules/toolbar/\">Quill documentation</a> for available controls.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\nconst header = (\r\n    <span className=\"ql-formats\">\r\n        <button className=\"ql-bold\" aria-label=\"Bold\"></button>\r\n        <button className=\"ql-italic\" aria-label=\"Italic\"></button>\r\n        <button className=\"ql-underline\" aria-label=\"Underline\"></button>\r\n    </span>\r\n);\r\n\r\n<Editor style={{height:'320px'}} value={text} onTextChange={(e) => setText(e.htmlValue)} headerTemplate={header}/>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>value</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Value of the content.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the container.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the container.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>placeholder</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Placeholder text to show when editor is empty.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>readOnly</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Whether to instantiate the editor to read-only mode.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>modules</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Modules configuration, see <a href=\"http://quilljs.com/docs/modules/\">here</a> for available options.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>formats</td>\r\n                                        <td>string[]</td>\r\n                                        <td>null</td>\r\n                                        <td>Whitelist of formats to display, see <a href=\"http://quilljs.com/docs/formats/\">here</a> for available options.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>headerTemplate</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Style and modules of the toolbar.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onTextChange</td>\r\n                                        <td>event.delta: Representation of the change.<br />\r\n                                        event.source: Source of change. Will be either \"user\" or \"api\".<br />\r\n                                        event.htmlValue: Current value as html.<br />\r\n                                        event.textValue: Current value as text.<br /></td>\r\n                                        <td>Callback to invoke when text of editor changes.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onSelectionChange</td>\r\n                                        <td>event.range: Object with index and length keys indicating where the selection exists.<br />\r\n                                        event.oldRange: Object with index and length keys indicating where the previous selection was.<br />\r\n                                        event.source: Source of change. Will be either \"user\" or \"api\".</td>\r\n                                        <td>Callback to invoke when selected text of editor changes.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <p>Refer to <a href=\"http://beta.quilljs.com/docs/api/#events\">Quill documentation</a> for more information.</p>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-editor-container</td>\r\n                                        <td>Container element</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-editor-toolbar</td>\r\n                                        <td>Toolbar of the editor</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-editor-content</td>\r\n                                        <td>Editable area</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p><a href=\"http://quilljs.com\">Quill</a> Editor 1.3+.</p>\r\n                        <p>Resources of quill needs to be added to your application.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nnpm install quill --save\r\n`}\r\n</CodeHighlight>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'EditorDemo', sources: this.sources, dependencies: { \"quill\": \"1.3.7\" } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}