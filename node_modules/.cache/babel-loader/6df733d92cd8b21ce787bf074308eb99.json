{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView}from'../../components/tabview/TabView';import{Chart}from'../../components/chart/Chart';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import AppContentContext from'../../AppContentContext';export var LineChartDemo=/*#__PURE__*/function(_Component){_inherits(LineChartDemo,_Component);var _super=_createSuper(LineChartDemo);function LineChartDemo(props){var _this;_classCallCheck(this,LineChartDemo);_this=_super.call(this,props);_this.basicData={labels:['January','February','March','April','May','June','July'],datasets:[{label:'First Dataset',data:[65,59,80,81,56,55,40],fill:false,borderColor:'#42A5F5'},{label:'Second Dataset',data:[28,48,40,19,86,27,90],fill:false,borderColor:'#FFA726'}]};_this.multiAxisData={labels:['January','February','March','April','May','June','July'],datasets:[{label:'Dataset 1',fill:false,borderColor:'#42A5F5',yAxisID:'y-axis-1',data:[65,59,80,81,56,55,10]},{label:'Dataset 2',fill:false,borderColor:'#00bb7e',yAxisID:'y-axis-2',data:[28,48,40,19,86,27,90]}]};_this.lineStylesData={labels:['January','February','March','April','May','June','July'],datasets:[{label:'First Dataset',data:[65,59,80,81,56,55,40],fill:false,borderColor:'#42A5F5'},{label:'Second Dataset',data:[28,48,40,19,86,27,90],fill:false,borderDash:[5,5],borderColor:'#66BB6A'},{label:'Third Dataset',data:[12,51,62,33,21,62,45],fill:true,borderColor:'#FFA726',backgroundColor:'rgba(255,167,38,0.2)'}]};_this.options={'light':_this.getLightTheme(),'dark':_this.getDarkTheme()};return _this;}_createClass(LineChartDemo,[{key:\"getLightTheme\",value:function getLightTheme(){var basicOptions={legend:{labels:{fontColor:'#495057'}},scales:{xAxes:[{ticks:{fontColor:'#495057'}}],yAxes:[{ticks:{fontColor:'#495057'}}]}};var multiAxisOptions={responsive:true,hoverMode:'index',stacked:false,scales:{xAxes:[{ticks:{fontColor:'#495057'},gridLines:{color:'#ebedef'}}],yAxes:[{type:'linear',display:true,position:'left',id:'y-axis-1',ticks:{fontColor:'#495057'},gridLines:{color:'#ebedef'}},{type:'linear',display:true,position:'right',id:'y-axis-2',ticks:{fontColor:'#495057'},gridLines:{drawOnChartArea:false,color:'#ebedef'}}]},legend:{labels:{fontColor:'#495057'}}};return{basicOptions:basicOptions,multiAxisOptions:multiAxisOptions};}},{key:\"getDarkTheme\",value:function getDarkTheme(){var basicOptions={legend:{labels:{fontColor:'#ebedef'}},scales:{xAxes:[{ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}],yAxes:[{ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}]}};var multiAxisOptions={responsive:true,hoverMode:'index',stacked:false,scales:{xAxes:[{ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}],yAxes:[{type:'linear',display:true,position:'left',id:'y-axis-1',ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}},{type:'linear',display:true,position:'right',id:'y-axis-2',ticks:{fontColor:'#ebedef'},gridLines:{drawOnChartArea:false,color:'rgba(255,255,255,0.2)'}}]},legend:{labels:{fontColor:'#ebedef'}}};return{basicOptions:basicOptions,multiAxisOptions:multiAxisOptions};}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"chart\"},/*#__PURE__*/React.createElement(\"h1\",null,\"LineChart\"),/*#__PURE__*/React.createElement(\"p\",null,\"A line chart or line graph is a type of chart which displays information as a series of data points called 'markers' connected by straight line segments.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(AppContentContext.Consumer,null,function(context){var _this2$options$=_this2.options[\"\".concat(context.darkTheme?'dark':'light')],basicOptions=_this2$options$.basicOptions,multiAxisOptions=_this2$options$.multiAxisOptions;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Basic\"),/*#__PURE__*/React.createElement(Chart,{type:\"line\",data:_this2.basicData,options:basicOptions})),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Multi Axis\"),/*#__PURE__*/React.createElement(Chart,{type:\"line\",data:_this2.multiAxisData,options:multiAxisOptions})),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Line Styles\"),/*#__PURE__*/React.createElement(Chart,{type:\"line\",data:_this2.lineStylesData,options:basicOptions})));})),/*#__PURE__*/React.createElement(LineChartDemoDoc,null));}}]);return LineChartDemo;}(Component);export var LineChartDemoDoc=/*#__PURE__*/function(_Component2){_inherits(LineChartDemoDoc,_Component2);var _super2=_createSuper(LineChartDemoDoc);function LineChartDemoDoc(props){var _this3;_classCallCheck(this,LineChartDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class LineChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.basicData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                {\\n                    label: 'First Dataset',\\n                    data: [65, 59, 80, 81, 56, 55, 40],\\n                    fill: false,\\n                    borderColor: '#42A5F5'\\n                },\\n                {\\n                    label: 'Second Dataset',\\n                    data: [28, 48, 40, 19, 86, 27, 90],\\n                    fill: false,\\n                    borderColor: '#FFA726'\\n                }\\n            ]\\n        };\\n\\n        this.multiAxisData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [{\\n                label: 'Dataset 1',\\n                fill: false,\\n                borderColor: '#42A5F5',\\n                yAxisID: 'y-axis-1',\\n                data: [65, 59, 80, 81, 56, 55, 10]\\n            }, {\\n                label: 'Dataset 2',\\n                fill: false,\\n                borderColor: '#00bb7e',\\n                yAxisID: 'y-axis-2',\\n                data: [28, 48, 40, 19, 86, 27, 90]\\n            }]\\n        };\\n\\n        this.lineStylesData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                {\\n                    label: 'First Dataset',\\n                    data: [65, 59, 80, 81, 56, 55, 40],\\n                    fill: false,\\n                    borderColor: '#42A5F5'\\n                },\\n                {\\n                    label: 'Second Dataset',\\n                    data: [28, 48, 40, 19, 86, 27, 90],\\n                    fill: false,\\n                    borderDash: [5, 5],\\n                    borderColor: '#66BB6A'\\n                },\\n                {\\n                    label: 'Third Dataset',\\n                    data: [12, 51, 62, 33, 21, 62, 45],\\n                    fill: true,\\n                    borderColor: '#FFA726',\\n                    backgroundColor: 'rgba(255,167,38,0.2)'\\n                }\\n            ]\\n        };\\n\\n        this.options = this.getLightTheme();\\n    }\\n\\n    getLightTheme() {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            hoverMode: 'index',\\n            stacked: false,\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }, {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    render() {\\n        const { basicOptions, multiAxisOptions } = this.options;\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <Chart type=\\\"line\\\" data={this.basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multi Axis</h5>\\n                    <Chart type=\\\"line\\\" data={this.multiAxisData} options={multiAxisOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Line Styles</h5>\\n                    <Chart type=\\\"line\\\" data={this.lineStylesData} options={basicOptions} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst LineChartDemo = () => {\\n    const basicData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'First Dataset',\\n                data: [65, 59, 80, 81, 56, 55, 40],\\n                fill: false,\\n                borderColor: '#42A5F5'\\n            },\\n            {\\n                label: 'Second Dataset',\\n                data: [28, 48, 40, 19, 86, 27, 90],\\n                fill: false,\\n                borderColor: '#FFA726'\\n            }\\n        ]\\n    };\\n\\n    const multiAxisData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            label: 'Dataset 1',\\n            fill: false,\\n            borderColor: '#42A5F5',\\n            yAxisID: 'y-axis-1',\\n            data: [65, 59, 80, 81, 56, 55, 10]\\n        }, {\\n            label: 'Dataset 2',\\n            fill: false,\\n            borderColor: '#00bb7e',\\n            yAxisID: 'y-axis-2',\\n            data: [28, 48, 40, 19, 86, 27, 90]\\n        }]\\n    };\\n\\n    const lineStylesData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'First Dataset',\\n                data: [65, 59, 80, 81, 56, 55, 40],\\n                fill: false,\\n                borderColor: '#42A5F5'\\n            },\\n            {\\n                label: 'Second Dataset',\\n                data: [28, 48, 40, 19, 86, 27, 90],\\n                fill: false,\\n                borderDash: [5, 5],\\n                borderColor: '#66BB6A'\\n            },\\n            {\\n                label: 'Third Dataset',\\n                data: [12, 51, 62, 33, 21, 62, 45],\\n                fill: true,\\n                borderColor: '#FFA726',\\n                backgroundColor: 'rgba(255,167,38,0.2)'\\n            }\\n        ]\\n    };\\n\\n    const getLightTheme = () => {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            hoverMode: 'index',\\n            stacked: false,\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }, {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    const { basicOptions, multiAxisOptions } = getLightTheme();\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Chart type=\\\"line\\\" data={basicData} options={basicOptions} />\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multi Axis</h5>\\n                <Chart type=\\\"line\\\" data={multiAxisData} options={multiAxisOptions} />\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Line Styles</h5>\\n                <Chart type=\\\"line\\\" data={lineStylesData} options={basicOptions} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst LineChartDemo = () => {\\n    const basicData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'First Dataset',\\n                data: [65, 59, 80, 81, 56, 55, 40],\\n                fill: false,\\n                borderColor: '#42A5F5'\\n            },\\n            {\\n                label: 'Second Dataset',\\n                data: [28, 48, 40, 19, 86, 27, 90],\\n                fill: false,\\n                borderColor: '#FFA726'\\n            }\\n        ]\\n    };\\n\\n    const multiAxisData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            label: 'Dataset 1',\\n            fill: false,\\n            borderColor: '#42A5F5',\\n            yAxisID: 'y-axis-1',\\n            data: [65, 59, 80, 81, 56, 55, 10]\\n        }, {\\n            label: 'Dataset 2',\\n            fill: false,\\n            borderColor: '#00bb7e',\\n            yAxisID: 'y-axis-2',\\n            data: [28, 48, 40, 19, 86, 27, 90]\\n        }]\\n    };\\n\\n    const lineStylesData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'First Dataset',\\n                data: [65, 59, 80, 81, 56, 55, 40],\\n                fill: false,\\n                borderColor: '#42A5F5'\\n            },\\n            {\\n                label: 'Second Dataset',\\n                data: [28, 48, 40, 19, 86, 27, 90],\\n                fill: false,\\n                borderDash: [5, 5],\\n                borderColor: '#66BB6A'\\n            },\\n            {\\n                label: 'Third Dataset',\\n                data: [12, 51, 62, 33, 21, 62, 45],\\n                fill: true,\\n                borderColor: '#FFA726',\\n                backgroundColor: 'rgba(255,167,38,0.2)'\\n            }\\n        ]\\n    };\\n\\n    const getLightTheme = () => {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            hoverMode: 'index',\\n            stacked: false,\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }, {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    const { basicOptions, multiAxisOptions } = getLightTheme();\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Chart type=\\\"line\\\" data={basicData} options={basicOptions} />\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multi Axis</h5>\\n                <Chart type=\\\"line\\\" data={multiAxisData} options={multiAxisOptions} />\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Line Styles</h5>\\n                <Chart type=\\\"line\\\" data={lineStylesData} options={basicOptions} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this3;}_createClass(LineChartDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'LineChartDemo',sources:this.sources,dependencies:{'chart.js':'2.7.3'}})));}}]);return LineChartDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/chart/LineChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","LineChartDemo","props","basicData","labels","datasets","label","data","fill","borderColor","multiAxisData","yAxisID","lineStylesData","borderDash","backgroundColor","options","getLightTheme","getDarkTheme","basicOptions","legend","fontColor","scales","xAxes","ticks","yAxes","multiAxisOptions","responsive","hoverMode","stacked","gridLines","color","type","display","position","id","drawOnChartArea","context","darkTheme","LineChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class LineChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.basicData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    borderColor: '#42A5F5'\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    borderColor: '#FFA726'\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.multiAxisData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                label: 'Dataset 1',\r\n                fill: false,\r\n                borderColor: '#42A5F5',\r\n                yAxisID: 'y-axis-1',\r\n                data: [65, 59, 80, 81, 56, 55, 10]\r\n            }, {\r\n                label: 'Dataset 2',\r\n                fill: false,\r\n                borderColor: '#00bb7e',\r\n                yAxisID: 'y-axis-2',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }]\r\n        };\r\n\r\n        this.lineStylesData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    borderColor: '#42A5F5'\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    borderDash: [5, 5],\r\n                    borderColor: '#66BB6A'\r\n                },\r\n                {\r\n                    label: 'Third Dataset',\r\n                    data: [12, 51, 62, 33, 21, 62, 45],\r\n                    fill: true,\r\n                    borderColor: '#FFA726',\r\n                    backgroundColor: 'rgba(255,167,38,0.2)'\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.options = {\r\n            'light': this.getLightTheme(),\r\n            'dark': this.getDarkTheme()\r\n        };\r\n    }\r\n\r\n\r\n    getLightTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    getDarkTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>LineChart</h1>\r\n                        <p>A line chart or line graph is a type of chart which displays information as a series of data points called 'markers' connected by straight line segments.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <AppContentContext.Consumer>\r\n                        {\r\n                            context => {\r\n                                const { basicOptions, multiAxisOptions } = this.options[`${context.darkTheme ? 'dark' : 'light'}`];\r\n\r\n                                return (\r\n                                    <>\r\n                                        <div className=\"card\">\r\n                                            <h5>Basic</h5>\r\n                                            <Chart type=\"line\" data={this.basicData} options={basicOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Multi Axis</h5>\r\n                                            <Chart type=\"line\" data={this.multiAxisData} options={multiAxisOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Line Styles</h5>\r\n                                            <Chart type=\"line\" data={this.lineStylesData} options={basicOptions} />\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        }\r\n                    </AppContentContext.Consumer>\r\n                </div>\r\n\r\n                <LineChartDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class LineChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class LineChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.basicData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    borderColor: '#42A5F5'\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    borderColor: '#FFA726'\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.multiAxisData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                label: 'Dataset 1',\r\n                fill: false,\r\n                borderColor: '#42A5F5',\r\n                yAxisID: 'y-axis-1',\r\n                data: [65, 59, 80, 81, 56, 55, 10]\r\n            }, {\r\n                label: 'Dataset 2',\r\n                fill: false,\r\n                borderColor: '#00bb7e',\r\n                yAxisID: 'y-axis-2',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }]\r\n        };\r\n\r\n        this.lineStylesData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    borderColor: '#42A5F5'\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    borderDash: [5, 5],\r\n                    borderColor: '#66BB6A'\r\n                },\r\n                {\r\n                    label: 'Third Dataset',\r\n                    data: [12, 51, 62, 33, 21, 62, 45],\r\n                    fill: true,\r\n                    borderColor: '#FFA726',\r\n                    backgroundColor: 'rgba(255,167,38,0.2)'\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.options = this.getLightTheme();\r\n    }\r\n\r\n    getLightTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { basicOptions, multiAxisOptions } = this.options;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <Chart type=\"line\" data={this.basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multi Axis</h5>\r\n                    <Chart type=\"line\" data={this.multiAxisData} options={multiAxisOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Line Styles</h5>\r\n                    <Chart type=\"line\" data={this.lineStylesData} options={basicOptions} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst LineChartDemo = () => {\r\n    const basicData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderColor: '#FFA726'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const multiAxisData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            label: 'Dataset 1',\r\n            fill: false,\r\n            borderColor: '#42A5F5',\r\n            yAxisID: 'y-axis-1',\r\n            data: [65, 59, 80, 81, 56, 55, 10]\r\n        }, {\r\n            label: 'Dataset 2',\r\n            fill: false,\r\n            borderColor: '#00bb7e',\r\n            yAxisID: 'y-axis-2',\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n        }]\r\n    };\r\n\r\n    const lineStylesData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderDash: [5, 5],\r\n                borderColor: '#66BB6A'\r\n            },\r\n            {\r\n                label: 'Third Dataset',\r\n                data: [12, 51, 62, 33, 21, 62, 45],\r\n                fill: true,\r\n                borderColor: '#FFA726',\r\n                backgroundColor: 'rgba(255,167,38,0.2)'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    const { basicOptions, multiAxisOptions } = getLightTheme();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Chart type=\"line\" data={basicData} options={basicOptions} />\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multi Axis</h5>\r\n                <Chart type=\"line\" data={multiAxisData} options={multiAxisOptions} />\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Line Styles</h5>\r\n                <Chart type=\"line\" data={lineStylesData} options={basicOptions} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst LineChartDemo = () => {\r\n    const basicData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderColor: '#FFA726'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const multiAxisData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            label: 'Dataset 1',\r\n            fill: false,\r\n            borderColor: '#42A5F5',\r\n            yAxisID: 'y-axis-1',\r\n            data: [65, 59, 80, 81, 56, 55, 10]\r\n        }, {\r\n            label: 'Dataset 2',\r\n            fill: false,\r\n            borderColor: '#00bb7e',\r\n            yAxisID: 'y-axis-2',\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n        }]\r\n    };\r\n\r\n    const lineStylesData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderDash: [5, 5],\r\n                borderColor: '#66BB6A'\r\n            },\r\n            {\r\n                label: 'Third Dataset',\r\n                data: [12, 51, 62, 33, 21, 62, 45],\r\n                fill: true,\r\n                borderColor: '#FFA726',\r\n                backgroundColor: 'rgba(255,167,38,0.2)'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    const { basicOptions, multiAxisOptions } = getLightTheme();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Chart type=\"line\" data={basicData} options={basicOptions} />\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multi Axis</h5>\r\n                <Chart type=\"line\" data={multiAxisData} options={multiAxisOptions} />\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Line Styles</h5>\r\n                <Chart type=\"line\" data={lineStylesData} options={basicOptions} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'LineChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}