{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var ConfirmPopupDoc=/*#__PURE__*/function(_Component){_inherits(ConfirmPopupDoc,_Component);var _super=_createSuper(ConfirmPopupDoc);function ConfirmPopupDoc(props){var _this;_classCallCheck(this,ConfirmPopupDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\n\\nexport class ConfirmPopupDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            visible: false\\n        };\\n\\n        this.accept = this.accept.bind(this);\\n        this.reject = this.reject.bind(this);\\n        this.confirm1 = this.confirm1.bind(this);\\n        this.confirm2 = this.confirm2.bind(this);\\n    }\\n\\n    accept() {\\n        this.toast.show({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\\n    }\\n\\n    reject() {\\n        this.toast.show({ severity: 'info', summary: 'Rejected', detail: 'You have rejected', life: 3000 });\\n    }\\n\\n    confirm1(event) {\\n        confirmPopup({\\n            target: event.currentTarget,\\n            message: 'Are you sure you want to proceed?',\\n            icon: 'pi pi-exclamation-triangle',\\n            accept: this.accept,\\n            reject: this.reject\\n        });\\n    }\\n\\n    confirm2(event) {\\n        confirmPopup({\\n            target: event.currentTarget,\\n            message: 'Do you want to delete this record?',\\n            icon: 'pi pi-info-circle',\\n            acceptClassName: 'p-button-danger',\\n            accept: this.accept,\\n            reject: this.reject\\n        });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => this.toast = el} />\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <Button onClick={this.confirm1} icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\" className=\\\"p-mr-2\\\"></Button>\\n                    <Button onClick={this.confirm2} icon=\\\"pi pi-times\\\" label=\\\"Delete\\\" className=\\\"p-button-danger p-button-outlined\\\"></Button>\\n\\n                    <h5>Using ConfirmPopup tag</h5>\\n                    <ConfirmPopup target={document.getElementById('button')} visible={this.state.visible} onHide={() => this.setState({ visible: false })} message=\\\"Are you sure you want to proceed?\\\"\\n                        icon=\\\"pi pi-exclamation-triangle\\\" accept={this.accept} reject={this.reject} />\\n                    <Button id=\\\"button\\\" onClick={() => this.setState({ visible: true })} icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\" />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useRef } from 'react';\\nimport { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\n\\nconst ConfirmPopupDemo = () => {\\n    const [visible, setVisible] = useState(false);\\n    const toast = useRef(null);\\n\\n    const accept = () => {\\n        toast.current.show({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\\n    };\\n\\n    const reject = () => {\\n        toast.current.show({ severity: 'info', summary: 'Rejected', detail: 'You have rejected', life: 3000 });\\n    };\\n\\n    const confirm1 = (event) => {\\n        confirmPopup({\\n            target: event.currentTarget,\\n            message: 'Are you sure you want to proceed?',\\n            icon: 'pi pi-exclamation-triangle',\\n            accept,\\n            reject\\n        });\\n    };\\n\\n    const confirm2 = (event) => {\\n        confirmPopup({\\n            target: event.currentTarget,\\n            message: 'Do you want to delete this record?',\\n            icon: 'pi pi-info-circle',\\n            acceptClassName: 'p-button-danger',\\n            accept,\\n            reject\\n        });\\n    };\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Button onClick={confirm1} icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\" className=\\\"p-mr-2\\\"></Button>\\n                <Button onClick={confirm2} icon=\\\"pi pi-times\\\" label=\\\"Delete\\\" className=\\\"p-button-danger p-button-outlined\\\"></Button>\\n\\n                <h5>Using ConfirmPopup tag</h5>\\n                <ConfirmPopup target={document.getElementById('button')} visible={visible} onHide={() => setVisible(false)} message=\\\"Are you sure you want to proceed?\\\"\\n                    icon=\\\"pi pi-exclamation-triangle\\\" accept={accept} reject={reject} />\\n                <Button id=\\\"button\\\" onClick={() => setVisible(true)} icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\" />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useRef } from 'react';\\nimport { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\n\\nconst ConfirmPopupDemo = () => {\\n    const [visible, setVisible] = useState<boolean>(false);\\n    const toast = useRef(null);\\n\\n    const accept = () => {\\n        toast.current.show({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\\n    };\\n\\n    const reject = () => {\\n        toast.current.show({ severity: 'info', summary: 'Rejected', detail: 'You have rejected', life: 3000 });\\n    };\\n\\n    const confirm1 = (event) => {\\n        confirmPopup({\\n            target: event.currentTarget,\\n            message: 'Are you sure you want to proceed?',\\n            icon: 'pi pi-exclamation-triangle',\\n            accept,\\n            reject\\n        });\\n    };\\n\\n    const confirm2 = (event) => {\\n        confirmPopup({\\n            target: event.currentTarget,\\n            message: 'Do you want to delete this record?',\\n            icon: 'pi pi-info-circle',\\n            acceptClassName: 'p-button-danger',\\n            accept,\\n            reject\\n        });\\n    };\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Button onClick={confirm1} icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\" className=\\\"p-mr-2\\\"></Button>\\n                <Button onClick={confirm2} icon=\\\"pi pi-times\\\" label=\\\"Delete\\\" className=\\\"p-button-danger p-button-outlined\\\"></Button>\\n\\n                <h5>Using ConfirmPopup tag</h5>\\n                <ConfirmPopup target={document.getElementById('button')} visible={visible} onHide={() => setVisible(false)} message=\\\"Are you sure you want to proceed?\\\"\\n                    icon=\\\"pi pi-exclamation-triangle\\\" accept={accept} reject={reject} />\\n                <Button id=\\\"button\\\" onClick={() => setVisible(true)} icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\" />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this;}_createClass(ConfirmPopupDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { ConfirmPopup } from 'primereact/confirmpopup'; // To use <ConfirmPopup> tag\\nimport { confirmPopup } from 'primereact/confirmpopup'; // To use confirmPopup method\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"There are two ways to display confirm popup. One of them is to use the \",/*#__PURE__*/React.createElement(\"i\",null,\"confirmPopup\"),\" method and the other is to use the \",/*#__PURE__*/React.createElement(\"i\",null,\"<ConfirmPopup>\"),\" tag. These independently create popup element. It supports the same properties in both. \",/*#__PURE__*/React.createElement(\"i\",null,\"target\"),\" property is mandatory to align the popup to its caller.\"),/*#__PURE__*/React.createElement(\"h6\",null,\"1. confirmPopup method\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst confirm = (event) => {\\n    confirmPopup({\\n        target: event.currentTarget,\\n        message: 'Are you sure you want to proceed?',\\n        icon: 'pi pi-exclamation-triangle',\\n        accept: () => acceptFunc(),\\n        reject: () => rejectFunc()\\n    });\\n}\\n\\n<Button onClick={confirm} icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\"></Button>\\n\"),/*#__PURE__*/React.createElement(\"h6\",null,\"2. <ConfirmPopup> tag\"),/*#__PURE__*/React.createElement(\"p\",null,\"ConfirmPopup is used as a container and visibility is managed with \",/*#__PURE__*/React.createElement(\"i\",null,\"visible\"),\" property where \",/*#__PURE__*/React.createElement(\"i\",null,\"onHide\"),\" event is required to update the visibility state.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<ConfirmPopup target={document.getElementById('button')} visible={visible} onHide={() => setVisible(false)} message=\\\"Are you sure you want to proceed?\\\"\\n    icon=\\\"pi pi-exclamation-triangle\\\" accept={accept} reject={reject} />\\n\\n<Button id=\\\"button onClick={() => setVisible(true)} icon=\\\"pi pi-check\\\" label=\\\"Confirm\\\" />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"target\"),/*#__PURE__*/React.createElement(\"td\",null,\"DomElement\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Element to align the overlay. (Required)\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"visible\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Specifies the visibility of the confirm popup.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"message\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Message of the confirmation.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"icon\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon to display next to the message.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"acceptLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"Yes\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the accept button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"rejectLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"No\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the reject button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"acceptIcon\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon of the accept button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"rejectIcon\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon of the reject button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"acceptClassName\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the accept button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"rejectClassName\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the reject button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"dismissable\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Enables to hide the popup when outside is clicked.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"footer\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Footer content of the confirm popup.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"appendTo\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element\"),/*#__PURE__*/React.createElement(\"td\",null,\"document.body\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element instance where the popup should be mounted.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"accept\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to execute when action is confirmed.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"reject\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to execute when action is rejected.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onHide\"),/*#__PURE__*/React.createElement(\"td\",null,\"result: Indicates with which selection the popup was closed. \",/*#__PURE__*/React.createElement(\"br\",null),\"Valid values are 'accept', 'reject' and undefined (outside click).\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when confirm popup is hidden.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\"theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-confirm-popup\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-confirm-content\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-confirm-popup-icon\"),/*#__PURE__*/React.createElement(\"td\",null,\"Message icon.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-confirm-popup-message\"),/*#__PURE__*/React.createElement(\"td\",null,\"Message text.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-confirm-popup-footer\"),/*#__PURE__*/React.createElement(\"td\",null,\"Footer element for buttons.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'ConfirmPopupDemo',sources:this.sources})));}}]);return ConfirmPopupDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/confirmpopup/ConfirmPopupDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","ConfirmPopupDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class ConfirmPopupDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nexport class ConfirmPopupDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.reject = this.reject.bind(this);\r\n        this.confirm1 = this.confirm1.bind(this);\r\n        this.confirm2 = this.confirm2.bind(this);\r\n    }\r\n\r\n    accept() {\r\n        this.toast.show({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\r\n    }\r\n\r\n    reject() {\r\n        this.toast.show({ severity: 'info', summary: 'Rejected', detail: 'You have rejected', life: 3000 });\r\n    }\r\n\r\n    confirm1(event) {\r\n        confirmPopup({\r\n            target: event.currentTarget,\r\n            message: 'Are you sure you want to proceed?',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept: this.accept,\r\n            reject: this.reject\r\n        });\r\n    }\r\n\r\n    confirm2(event) {\r\n        confirmPopup({\r\n            target: event.currentTarget,\r\n            message: 'Do you want to delete this record?',\r\n            icon: 'pi pi-info-circle',\r\n            acceptClassName: 'p-button-danger',\r\n            accept: this.accept,\r\n            reject: this.reject\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => this.toast = el} />\r\n\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <Button onClick={this.confirm1} icon=\"pi pi-check\" label=\"Confirm\" className=\"p-mr-2\"></Button>\r\n                    <Button onClick={this.confirm2} icon=\"pi pi-times\" label=\"Delete\" className=\"p-button-danger p-button-outlined\"></Button>\r\n\r\n                    <h5>Using ConfirmPopup tag</h5>\r\n                    <ConfirmPopup target={document.getElementById('button')} visible={this.state.visible} onHide={() => this.setState({ visible: false })} message=\"Are you sure you want to proceed?\"\r\n                        icon=\"pi pi-exclamation-triangle\" accept={this.accept} reject={this.reject} />\r\n                    <Button id=\"button\" onClick={() => this.setState({ visible: true })} icon=\"pi pi-check\" label=\"Confirm\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useRef } from 'react';\r\nimport { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst ConfirmPopupDemo = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const toast = useRef(null);\r\n\r\n    const accept = () => {\r\n        toast.current.show({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\r\n    };\r\n\r\n    const reject = () => {\r\n        toast.current.show({ severity: 'info', summary: 'Rejected', detail: 'You have rejected', life: 3000 });\r\n    };\r\n\r\n    const confirm1 = (event) => {\r\n        confirmPopup({\r\n            target: event.currentTarget,\r\n            message: 'Are you sure you want to proceed?',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept,\r\n            reject\r\n        });\r\n    };\r\n\r\n    const confirm2 = (event) => {\r\n        confirmPopup({\r\n            target: event.currentTarget,\r\n            message: 'Do you want to delete this record?',\r\n            icon: 'pi pi-info-circle',\r\n            acceptClassName: 'p-button-danger',\r\n            accept,\r\n            reject\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Button onClick={confirm1} icon=\"pi pi-check\" label=\"Confirm\" className=\"p-mr-2\"></Button>\r\n                <Button onClick={confirm2} icon=\"pi pi-times\" label=\"Delete\" className=\"p-button-danger p-button-outlined\"></Button>\r\n\r\n                <h5>Using ConfirmPopup tag</h5>\r\n                <ConfirmPopup target={document.getElementById('button')} visible={visible} onHide={() => setVisible(false)} message=\"Are you sure you want to proceed?\"\r\n                    icon=\"pi pi-exclamation-triangle\" accept={accept} reject={reject} />\r\n                <Button id=\"button\" onClick={() => setVisible(true)} icon=\"pi pi-check\" label=\"Confirm\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useRef } from 'react';\r\nimport { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst ConfirmPopupDemo = () => {\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const toast = useRef(null);\r\n\r\n    const accept = () => {\r\n        toast.current.show({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\r\n    };\r\n\r\n    const reject = () => {\r\n        toast.current.show({ severity: 'info', summary: 'Rejected', detail: 'You have rejected', life: 3000 });\r\n    };\r\n\r\n    const confirm1 = (event) => {\r\n        confirmPopup({\r\n            target: event.currentTarget,\r\n            message: 'Are you sure you want to proceed?',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept,\r\n            reject\r\n        });\r\n    };\r\n\r\n    const confirm2 = (event) => {\r\n        confirmPopup({\r\n            target: event.currentTarget,\r\n            message: 'Do you want to delete this record?',\r\n            icon: 'pi pi-info-circle',\r\n            acceptClassName: 'p-button-danger',\r\n            accept,\r\n            reject\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Button onClick={confirm1} icon=\"pi pi-check\" label=\"Confirm\" className=\"p-mr-2\"></Button>\r\n                <Button onClick={confirm2} icon=\"pi pi-times\" label=\"Delete\" className=\"p-button-danger p-button-outlined\"></Button>\r\n\r\n                <h5>Using ConfirmPopup tag</h5>\r\n                <ConfirmPopup target={document.getElementById('button')} visible={visible} onHide={() => setVisible(false)} message=\"Are you sure you want to proceed?\"\r\n                    icon=\"pi pi-exclamation-triangle\" accept={accept} reject={reject} />\r\n                <Button id=\"button\" onClick={() => setVisible(true)} icon=\"pi pi-check\" label=\"Confirm\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { ConfirmPopup } from 'primereact/confirmpopup'; // To use <ConfirmPopup> tag\r\nimport { confirmPopup } from 'primereact/confirmpopup'; // To use confirmPopup method\r\n`}\r\n</CodeHighlight>\r\n\r\n<h5>Getting Started</h5>\r\n                        <p>There are two ways to display confirm popup. One of them is to use the <i>confirmPopup</i> method and the other is to use the <i>&lt;ConfirmPopup&gt;</i> tag.\r\n                            These independently create popup element. It supports the same properties in both. <i>target</i> property is mandatory to align the popup to its caller.</p>\r\n\r\n                        <h6>1. confirmPopup method</h6>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst confirm = (event) => {\r\n    confirmPopup({\r\n        target: event.currentTarget,\r\n        message: 'Are you sure you want to proceed?',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => acceptFunc(),\r\n        reject: () => rejectFunc()\r\n    });\r\n}\r\n\r\n<Button onClick={confirm} icon=\"pi pi-check\" label=\"Confirm\"></Button>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h6>2. &lt;ConfirmPopup&gt; tag</h6>\r\n                        <p>ConfirmPopup is used as a container and visibility is managed with <i>visible</i> property where <i>onHide</i> event is required to update the visibility state.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<ConfirmPopup target={document.getElementById('button')} visible={visible} onHide={() => setVisible(false)} message=\"Are you sure you want to proceed?\"\r\n    icon=\"pi pi-exclamation-triangle\" accept={accept} reject={reject} />\r\n\r\n<Button id=\"button onClick={() => setVisible(true)} icon=\"pi pi-check\" label=\"Confirm\" />\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>target</td>\r\n                                        <td>DomElement</td>\r\n                                        <td>null</td>\r\n                                        <td>Element to align the overlay. (Required)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>visible</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Specifies the visibility of the confirm popup.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>message</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Message of the confirmation.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>icon</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Icon to display next to the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>acceptLabel</td>\r\n                                        <td>string</td>\r\n                                        <td>Yes</td>\r\n                                        <td>Label of the accept button.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>rejectLabel</td>\r\n                                        <td>string</td>\r\n                                        <td>No</td>\r\n                                        <td>Label of the reject button.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>acceptIcon</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Icon of the accept button.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>rejectIcon</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Icon of the reject button.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>acceptClassName</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the accept button.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>rejectClassName</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the reject button.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>dismissable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Enables to hide the popup when outside is clicked.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>footer</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Footer content of the confirm popup.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>appendTo</td>\r\n                                        <td>DOM element</td>\r\n                                        <td>document.body</td>\r\n                                        <td>DOM element instance where the popup should be mounted.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the element.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>accept</td>\r\n                                        <td>null</td>\r\n                                        <td>Callback to execute when action is confirmed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>reject</td>\r\n                                        <td>null</td>\r\n                                        <td>Callback to execute when action is rejected.</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>onHide</td>\r\n                                        <td>result: Indicates with which selection the popup was closed. <br />\r\n                                            Valid values are 'accept', 'reject' and undefined (outside click).</td>\r\n                                        <td>Callback to invoke when confirm popup is hidden.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\">theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-confirm-popup</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-confirm-content</td>\r\n                                        <td>Content element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-confirm-popup-icon</td>\r\n                                        <td>Message icon.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-confirm-popup-message</td>\r\n                                        <td>Message text.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-confirm-popup-footer</td>\r\n                                        <td>Footer element for buttons.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'ConfirmPopupDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}