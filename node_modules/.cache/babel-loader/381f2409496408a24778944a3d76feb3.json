{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\datatable\\\\DataTableStyleDemo.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from '../../components/datatable/DataTable';\nimport { Column } from '../../components/column/Column';\nimport ProductService from '../service/ProductService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport './DataTableDemo.scss';\nexport var DataTableStyleDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableStyleDemo, _Component);\n\n  var _super = _createSuper(DataTableStyleDemo);\n\n  function DataTableStyleDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableStyleDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      products: []\n    };\n    _this.productService = new ProductService();\n    _this.stockBodyTemplate = _this.stockBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.rowClass = _this.rowClass.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataTableStyleDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.productService.getProductsSmall().then(function (data) {\n        return _this2.setState({\n          products: data\n        });\n      });\n    }\n  }, {\n    key: \"rowClass\",\n    value: function rowClass(data) {\n      return {\n        'row-accessories': data.category === 'Accessories'\n      };\n    }\n  }, {\n    key: \"stockBodyTemplate\",\n    value: function stockBodyTemplate(rowData) {\n      var stockClassName = classNames({\n        'outofstock': rowData.quantity === 0,\n        'lowstock': rowData.quantity > 0 && rowData.quantity < 10,\n        'instock': rowData.quantity > 10\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: stockClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, rowData.quantity);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, \"DataTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 39\n        }\n      }, \"Styling\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"Particular rows and cells can be styled based on data.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation datatable-style-demo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        rowClassName: this.rowClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        body: this.stockBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(DataTableStyleDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataTableStyleDemo;\n}(Component);\nexport var DataTableStyleDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataTableStyleDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataTableStyleDemoDoc);\n\n  function DataTableStyleDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, DataTableStyleDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport classNames from 'classnames';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport './DataTableDemo.css';\\n\\nexport class DataTableStyleDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: []\\n        };\\n\\n        this.productService = new ProductService();\\n        this.stockBodyTemplate = this.stockBodyTemplate.bind(this);\\n        this.rowClass = this.rowClass.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    rowClass(data) {\\n        return {\\n            'row-accessories': data.category === 'Accessories'\\n        }\\n    }\\n\\n    stockBodyTemplate(rowData) {\\n        const stockClassName = classNames({\\n            'outofstock': rowData.quantity === 0,\\n            'lowstock': rowData.quantity > 0 && rowData.quantity < 10,\\n            'instock': rowData.quantity > 10\\n        });\\n\\n        return (\\n            <div className={stockClassName}>\\n                {rowData.quantity}\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"datatable-style-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <DataTable value={this.state.products} rowClassName={this.rowClass}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" body={this.stockBodyTemplate}></Column>\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport classNames from 'classnames';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport './DataTableDemo.css';\\n\\nconst DataTableStyleDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const rowClass = (data) => {\\n        return {\\n            'row-accessories': data.category === 'Accessories'\\n        }\\n    }\\n\\n    const stockBodyTemplate = (rowData) => {\\n        const stockClassName = classNames({\\n            'outofstock': rowData.quantity === 0,\\n            'lowstock': rowData.quantity > 0 && rowData.quantity < 10,\\n            'instock': rowData.quantity > 10\\n        });\\n\\n        return (\\n            <div className={stockClassName}>\\n                {rowData.quantity}\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div className=\\\"datatable-style-demo\\\">\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} rowClassName={rowClass}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" body={stockBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport classNames from 'classnames';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport './DataTableDemo.css';\\n\\nconst DataTableStyleDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const rowClass = (data) => {\\n        return {\\n            'row-accessories': data.category === 'Accessories'\\n        }\\n    }\\n\\n    const stockBodyTemplate = (rowData) => {\\n        const stockClassName = classNames({\\n            'outofstock': rowData.quantity === 0,\\n            'lowstock': rowData.quantity > 0 && rowData.quantity < 10,\\n            'instock': rowData.quantity > 10\\n        });\\n\\n        return (\\n            <div className={stockClassName}>\\n                {rowData.quantity}\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div className=\\\"datatable-style-demo\\\">\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} rowClassName={rowClass}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" body={stockBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    _this3.extFiles = {\n      'src/demo/DataTableDemo.css': {\n        content: \"\\n.datatable-style-demo .outofstock {\\n    font-weight: 700;\\n    color: #FF5252;\\n    text-decoration: line-through;\\n}\\n\\n.datatable-style-demo .lowstock {\\n    font-weight: 700;\\n    color: #FFA726;\\n}\\n\\n.datatable-style-demo .instock {\\n    font-weight: 700;\\n    color: #66BB6A;\\n}\\n\\n.datatable-style-demo .row-accessories {\\n    background-color: rgba(0, 0, 0, 0.15) !important;\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(DataTableStyleDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataTableStyleDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products-small',\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return DataTableStyleDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datatable/DataTableStyleDemo.js"],"names":["React","Component","classNames","DataTable","Column","ProductService","TabView","useLiveEditorTabs","AppInlineHeader","DataTableStyleDemo","props","state","products","productService","stockBodyTemplate","bind","rowClass","getProductsSmall","then","data","setState","category","rowData","stockClassName","quantity","DataTableStyleDemoDoc","sources","tabName","content","extFiles","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './DataTableDemo.scss';\r\n\r\nexport class DataTableStyleDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.stockBodyTemplate = this.stockBodyTemplate.bind(this);\r\n        this.rowClass = this.rowClass.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    rowClass(data) {\r\n        return {\r\n            'row-accessories': data.category === 'Accessories'\r\n        }\r\n    }\r\n\r\n    stockBodyTemplate(rowData) {\r\n        const stockClassName = classNames({\r\n            'outofstock': rowData.quantity === 0,\r\n            'lowstock': rowData.quantity > 0 && rowData.quantity < 10,\r\n            'instock': rowData.quantity > 10\r\n        });\r\n\r\n        return (\r\n            <div className={stockClassName}>\r\n                {rowData.quantity}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Styling</span></h1>\r\n                        <p>Particular rows and cells can be styled based on data.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation datatable-style-demo\">\r\n                    <div className=\"card\">\r\n                        <DataTable value={this.state.products} rowClassName={this.rowClass}>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" body={this.stockBodyTemplate}></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableStyleDemoDoc></DataTableStyleDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableStyleDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport './DataTableDemo.css';\r\n\r\nexport class DataTableStyleDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.stockBodyTemplate = this.stockBodyTemplate.bind(this);\r\n        this.rowClass = this.rowClass.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    rowClass(data) {\r\n        return {\r\n            'row-accessories': data.category === 'Accessories'\r\n        }\r\n    }\r\n\r\n    stockBodyTemplate(rowData) {\r\n        const stockClassName = classNames({\r\n            'outofstock': rowData.quantity === 0,\r\n            'lowstock': rowData.quantity > 0 && rowData.quantity < 10,\r\n            'instock': rowData.quantity > 10\r\n        });\r\n\r\n        return (\r\n            <div className={stockClassName}>\r\n                {rowData.quantity}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"datatable-style-demo\">\r\n                <div className=\"card\">\r\n                    <DataTable value={this.state.products} rowClassName={this.rowClass}>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" body={this.stockBodyTemplate}></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableStyleDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const rowClass = (data) => {\r\n        return {\r\n            'row-accessories': data.category === 'Accessories'\r\n        }\r\n    }\r\n\r\n    const stockBodyTemplate = (rowData) => {\r\n        const stockClassName = classNames({\r\n            'outofstock': rowData.quantity === 0,\r\n            'lowstock': rowData.quantity > 0 && rowData.quantity < 10,\r\n            'instock': rowData.quantity > 10\r\n        });\r\n\r\n        return (\r\n            <div className={stockClassName}>\r\n                {rowData.quantity}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"datatable-style-demo\">\r\n            <div className=\"card\">\r\n                <DataTable value={products} rowClassName={rowClass}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" body={stockBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableStyleDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const rowClass = (data) => {\r\n        return {\r\n            'row-accessories': data.category === 'Accessories'\r\n        }\r\n    }\r\n\r\n    const stockBodyTemplate = (rowData) => {\r\n        const stockClassName = classNames({\r\n            'outofstock': rowData.quantity === 0,\r\n            'lowstock': rowData.quantity > 0 && rowData.quantity < 10,\r\n            'instock': rowData.quantity > 10\r\n        });\r\n\r\n        return (\r\n            <div className={stockClassName}>\r\n                {rowData.quantity}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"datatable-style-demo\">\r\n            <div className=\"card\">\r\n                <DataTable value={products} rowClassName={rowClass}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" body={stockBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'src/demo/DataTableDemo.css': {\r\n                content: `\r\n.datatable-style-demo .outofstock {\r\n    font-weight: 700;\r\n    color: #FF5252;\r\n    text-decoration: line-through;\r\n}\r\n\r\n.datatable-style-demo .lowstock {\r\n    font-weight: 700;\r\n    color: #FFA726;\r\n}\r\n\r\n.datatable-style-demo .instock {\r\n    font-weight: 700;\r\n    color: #66BB6A;\r\n}\r\n\r\n.datatable-style-demo .row-accessories {\r\n    background-color: rgba(0, 0, 0, 0.15) !important;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableStyleDemo', sources: this.sources, service: 'ProductService', data: 'products-small', extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}