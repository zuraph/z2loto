{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TreeTable}from'../../components/treetable/TreeTable';import{Column}from'../../components/column/Column';import{NodeService}from'../service/NodeService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var TreeTableScrollDemo=/*#__PURE__*/function(_Component){_inherits(TreeTableScrollDemo,_Component);var _super=_createSuper(TreeTableScrollDemo);function TreeTableScrollDemo(props){var _this;_classCallCheck(this,TreeTableScrollDemo);_this=_super.call(this,props);_this.state={nodes:[]};_this.nodeservice=new NodeService();return _this;}_createClass(TreeTableScrollDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.nodeservice.getTreeTableNodes().then(function(data){return _this2.setState({nodes:data});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"treeTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"TreeTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Scroll\")),/*#__PURE__*/React.createElement(\"p\",null,\"Scrolling data is available horizontally, vertically or both with optional support for frozen columns.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Vertical\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,scrollable:true,scrollHeight:\"200px\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Horizontal\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,scrollable:true,style:{width:'600px'}},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true,style:{width:'350px'}}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",style:{width:'350px'}}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",style:{width:'350px'}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Horizontal and Vertical\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,scrollable:true,style:{width:'600px'},scrollHeight:\"200px\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true,style:{width:'350px'}}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",style:{width:'350px'}}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",style:{width:'350px'}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Frozen Columns\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,scrollable:true,frozenWidth:\"200px\",scrollHeight:\"250px\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true,frozen:true,style:{width:'250px',height:'57px'}}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",style:{width:'250px',height:'57px'},columnKey:\"size_0\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",style:{width:'250px',height:'57px'},columnKey:\"type_0\"}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",style:{width:'250px',height:'57px'},columnKey:\"size_1\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",style:{width:'250px',height:'57px'},columnKey:\"type_1\"}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",style:{width:'250px',height:'57px'},columnKey:\"size_2\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",style:{width:'250px',height:'57px'},columnKey:\"type_2\"})))),/*#__PURE__*/React.createElement(TreeTableScrollDemoDoc,null));}}]);return TreeTableScrollDemo;}(Component);var TreeTableScrollDemoDoc=/*#__PURE__*/function(_Component2){_inherits(TreeTableScrollDemoDoc,_Component2);var _super2=_createSuper(TreeTableScrollDemoDoc);function TreeTableScrollDemoDoc(props){var _this3;_classCallCheck(this,TreeTableScrollDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport class TreeTableScrollDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes: []\\n        };\\n        this.nodeservice = new NodeService();\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Vertical</h5>\\n                    <TreeTable value={this.state.nodes} scrollable scrollHeight=\\\"200px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal</h5>\\n                    <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal and Vertical</h5>\\n                    <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }} scrollHeight=\\\"200px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Frozen Columns</h5>\\n                    <TreeTable value={this.state.nodes} scrollable frozenWidth=\\\"200px\\\" scrollHeight=\\\"250px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_0\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_0\\\"></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_1\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_1\\\"></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_2\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_2\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableScrollDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Vertical</h5>\\n                <TreeTable value={nodes} scrollable scrollHeight=\\\"200px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Horizontal</h5>\\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Horizontal and Vertical</h5>\\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }} scrollHeight=\\\"200px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Frozen Columns</h5>\\n                <TreeTable value={nodes} scrollable frozenWidth=\\\"200px\\\" scrollHeight=\\\"250px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_0\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_0\\\"></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_1\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_1\\\"></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_2\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_2\\\"></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableScrollDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Vertical</h5>\\n                <TreeTable value={nodes} scrollable scrollHeight=\\\"200px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Horizontal</h5>\\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Horizontal and Vertical</h5>\\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }} scrollHeight=\\\"200px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Frozen Columns</h5>\\n                <TreeTable value={nodes} scrollable frozenWidth=\\\"200px\\\" scrollHeight=\\\"250px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_0\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_0\\\"></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_1\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_1\\\"></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_2\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_2\\\"></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this3;}_createClass(TreeTableScrollDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'TreeTableScrollDemo',sources:this.sources,service:'NodeService',data:'treetablenodes'})));}}]);return TreeTableScrollDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/treetable/TreeTableScrollDemo.js"],"names":["React","Component","TreeTable","Column","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableScrollDemo","props","state","nodes","nodeservice","getTreeTableNodes","then","data","setState","width","height","TreeTableScrollDemoDoc","sources","tabName","content","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class TreeTableScrollDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Scroll</span></h1>\r\n                        <p>Scrolling data is available horizontally, vertically or both with optional support for frozen columns.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Vertical</h5>\r\n                        <TreeTable value={this.state.nodes} scrollable scrollHeight=\"200px\">\r\n                            <Column field=\"name\" header=\"Name\" expander></Column>\r\n                            <Column field=\"size\" header=\"Size\"></Column>\r\n                            <Column field=\"type\" header=\"Type\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Horizontal</h5>\r\n                        <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }}>\r\n                            <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Horizontal and Vertical</h5>\r\n                        <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }} scrollHeight=\"200px\">\r\n                            <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Frozen Columns</h5>\r\n                        <TreeTable value={this.state.nodes} scrollable frozenWidth=\"200px\" scrollHeight=\"250px\">\r\n                            <Column field=\"name\" header=\"Name\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_0\"></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_0\"></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_1\"></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_1\"></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_2\"></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_2\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableScrollDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TreeTableScrollDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport class TreeTableScrollDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Vertical</h5>\r\n                    <TreeTable value={this.state.nodes} scrollable scrollHeight=\"200px\">\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal</h5>\r\n                    <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }}>\r\n                        <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal and Vertical</h5>\r\n                    <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }} scrollHeight=\"200px\">\r\n                        <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Frozen Columns</h5>\r\n                    <TreeTable value={this.state.nodes} scrollable frozenWidth=\"200px\" scrollHeight=\"250px\">\r\n                        <Column field=\"name\" header=\"Name\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_0\"></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_0\"></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_1\"></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_1\"></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_2\"></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_2\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableScrollDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Vertical</h5>\r\n                <TreeTable value={nodes} scrollable scrollHeight=\"200px\">\r\n                    <Column field=\"name\" header=\"Name\" expander></Column>\r\n                    <Column field=\"size\" header=\"Size\"></Column>\r\n                    <Column field=\"type\" header=\"Type\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Horizontal</h5>\r\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }}>\r\n                    <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Horizontal and Vertical</h5>\r\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }} scrollHeight=\"200px\">\r\n                    <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Frozen Columns</h5>\r\n                <TreeTable value={nodes} scrollable frozenWidth=\"200px\" scrollHeight=\"250px\">\r\n                    <Column field=\"name\" header=\"Name\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_0\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_0\"></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_1\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_1\"></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_2\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_2\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableScrollDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Vertical</h5>\r\n                <TreeTable value={nodes} scrollable scrollHeight=\"200px\">\r\n                    <Column field=\"name\" header=\"Name\" expander></Column>\r\n                    <Column field=\"size\" header=\"Size\"></Column>\r\n                    <Column field=\"type\" header=\"Type\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Horizontal</h5>\r\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }}>\r\n                    <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Horizontal and Vertical</h5>\r\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }} scrollHeight=\"200px\">\r\n                    <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Frozen Columns</h5>\r\n                <TreeTable value={nodes} scrollable frozenWidth=\"200px\" scrollHeight=\"250px\">\r\n                    <Column field=\"name\" header=\"Name\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_0\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_0\"></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_1\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_1\"></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_2\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_2\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableScrollDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}