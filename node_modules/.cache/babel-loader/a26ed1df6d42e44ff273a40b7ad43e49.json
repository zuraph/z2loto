{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\confirmpopup\\\\ConfirmPopup.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport { Button } from '../button/Button';\nimport { CSSTransition } from 'react-transition-group';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport DomHandler from '../utils/DomHandler';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { localeOption } from '../api/Locale';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport function confirmPopup(props) {\n  var appendTo = props.appendTo || document.body;\n  var confirmPopupWrapper = document.createDocumentFragment();\n  DomHandler.appendChild(confirmPopupWrapper, appendTo);\n  props = _objectSpread(_objectSpread({}, props), {\n    visible: props.visible === undefined ? true : props.visible\n  });\n  var confirmPopupEl = React.createElement(ConfirmPopup, props);\n  ReactDOM.render(confirmPopupEl, confirmPopupWrapper);\n\n  var updateConfirmPopup = function updateConfirmPopup(newProps) {\n    props = _objectSpread(_objectSpread({}, props), newProps);\n    ReactDOM.render(React.cloneElement(confirmPopupEl, props), confirmPopupWrapper);\n  };\n\n  return {\n    _destroy: function _destroy() {\n      ReactDOM.unmountComponentAtNode(confirmPopupWrapper);\n    },\n    show: function show() {\n      updateConfirmPopup({\n        visible: true,\n        onHide: function onHide() {\n          updateConfirmPopup({\n            visible: false\n          }); // reset\n        }\n      });\n    },\n    hide: function hide() {\n      updateConfirmPopup({\n        visible: false\n      });\n    },\n    update: function update(newProps) {\n      updateConfirmPopup(newProps);\n    }\n  };\n}\nexport var ConfirmPopup = /*#__PURE__*/function (_Component) {\n  _inherits(ConfirmPopup, _Component);\n\n  var _super = _createSuper(ConfirmPopup);\n\n  function ConfirmPopup(props) {\n    var _this;\n\n    _classCallCheck(this, ConfirmPopup);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: false\n    };\n    _this.appendTo = props.appendTo || document.body;\n    _this.reject = _this.reject.bind(_assertThisInitialized(_this));\n    _this.accept = _this.accept.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    _this.onCloseClick = _this.onCloseClick.bind(_assertThisInitialized(_this));\n    _this.onPanelClick = _this.onPanelClick.bind(_assertThisInitialized(_this));\n    _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));\n    _this.onEntered = _this.onEntered.bind(_assertThisInitialized(_this));\n    _this.onExit = _this.onExit.bind(_assertThisInitialized(_this));\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.overlayRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ConfirmPopup, [{\n    key: \"acceptLabel\",\n    value: function acceptLabel() {\n      return this.props.acceptLabel || localeOption('accept');\n    }\n  }, {\n    key: \"rejectLabel\",\n    value: function rejectLabel() {\n      return this.props.rejectLabel || localeOption('reject');\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this2 = this;\n\n      if (!this.documentClickListener && this.props.dismissable) {\n        this.documentClickListener = function (event) {\n          if (!_this2.isPanelClicked && _this2.isOutsideClicked(event.target)) {\n            _this2.hide();\n          }\n\n          _this2.isPanelClicked = false;\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this3 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.props.target, function () {\n          if (_this3.state.visible) {\n            _this3.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"bindResizeListener\",\n    value: function bindResizeListener() {\n      var _this4 = this;\n\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this4.state.visible) {\n            _this4.hide();\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    }\n  }, {\n    key: \"unbindResizeListener\",\n    value: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(target) {\n      return this.overlayRef && this.overlayRef.current && !(this.overlayRef.current.isSameNode(target) || this.overlayRef.current.contains(target));\n    }\n  }, {\n    key: \"onCloseClick\",\n    value: function onCloseClick(event) {\n      this.hide();\n      event.preventDefault();\n    }\n  }, {\n    key: \"onPanelClick\",\n    value: function onPanelClick(event) {\n      this.isPanelClicked = true;\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.props.target\n      });\n    }\n  }, {\n    key: \"accept\",\n    value: function accept() {\n      if (this.props.accept) {\n        this.props.accept();\n      }\n\n      this.hide('accept');\n    }\n  }, {\n    key: \"reject\",\n    value: function reject() {\n      if (this.props.reject) {\n        this.props.reject();\n      }\n\n      this.hide('reject');\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this5 = this;\n\n      this.setState({\n        visible: true\n      }, function () {\n        OverlayEventBus.on('overlay-click', function (e) {\n          if (!_this5.isOutsideClicked(e.target)) {\n            _this5.isPanelClicked = true;\n          }\n        });\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(result) {\n      var _this6 = this;\n\n      this.setState({\n        visible: false\n      }, function () {\n        OverlayEventBus.off('overlay-click');\n\n        if (_this6.props.onHide) {\n          _this6.props.onHide(result);\n        }\n      });\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\n      this.align();\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered() {\n      this.bindDocumentClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n    }\n  }, {\n    key: \"onExit\",\n    value: function onExit() {\n      this.unbindDocumentClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n    }\n  }, {\n    key: \"align\",\n    value: function align() {\n      if (this.props.target) {\n        DomHandler.absolutePosition(this.overlayRef.current, this.props.target);\n        var containerOffset = DomHandler.getOffset(this.overlayRef.current);\n        var targetOffset = DomHandler.getOffset(this.props.target);\n        var arrowLeft = 0;\n\n        if (containerOffset.left < targetOffset.left) {\n          arrowLeft = targetOffset.left - containerOffset.left;\n        }\n\n        this.overlayRef.current.style.setProperty('--overlayArrowLeft', \"\".concat(arrowLeft, \"px\"));\n\n        if (containerOffset.top < targetOffset.top) {\n          DomHandler.addClass(this.overlayRef.current, 'p-confirm-popup-flipped');\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.visible) {\n        this.setState({\n          visible: true\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.setState({\n          visible: this.props.visible\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentClickListener();\n      this.unbindResizeListener();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var iconClassName = classNames('p-confirm-popup-icon', this.props.icon);\n      var message = ObjectUtils.getJSXElement(this.props.message, this.props);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-confirm-popup-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: iconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-confirm-popup-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      }, message));\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var acceptClassName = classNames('p-confirm-popup-accept p-button-sm', this.props.acceptClassName);\n      var rejectClassName = classNames('p-confirm-popup-reject p-button-sm', {\n        'p-button-text': !this.props.rejectClassName\n      }, this.props.rejectClassName);\n      var content = this.props.footer ? ObjectUtils.getJSXElement(this.props.footer, this.props) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: this.rejectLabel(),\n        icon: this.props.rejectIcon,\n        className: rejectClassName,\n        onClick: this.reject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: this.acceptLabel(),\n        icon: this.props.acceptIcon,\n        className: acceptClassName,\n        onClick: this.accept,\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-confirm-popup-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, content);\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement() {\n      var className = classNames('p-confirm-popup p-component', this.props.className);\n      var content = this.renderContent();\n      var footer = this.renderFooter();\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.overlayRef,\n        classNames: \"p-connected-overlay\",\n        in: this.state.visible,\n        timeout: {\n          enter: 120,\n          exit: 100\n        },\n        unmountOnExit: true,\n        onEnter: this.onEnter,\n        onEntered: this.onEntered,\n        onExit: this.onExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.overlayRef,\n        id: this.id,\n        className: className,\n        style: this.props.style,\n        onClick: this.onPanelClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }, content, footer));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderElement();\n      return ReactDOM.createPortal(element, this.appendTo);\n    }\n  }]);\n\n  return ConfirmPopup;\n}(Component);\nConfirmPopup.defaultProps = {\n  target: null,\n  visible: false,\n  message: null,\n  rejectLabel: null,\n  acceptLabel: null,\n  icon: null,\n  rejectIcon: null,\n  acceptIcon: null,\n  rejectClassName: null,\n  acceptClassName: null,\n  className: null,\n  style: null,\n  appendTo: null,\n  dismissable: true,\n  footer: null,\n  onHide: null,\n  accept: null,\n  reject: null\n};\nConfirmPopup.propTypes = {\n  target: PropTypes.any,\n  visible: PropTypes.bool,\n  message: PropTypes.any,\n  rejectLabel: PropTypes.string,\n  acceptLabel: PropTypes.string,\n  icon: PropTypes.string,\n  rejectIcon: PropTypes.string,\n  acceptIcon: PropTypes.string,\n  rejectClassName: PropTypes.string,\n  acceptClassName: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  appendTo: PropTypes.any,\n  dismissable: PropTypes.bool,\n  footer: PropTypes.any,\n  onHide: PropTypes.func,\n  accept: PropTypes.func,\n  reject: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/confirmpopup/ConfirmPopup.js"],"names":["React","Component","ReactDOM","PropTypes","classNames","Button","CSSTransition","UniqueComponentId","ConnectedOverlayScrollHandler","DomHandler","ObjectUtils","localeOption","OverlayEventBus","confirmPopup","props","appendTo","document","body","confirmPopupWrapper","createDocumentFragment","appendChild","visible","undefined","confirmPopupEl","createElement","ConfirmPopup","render","updateConfirmPopup","newProps","cloneElement","_destroy","unmountComponentAtNode","show","onHide","hide","update","state","reject","bind","accept","onCloseClick","onPanelClick","onEnter","onEntered","onExit","id","overlayRef","createRef","acceptLabel","rejectLabel","documentClickListener","dismissable","event","isPanelClicked","isOutsideClicked","target","addEventListener","removeEventListener","scrollHandler","bindScrollListener","unbindScrollListener","resizeListener","window","current","isSameNode","contains","preventDefault","emit","originalEvent","setState","on","e","result","off","style","zIndex","String","generateZIndex","align","bindDocumentClickListener","bindResizeListener","unbindDocumentClickListener","unbindResizeListener","absolutePosition","containerOffset","getOffset","targetOffset","arrowLeft","left","setProperty","top","addClass","prevProps","destroy","iconClassName","icon","message","getJSXElement","acceptClassName","rejectClassName","content","footer","rejectIcon","acceptIcon","className","renderContent","renderFooter","enter","exit","element","renderElement","createPortal","defaultProps","propTypes","any","bool","string","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { Button } from '../button/Button';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { localeOption } from '../api/Locale';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport function confirmPopup(props) {\r\n    let appendTo = props.appendTo || document.body;\r\n\r\n    let confirmPopupWrapper = document.createDocumentFragment();\r\n    DomHandler.appendChild(confirmPopupWrapper, appendTo);\r\n\r\n    props = {...props, ...{visible: props.visible === undefined ? true : props.visible}};\r\n\r\n    let confirmPopupEl = React.createElement(ConfirmPopup, props);\r\n    ReactDOM.render(confirmPopupEl, confirmPopupWrapper);\r\n\r\n    let updateConfirmPopup = (newProps) => {\r\n        props = { ...props, ...newProps };\r\n        ReactDOM.render(React.cloneElement(confirmPopupEl, props), confirmPopupWrapper);\r\n    };\r\n\r\n    return {\r\n        _destroy: () => {\r\n            ReactDOM.unmountComponentAtNode(confirmPopupWrapper);\r\n        },\r\n        show: () => {\r\n            updateConfirmPopup({ visible: true, onHide: () => {\r\n                updateConfirmPopup({ visible: false }); // reset\r\n            }});\r\n        },\r\n        hide: () => {\r\n            updateConfirmPopup({ visible: false });\r\n        },\r\n        update: (newProps) => {\r\n            updateConfirmPopup(newProps);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ConfirmPopup extends Component {\r\n\r\n    static defaultProps = {\r\n        target: null,\r\n        visible: false,\r\n        message: null,\r\n        rejectLabel: null,\r\n        acceptLabel: null,\r\n        icon: null,\r\n        rejectIcon: null,\r\n        acceptIcon: null,\r\n        rejectClassName: null,\r\n        acceptClassName: null,\r\n        className: null,\r\n        style: null,\r\n        appendTo: null,\r\n        dismissable: true,\r\n        footer: null,\r\n        onHide: null,\r\n        accept: null,\r\n        reject: null\r\n    }\r\n\r\n    static propTypes = {\r\n        target: PropTypes.any,\r\n        visible: PropTypes.bool,\r\n        message: PropTypes.any,\r\n        rejectLabel: PropTypes.string,\r\n        acceptLabel: PropTypes.string,\r\n        icon: PropTypes.string,\r\n        rejectIcon: PropTypes.string,\r\n        acceptIcon: PropTypes.string,\r\n        rejectClassName: PropTypes.string,\r\n        acceptClassName: PropTypes.string,\r\n        className: PropTypes.string,\r\n        style: PropTypes.object,\r\n        appendTo: PropTypes.any,\r\n        dismissable: PropTypes.bool,\r\n        footer: PropTypes.any,\r\n        onHide: PropTypes.func,\r\n        accept: PropTypes.func,\r\n        reject: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.appendTo = props.appendTo || document.body;\r\n\r\n        this.reject = this.reject.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.hide = this.hide.bind(this);\r\n        this.onCloseClick = this.onCloseClick.bind(this);\r\n        this.onPanelClick = this.onPanelClick.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.onEntered = this.onEntered.bind(this);\r\n        this.onExit = this.onExit.bind(this);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.overlayRef = React.createRef();\r\n    }\r\n\r\n    acceptLabel() {\r\n        return this.props.acceptLabel || localeOption('accept');\r\n    }\r\n\r\n    rejectLabel() {\r\n        return this.props.rejectLabel || localeOption('reject');\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if(!this.documentClickListener && this.props.dismissable) {\r\n            this.documentClickListener = (event) => {\r\n                if (!this.isPanelClicked && this.isOutsideClicked(event.target)) {\r\n                    this.hide();\r\n                }\r\n\r\n                this.isPanelClicked = false;\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if(this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.props.target, () => {\r\n                if (this.state.visible) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    bindResizeListener() {\r\n        if (!this.resizeListener) {\r\n            this.resizeListener = () => {\r\n                if (this.state.visible) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            window.addEventListener('resize', this.resizeListener);\r\n        }\r\n    }\r\n\r\n    unbindResizeListener() {\r\n        if (this.resizeListener) {\r\n            window.removeEventListener('resize', this.resizeListener);\r\n            this.resizeListener = null;\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(target) {\r\n        return this.overlayRef && this.overlayRef.current && !(this.overlayRef.current.isSameNode(target) || this.overlayRef.current.contains(target));\r\n    }\r\n\r\n    onCloseClick(event) {\r\n        this.hide();\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    onPanelClick(event) {\r\n        this.isPanelClicked = true;\r\n\r\n        OverlayEventBus.emit('overlay-click', {\r\n            originalEvent: event,\r\n            target: this.props.target\r\n        });\r\n    }\r\n\r\n    accept() {\r\n        if (this.props.accept) {\r\n            this.props.accept();\r\n        }\r\n\r\n        this.hide('accept');\r\n    }\r\n\r\n    reject() {\r\n        if (this.props.reject) {\r\n            this.props.reject();\r\n        }\r\n\r\n        this.hide('reject');\r\n    }\r\n\r\n    show() {\r\n        this.setState({ visible: true }, () => {\r\n            OverlayEventBus.on('overlay-click', (e) => {\r\n                if (!this.isOutsideClicked(e.target)) {\r\n                    this.isPanelClicked = true;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    hide(result) {\r\n        this.setState({ visible: false }, () => {\r\n            OverlayEventBus.off('overlay-click');\r\n\r\n            if (this.props.onHide) {\r\n                this.props.onHide(result);\r\n            }\r\n        });\r\n    }\r\n\r\n    onEnter() {\r\n        this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\r\n        this.align();\r\n    }\r\n\r\n    onEntered() {\r\n        this.bindDocumentClickListener();\r\n        this.bindScrollListener();\r\n        this.bindResizeListener();\r\n    }\r\n\r\n    onExit() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindScrollListener();\r\n        this.unbindResizeListener();\r\n    }\r\n\r\n    align() {\r\n        if (this.props.target) {\r\n            DomHandler.absolutePosition(this.overlayRef.current, this.props.target);\r\n\r\n            const containerOffset = DomHandler.getOffset(this.overlayRef.current);\r\n            const targetOffset = DomHandler.getOffset(this.props.target);\r\n            let arrowLeft = 0;\r\n\r\n            if (containerOffset.left < targetOffset.left) {\r\n                arrowLeft = targetOffset.left - containerOffset.left;\r\n            }\r\n            this.overlayRef.current.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\r\n\r\n            if (containerOffset.top < targetOffset.top) {\r\n                DomHandler.addClass(this.overlayRef.current, 'p-confirm-popup-flipped');\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.visible) {\r\n            this.setState({ visible: true });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({ visible: this.props.visible });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindResizeListener();\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n    }\r\n\r\n    renderContent() {\r\n        const iconClassName = classNames('p-confirm-popup-icon', this.props.icon);\r\n        const message = ObjectUtils.getJSXElement(this.props.message, this.props);\r\n\r\n        return (\r\n            <div className=\"p-confirm-popup-content\">\r\n                <i className={iconClassName} />\r\n                <span className=\"p-confirm-popup-message\">{message}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFooter() {\r\n        const acceptClassName = classNames('p-confirm-popup-accept p-button-sm', this.props.acceptClassName);\r\n        const rejectClassName = classNames('p-confirm-popup-reject p-button-sm', {\r\n            'p-button-text': !this.props.rejectClassName\r\n        }, this.props.rejectClassName);\r\n\r\n        const content = this.props.footer ? ObjectUtils.getJSXElement(this.props.footer, this.props) : (\r\n            <>\r\n                <Button label={this.rejectLabel()} icon={this.props.rejectIcon} className={rejectClassName} onClick={this.reject} />\r\n                <Button label={this.acceptLabel()} icon={this.props.acceptIcon} className={acceptClassName} onClick={this.accept} autoFocus />\r\n            </>\r\n        )\r\n\r\n        return (\r\n            <div className=\"p-confirm-popup-footer\">\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderElement() {\r\n        const className = classNames('p-confirm-popup p-component', this.props.className);\r\n        const content = this.renderContent();\r\n        const footer = this.renderFooter();\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.overlayRef} classNames=\"p-connected-overlay\" in={this.state.visible} timeout={{ enter: 120, exit: 100 }}\r\n                unmountOnExit onEnter={this.onEnter} onEntered={this.onEntered} onExit={this.onExit}>\r\n                <div ref={this.overlayRef} id={this.id} className={className} style={this.props.style} onClick={this.onPanelClick}>\r\n                    {content}\r\n                    {footer}\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let element = this.renderElement();\r\n\r\n        return ReactDOM.createPortal(element, this.appendTo);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}