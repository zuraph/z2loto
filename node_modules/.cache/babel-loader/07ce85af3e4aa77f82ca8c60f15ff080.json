{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\messages\\\\Messages.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { UIMessage } from './UIMessage';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nvar messageIdx = 0;\nexport var Messages = /*#__PURE__*/function (_Component) {\n  _inherits(Messages, _Component);\n\n  var _super = _createSuper(Messages);\n\n  function Messages(props) {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      messages: []\n    };\n    _this.onClose = _this.onClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"show\",\n    value: function show(value) {\n      if (value) {\n        var newMessages = [];\n\n        if (Array.isArray(value)) {\n          for (var i = 0; i < value.length; i++) {\n            value[i].id = messageIdx++;\n            newMessages = [].concat(_toConsumableArray(this.state.messages), _toConsumableArray(value));\n          }\n        } else {\n          value.id = messageIdx++;\n          newMessages = this.state.messages ? [].concat(_toConsumableArray(this.state.messages), [value]) : [value];\n        }\n\n        this.setState({\n          messages: newMessages\n        });\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setState({\n        messages: []\n      });\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(value) {\n      var _this2 = this;\n\n      this.setState({\n        messages: []\n      }, function () {\n        return _this2.show(value);\n      });\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(message) {\n      var newMessages = this.state.messages.filter(function (msg) {\n        return msg.id !== message.id;\n      });\n      this.setState({\n        messages: newMessages\n      });\n\n      if (this.props.onRemove) {\n        this.props.onRemove(message);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        className: this.props.className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TransitionGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, this.state.messages.map(function (message) {\n        var messageRef = React.createRef();\n        return /*#__PURE__*/React.createElement(CSSTransition, {\n          nodeRef: messageRef,\n          key: message.id,\n          classNames: \"p-message\",\n          unmountOnExit: true,\n          timeout: {\n            enter: 300,\n            exit: 300\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(UIMessage, {\n          ref: messageRef,\n          message: message,\n          onClick: _this3.props.onClick,\n          onClose: _this3.onClose,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return Messages;\n}(Component);\nMessages.defaultProps = {\n  id: null,\n  className: null,\n  style: null,\n  onRemove: null,\n  onClick: null\n};\nMessages.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  onRemove: PropTypes.func,\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/messages/Messages.js"],"names":["React","Component","PropTypes","UIMessage","CSSTransition","TransitionGroup","messageIdx","Messages","props","state","messages","onClose","bind","value","newMessages","Array","isArray","i","length","id","setState","show","message","filter","msg","onRemove","className","style","map","messageRef","createRef","enter","exit","onClick","defaultProps","propTypes","string","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { UIMessage } from './UIMessage';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nlet messageIdx = 0;\r\n\r\nexport class Messages extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        className: null,\r\n        style: null,\r\n        onRemove: null,\r\n        onClick: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        style: PropTypes.object,\r\n        onRemove: PropTypes.func,\r\n        onClick: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: []\r\n        }\r\n\r\n        this.onClose = this.onClose.bind(this);\r\n    }\r\n\r\n    show(value) {\r\n        if (value) {\r\n            let newMessages = [];\r\n\r\n            if (Array.isArray(value)) {\r\n                for (let i = 0; i < value.length; i++) {\r\n                    value[i].id = messageIdx++;\r\n                    newMessages = [...this.state.messages, ...value];\r\n                }\r\n            }\r\n            else {\r\n                value.id = messageIdx++;\r\n                newMessages = this.state.messages ? [...this.state.messages, value] : [value];\r\n            }\r\n\r\n            this.setState({\r\n                messages: newMessages\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            messages: []\r\n        })\r\n    }\r\n\r\n    replace(value) {\r\n        this.setState({\r\n            messages: [],\r\n        }, () => this.show(value));\r\n    }\r\n\r\n    onClose(message) {\r\n        let newMessages = this.state.messages.filter(msg => msg.id !== message.id);\r\n        this.setState({\r\n            messages: newMessages\r\n        });\r\n\r\n        if (this.props.onRemove) {\r\n            this.props.onRemove(message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.id} className={this.props.className} style={this.props.style}>\r\n                <TransitionGroup>\r\n                    {\r\n                        this.state.messages.map((message) => {\r\n                            const messageRef = React.createRef();\r\n\r\n                            return (\r\n                                <CSSTransition nodeRef={messageRef} key={message.id} classNames=\"p-message\" unmountOnExit timeout={{ enter: 300, exit: 300 }}>\r\n                                    <UIMessage ref={messageRef} message={message} onClick={this.props.onClick} onClose={this.onClose} />\r\n                                </CSSTransition>\r\n                            )\r\n                        })\r\n                    }\r\n                </TransitionGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}