{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classNames from'classnames';import{tip}from'../tooltip/Tooltip';import ObjectUtils from'../utils/ObjectUtils';export var InputSwitch=/*#__PURE__*/function(_Component){_inherits(InputSwitch,_Component);var _super=_createSuper(InputSwitch);function InputSwitch(props){var _this;_classCallCheck(this,InputSwitch);_this=_super.call(this,props);_this.state={focused:false};_this.onClick=_this.onClick.bind(_assertThisInitialized(_this));_this.toggle=_this.toggle.bind(_assertThisInitialized(_this));_this.onFocus=_this.onFocus.bind(_assertThisInitialized(_this));_this.onBlur=_this.onBlur.bind(_assertThisInitialized(_this));_this.onKeyDown=_this.onKeyDown.bind(_assertThisInitialized(_this));return _this;}_createClass(InputSwitch,[{key:\"onClick\",value:function onClick(event){if(this.props.disabled){return;}this.toggle(event);this.input.focus();}},{key:\"toggle\",value:function toggle(event){if(this.props.onChange){this.props.onChange({originalEvent:event,value:!this.props.checked,stopPropagation:function stopPropagation(){},preventDefault:function preventDefault(){},target:{name:this.props.name,id:this.props.id,value:!this.props.checked}});}}},{key:\"onFocus\",value:function onFocus(event){var _this2=this;var currentEvent=event;this.setState({focused:true},function(){if(_this2.props.onFocus){_this2.props.onFocus(currentEvent);}});}},{key:\"onBlur\",value:function onBlur(event){var _this3=this;var currentEvent=event;this.setState({focused:false},function(){if(_this3.props.onBlur){_this3.props.onBlur(currentEvent);}});}},{key:\"onKeyDown\",value:function onKeyDown(event){if(event.key==='Enter'){this.onClick(event);}}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.tooltip){this.renderTooltip();}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.tooltip!==this.props.tooltip||prevProps.tooltipOptions!==this.props.tooltipOptions){if(this.tooltip)this.tooltip.update(_objectSpread({content:this.props.tooltip},this.props.tooltipOptions||{}));else this.renderTooltip();}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.tooltip){this.tooltip.destroy();this.tooltip=null;}}},{key:\"renderTooltip\",value:function renderTooltip(){this.tooltip=tip({target:this.container,content:this.props.tooltip,options:this.props.tooltipOptions});}},{key:\"render\",value:function render(){var _this4=this;var className=classNames('p-inputswitch p-component',{'p-inputswitch-checked':this.props.checked,'p-disabled':this.props.disabled,'p-inputswitch-focus':this.state.focused},this.props.className);var inputSwitchProps=ObjectUtils.findDiffKeys(this.props,InputSwitch.defaultProps);return/*#__PURE__*/React.createElement(\"div\",Object.assign({ref:function ref(el){return _this4.container=el;},id:this.props.id,className:className,style:this.props.style,onClick:this.onClick,role:\"checkbox\",\"aria-checked\":this.props.checked},inputSwitchProps),/*#__PURE__*/React.createElement(\"div\",{className:\"p-hidden-accessible\"},/*#__PURE__*/React.createElement(\"input\",{ref:function ref(el){return _this4.input=el;},type:\"checkbox\",id:this.props.inputId,name:this.props.name,checked:this.props.checked,onChange:this.toggle,onFocus:this.onFocus,onBlur:this.onBlur,onKeyDown:this.onKeyDown,disabled:this.props.disabled,role:\"switch\",\"aria-checked\":this.props.checked,\"aria-labelledby\":this.props.ariaLabelledBy})),/*#__PURE__*/React.createElement(\"span\",{className:\"p-inputswitch-slider\"}));}}]);return InputSwitch;}(Component);InputSwitch.defaultProps={id:null,style:null,className:null,inputId:null,name:null,checked:false,disabled:false,tooltip:null,tooltipOptions:null,ariaLabelledBy:null,onChange:null,onFocus:null,onBlur:null};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/inputswitch/InputSwitch.js"],"names":["React","Component","classNames","tip","ObjectUtils","InputSwitch","props","state","focused","onClick","bind","toggle","onFocus","onBlur","onKeyDown","event","disabled","input","focus","onChange","originalEvent","value","checked","stopPropagation","preventDefault","target","name","id","currentEvent","setState","key","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","container","options","className","inputSwitchProps","findDiffKeys","defaultProps","el","style","inputId","ariaLabelledBy"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames'\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\n\r\nexport class InputSwitch extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        style: null,\r\n        className: null,\r\n        inputId: null,\r\n        name: null,\r\n        checked: false,\r\n        disabled: false,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        ariaLabelledBy: null,\r\n        onChange: null,\r\n        onFocus: null,\r\n        onBlur: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        inputId: PropTypes.string,\r\n        name: PropTypes.string,\r\n        checked: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        ariaLabelledBy: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            focused: false\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    onClick(event) {\r\n        if (this.props.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.toggle(event);\r\n        this.input.focus();\r\n    }\r\n\r\n    toggle(event) {\r\n        if (this.props.onChange) {\r\n            this.props.onChange({\r\n                originalEvent: event,\r\n                value: !this.props.checked,\r\n                stopPropagation : () =>{},\r\n                preventDefault : () =>{},\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.props.id,\r\n                    value: !this.props.checked,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onFocus(event) {\r\n        let currentEvent = event;\r\n        this.setState({ focused: true }, () => {\r\n            if (this.props.onFocus) {\r\n                this.props.onFocus(currentEvent);\r\n            }\r\n        });\r\n    }\r\n\r\n    onBlur(event) {\r\n        let currentEvent = event;\r\n        this.setState({ focused: false }, () => {\r\n            if (this.props.onBlur) {\r\n                this.props.onBlur(currentEvent);\r\n            }\r\n        });\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (event.key === 'Enter') {\r\n            this.onClick(event);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.container,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-inputswitch p-component', {\r\n            'p-inputswitch-checked': this.props.checked,\r\n            'p-disabled': this.props.disabled,\r\n            'p-inputswitch-focus': this.state.focused\r\n        }, this.props.className);\r\n\r\n        let inputSwitchProps = ObjectUtils.findDiffKeys(this.props, InputSwitch.defaultProps);\r\n\r\n        return (\r\n            <div ref={el => this.container = el} id={this.props.id} className={className} style={this.props.style} onClick={this.onClick}\r\n                role=\"checkbox\" aria-checked={this.props.checked} {...inputSwitchProps}>\r\n                <div className=\"p-hidden-accessible\">\r\n                    <input ref={el => this.input = el} type=\"checkbox\" id={this.props.inputId} name={this.props.name} checked={this.props.checked} onChange={this.toggle}\r\n                        onFocus={this.onFocus} onBlur={this.onBlur} onKeyDown={this.onKeyDown} disabled={this.props.disabled}  role=\"switch\" aria-checked={this.props.checked}\r\n                        aria-labelledby={this.props.ariaLabelledBy}/>\r\n                </div>\r\n                <span className=\"p-inputswitch-slider\"></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}