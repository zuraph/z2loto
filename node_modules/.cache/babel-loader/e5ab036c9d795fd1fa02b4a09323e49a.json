{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\inputmask\\\\InputMaskDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nexport var InputMaskDoc = /*#__PURE__*/function (_Component) {\n  _inherits(InputMaskDoc, _Component);\n\n  var _super = _createSuper(InputMaskDoc);\n\n  function InputMaskDoc(props) {\n    var _this;\n\n    _classCallCheck(this, InputMaskDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { InputMask } from 'primereact/inputmask';\\n\\nexport class InputMaskDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            val1: null,\\n            val2: null,\\n            val3: null,\\n            val4: null,\\n            val5: null,\\n            val6: null\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <div className=\\\"p-fluid p-formgrid p-grid\\\">\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <label htmlFor=\\\"basic\\\">Basic</label>\\n                            <InputMask id=\\\"basic\\\" mask=\\\"99-999999\\\" value={this.state.val1} placeholder=\\\"99-999999\\\" onChange={(e) => this.setState({val1: e.value})}></InputMask>\\n                        </div>\\n\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <label htmlFor=\\\"ssn\\\">SSN</label>\\n                            <InputMask id=\\\"ssn\\\" mask=\\\"999-99-9999\\\" value={this.state.val2} placeholder=\\\"999-99-9999\\\" onChange={(e) => this.setState({val2: e.value})}></InputMask>\\n                        </div>\\n\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <label htmlFor=\\\"date\\\">Date</label>\\n                            <InputMask id=\\\"date\\\" mask=\\\"99/99/9999\\\" value={this.state.val3} placeholder=\\\"99/99/9999\\\" slotChar=\\\"mm/dd/yyyy\\\" onChange={(e) => this.setState({val3: e.value})}></InputMask>\\n                        </div>\\n\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <label htmlFor=\\\"phone\\\">Phone</label>\\n                            <InputMask id=\\\"phone\\\" mask=\\\"(999) 999-9999\\\" value={this.state.val4} placeholder=\\\"(999) 999-9999\\\" onChange={(e) => this.setState({val4: e.value})}></InputMask>\\n                        </div>\\n\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <label htmlFor=\\\"phoneext\\\">Phone Ext</label>\\n                            <InputMask id=\\\"phoneext\\\" mask=\\\"(999) 999-9999? x99999\\\" value={this.state.val5} placeholder=\\\"(999) 999-9999? x99999\\\" onChange={(e) => this.setState({val5: e.value})}></InputMask>\\n                        </div>\\n\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <label htmlFor=\\\"serial\\\">Serial</label>\\n                            <InputMask id=\\\"serial\\\" mask=\\\"a*-999-a999\\\" value={this.state.val6} placeholder=\\\"a*-999-a999\\\" onChange={(e) => this.setState({val6: e.value})}></InputMask>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { InputMask } from 'primereact/inputmask';\\n\\nconst InputMaskDemo = () => {\\n    const [val1, setVal1] = useState();\\n    const [val2, setVal2] = useState();\\n    const [val3, setVal3] = useState();\\n    const [val4, setVal4] = useState();\\n    const [val5, setVal5] = useState();\\n    const [val6, setVal6] = useState();\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <div className=\\\"p-fluid p-formgrid p-grid\\\">\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"basic\\\">Basic</label>\\n                        <InputMask id=\\\"basic\\\" mask=\\\"99-999999\\\" value={val1} placeholder=\\\"99-999999\\\" onChange={(e) => setVal1(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"ssn\\\">SSN</label>\\n                        <InputMask id=\\\"ssn\\\" mask=\\\"999-99-9999\\\" value={val2} placeholder=\\\"999-99-9999\\\" onChange={(e) => setVal2(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"date\\\">Date</label>\\n                        <InputMask id=\\\"date\\\" mask=\\\"99/99/9999\\\" value={val3} placeholder=\\\"99/99/9999\\\" slotChar=\\\"mm/dd/yyyy\\\" onChange={(e) => setVal3(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"phone\\\">Phone</label>\\n                        <InputMask id=\\\"phone\\\" mask=\\\"(999) 999-9999\\\" value={val4} placeholder=\\\"(999) 999-9999\\\" onChange={(e) => setVal4(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"phoneext\\\">Phone Ext</label>\\n                        <InputMask id=\\\"phoneext\\\" mask=\\\"(999) 999-9999? x99999\\\" value={val5} placeholder=\\\"(999) 999-9999? x99999\\\" onChange={(e) => setVal5(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"serial\\\">Serial</label>\\n                        <InputMask id=\\\"serial\\\" mask=\\\"a*-999-a999\\\" value={val6} placeholder=\\\"a*-999-a999\\\" onChange={(e) => setVal6(e.value)}></InputMask>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { InputMask } from 'primereact/inputmask';\\n\\nconst InputMaskDemo = () => {\\n    const [val1, setVal1] = useState();\\n    const [val2, setVal2] = useState();\\n    const [val3, setVal3] = useState();\\n    const [val4, setVal4] = useState();\\n    const [val5, setVal5] = useState();\\n    const [val6, setVal6] = useState();\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <div className=\\\"p-fluid p-formgrid p-grid\\\">\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"basic\\\">Basic</label>\\n                        <InputMask id=\\\"basic\\\" mask=\\\"99-999999\\\" value={val1} placeholder=\\\"99-999999\\\" onChange={(e) => setVal1(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"ssn\\\">SSN</label>\\n                        <InputMask id=\\\"ssn\\\" mask=\\\"999-99-9999\\\" value={val2} placeholder=\\\"999-99-9999\\\" onChange={(e) => setVal2(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"date\\\">Date</label>\\n                        <InputMask id=\\\"date\\\" mask=\\\"99/99/9999\\\" value={val3} placeholder=\\\"99/99/9999\\\" slotChar=\\\"mm/dd/yyyy\\\" onChange={(e) => setVal3(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"phone\\\">Phone</label>\\n                        <InputMask id=\\\"phone\\\" mask=\\\"(999) 999-9999\\\" value={val4} placeholder=\\\"(999) 999-9999\\\" onChange={(e) => setVal4(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"phoneext\\\">Phone Ext</label>\\n                        <InputMask id=\\\"phoneext\\\" mask=\\\"(999) 999-9999? x99999\\\" value={val5} placeholder=\\\"(999) 999-9999? x99999\\\" onChange={(e) => setVal5(e.value)}></InputMask>\\n                    </div>\\n\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <label htmlFor=\\\"serial\\\">Serial</label>\\n                        <InputMask id=\\\"serial\\\" mask=\\\"a*-999-a999\\\" value={val6} placeholder=\\\"a*-999-a999\\\" onChange={(e) => setVal6(e.value)}></InputMask>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(InputMaskDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 1\n        }\n      }, \"\\nimport { InputMask } from 'primereact/inputmask';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, \"InputMask is used as a controlled component with \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 77\n        }\n      }, \"value\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 94\n        }\n      }, \"onChange\"), \" properties.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 1\n        }\n      }, \"\\n<InputMask mask=\\\"99-999999\\\" value={value} onChange={(e) => setValue(e.value)}></InputMask>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }, \"Mask\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }\n      }, \"Mask format can be a combination of the the following built-in definitions.\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }\n      }, \"a - Alpha character (A-Z,a-z)\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }\n      }, \"9 - Numeric character (0-9)\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }\n      }, \"* - Alpha numberic character (A-Z,a-z,0-9)\")), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 1\n        }\n      }, \"\\n<InputMask mask=\\\"a*-999-a999\\\" value={value} onChange={(e) => setValue(e.value)}></InputMask>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }, \"SlotChar\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }\n      }, \"Underscore is the default placeholder for a mask and this can be customized using \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 110\n        }\n      }, \"slotChart\"), \" option.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 1\n        }\n      }, \"\\n<InputMask mask=\\\"99/99/9999\\\" slotChar=\\\"mm/dd/yyyy\\\" value={value} onChange={(e) => setValue(e.value)}></InputMask>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, \"Optional Values\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }\n      }, \"If the input does not complete the mask definition, it is cleared by default. Use \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }\n      }, \"autoClear\"), \" property to control this behavior. In addition, certain part of a mask can be made optional by using ? symbol where anything after the question mark becomes optional.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 1\n        }\n      }, \"\\n<InputMask mask=\\\"(999) 999-9999? x99999\\\" value={value} onChange={(e) => setValue(e.value)}></InputMask>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 41\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 41\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 41\n        }\n      }, \"value\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 41\n        }\n      }, \"Value of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 41\n        }\n      }, \"type\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 41\n        }\n      }, \"text\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 41\n        }\n      }, \"HTML5 input type\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 41\n        }\n      }, \"mask\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 41\n        }\n      }, \"Mask pattern.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 41\n        }\n      }, \"slotChar\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 41\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 41\n        }\n      }, \"Placeholder character in mask, default is underscore.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 41\n        }\n      }, \"autoClear\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 41\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 41\n        }\n      }, \"Clears the incomplete value on blur.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 41\n        }\n      }, \"unmask\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 41\n        }\n      }, \"Defines if model sets the raw unmasked value to bound value or the formatted mask value.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 41\n        }\n      }, \"Inline style of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 41\n        }\n      }, \"Style class of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 41\n        }\n      }, \"placeholder\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 41\n        }\n      }, \"Advisory information to display on input.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 41\n        }\n      }, \"size\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 41\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 41\n        }\n      }, \"Size of the input field.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 41\n        }\n      }, \"maxlength\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 41\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 41\n        }\n      }, \"Maximum number of character allows in the input field.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 41\n        }\n      }, \"tabIndex\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 41\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 41\n        }\n      }, \"Specifies tab order of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 41\n        }\n      }, \"disabled\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 41\n        }\n      }, \"When present, it specifies that the element value cannot be altered.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 41\n        }\n      }, \"readOnly\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 41\n        }\n      }, \"When present, it specifies that an input field is read-only.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 41\n        }\n      }, \"name\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 41\n        }\n      }, \"Name of the input field.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 41\n        }\n      }, \"required\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 41\n        }\n      }, \"When present, it specifies that the element must be filled out before submitting the form.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 41\n        }\n      }, \"tooltip\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 41\n        }\n      }, \"Content of the tooltip.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 41\n        }\n      }, \"tooltipOptions\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 41\n        }\n      }, \"object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 41\n        }\n      }, \"Configuration of the tooltip, refer to the tooltip documentation for more information.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 41\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 41\n        }\n      }, \"onFocus\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 41\n        }\n      }, \"event: Browser event\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when input receives focus.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 41\n        }\n      }, \"onBlur\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 41\n        }\n      }, \"event: Browser event\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when input loses focus.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 41\n        }\n      }, \"onComplete\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 41\n        }\n      }, \"event: Browser event\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 65\n        }\n      }), \"value: New value of the component\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke on when user completes the mask pattern.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 41\n        }\n      }, \"onChange\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 41\n        }\n      }, \"originalEvent: Browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 74\n        }\n      }), \"value: New value of the component\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke on value change.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 25\n        }\n      }, \"Styling is same as \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/inputtext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 47\n        }\n      }, \" inputtext component\"), \", for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 124\n        }\n      }, \" theming page.\")), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }\n      }, \"None.\")), useLiveEditorTabs({\n        name: 'InputMaskDemo',\n        sources: this.sources\n      })));\n    }\n  }]);\n\n  return InputMaskDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/inputmask/InputMaskDoc.js"],"names":["React","Component","Link","TabView","TabPanel","useLiveEditorTabs","CodeHighlight","InputMaskDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\n\r\nexport class InputMaskDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { InputMask } from 'primereact/inputmask';\r\n\r\nexport class InputMaskDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            val1: null,\r\n            val2: null,\r\n            val3: null,\r\n            val4: null,\r\n            val5: null,\r\n            val6: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <label htmlFor=\"basic\">Basic</label>\r\n                            <InputMask id=\"basic\" mask=\"99-999999\" value={this.state.val1} placeholder=\"99-999999\" onChange={(e) => this.setState({val1: e.value})}></InputMask>\r\n                        </div>\r\n\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <label htmlFor=\"ssn\">SSN</label>\r\n                            <InputMask id=\"ssn\" mask=\"999-99-9999\" value={this.state.val2} placeholder=\"999-99-9999\" onChange={(e) => this.setState({val2: e.value})}></InputMask>\r\n                        </div>\r\n\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <label htmlFor=\"date\">Date</label>\r\n                            <InputMask id=\"date\" mask=\"99/99/9999\" value={this.state.val3} placeholder=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" onChange={(e) => this.setState({val3: e.value})}></InputMask>\r\n                        </div>\r\n\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <label htmlFor=\"phone\">Phone</label>\r\n                            <InputMask id=\"phone\" mask=\"(999) 999-9999\" value={this.state.val4} placeholder=\"(999) 999-9999\" onChange={(e) => this.setState({val4: e.value})}></InputMask>\r\n                        </div>\r\n\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <label htmlFor=\"phoneext\">Phone Ext</label>\r\n                            <InputMask id=\"phoneext\" mask=\"(999) 999-9999? x99999\" value={this.state.val5} placeholder=\"(999) 999-9999? x99999\" onChange={(e) => this.setState({val5: e.value})}></InputMask>\r\n                        </div>\r\n\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <label htmlFor=\"serial\">Serial</label>\r\n                            <InputMask id=\"serial\" mask=\"a*-999-a999\" value={this.state.val6} placeholder=\"a*-999-a999\" onChange={(e) => this.setState({val6: e.value})}></InputMask>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { InputMask } from 'primereact/inputmask';\r\n\r\nconst InputMaskDemo = () => {\r\n    const [val1, setVal1] = useState();\r\n    const [val2, setVal2] = useState();\r\n    const [val3, setVal3] = useState();\r\n    const [val4, setVal4] = useState();\r\n    const [val5, setVal5] = useState();\r\n    const [val6, setVal6] = useState();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"basic\">Basic</label>\r\n                        <InputMask id=\"basic\" mask=\"99-999999\" value={val1} placeholder=\"99-999999\" onChange={(e) => setVal1(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"ssn\">SSN</label>\r\n                        <InputMask id=\"ssn\" mask=\"999-99-9999\" value={val2} placeholder=\"999-99-9999\" onChange={(e) => setVal2(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"date\">Date</label>\r\n                        <InputMask id=\"date\" mask=\"99/99/9999\" value={val3} placeholder=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" onChange={(e) => setVal3(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <InputMask id=\"phone\" mask=\"(999) 999-9999\" value={val4} placeholder=\"(999) 999-9999\" onChange={(e) => setVal4(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"phoneext\">Phone Ext</label>\r\n                        <InputMask id=\"phoneext\" mask=\"(999) 999-9999? x99999\" value={val5} placeholder=\"(999) 999-9999? x99999\" onChange={(e) => setVal5(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"serial\">Serial</label>\r\n                        <InputMask id=\"serial\" mask=\"a*-999-a999\" value={val6} placeholder=\"a*-999-a999\" onChange={(e) => setVal6(e.value)}></InputMask>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { InputMask } from 'primereact/inputmask';\r\n\r\nconst InputMaskDemo = () => {\r\n    const [val1, setVal1] = useState();\r\n    const [val2, setVal2] = useState();\r\n    const [val3, setVal3] = useState();\r\n    const [val4, setVal4] = useState();\r\n    const [val5, setVal5] = useState();\r\n    const [val6, setVal6] = useState();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"basic\">Basic</label>\r\n                        <InputMask id=\"basic\" mask=\"99-999999\" value={val1} placeholder=\"99-999999\" onChange={(e) => setVal1(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"ssn\">SSN</label>\r\n                        <InputMask id=\"ssn\" mask=\"999-99-9999\" value={val2} placeholder=\"999-99-9999\" onChange={(e) => setVal2(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"date\">Date</label>\r\n                        <InputMask id=\"date\" mask=\"99/99/9999\" value={val3} placeholder=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" onChange={(e) => setVal3(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"phone\">Phone</label>\r\n                        <InputMask id=\"phone\" mask=\"(999) 999-9999\" value={val4} placeholder=\"(999) 999-9999\" onChange={(e) => setVal4(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"phoneext\">Phone Ext</label>\r\n                        <InputMask id=\"phoneext\" mask=\"(999) 999-9999? x99999\" value={val5} placeholder=\"(999) 999-9999? x99999\" onChange={(e) => setVal5(e.value)}></InputMask>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <label htmlFor=\"serial\">Serial</label>\r\n                        <InputMask id=\"serial\" mask=\"a*-999-a999\" value={val6} placeholder=\"a*-999-a999\" onChange={(e) => setVal6(e.value)}></InputMask>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { InputMask } from 'primereact/inputmask';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>InputMask is used as a controlled component with <i>value</i> and <i>onChange</i> properties.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<InputMask mask=\"99-999999\" value={value} onChange={(e) => setValue(e.value)}></InputMask>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Mask</h5>\r\n                        <p>Mask format can be a combination of the the following built-in definitions.</p>\r\n\r\n                        <ul>\r\n                            <li>\r\n                                a - Alpha character (A-Z,a-z)\r\n                            </li>\r\n                            <li>\r\n                                9 - Numeric character (0-9)\r\n                            </li>\r\n                            <li>\r\n                                * - Alpha numberic character (A-Z,a-z,0-9)\r\n                            </li>\r\n                        </ul>\r\n\r\n<CodeHighlight>\r\n{`\r\n<InputMask mask=\"a*-999-a999\" value={value} onChange={(e) => setValue(e.value)}></InputMask>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>SlotChar</h5>\r\n                        <p>Underscore is the default placeholder for a mask and this can be customized using <i>slotChart</i> option.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<InputMask mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" value={value} onChange={(e) => setValue(e.value)}></InputMask>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Optional Values</h5>\r\n                        <p>If the input does not complete the mask definition, it is cleared by default.\r\n                        Use <i>autoClear</i> property to control this behavior. In addition, certain part of\r\n                        a mask can be made optional by using ? symbol where anything after the question\r\n                        mark becomes optional.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<InputMask mask=\"(999) 999-9999? x99999\" value={value} onChange={(e) => setValue(e.value)}></InputMask>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>value</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Value of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>type</td>\r\n                                        <td>string</td>\r\n                                        <td>text</td>\r\n                                        <td>HTML5 input type</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>mask</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Mask pattern.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>slotChar</td>\r\n                                        <td>string</td>\r\n                                        <td>-</td>\r\n                                        <td>Placeholder character in mask, default is underscore.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>autoClear</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Clears the incomplete value on blur.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>unmask</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Defines if model sets the raw unmasked value to bound value or the formatted mask value.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>placeholder</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Advisory information to display on input.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>size</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Size of the input field.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>maxlength</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Maximum number of character allows in the input field.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tabIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Specifies tab order of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>disabled</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the element value cannot be altered.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>readOnly</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that an input field is read-only.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>name</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Name of the input field.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>required</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the element must be filled out before submitting the form.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltip</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Content of the tooltip.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltipOptions</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onFocus</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Callback to invoke when input receives focus.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onBlur</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Callback to invoke when input loses focus.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onComplete</td>\r\n                                        <td>event: Browser event<br/>\r\n                                            value: New value of the component</td>\r\n                                        <td>Callback to invoke on when user completes the mask pattern.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onChange</td>\r\n                                        <td>originalEvent: Browser event <br/>\r\n                                            value: New value of the component</td>\r\n                                        <td>Callback to invoke on value change.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Styling is same as <Link to=\"/inputtext\"> inputtext component</Link>, for theming classes visit <Link to=\"/theming\"> theming page.</Link></p>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'InputMaskDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}