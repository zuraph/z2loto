{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\splitter\\\\Splitter.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport DomHandler from '../utils/DomHandler';\nexport var SplitterPanel = /*#__PURE__*/function (_Component) {\n  _inherits(SplitterPanel, _Component);\n\n  var _super = _createSuper(SplitterPanel);\n\n  function SplitterPanel() {\n    _classCallCheck(this, SplitterPanel);\n\n    return _super.apply(this, arguments);\n  }\n\n  return SplitterPanel;\n}(Component);\nSplitterPanel.defaultProps = {\n  size: null,\n  minSize: null,\n  style: null,\n  className: null\n};\nSplitterPanel.propTypes = {\n  header: PropTypes.number,\n  minSize: PropTypes.number,\n  style: PropTypes.object,\n  className: PropTypes.string\n};\nexport var Splitter = /*#__PURE__*/function (_Component2) {\n  _inherits(Splitter, _Component2);\n\n  var _super2 = _createSuper(Splitter);\n\n  function Splitter(props) {\n    var _this;\n\n    _classCallCheck(this, Splitter);\n\n    _this = _super2.call(this, props);\n    _this.id = _this.props.id || UniqueComponentId();\n    return _this;\n  }\n\n  _createClass(Splitter, [{\n    key: \"bindMouseListeners\",\n    value: function bindMouseListeners() {\n      var _this2 = this;\n\n      if (!this.mouseMoveListener) {\n        this.mouseMoveListener = function (event) {\n          return _this2.onResize(event);\n        };\n\n        document.addEventListener('mousemove', this.mouseMoveListener);\n      }\n\n      if (!this.mouseUpListener) {\n        this.mouseUpListener = function (event) {\n          _this2.onResizeEnd(event);\n\n          _this2.unbindMouseListeners();\n        };\n\n        document.addEventListener('mouseup', this.mouseUpListener);\n      }\n    }\n  }, {\n    key: \"validateResize\",\n    value: function validateResize(newPrevPanelSize, newNextPanelSize) {\n      if (this.props.children[0].props && this.props.children[0].props.minSize && this.props.children[0].props.minSize > newPrevPanelSize) {\n        return false;\n      }\n\n      if (this.props.children[1].props && this.props.children[1].props.minSize && this.props.children[1].props.minSize > newNextPanelSize) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"unbindMouseListeners\",\n    value: function unbindMouseListeners() {\n      if (this.mouseMoveListener) {\n        document.removeEventListener('mousemove', this.mouseMoveListener);\n        this.mouseMoveListener = null;\n      }\n\n      if (this.mouseUpListener) {\n        document.removeEventListener('mouseup', this.mouseUpListener);\n        this.mouseUpListener = null;\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.dragging = false;\n      this.size = null;\n      this.startPos = null;\n      this.prevPanelElement = null;\n      this.nextPanelElement = null;\n      this.prevPanelSize = null;\n      this.nextPanelSize = null;\n      this.gutterElement = null;\n      this.prevPanelIndex = null;\n    }\n  }, {\n    key: \"isStateful\",\n    value: function isStateful() {\n      return this.props.stateKey != null;\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      switch (this.props.stateStorage) {\n        case 'local':\n          return window.localStorage;\n\n        case 'session':\n          return window.sessionStorage;\n\n        default:\n          throw new Error(this.props.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n      }\n    }\n  }, {\n    key: \"saveState\",\n    value: function saveState() {\n      this.getStorage().setItem(this.props.stateKey, JSON.stringify(this.panelSizes));\n    }\n  }, {\n    key: \"restoreState\",\n    value: function restoreState() {\n      var _this3 = this;\n\n      var storage = this.getStorage();\n      var stateString = storage.getItem(this.props.stateKey);\n\n      if (stateString) {\n        this.panelSizes = JSON.parse(stateString);\n\n        var children = _toConsumableArray(this.container.children).filter(function (child) {\n          return DomHandler.hasClass(child, 'p-splitter-panel');\n        });\n\n        children.forEach(function (child, i) {\n          child.style.flexBasis = 'calc(' + _this3.panelSizes[i] + '% - ' + (_this3.props.children.length - 1) * _this3.props.gutterSize + 'px)';\n        });\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"onResizeStart\",\n    value: function onResizeStart(event, index) {\n      this.gutterElement = event.currentTarget;\n      this.size = this.horizontal ? DomHandler.getWidth(this.container) : DomHandler.getHeight(this.container);\n      this.dragging = true;\n      this.startPos = this.props.layout === 'horizontal' ? event.pageX : event.pageY;\n      this.prevPanelElement = this.gutterElement.previousElementSibling;\n      this.nextPanelElement = this.gutterElement.nextElementSibling;\n      this.prevPanelSize = 100 * (this.props.layout === 'horizontal' ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n      this.nextPanelSize = 100 * (this.props.layout === 'horizontal' ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n      this.prevPanelIndex = index;\n      DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n      DomHandler.addClass(this.container, 'p-splitter-resizing');\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(event) {\n      var newPos;\n      if (this.props.layout === 'horizontal') newPos = event.pageX * 100 / this.size - this.startPos * 100 / this.size;else newPos = event.pageY * 100 / this.size - this.startPos * 100 / this.size;\n      var newPrevPanelSize = this.prevPanelSize + newPos;\n      var newNextPanelSize = this.nextPanelSize - newPos;\n\n      if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n        this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.props.children.length - 1) * this.props.gutterSize + 'px)';\n        this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.props.children.length - 1) * this.props.gutterSize + 'px)';\n        this.panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n        this.panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n      }\n    }\n  }, {\n    key: \"onResizeEnd\",\n    value: function onResizeEnd(event) {\n      if (this.isStateful()) {\n        this.saveState();\n      }\n\n      if (this.props.onResizeEnd) {\n        this.props.onResizeEnd({\n          originalEvent: event,\n          sizes: this.panelSizes\n        });\n      }\n\n      DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n      DomHandler.removeClass(this.container, 'p-splitter-resizing');\n      this.clear();\n    }\n  }, {\n    key: \"onGutterMouseDown\",\n    value: function onGutterMouseDown(event, index) {\n      this.onResizeStart(event, index);\n      this.bindMouseListeners();\n    }\n  }, {\n    key: \"onGutterTouchStart\",\n    value: function onGutterTouchStart(event, index) {\n      this.onResizeStart(event, index);\n      this.windowTouchMoveListener = this.onGutterTouchMove.bind(this);\n      this.windowTouchEndListener = this.onGutterTouchEnd.bind(this);\n      window.addEventListener('touchmove', this.windowTouchMoveListener, {\n        passive: false,\n        cancelable: false\n      });\n      window.addEventListener('touchend', this.windowTouchEndListener);\n    }\n  }, {\n    key: \"onGutterTouchMove\",\n    value: function onGutterTouchMove(event) {\n      this.onResize(event);\n    }\n  }, {\n    key: \"onGutterTouchEnd\",\n    value: function onGutterTouchEnd(event) {\n      this.onResizeEnd(event);\n      window.removeEventListener('touchmove', this.windowTouchMoveListener);\n      window.removeEventListener('touchend', this.windowTouchEndListener);\n      this.windowTouchMoveListener = null;\n      this.windowTouchEndListener = null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      if (this.panelElement) {\n        if (this.panelElement.childNodes && DomHandler.find(this.panelElement, '.p-splitter')) {\n          DomHandler.addClass(this.panelElement, 'p-splitter-panel-nested');\n        }\n      }\n\n      if (this.props.children && this.props.children.length) {\n        var initialized = false;\n\n        if (this.isStateful()) {\n          initialized = this.restoreState();\n        }\n\n        if (!initialized) {\n          var children = _toConsumableArray(this.container.children).filter(function (child) {\n            return DomHandler.hasClass(child, 'p-splitter-panel');\n          });\n\n          var _panelSizes = [];\n          this.props.children.map(function (panel, i) {\n            var panelInitialSize = panel.props && panel.props.size ? panel.props.size : null;\n            var panelSize = panelInitialSize || 100 / _this4.props.children.length;\n            _panelSizes[i] = panelSize;\n            children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (_this4.props.children.length - 1) * _this4.props.gutterSize + 'px)';\n            return _panelSizes;\n          });\n          this.panelSizes = _panelSizes;\n        }\n      }\n    }\n  }, {\n    key: \"renderPanel\",\n    value: function renderPanel(panel, index) {\n      var _this5 = this;\n\n      var panelClassName = classNames('p-splitter-panel', panel.props.className);\n      var gutterStyle = this.props.layout === 'horizontal' ? {\n        width: this.props.gutterSize + 'px'\n      } : {\n        height: this.props.gutterSize + 'px'\n      };\n      var gutter = index !== this.props.children.length - 1 && /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this5.gutterElement = el;\n        },\n        className: 'p-splitter-gutter',\n        style: gutterStyle,\n        onMouseDown: function onMouseDown(event) {\n          return _this5.onGutterMouseDown(event, index);\n        },\n        onTouchStart: function onTouchStart(event) {\n          return _this5.onGutterTouchStart(event, index);\n        },\n        onTouchMove: function onTouchMove(event) {\n          return _this5.onGutterTouchMove(event);\n        },\n        onTouchEnd: function onTouchEnd(event) {\n          return _this5.onGutterTouchEnd(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-splitter-gutter-handle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }));\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this5.panelElement = el;\n        },\n        key: index,\n        className: panelClassName,\n        style: panel.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }, panel.props.children), gutter);\n    }\n  }, {\n    key: \"renderPanels\",\n    value: function renderPanels() {\n      var _this6 = this;\n\n      return React.Children.map(this.props.children, function (panel, index) {\n        return _this6.renderPanel(panel, index);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var className = classNames(\"p-splitter p-component p-splitter-\".concat(this.props.layout), this.props.className);\n      var panels = this.renderPanels();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this7.container = el;\n        },\n        id: this.id,\n        className: className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }, panels);\n    }\n  }]);\n\n  return Splitter;\n}(Component);\nSplitter.defaultProps = {\n  id: null,\n  className: null,\n  style: null,\n  layout: 'horizontal',\n  gutterSize: 4,\n  stateKey: null,\n  stateStorage: 'session',\n  onResizeEnd: null\n};\nSplitter.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  layout: PropTypes.string,\n  gutterSize: PropTypes.number,\n  stateKey: PropTypes.string,\n  stateStorage: PropTypes.string,\n  onResizeEnd: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/splitter/Splitter.js"],"names":["React","Component","PropTypes","classNames","UniqueComponentId","DomHandler","SplitterPanel","defaultProps","size","minSize","style","className","propTypes","header","number","object","string","Splitter","props","id","mouseMoveListener","event","onResize","document","addEventListener","mouseUpListener","onResizeEnd","unbindMouseListeners","newPrevPanelSize","newNextPanelSize","children","removeEventListener","dragging","startPos","prevPanelElement","nextPanelElement","prevPanelSize","nextPanelSize","gutterElement","prevPanelIndex","stateKey","stateStorage","window","localStorage","sessionStorage","Error","getStorage","setItem","JSON","stringify","panelSizes","storage","stateString","getItem","parse","container","filter","child","hasClass","forEach","i","flexBasis","length","gutterSize","index","currentTarget","horizontal","getWidth","getHeight","layout","pageX","pageY","previousElementSibling","nextElementSibling","getOuterWidth","getOuterHeight","addClass","newPos","validateResize","isStateful","saveState","originalEvent","sizes","removeClass","clear","onResizeStart","bindMouseListeners","windowTouchMoveListener","onGutterTouchMove","bind","windowTouchEndListener","onGutterTouchEnd","passive","cancelable","panelElement","childNodes","find","initialized","restoreState","_panelSizes","map","panel","panelInitialSize","panelSize","panelClassName","gutterStyle","width","height","gutter","el","onGutterMouseDown","onGutterTouchStart","Children","renderPanel","panels","renderPanels","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,WAAaC,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAmCL,SAAnC;AAAaK,a,CAEFC,Y,GAAe;AAClBC,EAAAA,IAAI,EAAE,IADY;AAElBC,EAAAA,OAAO,EAAE,IAFS;AAGlBC,EAAAA,KAAK,EAAE,IAHW;AAIlBC,EAAAA,SAAS,EAAE;AAJO,C;AAFbL,a,CASFM,S,GAAY;AACfC,EAAAA,MAAM,EAAEX,SAAS,CAACY,MADH;AAEfL,EAAAA,OAAO,EAAEP,SAAS,CAACY,MAFJ;AAGfJ,EAAAA,KAAK,EAAER,SAAS,CAACa,MAHF;AAIfJ,EAAAA,SAAS,EAAET,SAAS,CAACc;AAJN,C;AAQvB,WAAaC,QAAb;AAAA;;AAAA;;AAwBI,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+BAAMA,KAAN;AAEA,UAAKC,EAAL,GAAU,MAAKD,KAAL,CAAWC,EAAX,IAAiBf,iBAAiB,EAA5C;AAHe;AAIlB;;AA5BL;AAAA;AAAA,WA8BI,8BAAqB;AAAA;;AACjB,UAAI,CAAC,KAAKgB,iBAAV,EAA6B;AACzB,aAAKA,iBAAL,GAAyB,UAAAC,KAAK;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAcD,KAAd,CAAJ;AAAA,SAA9B;;AACAE,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKJ,iBAA5C;AACH;;AAED,UAAI,CAAC,KAAKK,eAAV,EAA2B;AACvB,aAAKA,eAAL,GAAuB,UAAAJ,KAAK,EAAI;AAC5B,UAAA,MAAI,CAACK,WAAL,CAAiBL,KAAjB;;AACA,UAAA,MAAI,CAACM,oBAAL;AACH,SAHD;;AAIAJ,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKC,eAA1C;AACH;AACJ;AA3CL;AAAA;AAAA,WA6CI,wBAAeG,gBAAf,EAAiCC,gBAAjC,EAAmD;AAC/C,UAAI,KAAKX,KAAL,CAAWY,QAAX,CAAoB,CAApB,EAAuBZ,KAAvB,IAAgC,KAAKA,KAAL,CAAWY,QAAX,CAAoB,CAApB,EAAuBZ,KAAvB,CAA6BT,OAA7D,IAAwE,KAAKS,KAAL,CAAWY,QAAX,CAAoB,CAApB,EAAuBZ,KAAvB,CAA6BT,OAA7B,GAAuCmB,gBAAnH,EAAqI;AACjI,eAAO,KAAP;AACH;;AAED,UAAI,KAAKV,KAAL,CAAWY,QAAX,CAAoB,CAApB,EAAuBZ,KAAvB,IAAgC,KAAKA,KAAL,CAAWY,QAAX,CAAoB,CAApB,EAAuBZ,KAAvB,CAA6BT,OAA7D,IAAwE,KAAKS,KAAL,CAAWY,QAAX,CAAoB,CAApB,EAAuBZ,KAAvB,CAA6BT,OAA7B,GAAuCoB,gBAAnH,EAAqI;AACjI,eAAO,KAAP;AACH;;AAED,aAAO,IAAP;AACH;AAvDL;AAAA;AAAA,WAyDI,gCAAuB;AACnB,UAAI,KAAKT,iBAAT,EAA4B;AACxBG,QAAAA,QAAQ,CAACQ,mBAAT,CAA6B,WAA7B,EAA0C,KAAKX,iBAA/C;AACA,aAAKA,iBAAL,GAAyB,IAAzB;AACH;;AAED,UAAI,KAAKK,eAAT,EAA0B;AACtBF,QAAAA,QAAQ,CAACQ,mBAAT,CAA6B,SAA7B,EAAwC,KAAKN,eAA7C;AACA,aAAKA,eAAL,GAAuB,IAAvB;AACH;AACJ;AAnEL;AAAA;AAAA,WAqEI,iBAAQ;AACJ,WAAKO,QAAL,GAAgB,KAAhB;AACA,WAAKxB,IAAL,GAAY,IAAZ;AACA,WAAKyB,QAAL,GAAgB,IAAhB;AACA,WAAKC,gBAAL,GAAwB,IAAxB;AACA,WAAKC,gBAAL,GAAwB,IAAxB;AACA,WAAKC,aAAL,GAAqB,IAArB;AACA,WAAKC,aAAL,GAAqB,IAArB;AACA,WAAKC,aAAL,GAAqB,IAArB;AACA,WAAKC,cAAL,GAAsB,IAAtB;AACH;AA/EL;AAAA;AAAA,WAiFI,sBAAa;AACT,aAAO,KAAKrB,KAAL,CAAWsB,QAAX,IAAuB,IAA9B;AACH;AAnFL;AAAA;AAAA,WAqFI,sBAAa;AACT,cAAQ,KAAKtB,KAAL,CAAWuB,YAAnB;AACI,aAAK,OAAL;AACI,iBAAOC,MAAM,CAACC,YAAd;;AAEJ,aAAK,SAAL;AACI,iBAAOD,MAAM,CAACE,cAAd;;AAEJ;AACI,gBAAM,IAAIC,KAAJ,CAAU,KAAK3B,KAAL,CAAWuB,YAAX,GAA0B,0FAApC,CAAN;AARR;AAUH;AAhGL;AAAA;AAAA,WAkGI,qBAAY;AACR,WAAKK,UAAL,GAAkBC,OAAlB,CAA0B,KAAK7B,KAAL,CAAWsB,QAArC,EAA+CQ,IAAI,CAACC,SAAL,CAAe,KAAKC,UAApB,CAA/C;AACH;AApGL;AAAA;AAAA,WAsGI,wBAAe;AAAA;;AACX,UAAMC,OAAO,GAAG,KAAKL,UAAL,EAAhB;AACA,UAAMM,WAAW,GAAGD,OAAO,CAACE,OAAR,CAAgB,KAAKnC,KAAL,CAAWsB,QAA3B,CAApB;;AAEA,UAAIY,WAAJ,EAAiB;AACb,aAAKF,UAAL,GAAkBF,IAAI,CAACM,KAAL,CAAWF,WAAX,CAAlB;;AACA,YAAItB,QAAQ,GAAG,mBAAI,KAAKyB,SAAL,CAAezB,QAAnB,EAA6B0B,MAA7B,CAAoC,UAAAC,KAAK;AAAA,iBAAIpD,UAAU,CAACqD,QAAX,CAAoBD,KAApB,EAA2B,kBAA3B,CAAJ;AAAA,SAAzC,CAAf;;AACA3B,QAAAA,QAAQ,CAAC6B,OAAT,CAAiB,UAACF,KAAD,EAAQG,CAAR,EAAc;AAC3BH,UAAAA,KAAK,CAAC/C,KAAN,CAAYmD,SAAZ,GAAwB,UAAU,MAAI,CAACX,UAAL,CAAgBU,CAAhB,CAAV,GAA+B,MAA/B,GAAyC,CAAC,MAAI,CAAC1C,KAAL,CAAWY,QAAX,CAAoBgC,MAApB,GAA6B,CAA9B,IAAmC,MAAI,CAAC5C,KAAL,CAAW6C,UAAvF,GAAqG,KAA7H;AACH,SAFD;AAIA,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;AArHL;AAAA;AAAA,WAuHI,uBAAc1C,KAAd,EAAqB2C,KAArB,EAA4B;AACxB,WAAK1B,aAAL,GAAqBjB,KAAK,CAAC4C,aAA3B;AACA,WAAKzD,IAAL,GAAY,KAAK0D,UAAL,GAAkB7D,UAAU,CAAC8D,QAAX,CAAoB,KAAKZ,SAAzB,CAAlB,GAAwDlD,UAAU,CAAC+D,SAAX,CAAqB,KAAKb,SAA1B,CAApE;AACA,WAAKvB,QAAL,GAAgB,IAAhB;AACA,WAAKC,QAAL,GAAgB,KAAKf,KAAL,CAAWmD,MAAX,KAAsB,YAAtB,GAAqChD,KAAK,CAACiD,KAA3C,GAAmDjD,KAAK,CAACkD,KAAzE;AACA,WAAKrC,gBAAL,GAAwB,KAAKI,aAAL,CAAmBkC,sBAA3C;AACA,WAAKrC,gBAAL,GAAwB,KAAKG,aAAL,CAAmBmC,kBAA3C;AACA,WAAKrC,aAAL,GAAqB,OAAO,KAAKlB,KAAL,CAAWmD,MAAX,KAAsB,YAAtB,GAAqChE,UAAU,CAACqE,aAAX,CAAyB,KAAKxC,gBAA9B,EAAgD,IAAhD,CAArC,GAA6F7B,UAAU,CAACsE,cAAX,CAA0B,KAAKzC,gBAA/B,EAAiD,IAAjD,CAApG,IAA8J,KAAK1B,IAAxL;AACA,WAAK6B,aAAL,GAAqB,OAAO,KAAKnB,KAAL,CAAWmD,MAAX,KAAsB,YAAtB,GAAqChE,UAAU,CAACqE,aAAX,CAAyB,KAAKvC,gBAA9B,EAAgD,IAAhD,CAArC,GAA6F9B,UAAU,CAACsE,cAAX,CAA0B,KAAKxC,gBAA/B,EAAiD,IAAjD,CAApG,IAA8J,KAAK3B,IAAxL;AACA,WAAK+B,cAAL,GAAsByB,KAAtB;AACA3D,MAAAA,UAAU,CAACuE,QAAX,CAAoB,KAAKtC,aAAzB,EAAwC,4BAAxC;AACAjC,MAAAA,UAAU,CAACuE,QAAX,CAAoB,KAAKrB,SAAzB,EAAoC,qBAApC;AACH;AAnIL;AAAA;AAAA,WAqII,kBAASlC,KAAT,EAAgB;AACZ,UAAIwD,MAAJ;AACA,UAAI,KAAK3D,KAAL,CAAWmD,MAAX,KAAsB,YAA1B,EACIQ,MAAM,GAAIxD,KAAK,CAACiD,KAAN,GAAc,GAAd,GAAoB,KAAK9D,IAA1B,GAAmC,KAAKyB,QAAL,GAAgB,GAAhB,GAAsB,KAAKzB,IAAvE,CADJ,KAGIqE,MAAM,GAAIxD,KAAK,CAACkD,KAAN,GAAc,GAAd,GAAoB,KAAK/D,IAA1B,GAAmC,KAAKyB,QAAL,GAAgB,GAAhB,GAAsB,KAAKzB,IAAvE;AAEJ,UAAIoB,gBAAgB,GAAG,KAAKQ,aAAL,GAAqByC,MAA5C;AACA,UAAIhD,gBAAgB,GAAG,KAAKQ,aAAL,GAAqBwC,MAA5C;;AAEA,UAAI,KAAKC,cAAL,CAAoBlD,gBAApB,EAAsCC,gBAAtC,CAAJ,EAA6D;AACzD,aAAKK,gBAAL,CAAsBxB,KAAtB,CAA4BmD,SAA5B,GAAwC,UAAUjC,gBAAV,GAA6B,MAA7B,GAAuC,CAAC,KAAKV,KAAL,CAAWY,QAAX,CAAoBgC,MAApB,GAA6B,CAA9B,IAAmC,KAAK5C,KAAL,CAAW6C,UAArF,GAAmG,KAA3I;AACA,aAAK5B,gBAAL,CAAsBzB,KAAtB,CAA4BmD,SAA5B,GAAwC,UAAUhC,gBAAV,GAA6B,MAA7B,GAAuC,CAAC,KAAKX,KAAL,CAAWY,QAAX,CAAoBgC,MAApB,GAA6B,CAA9B,IAAmC,KAAK5C,KAAL,CAAW6C,UAArF,GAAmG,KAA3I;AACA,aAAKb,UAAL,CAAgB,KAAKX,cAArB,IAAuCX,gBAAvC;AACA,aAAKsB,UAAL,CAAgB,KAAKX,cAAL,GAAsB,CAAtC,IAA2CV,gBAA3C;AACH;AACJ;AArJL;AAAA;AAAA,WAuJI,qBAAYR,KAAZ,EAAmB;AACf,UAAI,KAAK0D,UAAL,EAAJ,EAAuB;AACnB,aAAKC,SAAL;AACH;;AAED,UAAI,KAAK9D,KAAL,CAAWQ,WAAf,EAA4B;AACxB,aAAKR,KAAL,CAAWQ,WAAX,CAAuB;AACnBuD,UAAAA,aAAa,EAAE5D,KADI;AAEnB6D,UAAAA,KAAK,EAAE,KAAKhC;AAFO,SAAvB;AAIH;;AAED7C,MAAAA,UAAU,CAAC8E,WAAX,CAAuB,KAAK7C,aAA5B,EAA2C,4BAA3C;AACAjC,MAAAA,UAAU,CAAC8E,WAAX,CAAuB,KAAK5B,SAA5B,EAAuC,qBAAvC;AACA,WAAK6B,KAAL;AACH;AAtKL;AAAA;AAAA,WAwKI,2BAAkB/D,KAAlB,EAAyB2C,KAAzB,EAAgC;AAC5B,WAAKqB,aAAL,CAAmBhE,KAAnB,EAA0B2C,KAA1B;AACA,WAAKsB,kBAAL;AACH;AA3KL;AAAA;AAAA,WA6KI,4BAAmBjE,KAAnB,EAA0B2C,KAA1B,EAAiC;AAC7B,WAAKqB,aAAL,CAAmBhE,KAAnB,EAA0B2C,KAA1B;AAEA,WAAKuB,uBAAL,GAA+B,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAA/B;AACA,WAAKC,sBAAL,GAA8B,KAAKC,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAA9B;AACA/C,MAAAA,MAAM,CAAClB,gBAAP,CAAwB,WAAxB,EAAqC,KAAK+D,uBAA1C,EAAmE;AAAEK,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAAnE;AACAnD,MAAAA,MAAM,CAAClB,gBAAP,CAAwB,UAAxB,EAAoC,KAAKkE,sBAAzC;AAEH;AArLL;AAAA;AAAA,WAuLI,2BAAkBrE,KAAlB,EAAyB;AACrB,WAAKC,QAAL,CAAcD,KAAd;AACH;AAzLL;AAAA;AAAA,WA2LI,0BAAiBA,KAAjB,EAAwB;AACpB,WAAKK,WAAL,CAAiBL,KAAjB;AAEAqB,MAAAA,MAAM,CAACX,mBAAP,CAA2B,WAA3B,EAAwC,KAAKwD,uBAA7C;AACA7C,MAAAA,MAAM,CAACX,mBAAP,CAA2B,UAA3B,EAAuC,KAAK2D,sBAA5C;AACA,WAAKH,uBAAL,GAA+B,IAA/B;AACA,WAAKG,sBAAL,GAA8B,IAA9B;AACH;AAlML;AAAA;AAAA,WAoMI,6BAAoB;AAAA;;AAChB,UAAI,KAAKI,YAAT,EAAuB;AACnB,YAAI,KAAKA,YAAL,CAAkBC,UAAlB,IAAgC1F,UAAU,CAAC2F,IAAX,CAAgB,KAAKF,YAArB,EAAmC,aAAnC,CAApC,EAAuF;AACnFzF,UAAAA,UAAU,CAACuE,QAAX,CAAoB,KAAKkB,YAAzB,EAAuC,yBAAvC;AACH;AACJ;;AAED,UAAI,KAAK5E,KAAL,CAAWY,QAAX,IAAuB,KAAKZ,KAAL,CAAWY,QAAX,CAAoBgC,MAA/C,EAAuD;AACnD,YAAImC,WAAW,GAAG,KAAlB;;AACA,YAAI,KAAKlB,UAAL,EAAJ,EAAuB;AACnBkB,UAAAA,WAAW,GAAG,KAAKC,YAAL,EAAd;AACH;;AAED,YAAI,CAACD,WAAL,EAAkB;AACd,cAAInE,QAAQ,GAAG,mBAAI,KAAKyB,SAAL,CAAezB,QAAnB,EAA6B0B,MAA7B,CAAoC,UAAAC,KAAK;AAAA,mBAAIpD,UAAU,CAACqD,QAAX,CAAoBD,KAApB,EAA2B,kBAA3B,CAAJ;AAAA,WAAzC,CAAf;;AACA,cAAI0C,WAAW,GAAG,EAAlB;AAEA,eAAKjF,KAAL,CAAWY,QAAX,CAAoBsE,GAApB,CAAwB,UAACC,KAAD,EAAQzC,CAAR,EAAc;AAClC,gBAAI0C,gBAAgB,GAAGD,KAAK,CAACnF,KAAN,IAAemF,KAAK,CAACnF,KAAN,CAAYV,IAA3B,GAAkC6F,KAAK,CAACnF,KAAN,CAAYV,IAA9C,GAAqD,IAA5E;AACA,gBAAI+F,SAAS,GAAGD,gBAAgB,IAAK,MAAM,MAAI,CAACpF,KAAL,CAAWY,QAAX,CAAoBgC,MAA/D;AACAqC,YAAAA,WAAW,CAACvC,CAAD,CAAX,GAAiB2C,SAAjB;AACAzE,YAAAA,QAAQ,CAAC8B,CAAD,CAAR,CAAYlD,KAAZ,CAAkBmD,SAAlB,GAA8B,UAAU0C,SAAV,GAAsB,MAAtB,GAAgC,CAAC,MAAI,CAACrF,KAAL,CAAWY,QAAX,CAAoBgC,MAApB,GAA6B,CAA9B,IAAmC,MAAI,CAAC5C,KAAL,CAAW6C,UAA9E,GAA4F,KAA1H;AACA,mBAAOoC,WAAP;AACH,WAND;AAQA,eAAKjD,UAAL,GAAkBiD,WAAlB;AACH;AACJ;AACJ;AAhOL;AAAA;AAAA,WAkOI,qBAAYE,KAAZ,EAAmBrC,KAAnB,EAA0B;AAAA;;AACtB,UAAMwC,cAAc,GAAGrG,UAAU,CAAC,kBAAD,EAAqBkG,KAAK,CAACnF,KAAN,CAAYP,SAAjC,CAAjC;AACA,UAAM8F,WAAW,GAAG,KAAKvF,KAAL,CAAWmD,MAAX,KAAsB,YAAtB,GAAqC;AAAEqC,QAAAA,KAAK,EAAE,KAAKxF,KAAL,CAAW6C,UAAX,GAAwB;AAAjC,OAArC,GAA+E;AAAE4C,QAAAA,MAAM,EAAE,KAAKzF,KAAL,CAAW6C,UAAX,GAAwB;AAAlC,OAAnG;AACA,UAAM6C,MAAM,GAAI5C,KAAK,KAAK,KAAK9C,KAAL,CAAWY,QAAX,CAAoBgC,MAApB,GAA6B,CAAxC,iBACX;AAAK,QAAA,GAAG,EAAE,aAAC+C,EAAD;AAAA,iBAAQ,MAAI,CAACvE,aAAL,GAAqBuE,EAA7B;AAAA,SAAV;AAA2C,QAAA,SAAS,EAAE,mBAAtD;AAA2E,QAAA,KAAK,EAAEJ,WAAlF;AAA+F,QAAA,WAAW,EAAE,qBAAApF,KAAK;AAAA,iBAAI,MAAI,CAACyF,iBAAL,CAAuBzF,KAAvB,EAA8B2C,KAA9B,CAAJ;AAAA,SAAjH;AACI,QAAA,YAAY,EAAE,sBAAA3C,KAAK;AAAA,iBAAI,MAAI,CAAC0F,kBAAL,CAAwB1F,KAAxB,EAA+B2C,KAA/B,CAAJ;AAAA,SADvB;AACkE,QAAA,WAAW,EAAE,qBAAA3C,KAAK;AAAA,iBAAI,MAAI,CAACmE,iBAAL,CAAuBnE,KAAvB,CAAJ;AAAA,SADpF;AACuH,QAAA,UAAU,EAAE,oBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACsE,gBAAL,CAAsBtE,KAAtB,CAAJ;AAAA,SADxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAOA,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAE,aAACwF,EAAD;AAAA,iBAAQ,MAAI,CAACf,YAAL,GAAoBe,EAA5B;AAAA,SAAV;AAA0C,QAAA,GAAG,EAAE7C,KAA/C;AAAsD,QAAA,SAAS,EAAEwC,cAAjE;AAAiF,QAAA,KAAK,EAAEH,KAAK,CAACnF,KAAN,CAAYR,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK2F,KAAK,CAACnF,KAAN,CAAYY,QADjB,CADJ,EAIK8E,MAJL,CADJ;AAQH;AApPL;AAAA;AAAA,WAsPI,wBAAe;AAAA;;AACX,aACI5G,KAAK,CAACgH,QAAN,CAAeZ,GAAf,CAAmB,KAAKlF,KAAL,CAAWY,QAA9B,EAAwC,UAACuE,KAAD,EAAQrC,KAAR,EAAkB;AACtD,eAAO,MAAI,CAACiD,WAAL,CAAiBZ,KAAjB,EAAwBrC,KAAxB,CAAP;AACH,OAFD,CADJ;AAKH;AA5PL;AAAA;AAAA,WA8PI,kBAAS;AAAA;;AACL,UAAMrD,SAAS,GAAGR,UAAU,6CAAsC,KAAKe,KAAL,CAAWmD,MAAjD,GAA2D,KAAKnD,KAAL,CAAWP,SAAtE,CAA5B;AACA,UAAMuG,MAAM,GAAG,KAAKC,YAAL,EAAf;AAEA,0BACI;AAAK,QAAA,GAAG,EAAE,aAACN,EAAD;AAAA,iBAAQ,MAAI,CAACtD,SAAL,GAAiBsD,EAAzB;AAAA,SAAV;AAAuC,QAAA,EAAE,EAAE,KAAK1F,EAAhD;AAAoD,QAAA,SAAS,EAAER,SAA/D;AAA0E,QAAA,KAAK,EAAE,KAAKO,KAAL,CAAWR,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKwG,MADL,CADJ;AAKH;AAvQL;;AAAA;AAAA,EAA8BjH,SAA9B;AAAagB,Q,CAEFV,Y,GAAe;AAClBY,EAAAA,EAAE,EAAE,IADc;AAElBR,EAAAA,SAAS,EAAE,IAFO;AAGlBD,EAAAA,KAAK,EAAE,IAHW;AAIlB2D,EAAAA,MAAM,EAAE,YAJU;AAKlBN,EAAAA,UAAU,EAAE,CALM;AAMlBvB,EAAAA,QAAQ,EAAE,IANQ;AAOlBC,EAAAA,YAAY,EAAE,SAPI;AAQlBf,EAAAA,WAAW,EAAE;AARK,C;AAFbT,Q,CAaFL,S,GAAY;AACfO,EAAAA,EAAE,EAAEjB,SAAS,CAACc,MADC;AAEfL,EAAAA,SAAS,EAAET,SAAS,CAACc,MAFN;AAGfN,EAAAA,KAAK,EAAER,SAAS,CAACa,MAHF;AAIfsD,EAAAA,MAAM,EAAEnE,SAAS,CAACc,MAJH;AAKf+C,EAAAA,UAAU,EAAE7D,SAAS,CAACY,MALP;AAMf0B,EAAAA,QAAQ,EAAEtC,SAAS,CAACc,MANL;AAOfyB,EAAAA,YAAY,EAAEvC,SAAS,CAACc,MAPT;AAQfU,EAAAA,WAAW,EAAExB,SAAS,CAACkH;AARR,C","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport DomHandler from '../utils/DomHandler';\r\n\r\nexport class SplitterPanel extends Component {\r\n\r\n    static defaultProps = {\r\n        size: null,\r\n        minSize: null,\r\n        style: null,\r\n        className: null\r\n    }\r\n\r\n    static propTypes = {\r\n        header: PropTypes.number,\r\n        minSize: PropTypes.number,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string\r\n    }\r\n}\r\n\r\nexport class Splitter extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        className: null,\r\n        style: null,\r\n        layout: 'horizontal',\r\n        gutterSize: 4,\r\n        stateKey: null,\r\n        stateStorage: 'session',\r\n        onResizeEnd: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        style: PropTypes.object,\r\n        layout: PropTypes.string,\r\n        gutterSize: PropTypes.number,\r\n        stateKey: PropTypes.string,\r\n        stateStorage: PropTypes.string,\r\n        onResizeEnd: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n    }\r\n\r\n    bindMouseListeners() {\r\n        if (!this.mouseMoveListener) {\r\n            this.mouseMoveListener = event => this.onResize(event)\r\n            document.addEventListener('mousemove', this.mouseMoveListener);\r\n        }\r\n\r\n        if (!this.mouseUpListener) {\r\n            this.mouseUpListener = event => {\r\n                this.onResizeEnd(event);\r\n                this.unbindMouseListeners();\r\n            }\r\n            document.addEventListener('mouseup', this.mouseUpListener);\r\n        }\r\n    }\r\n\r\n    validateResize(newPrevPanelSize, newNextPanelSize) {\r\n        if (this.props.children[0].props && this.props.children[0].props.minSize && this.props.children[0].props.minSize > newPrevPanelSize) {\r\n            return false;\r\n        }\r\n\r\n        if (this.props.children[1].props && this.props.children[1].props.minSize && this.props.children[1].props.minSize > newNextPanelSize) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    unbindMouseListeners() {\r\n        if (this.mouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.mouseMoveListener);\r\n            this.mouseMoveListener = null;\r\n        }\r\n\r\n        if (this.mouseUpListener) {\r\n            document.removeEventListener('mouseup', this.mouseUpListener);\r\n            this.mouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.dragging = false;\r\n        this.size = null;\r\n        this.startPos = null;\r\n        this.prevPanelElement = null;\r\n        this.nextPanelElement = null;\r\n        this.prevPanelSize = null;\r\n        this.nextPanelSize = null;\r\n        this.gutterElement = null;\r\n        this.prevPanelIndex = null;\r\n    }\r\n\r\n    isStateful() {\r\n        return this.props.stateKey != null;\r\n    }\r\n\r\n    getStorage() {\r\n        switch (this.props.stateStorage) {\r\n            case 'local':\r\n                return window.localStorage;\r\n\r\n            case 'session':\r\n                return window.sessionStorage;\r\n\r\n            default:\r\n                throw new Error(this.props.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\r\n        }\r\n    }\r\n\r\n    saveState() {\r\n        this.getStorage().setItem(this.props.stateKey, JSON.stringify(this.panelSizes));\r\n    }\r\n\r\n    restoreState() {\r\n        const storage = this.getStorage();\r\n        const stateString = storage.getItem(this.props.stateKey);\r\n\r\n        if (stateString) {\r\n            this.panelSizes = JSON.parse(stateString);\r\n            let children = [...this.container.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\r\n            children.forEach((child, i) => {\r\n                child.style.flexBasis = 'calc(' + this.panelSizes[i] + '% - ' + ((this.props.children.length - 1) * this.props.gutterSize) + 'px)';\r\n            });\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onResizeStart(event, index) {\r\n        this.gutterElement = event.currentTarget;\r\n        this.size = this.horizontal ? DomHandler.getWidth(this.container) : DomHandler.getHeight(this.container);\r\n        this.dragging = true;\r\n        this.startPos = this.props.layout === 'horizontal' ? event.pageX : event.pageY;\r\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\r\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\r\n        this.prevPanelSize = 100 * (this.props.layout === 'horizontal' ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\r\n        this.nextPanelSize = 100 * (this.props.layout === 'horizontal' ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\r\n        this.prevPanelIndex = index;\r\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\r\n        DomHandler.addClass(this.container, 'p-splitter-resizing');\r\n    }\r\n\r\n    onResize(event) {\r\n        let newPos;\r\n        if (this.props.layout === 'horizontal')\r\n            newPos = (event.pageX * 100 / this.size) - (this.startPos * 100 / this.size);\r\n        else\r\n            newPos = (event.pageY * 100 / this.size) - (this.startPos * 100 / this.size);\r\n\r\n        let newPrevPanelSize = this.prevPanelSize + newPos;\r\n        let newNextPanelSize = this.nextPanelSize - newPos;\r\n\r\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\r\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + ((this.props.children.length - 1) * this.props.gutterSize) + 'px)';\r\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + ((this.props.children.length - 1) * this.props.gutterSize) + 'px)';\r\n            this.panelSizes[this.prevPanelIndex] = newPrevPanelSize;\r\n            this.panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\r\n        }\r\n    }\r\n\r\n    onResizeEnd(event) {\r\n        if (this.isStateful()) {\r\n            this.saveState();\r\n        }\r\n\r\n        if (this.props.onResizeEnd) {\r\n            this.props.onResizeEnd({\r\n                originalEvent: event,\r\n                sizes: this.panelSizes\r\n            })\r\n        }\r\n\r\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\r\n        DomHandler.removeClass(this.container, 'p-splitter-resizing');\r\n        this.clear();\r\n    }\r\n\r\n    onGutterMouseDown(event, index) {\r\n        this.onResizeStart(event, index);\r\n        this.bindMouseListeners();\r\n    }\r\n\r\n    onGutterTouchStart(event, index) {\r\n        this.onResizeStart(event, index);\r\n\r\n        this.windowTouchMoveListener = this.onGutterTouchMove.bind(this);\r\n        this.windowTouchEndListener = this.onGutterTouchEnd.bind(this);\r\n        window.addEventListener('touchmove', this.windowTouchMoveListener, { passive: false, cancelable: false });\r\n        window.addEventListener('touchend', this.windowTouchEndListener);\r\n\r\n    }\r\n\r\n    onGutterTouchMove(event) {\r\n        this.onResize(event);\r\n    }\r\n\r\n    onGutterTouchEnd(event) {\r\n        this.onResizeEnd(event);\r\n\r\n        window.removeEventListener('touchmove', this.windowTouchMoveListener);\r\n        window.removeEventListener('touchend', this.windowTouchEndListener);\r\n        this.windowTouchMoveListener = null;\r\n        this.windowTouchEndListener = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.panelElement) {\r\n            if (this.panelElement.childNodes && DomHandler.find(this.panelElement, '.p-splitter')) {\r\n                DomHandler.addClass(this.panelElement, 'p-splitter-panel-nested');\r\n            }\r\n        }\r\n\r\n        if (this.props.children && this.props.children.length) {\r\n            let initialized = false;\r\n            if (this.isStateful()) {\r\n                initialized = this.restoreState();\r\n            }\r\n\r\n            if (!initialized) {\r\n                let children = [...this.container.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\r\n                let _panelSizes = [];\r\n\r\n                this.props.children.map((panel, i) => {\r\n                    let panelInitialSize = panel.props && panel.props.size ? panel.props.size : null;\r\n                    let panelSize = panelInitialSize || (100 / this.props.children.length);\r\n                    _panelSizes[i] = panelSize;\r\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + ((this.props.children.length - 1) * this.props.gutterSize) + 'px)';\r\n                    return _panelSizes;\r\n                });\r\n\r\n                this.panelSizes = _panelSizes;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderPanel(panel, index) {\r\n        const panelClassName = classNames('p-splitter-panel', panel.props.className);\r\n        const gutterStyle = this.props.layout === 'horizontal' ? { width: this.props.gutterSize + 'px' } : { height: this.props.gutterSize + 'px' }\r\n        const gutter = (index !== this.props.children.length - 1) && (\r\n            <div ref={(el) => this.gutterElement = el} className={'p-splitter-gutter'} style={gutterStyle} onMouseDown={event => this.onGutterMouseDown(event, index)}\r\n                onTouchStart={event => this.onGutterTouchStart(event, index)} onTouchMove={event => this.onGutterTouchMove(event)} onTouchEnd={event => this.onGutterTouchEnd(event)}>\r\n                <div className=\"p-splitter-gutter-handle\"></div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div ref={(el) => this.panelElement = el} key={index} className={panelClassName} style={panel.props.style}>\r\n                    {panel.props.children}\r\n                </div>\r\n                {gutter}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderPanels() {\r\n        return (\r\n            React.Children.map(this.props.children, (panel, index) => {\r\n                return this.renderPanel(panel, index);\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const className = classNames(`p-splitter p-component p-splitter-${this.props.layout}`, this.props.className);\r\n        const panels = this.renderPanels();\r\n\r\n        return (\r\n            <div ref={(el) => this.container = el} id={this.id} className={className} style={this.props.style}>\r\n                {panels}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}