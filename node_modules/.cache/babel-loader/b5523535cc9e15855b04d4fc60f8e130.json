{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\chart\\\\ComboChartDemo.js\";\nimport React, { Component } from 'react';\nimport { TabView } from '../../components/tabview/TabView';\nimport { Chart } from '../../components/chart/Chart';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport AppContentContext from '../../AppContentContext';\nexport var ComboChartDemo = /*#__PURE__*/function (_Component) {\n  _inherits(ComboChartDemo, _Component);\n\n  var _super = _createSuper(ComboChartDemo);\n\n  function ComboChartDemo(props) {\n    var _this;\n\n    _classCallCheck(this, ComboChartDemo);\n\n    _this = _super.call(this, props);\n    _this.chartData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        type: 'line',\n        label: 'Dataset 1',\n        borderColor: '#42A5F5',\n        borderWidth: 2,\n        fill: false,\n        data: [50, 25, 12, 48, 56, 76, 42]\n      }, {\n        type: 'bar',\n        label: 'Dataset 2',\n        backgroundColor: '#66BB6A',\n        data: [21, 84, 24, 75, 37, 65, 34],\n        borderColor: 'white',\n        borderWidth: 2\n      }, {\n        type: 'bar',\n        label: 'Dataset 3',\n        backgroundColor: '#FFA726',\n        data: [41, 52, 24, 74, 23, 21, 32]\n      }]\n    };\n    _this.lightOptions = {\n      legend: {\n        labels: {\n          fontColor: '#495057'\n        }\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            fontColor: '#495057'\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            fontColor: '#495057'\n          }\n        }]\n      }\n    };\n    _this.darkOptions = {\n      legend: {\n        labels: {\n          fontColor: '#ebedef'\n        }\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            fontColor: '#ebedef'\n          },\n          gridLines: {\n            color: 'rgba(255,255,255,0.2)'\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            fontColor: '#ebedef'\n          },\n          gridLines: {\n            color: 'rgba(255,255,255,0.2)'\n          }\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ComboChartDemo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, \"Combo Chart\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, \"Different chart types can be combined in the same graph.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AppContentContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, function (context) {\n        var options = context.darkTheme ? _this2.darkOptions : _this2.lightOptions;\n        return /*#__PURE__*/React.createElement(Chart, {\n          type: \"bar\",\n          data: _this2.chartData,\n          options: options,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 44\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(ComboChartDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ComboChartDemo;\n}(Component);\nexport var ComboChartDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(ComboChartDemoDoc, _Component2);\n\n  var _super2 = _createSuper(ComboChartDemoDoc);\n\n  function ComboChartDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, ComboChartDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class ComboChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.chartData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [{\\n                type: 'line',\\n                label: 'Dataset 1',\\n                borderColor: '#42A5F5',\\n                borderWidth: 2,\\n                fill: false,\\n                data: [\\n                    50,\\n                    25,\\n                    12,\\n                    48,\\n                    56,\\n                    76,\\n                    42\\n                ]\\n            }, {\\n                type: 'bar',\\n                label: 'Dataset 2',\\n                backgroundColor: '#66BB6A',\\n                data: [\\n                    21,\\n                    84,\\n                    24,\\n                    75,\\n                    37,\\n                    65,\\n                    34\\n                ],\\n                borderColor: 'white',\\n                borderWidth: 2\\n            }, {\\n                type: 'bar',\\n                label: 'Dataset 3',\\n                backgroundColor: '#FFA726',\\n                data: [\\n                    41,\\n                    52,\\n                    24,\\n                    74,\\n                    23,\\n                    21,\\n                    32\\n                ]\\n            }]\\n        };\\n\\n        this.lightOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"card\\\">\\n                <Chart type=\\\"bar\\\" data={this.chartData} options={this.lightOptions} />\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst ComboChartDemo = () => {\\n    const chartData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            type: 'line',\\n            label: 'Dataset 1',\\n            borderColor: '#42A5F5',\\n            borderWidth: 2,\\n            fill: false,\\n            data: [\\n                50,\\n                25,\\n                12,\\n                48,\\n                56,\\n                76,\\n                42\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 2',\\n            backgroundColor: '#66BB6A',\\n            data: [\\n                21,\\n                84,\\n                24,\\n                75,\\n                37,\\n                65,\\n                34\\n            ],\\n            borderColor: 'white',\\n            borderWidth: 2\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 3',\\n            backgroundColor: '#FFA726',\\n            data: [\\n                41,\\n                52,\\n                24,\\n                74,\\n                23,\\n                21,\\n                32\\n            ]\\n        }]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scales: {\\n            xAxes: [{\\n                ticks: {\\n                    fontColor: '#495057'\\n                }\\n            }],\\n            yAxes: [{\\n                ticks: {\\n                    fontColor: '#495057'\\n                }\\n            }]\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"bar\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst ComboChartDemo = () => {\\n    const chartData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            type: 'line',\\n            label: 'Dataset 1',\\n            borderColor: '#42A5F5',\\n            borderWidth: 2,\\n            fill: false,\\n            data: [\\n                50,\\n                25,\\n                12,\\n                48,\\n                56,\\n                76,\\n                42\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 2',\\n            backgroundColor: '#66BB6A',\\n            data: [\\n                21,\\n                84,\\n                24,\\n                75,\\n                37,\\n                65,\\n                34\\n            ],\\n            borderColor: 'white',\\n            borderWidth: 2\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 3',\\n            backgroundColor: '#FFA726',\\n            data: [\\n                41,\\n                52,\\n                24,\\n                74,\\n                23,\\n                21,\\n                32\\n            ]\\n        }]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scales: {\\n            xAxes: [{\\n                ticks: {\\n                    fontColor: '#495057'\\n                }\\n            }],\\n            yAxes: [{\\n                ticks: {\\n                    fontColor: '#495057'\\n                }\\n            }]\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"bar\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(ComboChartDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'ComboChartDemo',\n        sources: this.sources,\n        dependencies: {\n          'chart.js': '2.7.3'\n        }\n      })));\n    }\n  }]);\n\n  return ComboChartDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/chart/ComboChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","ComboChartDemo","props","chartData","labels","datasets","type","label","borderColor","borderWidth","fill","data","backgroundColor","lightOptions","legend","fontColor","scales","xAxes","ticks","yAxes","darkOptions","gridLines","color","context","options","darkTheme","ComboChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class ComboChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                type: 'line',\r\n                label: 'Dataset 1',\r\n                borderColor: '#42A5F5',\r\n                borderWidth: 2,\r\n                fill: false,\r\n                data: [\r\n                    50,\r\n                    25,\r\n                    12,\r\n                    48,\r\n                    56,\r\n                    76,\r\n                    42\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#66BB6A',\r\n                data: [\r\n                    21,\r\n                    84,\r\n                    24,\r\n                    75,\r\n                    37,\r\n                    65,\r\n                    34\r\n                ],\r\n                borderColor: 'white',\r\n                borderWidth: 2\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 3',\r\n                backgroundColor: '#FFA726',\r\n                data: [\r\n                    41,\r\n                    52,\r\n                    24,\r\n                    74,\r\n                    23,\r\n                    21,\r\n                    32\r\n                ]\r\n            }]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        this.darkOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>Combo Chart</h1>\r\n                        <p>Different chart types can be combined in the same graph.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <AppContentContext.Consumer>\r\n                            {\r\n                                context => {\r\n                                    let options = context.darkTheme ? this.darkOptions : this.lightOptions;\r\n\r\n                                    return <Chart type=\"bar\" data={this.chartData} options={options} />\r\n                                }\r\n                            }\r\n                        </AppContentContext.Consumer>\r\n                    </div>\r\n                </div>\r\n\r\n                <ComboChartDemoDoc></ComboChartDemoDoc>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ComboChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class ComboChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                type: 'line',\r\n                label: 'Dataset 1',\r\n                borderColor: '#42A5F5',\r\n                borderWidth: 2,\r\n                fill: false,\r\n                data: [\r\n                    50,\r\n                    25,\r\n                    12,\r\n                    48,\r\n                    56,\r\n                    76,\r\n                    42\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#66BB6A',\r\n                data: [\r\n                    21,\r\n                    84,\r\n                    24,\r\n                    75,\r\n                    37,\r\n                    65,\r\n                    34\r\n                ],\r\n                borderColor: 'white',\r\n                borderWidth: 2\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 3',\r\n                backgroundColor: '#FFA726',\r\n                data: [\r\n                    41,\r\n                    52,\r\n                    24,\r\n                    74,\r\n                    23,\r\n                    21,\r\n                    32\r\n                ]\r\n            }]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <Chart type=\"bar\" data={this.chartData} options={this.lightOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst ComboChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            type: 'line',\r\n            label: 'Dataset 1',\r\n            borderColor: '#42A5F5',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            data: [\r\n                50,\r\n                25,\r\n                12,\r\n                48,\r\n                56,\r\n                76,\r\n                42\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#66BB6A',\r\n            data: [\r\n                21,\r\n                84,\r\n                24,\r\n                75,\r\n                37,\r\n                65,\r\n                34\r\n            ],\r\n            borderColor: 'white',\r\n            borderWidth: 2\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 3',\r\n            backgroundColor: '#FFA726',\r\n            data: [\r\n                41,\r\n                52,\r\n                24,\r\n                74,\r\n                23,\r\n                21,\r\n                32\r\n            ]\r\n        }]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }]\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"bar\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst ComboChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            type: 'line',\r\n            label: 'Dataset 1',\r\n            borderColor: '#42A5F5',\r\n            borderWidth: 2,\r\n            fill: false,\r\n            data: [\r\n                50,\r\n                25,\r\n                12,\r\n                48,\r\n                56,\r\n                76,\r\n                42\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#66BB6A',\r\n            data: [\r\n                21,\r\n                84,\r\n                24,\r\n                75,\r\n                37,\r\n                65,\r\n                34\r\n            ],\r\n            borderColor: 'white',\r\n            borderWidth: 2\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 3',\r\n            backgroundColor: '#FFA726',\r\n            data: [\r\n                41,\r\n                52,\r\n                24,\r\n                74,\r\n                23,\r\n                21,\r\n                32\r\n            ]\r\n        }]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }]\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"bar\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'ComboChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}