{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\overlaypanel\\\\OverlayPanelDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var OverlayPanelDoc = /*#__PURE__*/function (_Component) {\n  _inherits(OverlayPanelDoc, _Component);\n\n  var _super = _createSuper(OverlayPanelDoc);\n\n  function OverlayPanelDoc(props) {\n    var _this;\n\n    _classCallCheck(this, OverlayPanelDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { OverlayPanel } from 'primereact/overlaypanel';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport { Column } from 'primereact/column';\\nimport { DataTable } from 'primereact/datatable';\\nimport ProductService from '../service/ProductService';\\nimport './OverlayPanelDemo.css';\\n\\nexport class OverlayPanelDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: null,\\n            selectedProduct: null\\n        };\\n\\n        this.productService = new ProductService();\\n        this.onProductSelect = this.onProductSelect.bind(this);\\n        this.imageBody = this.imageBody.bind(this);\\n        this.priceBody = this.priceBody.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    formatCurrency(value) {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    onProductSelect(e) {\\n        this.setState({ selectedProduct: e.value }, () => {\\n            this.op.hide();\\n            this.toast.show({severity:'info', summary: 'Product Selected', detail: this.state.selectedProduct.name, life: 3000});\\n        });\\n    }\\n\\n    imageBody(rowData) {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />\\n    }\\n\\n    priceBody(rowData) {\\n        return this.formatCurrency(rowData.price);\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"overlaypanel-demo\\\">\\n                <Toast ref={(el) => this.toast = el} />\\n\\n                <div className=\\\"card\\\">\\n                    <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" label={this.state.selectedProduct ? this.state.selectedProduct.name : 'Select a Product'} onClick={(e) => this.op.toggle(e)} aria-haspopup aria-controls=\\\"overlay_panel\\\" className=\\\"select-product-button\\\" />\\n\\n                    <OverlayPanel ref={(el) => this.op = el} showCloseIcon id=\\\"overlay_panel\\\" style={{width: '450px'}}>\\n                        <DataTable value={this.state.products} selectionMode=\\\"single\\\" paginator rows={5}\\n                            selection={this.state.selectedProduct} onSelectionChange={this.onProductSelect}>\\n                            <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                            <Column header=\\\"Image\\\" body={this.imageBody} />\\n                            <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={this.priceBody} />\\n                        </DataTable>\\n                    </OverlayPanel>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { OverlayPanel } from 'primereact/overlaypanel';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport { Column } from 'primereact/column';\\nimport { DataTable } from 'primereact/datatable';\\nimport ProductService from '../service/ProductService';\\nimport './OverlayPanelDemo.css';\\n\\nconst OverlayPanelDemo = () => {\\n    const [products, setProducts] = useState(null);\\n    const [selectedProduct, setSelectedProduct] = useState(null);\\n    const productService = new ProductService();\\n    const op = useRef(null);\\n    const toast = useRef(null);\\n    const isMounted = useRef(false);\\n\\n    useEffect(() => {\\n        if (isMounted.current) {\\n            op.current.hide();\\n            toast.current.show({severity:'info', summary: 'Product Selected', detail: selectedProduct.name, life: 3000});\\n        }\\n    }, [selectedProduct]); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    useEffect(() => {\\n        isMounted.current = true;\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const onProductSelect = (e) => {\\n        setSelectedProduct(e.value);\\n    }\\n\\n    const imageBody = (rowData) => {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />\\n    }\\n\\n    const priceBody = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div className=\\\"overlaypanel-demo\\\">\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" label={selectedProduct ? selectedProduct.name : 'Select a Product'} onClick={(e) => op.current.toggle(e)} aria-haspopup aria-controls=\\\"overlay_panel\\\" className=\\\"select-product-button\\\" />\\n\\n                <OverlayPanel ref={op} showCloseIcon id=\\\"overlay_panel\\\" style={{width: '450px'}}>\\n                    <DataTable value={products} selectionMode=\\\"single\\\" paginator rows={5}\\n                        selection={selectedProduct} onSelectionChange={onProductSelect}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                        <Column header=\\\"Image\\\" body={imageBody} />\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={priceBody} />\\n                    </DataTable>\\n                </OverlayPanel>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { OverlayPanel } from 'primereact/overlaypanel';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport { Column } from 'primereact/column';\\nimport { DataTable } from 'primereact/datatable';\\nimport ProductService from '../service/ProductService';\\nimport './OverlayPanelDemo.css';\\n\\nconst OverlayPanelDemo = () => {\\n    const [products, setProducts] = useState(null);\\n    const [selectedProduct, setSelectedProduct] = useState(null);\\n    const productService = new ProductService();\\n    const op = useRef(null);\\n    const toast = useRef(null);\\n    const isMounted = useRef(false);\\n\\n    useEffect(() => {\\n        if (isMounted.current) {\\n            op.current.hide();\\n            toast.current.show({severity:'info', summary: 'Product Selected', detail: selectedProduct.name, life: 3000});\\n        }\\n    }, [selectedProduct]); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    useEffect(() => {\\n        isMounted.current = true;\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const onProductSelect = (e) => {\\n        setSelectedProduct(e.value);\\n    }\\n\\n    const imageBody = (rowData) => {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />\\n    }\\n\\n    const priceBody = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div className=\\\"overlaypanel-demo\\\">\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" label={selectedProduct ? selectedProduct.name : 'Select a Product'} onClick={(e) => op.current.toggle(e)} aria-haspopup aria-controls=\\\"overlay_panel\\\" className=\\\"select-product-button\\\" />\\n\\n                <OverlayPanel ref={op} showCloseIcon id=\\\"overlay_panel\\\" style={{width: '450px'}}>\\n                    <DataTable value={products} selectionMode=\\\"single\\\" paginator rows={5}\\n                        selection={selectedProduct} onSelectionChange={onProductSelect}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                        <Column header=\\\"Image\\\" body={imageBody} />\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={priceBody} />\\n                    </DataTable>\\n                </OverlayPanel>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    _this.extFiles = {\n      'src/demo/OverlayPanelDemo.css': {\n        content: \"\\n.overlaypanel-demo .select-product-button {\\n    min-width: 15rem;\\n}\\n\\n.overlaypanel-demo .product-image {\\n    width: 50px;\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(OverlayPanelDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 1\n        }\n      }, \"\\nimport { OverlayPanel } from 'primereact/overlaypanel';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, \"OverlayPanel is accessed via its reference where visibility is controlled using toggle, show and hide methods.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 1\n        }\n      }, \"\\n<Button type=\\\"button\\\" label=\\\"Basic\\\" onClick={(e) => op.current.toggle(e)} />\\n\\n<OverlayPanel ref={op}>\\n    // Content\\n</OverlayPanel>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }, \"Dismissable and CloseIcon\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }, \"Clicking outside the overlay hides the panel, setting dismissable to false disables this behavior. Additionally enablign showCloseIcon property displays a close icon at the top right corner to close the panel.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 1\n        }\n      }, \"\\n<OverlayPanel ref={op} showCloseIcon dismissable>\\n    // Content\\n</OverlayPanel>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 29\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 29\n        }\n      }, \"dismissable\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 29\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 29\n        }\n      }, \"Enables to hide the overlay when outside is clicked.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }\n      }, \"showCloseIcon\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 29\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 29\n        }\n      }, \"When enabled, displays a close icon at top right corner.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 29\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 29\n        }\n      }, \"Inline style of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 29\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 29\n        }\n      }, \"Style class of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 29\n        }\n      }, \"appendTo\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 29\n        }\n      }, \"DOM element\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 29\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 29\n        }\n      }, \"DOM element instance where the dialog should be mounted.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }\n      }, \"ariaCloseLabel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 29\n        }\n      }, \"close\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 29\n        }\n      }, \"Aria label of the close icon.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 29\n        }\n      }, \"onHide\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 29\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 29\n        }\n      }, \"Callback to invoke when overlay gets hidden.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }\n      }, \"Methods\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 29\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 29\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 29\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 29\n        }\n      }, \"toggle\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 29\n        }\n      }, \"event: Browser event\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 29\n        }\n      }, \"Toggles the visiblity of the overlay.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 29\n        }\n      }, \"show\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 29\n        }\n      }, \"event: Browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 54\n        }\n      }), \"target: Optional target if event.target should not be used\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 29\n        }\n      }, \"Shows the overlay.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 29\n        }\n      }, \"hide\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 29\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 29\n        }\n      }, \"Hides the overlay.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }\n      }, \"Following is the list of structural style classes, for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 93\n        }\n      }, \" theming\"), \" page.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 29\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 29\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 29\n        }\n      }, \"p-overlaypanel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 29\n        }\n      }, \"Container element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 29\n        }\n      }, \"p-overlaypanel-content\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 29\n        }\n      }, \"Content of the panel.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 29\n        }\n      }, \"p-overlaypanel-close\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 29\n        }\n      }, \"Close icon.\")))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 17\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }\n      }, \"None.\"))), useLiveEditorTabs({\n        name: 'OverlayPanelDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products-small',\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return OverlayPanelDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/overlaypanel/OverlayPanelDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","OverlayPanelDoc","props","sources","tabName","content","extFiles","name","service","data"],"mappings":"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","sourcesContent":["import React, { Component}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class OverlayPanelDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { OverlayPanel } from 'primereact/overlaypanel';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport ProductService from '../service/ProductService';\r\nimport './OverlayPanelDemo.css';\r\n\r\nexport class OverlayPanelDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: null,\r\n            selectedProduct: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.onProductSelect = this.onProductSelect.bind(this);\r\n        this.imageBody = this.imageBody.bind(this);\r\n        this.priceBody = this.priceBody.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    onProductSelect(e) {\r\n        this.setState({ selectedProduct: e.value }, () => {\r\n            this.op.hide();\r\n            this.toast.show({severity:'info', summary: 'Product Selected', detail: this.state.selectedProduct.name, life: 3000});\r\n        });\r\n    }\r\n\r\n    imageBody(rowData) {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />\r\n    }\r\n\r\n    priceBody(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"overlaypanel-demo\">\r\n                <Toast ref={(el) => this.toast = el} />\r\n\r\n                <div className=\"card\">\r\n                    <Button type=\"button\" icon=\"pi pi-search\" label={this.state.selectedProduct ? this.state.selectedProduct.name : 'Select a Product'} onClick={(e) => this.op.toggle(e)} aria-haspopup aria-controls=\"overlay_panel\" className=\"select-product-button\" />\r\n\r\n                    <OverlayPanel ref={(el) => this.op = el} showCloseIcon id=\"overlay_panel\" style={{width: '450px'}}>\r\n                        <DataTable value={this.state.products} selectionMode=\"single\" paginator rows={5}\r\n                            selection={this.state.selectedProduct} onSelectionChange={this.onProductSelect}>\r\n                            <Column field=\"name\" header=\"Name\" sortable />\r\n                            <Column header=\"Image\" body={this.imageBody} />\r\n                            <Column field=\"price\" header=\"Price\" sortable body={this.priceBody} />\r\n                        </DataTable>\r\n                    </OverlayPanel>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { OverlayPanel } from 'primereact/overlaypanel';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport ProductService from '../service/ProductService';\r\nimport './OverlayPanelDemo.css';\r\n\r\nconst OverlayPanelDemo = () => {\r\n    const [products, setProducts] = useState(null);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const productService = new ProductService();\r\n    const op = useRef(null);\r\n    const toast = useRef(null);\r\n    const isMounted = useRef(false);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            op.current.hide();\r\n            toast.current.show({severity:'info', summary: 'Product Selected', detail: selectedProduct.name, life: 3000});\r\n        }\r\n    }, [selectedProduct]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const onProductSelect = (e) => {\r\n        setSelectedProduct(e.value);\r\n    }\r\n\r\n    const imageBody = (rowData) => {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />\r\n    }\r\n\r\n    const priceBody = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div className=\"overlaypanel-demo\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <Button type=\"button\" icon=\"pi pi-search\" label={selectedProduct ? selectedProduct.name : 'Select a Product'} onClick={(e) => op.current.toggle(e)} aria-haspopup aria-controls=\"overlay_panel\" className=\"select-product-button\" />\r\n\r\n                <OverlayPanel ref={op} showCloseIcon id=\"overlay_panel\" style={{width: '450px'}}>\r\n                    <DataTable value={products} selectionMode=\"single\" paginator rows={5}\r\n                        selection={selectedProduct} onSelectionChange={onProductSelect}>\r\n                        <Column field=\"name\" header=\"Name\" sortable />\r\n                        <Column header=\"Image\" body={imageBody} />\r\n                        <Column field=\"price\" header=\"Price\" sortable body={priceBody} />\r\n                    </DataTable>\r\n                </OverlayPanel>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { OverlayPanel } from 'primereact/overlaypanel';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport ProductService from '../service/ProductService';\r\nimport './OverlayPanelDemo.css';\r\n\r\nconst OverlayPanelDemo = () => {\r\n    const [products, setProducts] = useState(null);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const productService = new ProductService();\r\n    const op = useRef(null);\r\n    const toast = useRef(null);\r\n    const isMounted = useRef(false);\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            op.current.hide();\r\n            toast.current.show({severity:'info', summary: 'Product Selected', detail: selectedProduct.name, life: 3000});\r\n        }\r\n    }, [selectedProduct]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const onProductSelect = (e) => {\r\n        setSelectedProduct(e.value);\r\n    }\r\n\r\n    const imageBody = (rowData) => {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />\r\n    }\r\n\r\n    const priceBody = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div className=\"overlaypanel-demo\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <Button type=\"button\" icon=\"pi pi-search\" label={selectedProduct ? selectedProduct.name : 'Select a Product'} onClick={(e) => op.current.toggle(e)} aria-haspopup aria-controls=\"overlay_panel\" className=\"select-product-button\" />\r\n\r\n                <OverlayPanel ref={op} showCloseIcon id=\"overlay_panel\" style={{width: '450px'}}>\r\n                    <DataTable value={products} selectionMode=\"single\" paginator rows={5}\r\n                        selection={selectedProduct} onSelectionChange={onProductSelect}>\r\n                        <Column field=\"name\" header=\"Name\" sortable />\r\n                        <Column header=\"Image\" body={imageBody} />\r\n                        <Column field=\"price\" header=\"Price\" sortable body={priceBody} />\r\n                    </DataTable>\r\n                </OverlayPanel>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'src/demo/OverlayPanelDemo.css': {\r\n                content: `\r\n.overlaypanel-demo .select-product-button {\r\n    min-width: 15rem;\r\n}\r\n\r\n.overlaypanel-demo .product-image {\r\n    width: 50px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { OverlayPanel } from 'primereact/overlaypanel';\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Getting Started</h5>\r\n            <p>OverlayPanel is accessed via its reference where visibility is controlled using toggle, show and hide methods.</p>\r\n<CodeHighlight>\r\n{`\r\n<Button type=\"button\" label=\"Basic\" onClick={(e) => op.current.toggle(e)} />\r\n\r\n<OverlayPanel ref={op}>\r\n    // Content\r\n</OverlayPanel>\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Dismissable and CloseIcon</h5>\r\n            <p>Clicking outside the overlay hides the panel, setting dismissable to false disables this behavior.\r\n               Additionally enablign showCloseIcon property displays a close icon at the top right corner to close the panel.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<OverlayPanel ref={op} showCloseIcon dismissable>\r\n    // Content\r\n</OverlayPanel>\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Properties</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Default</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>id</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Unique identifier of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>dismissable</td>\r\n                            <td>boolean</td>\r\n                            <td>true</td>\r\n                            <td>Enables to hide the overlay when outside is clicked.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>showCloseIcon</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When enabled, displays a close icon at top right corner.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>style</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>appendTo</td>\r\n                            <td>DOM element</td>\r\n                            <td>null</td>\r\n                            <td>DOM element instance where the dialog should be mounted.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ariaCloseLabel</td>\r\n                            <td>string</td>\r\n                            <td>close</td>\r\n                            <td>Aria label of the close icon.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Events</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Parameters</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>onHide</td>\r\n                            <td>-</td>\r\n                            <td>Callback to invoke when overlay gets hidden.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Methods</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Parameters</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>toggle</td>\r\n                            <td>event: Browser event</td>\r\n                            <td>Toggles the visiblity of the overlay.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>show</td>\r\n                            <td>event: Browser event <br />\r\n                                target: Optional target if event.target should not be used</td>\r\n                            <td>Shows the overlay.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>hide</td>\r\n                            <td>-</td>\r\n                            <td>Hides the overlay.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Styling</h5>\r\n            <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Element</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>p-overlaypanel</td>\r\n                            <td>Container element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-overlaypanel-content</td>\r\n                            <td>Content of the panel.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-overlaypanel-close</td>\r\n                            <td>Close icon.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <h5>Dependencies</h5>\r\n                <p>None.</p>\r\n            </div>\r\n\r\n            </TabPanel>\r\n\r\n            {\r\n                useLiveEditorTabs({ name: 'OverlayPanelDemo', sources: this.sources, service: 'ProductService', data: 'products-small', extFiles: this.extFiles })\r\n            }\r\n        </TabView>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}