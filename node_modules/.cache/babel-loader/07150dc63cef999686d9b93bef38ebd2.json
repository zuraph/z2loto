{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'../../components/datatable/DataTable';import{Column}from'../../components/column/Column';import{CustomerService}from'../service/CustomerService';import{InputText}from'../../components/inputtext/InputText';import{MultiSelect}from'../../components/multiselect/MultiSelect';import{Dropdown}from'../../components/dropdown/Dropdown';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var DataTableStateDemo=/*#__PURE__*/function(_Component){_inherits(DataTableStateDemo,_Component);var _super=_createSuper(DataTableStateDemo);function DataTableStateDemo(props){var _this;_classCallCheck(this,DataTableStateDemo);_this=_super.call(this,props);_this.state={customers:null,globalFilter1:null,globalFilter2:null,globalFilter3:null,selectedCustomer1:null,selectedCustomer2:null,selectedCustomer3:null,selectedRepresentative:null,selectedStatus:null};_this.representatives=[{name:\"Amy Elsner\",image:'amyelsner.png'},{name:\"Anna Fali\",image:'annafali.png'},{name:\"Asiya Javayant\",image:'asiyajavayant.png'},{name:\"Bernardo Dominic\",image:'bernardodominic.png'},{name:\"Elwin Sharvill\",image:'elwinsharvill.png'},{name:\"Ioni Bowcher\",image:'ionibowcher.png'},{name:\"Ivan Magalhaes\",image:'ivanmagalhaes.png'},{name:\"Onyama Limba\",image:'onyamalimba.png'},{name:\"Stephen Shaw\",image:'stephenshaw.png'},{name:\"XuXue Feng\",image:'xuxuefeng.png'}];_this.statuses=['unqualified','qualified','new','negotiation','renewal','proposal'];_this.customerService=new CustomerService();_this.onCustomSaveState=_this.onCustomSaveState.bind(_assertThisInitialized(_this));_this.onCustomRestoreState=_this.onCustomRestoreState.bind(_assertThisInitialized(_this));return _this;}_createClass(DataTableStateDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.customerService.getCustomersMedium().then(function(data){return _this2.setState({customers:data});});}},{key:\"onCustomSaveState\",value:function onCustomSaveState(state){window.sessionStorage.setItem('dt-state-demo-custom',JSON.stringify(state));}},{key:\"onCustomRestoreState\",value:function onCustomRestoreState(){return JSON.parse(window.sessionStorage.getItem('dt-state-demo-custom'));}},{key:\"countryBodyTemplate\",value:function countryBodyTemplate(rowData){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{alt:rowData.country.code,src:\"showcase/demo/images/flag_placeholder.png\",onError:function onError(e){return e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';},className:\"flag flag-\".concat(rowData.country.code),width:\"30\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"image-text\"},rowData.country.name));}},{key:\"representativeBodyTemplate\",value:function representativeBodyTemplate(rowData){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"img\",{alt:rowData.representative.name,src:\"showcase/demo/images/avatar/\".concat(rowData.representative.image),onError:function onError(e){return e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';},width:\"32\",style:{verticalAlign:'middle'}}),/*#__PURE__*/React.createElement(\"span\",{className:\"image-text\"},rowData.representative.name));}},{key:\"statusBodyTemplate\",value:function statusBodyTemplate(rowData){return/*#__PURE__*/React.createElement(\"span\",{className:\"customer-badge status-\".concat(rowData.status)},rowData.status);}},{key:\"renderHeader\",value:function renderHeader(globalFilterKey){var _this3=this;return/*#__PURE__*/React.createElement(\"span\",{className:\"p-input-icon-left\"},/*#__PURE__*/React.createElement(\"i\",{className:\"pi pi-search\"}),/*#__PURE__*/React.createElement(InputText,{type:\"search\",onInput:function onInput(e){return _this3.setState(_defineProperty({},\"\".concat(globalFilterKey),e.target.value));},placeholder:\"Global Search\"}));}},{key:\"render\",value:function render(){var _this4=this;var header1=this.renderHeader('globalFilter1');var header2=this.renderHeader('globalFilter2');var header3=this.renderHeader('globalFilter3');var representativeFilter=/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.selectedRepresentative,options:this.representatives,onChange:function onChange(e){return _this4.setState({selectedRepresentative:e.value});},optionLabel:\"name\",optionValue:\"name\",placeholder:\"All\",className:\"p-column-filter\"});var statusFilter=/*#__PURE__*/React.createElement(Dropdown,{value:this.state.selectedStatus,options:this.statuses,onChange:function onChange(e){return _this4.setState({selectedStatus:e.value});},placeholder:\"Select a Status\",className:\"p-column-filter\",showClear:true});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"dataTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DataTable \",/*#__PURE__*/React.createElement(\"span\",null,\"State\")),/*#__PURE__*/React.createElement(\"p\",null,\"Stateful table allows keeping the state such as page, sort and filtering either at local storage or session storage so that when the page is visited again, table would render the data using its last settings.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Session Storage\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.customers,paginator:true,rows:10,header:header1,selection:this.state.selectedCustomer1,onSelectionChange:function onSelectionChange(e){return _this4.setState({selectedCustomer1:e.value});},selectionMode:\"single\",dataKey:\"id\",stateStorage:\"session\",stateKey:\"dt-state-demo-session\",emptyMessage:\"No customers found.\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true,filter:true,filterPlaceholder:\"Search by name\"}),/*#__PURE__*/React.createElement(Column,{header:\"Country\",body:this.countryBodyTemplate,sortable:true,sortField:\"country.name\",filter:true,filterField:\"country.name\",filterMatchMode:\"contains\",filterPlaceholder:\"Search by country\"}),/*#__PURE__*/React.createElement(Column,{header:\"Representative\",body:this.representativeBodyTemplate,sortable:true,sortField:\"representative.name\",filter:true,filterField:\"representative.name\",filterMatchMode:\"in\",filterElement:representativeFilter}),/*#__PURE__*/React.createElement(Column,{field:\"status\",header:\"Status\",body:this.statusBodyTemplate,sortable:true,filter:true,filterMatchMode:\"equals\",filterElement:statusFilter}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Local Storage\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.customers,paginator:true,rows:10,header:header2,selection:this.state.selectedCustomer2,onSelectionChange:function onSelectionChange(e){return _this4.setState({selectedCustomer2:e.value});},selectionMode:\"single\",dataKey:\"id\",stateStorage:\"local\",stateKey:\"dt-state-demo-local\",emptyMessage:\"No customers found.\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true,filter:true,filterPlaceholder:\"Search by name\"}),/*#__PURE__*/React.createElement(Column,{header:\"Country\",body:this.countryBodyTemplate,sortable:true,sortField:\"country.name\",filter:true,filterField:\"country.name\",filterMatchMode:\"contains\",filterPlaceholder:\"Search by country\"}),/*#__PURE__*/React.createElement(Column,{header:\"Representative\",body:this.representativeBodyTemplate,sortable:true,sortField:\"representative.name\",filter:true,filterField:\"representative.name\",filterMatchMode:\"in\",filterElement:representativeFilter}),/*#__PURE__*/React.createElement(Column,{field:\"status\",header:\"Status\",body:this.statusBodyTemplate,sortable:true,filter:true,filterMatchMode:\"equals\",filterElement:statusFilter}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Custom Storage\"),/*#__PURE__*/React.createElement(DataTable,{value:this.state.customers,paginator:true,rows:10,header:header3,selection:this.state.selectedCustomer3,onSelectionChange:function onSelectionChange(e){return _this4.setState({selectedCustomer3:e.value});},selectionMode:\"single\",dataKey:\"id\",stateStorage:\"custom\",customSaveState:this.onCustomSaveState,customRestoreState:this.onCustomRestoreState,emptyMessage:\"No customers found.\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true,filter:true,filterPlaceholder:\"Search by name\"}),/*#__PURE__*/React.createElement(Column,{header:\"Country\",body:this.countryBodyTemplate,sortable:true,sortField:\"country.name\",filter:true,filterField:\"country.name\",filterMatchMode:\"contains\",filterPlaceholder:\"Search by country\"}),/*#__PURE__*/React.createElement(Column,{header:\"Representative\",body:this.representativeBodyTemplate,sortable:true,sortField:\"representative.name\",filter:true,filterField:\"representative.name\",filterMatchMode:\"in\",filterElement:representativeFilter}),/*#__PURE__*/React.createElement(Column,{field:\"status\",header:\"Status\",body:this.statusBodyTemplate,sortable:true,filter:true,filterMatchMode:\"equals\",filterElement:statusFilter})))),/*#__PURE__*/React.createElement(DataTableStateDemoDoc,null));}}]);return DataTableStateDemo;}(Component);export var DataTableStateDemoDoc=/*#__PURE__*/function(_Component2){_inherits(DataTableStateDemoDoc,_Component2);var _super2=_createSuper(DataTableStateDemoDoc);function DataTableStateDemoDoc(props){var _this5;_classCallCheck(this,DataTableStateDemoDoc);_this5=_super2.call(this,props);_this5.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { CustomerService } from '../service/CustomerService';\\nimport { InputText } from 'primereact/inputtext';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport { Dropdown } from 'primereact/dropdown';\\n\\nexport class DataTableStateDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            customers: null,\\n            globalFilter1: null,\\n            globalFilter2: null,\\n            globalFilter3: null,\\n            selectedCustomer1: null,\\n            selectedCustomer2: null,\\n            selectedCustomer3: null,\\n            selectedRepresentative: null,\\n            selectedStatus: null\\n        };\\n\\n        this.representatives = [\\n            { name: \\\"Amy Elsner\\\", image: 'amyelsner.png' },\\n            { name: \\\"Anna Fali\\\", image: 'annafali.png' },\\n            { name: \\\"Asiya Javayant\\\", image: 'asiyajavayant.png' },\\n            { name: \\\"Bernardo Dominic\\\", image: 'bernardodominic.png' },\\n            { name: \\\"Elwin Sharvill\\\", image: 'elwinsharvill.png' },\\n            { name: \\\"Ioni Bowcher\\\", image: 'ionibowcher.png' },\\n            { name: \\\"Ivan Magalhaes\\\", image: 'ivanmagalhaes.png' },\\n            { name: \\\"Onyama Limba\\\", image: 'onyamalimba.png' },\\n            { name: \\\"Stephen Shaw\\\", image: 'stephenshaw.png' },\\n            { name: \\\"XuXue Feng\\\", image: 'xuxuefeng.png' }\\n        ];\\n\\n        this.statuses = [\\n            'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\\n        ];\\n\\n        this.customerService = new CustomerService();\\n        this.onCustomSaveState = this.onCustomSaveState.bind(this);\\n        this.onCustomRestoreState = this.onCustomRestoreState.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\\n    }\\n\\n    onCustomSaveState(state) {\\n        window.sessionStorage.setItem('dt-state-demo-custom', JSON.stringify(state));\\n    }\\n\\n    onCustomRestoreState() {\\n        return JSON.parse(window.sessionStorage.getItem('dt-state-demo-custom'));\\n    }\\n\\n    countryBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.code} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    representativeBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    statusBodyTemplate(rowData) {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    renderHeader(globalFilterKey) {\\n        return (\\n            <span className=\\\"p-input-icon-left\\\">\\n                <i className=\\\"pi pi-search\\\" />\\n                <InputText type=\\\"search\\\" onInput={(e) => this.setState({ [`${globalFilterKey}`]: e.target.value })} placeholder=\\\"Global Search\\\" />\\n            </span>\\n        );\\n    }\\n\\n    render() {\\n        const header1 = this.renderHeader('globalFilter1');\\n        const header2 = this.renderHeader('globalFilter2');\\n        const header3 = this.renderHeader('globalFilter3');\\n        const representativeFilter = <MultiSelect value={this.state.selectedRepresentative} options={this.representatives} onChange={(e) => this.setState({ selectedRepresentative: e.value })} optionLabel=\\\"name\\\" optionValue=\\\"name\\\" placeholder=\\\"All\\\" className=\\\"p-column-filter\\\" />;\\n        const statusFilter = <Dropdown value={this.state.selectedStatus} options={this.statuses} onChange={(e) => this.setState({ selectedStatus: e.value })} placeholder=\\\"Select a Status\\\" className=\\\"p-column-filter\\\" showClear />;\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Session Storage</h5>\\n                    <DataTable value={this.state.customers} paginator rows={10} header={header1}\\n                        selection={this.state.selectedCustomer1} onSelectionChange={e => this.setState({ selectedCustomer1: e.value })} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                        stateStorage=\\\"session\\\" stateKey=\\\"dt-state-demo-session\\\" emptyMessage=\\\"No customers found.\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                        <Column header=\\\"Country\\\" body={this.countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                        <Column header=\\\"Representative\\\" body={this.representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Local Storage</h5>\\n                    <DataTable value={this.state.customers} paginator rows={10} header={header2}\\n                        selection={this.state.selectedCustomer2} onSelectionChange={e => this.setState({ selectedCustomer2: e.value })} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                        stateStorage=\\\"local\\\" stateKey=\\\"dt-state-demo-local\\\" emptyMessage=\\\"No customers found.\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                        <Column header=\\\"Country\\\" body={this.countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                        <Column header=\\\"Representative\\\" body={this.representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Custom Storage</h5>\\n                    <DataTable value={this.state.customers} paginator rows={10} header={header3}\\n                        selection={this.state.selectedCustomer3} onSelectionChange={e => this.setState({ selectedCustomer3: e.value })} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                        stateStorage=\\\"custom\\\" customSaveState={this.onCustomSaveState} customRestoreState={this.onCustomRestoreState} emptyMessage=\\\"No customers found.\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                        <Column header=\\\"Country\\\" body={this.countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                        <Column header=\\\"Representative\\\" body={this.representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { CustomerService } from '../service/CustomerService';\\nimport { InputText } from 'primereact/inputtext';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport { Dropdown } from 'primereact/dropdown';\\n\\nconst DataTableStateDemo = () => {\\n    const [customers, setCustomers] = useState(null);\\n    const [globalFilter1, setGlobalFilter1] = useState(null);\\n    const [globalFilter2, setGlobalFilter2] = useState(null);\\n    const [globalFilter3, setGlobalFilter3] = useState(null);\\n    const [selectedCustomer1, setSelectedCustomer1] = useState(null);\\n    const [selectedCustomer2, setSelectedCustomer2] = useState(null);\\n    const [selectedCustomer3, setSelectedCustomer3] = useState(null);\\n    const [selectedRepresentative, setSelectedRepresentative] = useState(null);\\n    const [selectedStatus, setSelectedStatus] = useState(null);\\n    const representatives = [\\n        { name: \\\"Amy Elsner\\\", image: 'amyelsner.png' },\\n        { name: \\\"Anna Fali\\\", image: 'annafali.png' },\\n        { name: \\\"Asiya Javayant\\\", image: 'asiyajavayant.png' },\\n        { name: \\\"Bernardo Dominic\\\", image: 'bernardodominic.png' },\\n        { name: \\\"Elwin Sharvill\\\", image: 'elwinsharvill.png' },\\n        { name: \\\"Ioni Bowcher\\\", image: 'ionibowcher.png' },\\n        { name: \\\"Ivan Magalhaes\\\", image: 'ivanmagalhaes.png' },\\n        { name: \\\"Onyama Limba\\\", image: 'onyamalimba.png' },\\n        { name: \\\"Stephen Shaw\\\", image: 'stephenshaw.png' },\\n        { name: \\\"XuXue Feng\\\", image: 'xuxuefeng.png' }\\n    ];\\n\\n    const dataTableFuncMap = {\\n        'globalFilter1': setGlobalFilter1,\\n        'globalFilter2': setGlobalFilter2,\\n        'globalFilter3': setGlobalFilter3\\n    };\\n\\n    const statuses = [\\n        'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\\n    ];\\n\\n    const customerService = new CustomerService();\\n\\n    useEffect(() => {\\n        customerService.getCustomersMedium().then(data => setCustomers(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onCustomSaveState = (state) => {\\n        window.sessionStorage.setItem('dt-state-demo-custom', JSON.stringify(state));\\n    }\\n\\n    const onCustomRestoreState = () => {\\n        return JSON.parse(window.sessionStorage.getItem('dt-state-demo-custom'));\\n    }\\n\\n    const countryBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.code} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const representativeBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    const renderHeader = (globalFilterKey) => {\\n        return (\\n            <span className=\\\"p-input-icon-left\\\">\\n                <i className=\\\"pi pi-search\\\" />\\n                <InputText type=\\\"search\\\" onInput={(e) => dataTableFuncMap[`${globalFilterKey}`](e.target.value)} placeholder=\\\"Global Search\\\" />\\n            </span>\\n        );\\n    }\\n\\n    const header1 = renderHeader('globalFilter1');\\n    const header2 = renderHeader('globalFilter2');\\n    const header3 = renderHeader('globalFilter3');\\n    const representativeFilter = <MultiSelect value={selectedRepresentative} options={representatives} onChange={(e) => setSelectedRepresentative(e.value)} optionLabel=\\\"name\\\" optionValue=\\\"name\\\" placeholder=\\\"All\\\" className=\\\"p-column-filter\\\" />;\\n    const statusFilter = <Dropdown value={selectedStatus} options={statuses} onChange={(e) => setSelectedStatus(e.value)} placeholder=\\\"Select a Status\\\" className=\\\"p-column-filter\\\" showClear />;\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Session Storage</h5>\\n                <DataTable value={customers} paginator rows={10} header={header1} globalFilter={globalFilter1}\\n                    selection={selectedCustomer1} onSelectionChange={e => setSelectedCustomer1(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                    stateStorage=\\\"session\\\" stateKey=\\\"dt-state-demo-session\\\" emptyMessage=\\\"No customers found.\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                    <Column header=\\\"Country\\\" body={countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                    <Column header=\\\"Representative\\\" body={representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Local Storage</h5>\\n                <DataTable value={customers} paginator rows={10} header={header2} globalFilter={globalFilter2}\\n                    selection={selectedCustomer2} onSelectionChange={e => setSelectedCustomer2(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                    stateStorage=\\\"local\\\" stateKey=\\\"dt-state-demo-local\\\" emptyMessage=\\\"No customers found.\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                    <Column header=\\\"Country\\\" body={countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                    <Column header=\\\"Representative\\\" body={representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Custom Storage</h5>\\n                <DataTable value={customers} paginator rows={10} header={header3} globalFilter={globalFilter3}\\n                    selection={selectedCustomer3} onSelectionChange={e => setSelectedCustomer3(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                    stateStorage=\\\"custom\\\" customSaveState={onCustomSaveState} customRestoreState={onCustomRestoreState} emptyMessage=\\\"No customers found.\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                    <Column header=\\\"Country\\\" body={countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                    <Column header=\\\"Representative\\\" body={representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { CustomerService } from '../service/CustomerService';\\nimport { InputText } from 'primereact/inputtext';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport { Dropdown } from 'primereact/dropdown';\\n\\nconst DataTableStateDemo = () => {\\n    const [customers, setCustomers] = useState(null);\\n    const [globalFilter1, setGlobalFilter1] = useState(null);\\n    const [globalFilter2, setGlobalFilter2] = useState(null);\\n    const [globalFilter3, setGlobalFilter3] = useState(null);\\n    const [selectedCustomer1, setSelectedCustomer1] = useState(null);\\n    const [selectedCustomer2, setSelectedCustomer2] = useState(null);\\n    const [selectedCustomer3, setSelectedCustomer3] = useState(null);\\n    const [selectedRepresentative, setSelectedRepresentative] = useState(null);\\n    const [selectedStatus, setSelectedStatus] = useState(null);\\n    const representatives = [\\n        { name: \\\"Amy Elsner\\\", image: 'amyelsner.png' },\\n        { name: \\\"Anna Fali\\\", image: 'annafali.png' },\\n        { name: \\\"Asiya Javayant\\\", image: 'asiyajavayant.png' },\\n        { name: \\\"Bernardo Dominic\\\", image: 'bernardodominic.png' },\\n        { name: \\\"Elwin Sharvill\\\", image: 'elwinsharvill.png' },\\n        { name: \\\"Ioni Bowcher\\\", image: 'ionibowcher.png' },\\n        { name: \\\"Ivan Magalhaes\\\", image: 'ivanmagalhaes.png' },\\n        { name: \\\"Onyama Limba\\\", image: 'onyamalimba.png' },\\n        { name: \\\"Stephen Shaw\\\", image: 'stephenshaw.png' },\\n        { name: \\\"XuXue Feng\\\", image: 'xuxuefeng.png' }\\n    ];\\n\\n    const dataTableFuncMap = {\\n        'globalFilter1': setGlobalFilter1,\\n        'globalFilter2': setGlobalFilter2,\\n        'globalFilter3': setGlobalFilter3\\n    };\\n\\n    const statuses = [\\n        'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\\n    ];\\n\\n    const customerService = new CustomerService();\\n\\n    useEffect(() => {\\n        customerService.getCustomersMedium().then(data => setCustomers(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onCustomSaveState = (state) => {\\n        window.sessionStorage.setItem('dt-state-demo-custom', JSON.stringify(state));\\n    }\\n\\n    const onCustomRestoreState = () => {\\n        return JSON.parse(window.sessionStorage.getItem('dt-state-demo-custom'));\\n    }\\n\\n    const countryBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.code} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const representativeBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    const renderHeader = (globalFilterKey) => {\\n        return (\\n            <span className=\\\"p-input-icon-left\\\">\\n                <i className=\\\"pi pi-search\\\" />\\n                <InputText type=\\\"search\\\" onInput={(e) => dataTableFuncMap[`${globalFilterKey}`](e.target.value)} placeholder=\\\"Global Search\\\" />\\n            </span>\\n        );\\n    }\\n\\n    const header1 = renderHeader('globalFilter1');\\n    const header2 = renderHeader('globalFilter2');\\n    const header3 = renderHeader('globalFilter3');\\n    const representativeFilter = <MultiSelect value={selectedRepresentative} options={representatives} onChange={(e) => setSelectedRepresentative(e.value)} optionLabel=\\\"name\\\" optionValue=\\\"name\\\" placeholder=\\\"All\\\" className=\\\"p-column-filter\\\" />;\\n    const statusFilter = <Dropdown value={selectedStatus} options={statuses} onChange={(e) => setSelectedStatus(e.value)} placeholder=\\\"Select a Status\\\" className=\\\"p-column-filter\\\" showClear />;\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Session Storage</h5>\\n                <DataTable value={customers} paginator rows={10} header={header1} globalFilter={globalFilter1}\\n                    selection={selectedCustomer1} onSelectionChange={e => setSelectedCustomer1(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                    stateStorage=\\\"session\\\" stateKey=\\\"dt-state-demo-session\\\" emptyMessage=\\\"No customers found.\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                    <Column header=\\\"Country\\\" body={countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                    <Column header=\\\"Representative\\\" body={representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Local Storage</h5>\\n                <DataTable value={customers} paginator rows={10} header={header2} globalFilter={globalFilter2}\\n                    selection={selectedCustomer2} onSelectionChange={e => setSelectedCustomer2(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                    stateStorage=\\\"local\\\" stateKey=\\\"dt-state-demo-local\\\" emptyMessage=\\\"No customers found.\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                    <Column header=\\\"Country\\\" body={countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                    <Column header=\\\"Representative\\\" body={representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Custom Storage</h5>\\n                <DataTable value={customers} paginator rows={10} header={header3} globalFilter={globalFilter3}\\n                    selection={selectedCustomer3} onSelectionChange={e => setSelectedCustomer3(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                    stateStorage=\\\"custom\\\" customSaveState={onCustomSaveState} customRestoreState={onCustomRestoreState} emptyMessage=\\\"No customers found.\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\"></Column>\\n                    <Column header=\\\"Country\\\" body={countryBodyTemplate} sortable sortField=\\\"country.name\\\" filter filterField=\\\"country.name\\\" filterMatchMode=\\\"contains\\\" filterPlaceholder=\\\"Search by country\\\"></Column>\\n                    <Column header=\\\"Representative\\\" body={representativeBodyTemplate} sortable sortField=\\\"representative.name\\\" filter filterField=\\\"representative.name\\\" filterMatchMode=\\\"in\\\" filterElement={representativeFilter}></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate} sortable filter filterMatchMode=\\\"equals\\\" filterElement={statusFilter}></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this5;}_createClass(DataTableStateDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DataTableStateDemo',sources:this.sources,service:'CustomerService',data:'customers-medium'})));}}]);return DataTableStateDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datatable/DataTableStateDemo.js"],"names":["React","Component","DataTable","Column","CustomerService","InputText","MultiSelect","Dropdown","TabView","useLiveEditorTabs","AppInlineHeader","DataTableStateDemo","props","state","customers","globalFilter1","globalFilter2","globalFilter3","selectedCustomer1","selectedCustomer2","selectedCustomer3","selectedRepresentative","selectedStatus","representatives","name","image","statuses","customerService","onCustomSaveState","bind","onCustomRestoreState","getCustomersMedium","then","data","setState","window","sessionStorage","setItem","JSON","stringify","parse","getItem","rowData","country","code","e","target","src","representative","verticalAlign","status","globalFilterKey","value","header1","renderHeader","header2","header3","representativeFilter","statusFilter","countryBodyTemplate","representativeBodyTemplate","statusBodyTemplate","DataTableStateDemoDoc","sources","tabName","content","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport { InputText } from '../../components/inputtext/InputText';\r\nimport { MultiSelect } from '../../components/multiselect/MultiSelect';\r\nimport { Dropdown } from '../../components/dropdown/Dropdown';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableStateDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customers: null,\r\n            globalFilter1: null,\r\n            globalFilter2: null,\r\n            globalFilter3: null,\r\n            selectedCustomer1: null,\r\n            selectedCustomer2: null,\r\n            selectedCustomer3: null,\r\n            selectedRepresentative: null,\r\n            selectedStatus: null\r\n        };\r\n\r\n        this.representatives = [\r\n            { name: \"Amy Elsner\", image: 'amyelsner.png' },\r\n            { name: \"Anna Fali\", image: 'annafali.png' },\r\n            { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\r\n            { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\r\n            { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\r\n            { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\r\n            { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\r\n            { name: \"Onyama Limba\", image: 'onyamalimba.png' },\r\n            { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\r\n            { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\r\n        ];\r\n\r\n        this.statuses = [\r\n            'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\r\n        ];\r\n\r\n        this.customerService = new CustomerService();\r\n        this.onCustomSaveState = this.onCustomSaveState.bind(this);\r\n        this.onCustomRestoreState = this.onCustomRestoreState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\r\n    }\r\n\r\n    onCustomSaveState(state) {\r\n        window.sessionStorage.setItem('dt-state-demo-custom', JSON.stringify(state));\r\n    }\r\n\r\n    onCustomRestoreState() {\r\n        return JSON.parse(window.sessionStorage.getItem('dt-state-demo-custom'));\r\n    }\r\n\r\n    countryBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.code} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    representativeBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\r\n    }\r\n\r\n    renderHeader(globalFilterKey) {\r\n        return (\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => this.setState({ [`${globalFilterKey}`]: e.target.value })} placeholder=\"Global Search\" />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header1 = this.renderHeader('globalFilter1');\r\n        const header2 = this.renderHeader('globalFilter2');\r\n        const header3 = this.renderHeader('globalFilter3');\r\n        const representativeFilter = <MultiSelect value={this.state.selectedRepresentative} options={this.representatives} onChange={(e) => this.setState({ selectedRepresentative: e.value })} optionLabel=\"name\" optionValue=\"name\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n        const statusFilter = <Dropdown value={this.state.selectedStatus} options={this.statuses} onChange={(e) => this.setState({ selectedStatus: e.value })} placeholder=\"Select a Status\" className=\"p-column-filter\" showClear />;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>State</span></h1>\r\n                        <p>Stateful table allows keeping the state such as page, sort and filtering either at local storage or session storage so that when the page is visited again,\r\n                            table would render the data using its last settings.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Session Storage</h5>\r\n                        <DataTable value={this.state.customers} paginator rows={10} header={header1}\r\n                            selection={this.state.selectedCustomer1} onSelectionChange={e => this.setState({ selectedCustomer1: e.value })} selectionMode=\"single\" dataKey=\"id\"\r\n                            stateStorage=\"session\" stateKey=\"dt-state-demo-session\" emptyMessage=\"No customers found.\">\r\n                            <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                            <Column header=\"Country\" body={this.countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                            <Column header=\"Representative\" body={this.representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Local Storage</h5>\r\n                        <DataTable value={this.state.customers} paginator rows={10} header={header2}\r\n                            selection={this.state.selectedCustomer2} onSelectionChange={e => this.setState({ selectedCustomer2: e.value })} selectionMode=\"single\" dataKey=\"id\"\r\n                            stateStorage=\"local\" stateKey=\"dt-state-demo-local\" emptyMessage=\"No customers found.\">\r\n                            <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                            <Column header=\"Country\" body={this.countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                            <Column header=\"Representative\" body={this.representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Custom Storage</h5>\r\n                        <DataTable value={this.state.customers} paginator rows={10} header={header3}\r\n                            selection={this.state.selectedCustomer3} onSelectionChange={e => this.setState({ selectedCustomer3: e.value })} selectionMode=\"single\" dataKey=\"id\"\r\n                            stateStorage=\"custom\" customSaveState={this.onCustomSaveState} customRestoreState={this.onCustomRestoreState} emptyMessage=\"No customers found.\">\r\n                            <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                            <Column header=\"Country\" body={this.countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                            <Column header=\"Representative\" body={this.representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableStateDemoDoc></DataTableStateDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableStateDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nexport class DataTableStateDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customers: null,\r\n            globalFilter1: null,\r\n            globalFilter2: null,\r\n            globalFilter3: null,\r\n            selectedCustomer1: null,\r\n            selectedCustomer2: null,\r\n            selectedCustomer3: null,\r\n            selectedRepresentative: null,\r\n            selectedStatus: null\r\n        };\r\n\r\n        this.representatives = [\r\n            { name: \"Amy Elsner\", image: 'amyelsner.png' },\r\n            { name: \"Anna Fali\", image: 'annafali.png' },\r\n            { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\r\n            { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\r\n            { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\r\n            { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\r\n            { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\r\n            { name: \"Onyama Limba\", image: 'onyamalimba.png' },\r\n            { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\r\n            { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\r\n        ];\r\n\r\n        this.statuses = [\r\n            'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\r\n        ];\r\n\r\n        this.customerService = new CustomerService();\r\n        this.onCustomSaveState = this.onCustomSaveState.bind(this);\r\n        this.onCustomRestoreState = this.onCustomRestoreState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\r\n    }\r\n\r\n    onCustomSaveState(state) {\r\n        window.sessionStorage.setItem('dt-state-demo-custom', JSON.stringify(state));\r\n    }\r\n\r\n    onCustomRestoreState() {\r\n        return JSON.parse(window.sessionStorage.getItem('dt-state-demo-custom'));\r\n    }\r\n\r\n    countryBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.code} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    representativeBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    renderHeader(globalFilterKey) {\r\n        return (\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => this.setState({ [\\`\\${globalFilterKey}\\`]: e.target.value })} placeholder=\"Global Search\" />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header1 = this.renderHeader('globalFilter1');\r\n        const header2 = this.renderHeader('globalFilter2');\r\n        const header3 = this.renderHeader('globalFilter3');\r\n        const representativeFilter = <MultiSelect value={this.state.selectedRepresentative} options={this.representatives} onChange={(e) => this.setState({ selectedRepresentative: e.value })} optionLabel=\"name\" optionValue=\"name\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n        const statusFilter = <Dropdown value={this.state.selectedStatus} options={this.statuses} onChange={(e) => this.setState({ selectedStatus: e.value })} placeholder=\"Select a Status\" className=\"p-column-filter\" showClear />;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Session Storage</h5>\r\n                    <DataTable value={this.state.customers} paginator rows={10} header={header1}\r\n                        selection={this.state.selectedCustomer1} onSelectionChange={e => this.setState({ selectedCustomer1: e.value })} selectionMode=\"single\" dataKey=\"id\"\r\n                        stateStorage=\"session\" stateKey=\"dt-state-demo-session\" emptyMessage=\"No customers found.\">\r\n                        <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column header=\"Country\" body={this.countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                        <Column header=\"Representative\" body={this.representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Local Storage</h5>\r\n                    <DataTable value={this.state.customers} paginator rows={10} header={header2}\r\n                        selection={this.state.selectedCustomer2} onSelectionChange={e => this.setState({ selectedCustomer2: e.value })} selectionMode=\"single\" dataKey=\"id\"\r\n                        stateStorage=\"local\" stateKey=\"dt-state-demo-local\" emptyMessage=\"No customers found.\">\r\n                        <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column header=\"Country\" body={this.countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                        <Column header=\"Representative\" body={this.representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Custom Storage</h5>\r\n                    <DataTable value={this.state.customers} paginator rows={10} header={header3}\r\n                        selection={this.state.selectedCustomer3} onSelectionChange={e => this.setState({ selectedCustomer3: e.value })} selectionMode=\"single\" dataKey=\"id\"\r\n                        stateStorage=\"custom\" customSaveState={this.onCustomSaveState} customRestoreState={this.onCustomRestoreState} emptyMessage=\"No customers found.\">\r\n                        <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                        <Column header=\"Country\" body={this.countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                        <Column header=\"Representative\" body={this.representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nconst DataTableStateDemo = () => {\r\n    const [customers, setCustomers] = useState(null);\r\n    const [globalFilter1, setGlobalFilter1] = useState(null);\r\n    const [globalFilter2, setGlobalFilter2] = useState(null);\r\n    const [globalFilter3, setGlobalFilter3] = useState(null);\r\n    const [selectedCustomer1, setSelectedCustomer1] = useState(null);\r\n    const [selectedCustomer2, setSelectedCustomer2] = useState(null);\r\n    const [selectedCustomer3, setSelectedCustomer3] = useState(null);\r\n    const [selectedRepresentative, setSelectedRepresentative] = useState(null);\r\n    const [selectedStatus, setSelectedStatus] = useState(null);\r\n    const representatives = [\r\n        { name: \"Amy Elsner\", image: 'amyelsner.png' },\r\n        { name: \"Anna Fali\", image: 'annafali.png' },\r\n        { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\r\n        { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\r\n        { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\r\n        { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\r\n        { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\r\n        { name: \"Onyama Limba\", image: 'onyamalimba.png' },\r\n        { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\r\n        { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\r\n    ];\r\n\r\n    const dataTableFuncMap = {\r\n        'globalFilter1': setGlobalFilter1,\r\n        'globalFilter2': setGlobalFilter2,\r\n        'globalFilter3': setGlobalFilter3\r\n    };\r\n\r\n    const statuses = [\r\n        'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\r\n    ];\r\n\r\n    const customerService = new CustomerService();\r\n\r\n    useEffect(() => {\r\n        customerService.getCustomersMedium().then(data => setCustomers(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onCustomSaveState = (state) => {\r\n        window.sessionStorage.setItem('dt-state-demo-custom', JSON.stringify(state));\r\n    }\r\n\r\n    const onCustomRestoreState = () => {\r\n        return JSON.parse(window.sessionStorage.getItem('dt-state-demo-custom'));\r\n    }\r\n\r\n    const countryBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.code} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const representativeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const renderHeader = (globalFilterKey) => {\r\n        return (\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => dataTableFuncMap[\\`\\${globalFilterKey}\\`](e.target.value)} placeholder=\"Global Search\" />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const header1 = renderHeader('globalFilter1');\r\n    const header2 = renderHeader('globalFilter2');\r\n    const header3 = renderHeader('globalFilter3');\r\n    const representativeFilter = <MultiSelect value={selectedRepresentative} options={representatives} onChange={(e) => setSelectedRepresentative(e.value)} optionLabel=\"name\" optionValue=\"name\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n    const statusFilter = <Dropdown value={selectedStatus} options={statuses} onChange={(e) => setSelectedStatus(e.value)} placeholder=\"Select a Status\" className=\"p-column-filter\" showClear />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Session Storage</h5>\r\n                <DataTable value={customers} paginator rows={10} header={header1} globalFilter={globalFilter1}\r\n                    selection={selectedCustomer1} onSelectionChange={e => setSelectedCustomer1(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                    stateStorage=\"session\" stateKey=\"dt-state-demo-session\" emptyMessage=\"No customers found.\">\r\n                    <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                    <Column header=\"Country\" body={countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                    <Column header=\"Representative\" body={representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Local Storage</h5>\r\n                <DataTable value={customers} paginator rows={10} header={header2} globalFilter={globalFilter2}\r\n                    selection={selectedCustomer2} onSelectionChange={e => setSelectedCustomer2(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                    stateStorage=\"local\" stateKey=\"dt-state-demo-local\" emptyMessage=\"No customers found.\">\r\n                    <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                    <Column header=\"Country\" body={countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                    <Column header=\"Representative\" body={representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Custom Storage</h5>\r\n                <DataTable value={customers} paginator rows={10} header={header3} globalFilter={globalFilter3}\r\n                    selection={selectedCustomer3} onSelectionChange={e => setSelectedCustomer3(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                    stateStorage=\"custom\" customSaveState={onCustomSaveState} customRestoreState={onCustomRestoreState} emptyMessage=\"No customers found.\">\r\n                    <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                    <Column header=\"Country\" body={countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                    <Column header=\"Representative\" body={representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nconst DataTableStateDemo = () => {\r\n    const [customers, setCustomers] = useState(null);\r\n    const [globalFilter1, setGlobalFilter1] = useState(null);\r\n    const [globalFilter2, setGlobalFilter2] = useState(null);\r\n    const [globalFilter3, setGlobalFilter3] = useState(null);\r\n    const [selectedCustomer1, setSelectedCustomer1] = useState(null);\r\n    const [selectedCustomer2, setSelectedCustomer2] = useState(null);\r\n    const [selectedCustomer3, setSelectedCustomer3] = useState(null);\r\n    const [selectedRepresentative, setSelectedRepresentative] = useState(null);\r\n    const [selectedStatus, setSelectedStatus] = useState(null);\r\n    const representatives = [\r\n        { name: \"Amy Elsner\", image: 'amyelsner.png' },\r\n        { name: \"Anna Fali\", image: 'annafali.png' },\r\n        { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\r\n        { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\r\n        { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\r\n        { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\r\n        { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\r\n        { name: \"Onyama Limba\", image: 'onyamalimba.png' },\r\n        { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\r\n        { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\r\n    ];\r\n\r\n    const dataTableFuncMap = {\r\n        'globalFilter1': setGlobalFilter1,\r\n        'globalFilter2': setGlobalFilter2,\r\n        'globalFilter3': setGlobalFilter3\r\n    };\r\n\r\n    const statuses = [\r\n        'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\r\n    ];\r\n\r\n    const customerService = new CustomerService();\r\n\r\n    useEffect(() => {\r\n        customerService.getCustomersMedium().then(data => setCustomers(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onCustomSaveState = (state) => {\r\n        window.sessionStorage.setItem('dt-state-demo-custom', JSON.stringify(state));\r\n    }\r\n\r\n    const onCustomRestoreState = () => {\r\n        return JSON.parse(window.sessionStorage.getItem('dt-state-demo-custom'));\r\n    }\r\n\r\n    const countryBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.code} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const representativeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const renderHeader = (globalFilterKey) => {\r\n        return (\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => dataTableFuncMap[\\`\\${globalFilterKey}\\`](e.target.value)} placeholder=\"Global Search\" />\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const header1 = renderHeader('globalFilter1');\r\n    const header2 = renderHeader('globalFilter2');\r\n    const header3 = renderHeader('globalFilter3');\r\n    const representativeFilter = <MultiSelect value={selectedRepresentative} options={representatives} onChange={(e) => setSelectedRepresentative(e.value)} optionLabel=\"name\" optionValue=\"name\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n    const statusFilter = <Dropdown value={selectedStatus} options={statuses} onChange={(e) => setSelectedStatus(e.value)} placeholder=\"Select a Status\" className=\"p-column-filter\" showClear />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Session Storage</h5>\r\n                <DataTable value={customers} paginator rows={10} header={header1} globalFilter={globalFilter1}\r\n                    selection={selectedCustomer1} onSelectionChange={e => setSelectedCustomer1(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                    stateStorage=\"session\" stateKey=\"dt-state-demo-session\" emptyMessage=\"No customers found.\">\r\n                    <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                    <Column header=\"Country\" body={countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                    <Column header=\"Representative\" body={representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Local Storage</h5>\r\n                <DataTable value={customers} paginator rows={10} header={header2} globalFilter={globalFilter2}\r\n                    selection={selectedCustomer2} onSelectionChange={e => setSelectedCustomer2(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                    stateStorage=\"local\" stateKey=\"dt-state-demo-local\" emptyMessage=\"No customers found.\">\r\n                    <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                    <Column header=\"Country\" body={countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                    <Column header=\"Representative\" body={representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Custom Storage</h5>\r\n                <DataTable value={customers} paginator rows={10} header={header3} globalFilter={globalFilter3}\r\n                    selection={selectedCustomer3} onSelectionChange={e => setSelectedCustomer3(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                    stateStorage=\"custom\" customSaveState={onCustomSaveState} customRestoreState={onCustomRestoreState} emptyMessage=\"No customers found.\">\r\n                    <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\"></Column>\r\n                    <Column header=\"Country\" body={countryBodyTemplate} sortable sortField=\"country.name\" filter filterField=\"country.name\" filterMatchMode=\"contains\" filterPlaceholder=\"Search by country\"></Column>\r\n                    <Column header=\"Representative\" body={representativeBodyTemplate} sortable sortField=\"representative.name\" filter filterField=\"representative.name\" filterMatchMode=\"in\" filterElement={representativeFilter}></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} sortable filter filterMatchMode=\"equals\" filterElement={statusFilter}></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableStateDemo', sources: this.sources, service: 'CustomerService', data: 'customers-medium' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}