{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{CodeHighlight}from'../codehighlight/CodeHighlight';export var InputSwitchDoc=/*#__PURE__*/function(_Component){_inherits(InputSwitchDoc,_Component);var _super=_createSuper(InputSwitchDoc);function InputSwitchDoc(props){var _this;_classCallCheck(this,InputSwitchDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { InputSwitch } from 'primereact/inputswitch';\\n\\nexport class InputSwitchDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            checked1: false,\\n            checked2: true\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <InputSwitch checked={this.state.checked1} onChange={(e) => this.setState({ checked1: e.value })} />\\n\\n                    <h5>Preselection</h5>\\n                    <InputSwitch checked={this.state.checked2} onChange={(e) => this.setState({ checked2: e.value })} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { InputSwitch } from 'primereact/inputswitch';\\n\\nconst InputSwitchDemo = () => {\\n    const [checked1, setChecked1] = useState(false);\\n    const [checked2, setChecked2] = useState(true);\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <InputSwitch checked={checked1} onChange={(e) => setChecked1(e.value)} />\\n\\n                <h5>Preselection</h5>\\n                <InputSwitch checked={checked2} onChange={(e) => setChecked2(e.value)} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { InputSwitch } from 'primereact/inputswitch';\\n\\nconst InputSwitchDemo = () => {\\n    const [checked1, setChecked1] = useState(false);\\n    const [checked2, setChecked2] = useState(true);\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <InputSwitch checked={checked1} onChange={(e) => setChecked1(e.value)} />\\n\\n                <h5>Preselection</h5>\\n                <InputSwitch checked={checked2} onChange={(e) => setChecked2(e.value)} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this;}_createClass(InputSwitchDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport {InputSwitch} from 'primereact/inputswitch';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"InputSwitch is used as a controlled input with \",/*#__PURE__*/React.createElement(\"i\",null,\"checked\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onChange\"),\" properties.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<InputSwitch checked={value} onChange={(e) => setValue(e.value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"inputId\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Identifier of the input element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"name\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the input element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"checked\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Specifies whether a inputswitch should be checked or not.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the component should be disabled.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaLabelledBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Establishes relationships between the component and label(s) where its value should be one or more element IDs.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.value: Checked state as a boolean.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke on value change.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onFocus\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the element receives focus.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onBlur\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the element loses focus.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-inputswitch\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-inputswitch-checked\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element in active state.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-inputswitch-slider\"),/*#__PURE__*/React.createElement(\"td\",null,\"Slider element behind the handle.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'InputSwitchDemo',sources:this.sources})));}}]);return InputSwitchDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/inputswitch/InputSwitchDoc.js"],"names":["React","Component","Link","TabView","TabPanel","useLiveEditorTabs","CodeHighlight","InputSwitchDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\n\r\nexport class InputSwitchDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\n\r\nexport class InputSwitchDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked1: false,\r\n            checked2: true\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <InputSwitch checked={this.state.checked1} onChange={(e) => this.setState({ checked1: e.value })} />\r\n\r\n                    <h5>Preselection</h5>\r\n                    <InputSwitch checked={this.state.checked2} onChange={(e) => this.setState({ checked2: e.value })} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\n\r\nconst InputSwitchDemo = () => {\r\n    const [checked1, setChecked1] = useState(false);\r\n    const [checked2, setChecked2] = useState(true);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <InputSwitch checked={checked1} onChange={(e) => setChecked1(e.value)} />\r\n\r\n                <h5>Preselection</h5>\r\n                <InputSwitch checked={checked2} onChange={(e) => setChecked2(e.value)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\n\r\nconst InputSwitchDemo = () => {\r\n    const [checked1, setChecked1] = useState(false);\r\n    const [checked2, setChecked2] = useState(true);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <InputSwitch checked={checked1} onChange={(e) => setChecked1(e.value)} />\r\n\r\n                <h5>Preselection</h5>\r\n                <InputSwitch checked={checked2} onChange={(e) => setChecked2(e.value)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n            <TabView>\r\n                <TabPanel header=\"Documentation\">\r\n                    <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport {InputSwitch} from 'primereact/inputswitch';\r\n`}\r\n</CodeHighlight>\r\n\r\n                    <h5>Getting Started</h5>\r\n                    <p>InputSwitch is used as a controlled input with <i>checked</i> and <i>onChange</i> properties.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<InputSwitch checked={value} onChange={(e) => setValue(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n                    <h5>Properties</h5>\r\n                    <div className=\"doc-tablewrapper\">\r\n                        <table className=\"doc-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Type</th>\r\n                                    <th>Default</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>id</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Unique identifier of the element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>style</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Inline style of the element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>className</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Style class of the element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>inputId</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Identifier of the input element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>name</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Name of the input element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>checked</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>Specifies whether a inputswitch should be checked or not.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>disabled</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>When present, it specifies that the component should be disabled.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>tooltip</td>\r\n                                    <td>any</td>\r\n                                    <td>null</td>\r\n                                    <td>Content of the tooltip.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>tooltipOptions</td>\r\n                                    <td>object</td>\r\n                                    <td>null</td>\r\n                                    <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>ariaLabelledBy</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <h5>Events</h5>\r\n                    <div className=\"doc-tablewrapper\">\r\n                        <table className=\"doc-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Parameters</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>onChange</td>\r\n                                    <td>event.originalEvent: Browser event <br />\r\n                                        event.value: Checked state as a boolean.</td>\r\n                                    <td>Callback to invoke on value change.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>onFocus</td>\r\n                                    <td>event: Browser event.</td>\r\n                                    <td>Callback to invoke when the element receives focus.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>onBlur</td>\r\n                                    <td>event: Browser event.</td>\r\n                                    <td>Callback to invoke when the element loses focus.</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <h5>Styling</h5>\r\n                    <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                    <div className=\"doc-tablewrapper\">\r\n                        <table className=\"doc-table\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Element</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>p-inputswitch</td>\r\n                                    <td>Container element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-inputswitch-checked</td>\r\n                                    <td>Container element in active state.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-inputswitch-slider</td>\r\n                                    <td>Slider element behind the handle.</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <h5>Dependencies</h5>\r\n                    <p>None.</p>\r\n                </TabPanel>\r\n\r\n                {\r\n                    useLiveEditorTabs({ name: 'InputSwitchDemo', sources: this.sources })\r\n                }\r\n            </TabView>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}