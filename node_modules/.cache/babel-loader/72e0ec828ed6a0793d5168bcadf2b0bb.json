{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\cascadeselect\\\\CascadeSelect.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from \"react-dom\";\nimport { classNames } from '../utils/ClassNames';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport DomHandler from '../utils/DomHandler';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport { CSSTransition } from \"react-transition-group\";\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport { CascadeSelectSub } from \"./CascadeSelectSub\";\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport var CascadeSelect = /*#__PURE__*/function (_Component) {\n  _inherits(CascadeSelect, _Component);\n\n  var _super = _createSuper(CascadeSelect);\n\n  function CascadeSelect(props) {\n    var _this;\n\n    _classCallCheck(this, CascadeSelect);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      focused: false,\n      overlayVisible: false\n    };\n    _this.dirty = false;\n    _this.selectionPath = null;\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.overlayRef = React.createRef();\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onInputFocus = _this.onInputFocus.bind(_assertThisInitialized(_this));\n    _this.onInputBlur = _this.onInputBlur.bind(_assertThisInitialized(_this));\n    _this.onInputKeyDown = _this.onInputKeyDown.bind(_assertThisInitialized(_this));\n    _this.onOverlayEnter = _this.onOverlayEnter.bind(_assertThisInitialized(_this));\n    _this.onOverlayEntered = _this.onOverlayEntered.bind(_assertThisInitialized(_this));\n    _this.onOverlayExit = _this.onOverlayExit.bind(_assertThisInitialized(_this));\n    _this.onOptionSelect = _this.onOptionSelect.bind(_assertThisInitialized(_this));\n    _this.onOptionGroupSelect = _this.onOptionGroupSelect.bind(_assertThisInitialized(_this));\n    _this.onPanelClick = _this.onPanelClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CascadeSelect, [{\n    key: \"onOptionSelect\",\n    value: function onOptionSelect(event) {\n      if (this.props.onChange) {\n        this.props.onChange({\n          originalEvent: event,\n          value: event.value\n        });\n      }\n\n      this.updateSelectionPath();\n      this.hide();\n      this.focusInput.focus();\n    }\n  }, {\n    key: \"onOptionGroupSelect\",\n    value: function onOptionGroupSelect(event) {\n      this.dirty = true;\n\n      if (this.props.onGroupChange) {\n        this.props.onGroupChange(event);\n      }\n    }\n  }, {\n    key: \"getOptionLabel\",\n    value: function getOptionLabel(option) {\n      return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : option;\n    }\n  }, {\n    key: \"getOptionValue\",\n    value: function getOptionValue(option) {\n      return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : option;\n    }\n  }, {\n    key: \"getOptionGroupChildren\",\n    value: function getOptionGroupChildren(optionGroup, level) {\n      return ObjectUtils.resolveFieldData(optionGroup, this.props.optionGroupChildren[level]);\n    }\n  }, {\n    key: \"isOptionGroup\",\n    value: function isOptionGroup(option, level) {\n      return Object.prototype.hasOwnProperty.call(option, this.props.optionGroupChildren[level]);\n    }\n  }, {\n    key: \"updateSelectionPath\",\n    value: function updateSelectionPath() {\n      var path;\n\n      if (this.props.value != null && this.props.options) {\n        var _iterator = _createForOfIteratorHelper(this.props.options),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            path = this.findModelOptionInGroup(option, 0);\n\n            if (path) {\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      this.selectionPath = path;\n    }\n  }, {\n    key: \"findModelOptionInGroup\",\n    value: function findModelOptionInGroup(option, level) {\n      if (this.isOptionGroup(option, level)) {\n        var selectedOption;\n\n        var _iterator2 = _createForOfIteratorHelper(this.getOptionGroupChildren(option, level)),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var childOption = _step2.value;\n            selectedOption = this.findModelOptionInGroup(childOption, level + 1);\n\n            if (selectedOption) {\n              selectedOption.unshift(option);\n              return selectedOption;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if (ObjectUtils.equals(this.props.value, this.getOptionValue(option), this.props.dataKey)) {\n        return [option];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      var overlay = this.overlayRef ? this.overlayRef.current : null;\n\n      if (!overlay || !overlay.contains(event.target)) {\n        this.focusInput.focus();\n\n        if (this.state.overlayVisible) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    }\n  }, {\n    key: \"onInputFocus\",\n    value: function onInputFocus() {\n      this.setState({\n        focused: true\n      });\n    }\n  }, {\n    key: \"onInputBlur\",\n    value: function onInputBlur() {\n      this.setState({\n        focused: false\n      });\n    }\n  }, {\n    key: \"onInputKeyDown\",\n    value: function onInputKeyDown(event) {\n      switch (event.key) {\n        case 'Down':\n        case 'ArrowDown':\n          if (this.state.overlayVisible) {\n            DomHandler.findSingle(this.overlayRef.current, '.p-cascadeselect-item').children[0].focus();\n          } else if (event.altKey && this.props.options && this.props.options.length) {\n            this.show();\n          }\n\n          event.preventDefault();\n          break;\n\n        case 'Escape':\n          if (this.state.overlayVisible) {\n            this.hide();\n            event.preventDefault();\n          }\n\n          break;\n\n        case 'Tab':\n          this.hide();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"onPanelClick\",\n    value: function onPanelClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.container\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.props.onBeforeShow) {\n        this.props.onBeforeShow();\n      }\n\n      this.setState({\n        overlayVisible: true\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.props.onBeforeHide) {\n        this.props.onBeforeHide();\n      }\n\n      this.setState({\n        overlayVisible: false\n      });\n    }\n  }, {\n    key: \"onOverlayEnter\",\n    value: function onOverlayEnter() {\n      this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\n      this.alignOverlay();\n    }\n  }, {\n    key: \"onOverlayEntered\",\n    value: function onOverlayEntered() {\n      this.bindOutsideClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n\n      if (this.props.onShow) {\n        this.props.onShow();\n      }\n    }\n  }, {\n    key: \"onOverlayExit\",\n    value: function onOverlayExit() {\n      this.unbindOutsideClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n      this.dirty = false;\n\n      if (this.props.onHide) {\n        this.props.onHide();\n      }\n    }\n  }, {\n    key: \"alignOverlay\",\n    value: function alignOverlay() {\n      var container = this.input.parentElement;\n\n      if (this.props.appendTo) {\n        DomHandler.absolutePosition(this.overlayRef.current, container);\n        this.overlayRef.current.style.minWidth = DomHandler.getOuterWidth(container) + 'px';\n      } else {\n        DomHandler.relativePosition(this.overlayRef.current, container);\n      }\n    }\n  }, {\n    key: \"bindOutsideClickListener\",\n    value: function bindOutsideClickListener() {\n      var _this2 = this;\n\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = function (event) {\n          if (_this2.state.overlayVisible && _this2.isOutsideClicked(event)) {\n            _this2.hide();\n          }\n        };\n\n        document.addEventListener('click', this.outsideClickListener);\n      }\n    }\n  }, {\n    key: \"unbindOutsideClickListener\",\n    value: function unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this3 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, function () {\n          if (_this3.state.overlayVisible) {\n            _this3.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"bindResizeListener\",\n    value: function bindResizeListener() {\n      var _this4 = this;\n\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this4.state.overlayVisible) {\n            _this4.hide();\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    }\n  }, {\n    key: \"unbindResizeListener\",\n    value: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(event) {\n      return this.container && !(this.container.isSameNode(event.target) || this.container.contains(event.target) || this.overlayRef && this.overlayRef.current.contains(event.target));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSelectionPath();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindOutsideClickListener();\n      this.unbindResizeListener();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.value !== this.props.value) {\n        this.updateSelectionPath();\n      }\n    }\n  }, {\n    key: \"renderKeyboardHelper\",\n    value: function renderKeyboardHelper() {\n      var _this5 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-hidden-accessible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: function ref(el) {\n          return _this5.focusInput = el;\n        },\n        type: \"text\",\n        id: this.props.inputId,\n        readOnly: true,\n        disabled: this.props.disabled,\n        onFocus: this.onInputFocus,\n        onBlur: this.onInputBlur,\n        onKeyDown: this.onInputKeyDown,\n        tabIndex: this.props.tabIndex,\n        \"aria-haspopup\": \"listbox\",\n        \"aria-labelledby\": this.props.ariaLabelledBy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(value) {\n      var _this6 = this;\n\n      var label = value ? this.getOptionLabel(this.props.value) : this.props.placeholder || 'p-emptylabel';\n      var labelClassName = classNames('p-cascadeselect-label ', {\n        'p-placeholder': label === this.props.placeholder,\n        'p-cascadeselect-label-empty': !this.props.value && label === 'p-emptylabel'\n      });\n      return /*#__PURE__*/React.createElement(\"span\", {\n        ref: function ref(el) {\n          return _this6.input = el;\n        },\n        className: labelClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 16\n        }\n      }, label);\n    }\n  }, {\n    key: \"renderDropdownIcon\",\n    value: function renderDropdownIcon() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-cascadeselect-trigger\",\n        role: \"button\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-expanded\": this.state.overlayVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-cascadeselect-trigger-icon pi pi-chevron-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderOverlay\",\n    value: function renderOverlay() {\n      var overlay = /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.overlayRef,\n        classNames: \"p-connected-overlay\",\n        in: this.state.overlayVisible,\n        timeout: {\n          enter: 120,\n          exit: 100\n        },\n        unmountOnExit: true,\n        onEnter: this.onOverlayEnter,\n        onEntered: this.onOverlayEntered,\n        onExit: this.onOverlayExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.overlayRef,\n        className: \"p-cascadeselect-panel p-component\",\n        onClick: this.onPanelClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-cascadeselect-items-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CascadeSelectSub, {\n        options: this.props.options,\n        selectionPath: this.selectionPath,\n        className: \"p-cascadeselect-items\",\n        optionLabel: this.props.optionLabel,\n        optionValue: this.props.optionValue,\n        level: 0,\n        optionGroupLabel: this.props.optionGroupLabel,\n        optionGroupChildren: this.props.optionGroupChildren,\n        onOptionSelect: this.onOptionSelect,\n        onOptionGroupSelect: this.onOptionGroupSelect,\n        root: true,\n        template: this.props.itemTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }\n      }))));\n      return this.props.appendTo ? ReactDOM.createPortal(overlay, this.props.appendTo) : overlay;\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement() {\n      var _this7 = this;\n\n      var className = classNames('p-cascadeselect p-component p-inputwrapper', this.props.className, {\n        'p-disabled': this.props.disabled,\n        'p-focus': this.state.focused,\n        'p-inputwrapper-filled': this.props.value,\n        'p-inputwrapper-focus': this.state.focused || this.state.overlayVisible\n      });\n      var keyboardHelper = this.renderKeyboardHelper();\n      var labelElement = this.renderLabel(this.props.value);\n      var dropdownIcon = this.renderDropdownIcon();\n      var overlay = this.renderOverlay();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.id,\n        ref: function ref(el) {\n          return _this7.container = el;\n        },\n        className: className,\n        style: this.props.style,\n        onClick: this.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }\n      }, keyboardHelper, labelElement, dropdownIcon, overlay);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderElement();\n      return element;\n    }\n  }]);\n\n  return CascadeSelect;\n}(Component);\nCascadeSelect.defaultProps = {\n  id: null,\n  style: null,\n  className: null,\n  value: null,\n  options: null,\n  optionLabel: null,\n  optionValue: null,\n  optionGroupLabel: null,\n  optionGroupChildren: null,\n  placeholder: null,\n  itemTemplate: null,\n  disabled: false,\n  dataKey: null,\n  inputId: null,\n  tabIndex: null,\n  ariaLabelledBy: null,\n  appendTo: null,\n  onChange: null,\n  onGroupChange: null,\n  onBeforeShow: null,\n  onBeforeHide: null,\n  onShow: null,\n  onHide: null\n};\nCascadeSelect.propTypes = {\n  id: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  value: PropTypes.any,\n  options: PropTypes.array,\n  optionLabel: PropTypes.string,\n  optionValue: PropTypes.string,\n  optionGroupLabel: PropTypes.string,\n  optionGroupChildren: PropTypes.array,\n  placeholder: PropTypes.string,\n  itemTemplate: PropTypes.any,\n  disabled: PropTypes.bool,\n  dataKey: PropTypes.string,\n  inputId: PropTypes.string,\n  tabIndex: PropTypes.number,\n  ariaLabelledBy: PropTypes.string,\n  appendTo: PropTypes.any,\n  onChange: PropTypes.func,\n  onGroupChange: PropTypes.func,\n  onBeforeShow: PropTypes.func,\n  onBeforeHide: PropTypes.func,\n  onShow: PropTypes.func,\n  onHide: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/cascadeselect/CascadeSelect.js"],"names":["React","Component","PropTypes","ReactDOM","classNames","ObjectUtils","DomHandler","UniqueComponentId","CSSTransition","ConnectedOverlayScrollHandler","CascadeSelectSub","OverlayEventBus","CascadeSelect","props","state","focused","overlayVisible","dirty","selectionPath","id","overlayRef","createRef","onClick","bind","onInputFocus","onInputBlur","onInputKeyDown","onOverlayEnter","onOverlayEntered","onOverlayExit","onOptionSelect","onOptionGroupSelect","onPanelClick","event","onChange","originalEvent","value","updateSelectionPath","hide","focusInput","focus","onGroupChange","option","optionLabel","resolveFieldData","optionValue","optionGroup","level","optionGroupChildren","Object","prototype","hasOwnProperty","call","path","options","findModelOptionInGroup","isOptionGroup","selectedOption","getOptionGroupChildren","childOption","unshift","equals","getOptionValue","dataKey","disabled","overlay","current","contains","target","show","setState","key","findSingle","children","altKey","length","preventDefault","emit","container","onBeforeShow","onBeforeHide","style","zIndex","String","generateZIndex","alignOverlay","bindOutsideClickListener","bindScrollListener","bindResizeListener","onShow","unbindOutsideClickListener","unbindScrollListener","unbindResizeListener","onHide","input","parentElement","appendTo","absolutePosition","minWidth","getOuterWidth","relativePosition","outsideClickListener","isOutsideClicked","document","addEventListener","removeEventListener","scrollHandler","resizeListener","window","isSameNode","destroy","prevProps","el","inputId","tabIndex","ariaLabelledBy","label","getOptionLabel","placeholder","labelClassName","enter","exit","optionGroupLabel","itemTemplate","createPortal","className","keyboardHelper","renderKeyboardHelper","labelElement","renderLabel","dropdownIcon","renderDropdownIcon","renderOverlay","element","renderElement","defaultProps","propTypes","string","object","any","array","bool","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from \"react-dom\";\r\nimport { classNames } from '../utils/ClassNames';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\r\nimport { CascadeSelectSub } from \"./CascadeSelectSub\";\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport class CascadeSelect extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        style: null,\r\n        className: null,\r\n        value: null,\r\n        options: null,\r\n        optionLabel: null,\r\n        optionValue: null,\r\n        optionGroupLabel: null,\r\n        optionGroupChildren: null,\r\n        placeholder: null,\r\n        itemTemplate: null,\r\n        disabled: false,\r\n        dataKey: null,\r\n        inputId: null,\r\n        tabIndex: null,\r\n        ariaLabelledBy: null,\r\n        appendTo: null,\r\n        onChange: null,\r\n        onGroupChange: null,\r\n        onBeforeShow: null,\r\n        onBeforeHide: null,\r\n        onShow: null,\r\n        onHide: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        value: PropTypes.any,\r\n        options: PropTypes.array,\r\n        optionLabel: PropTypes.string,\r\n        optionValue: PropTypes.string,\r\n        optionGroupLabel: PropTypes.string,\r\n        optionGroupChildren: PropTypes.array,\r\n        placeholder: PropTypes.string,\r\n        itemTemplate: PropTypes.any,\r\n        disabled: PropTypes.bool,\r\n        dataKey: PropTypes.string,\r\n        inputId: PropTypes.string,\r\n        tabIndex: PropTypes.number,\r\n        ariaLabelledBy: PropTypes.string,\r\n        appendTo: PropTypes.any,\r\n        onChange: PropTypes.func,\r\n        onGroupChange: PropTypes.func,\r\n        onBeforeShow: PropTypes.func,\r\n        onBeforeHide: PropTypes.func,\r\n        onShow: PropTypes.func,\r\n        onHide: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            focused: false,\r\n            overlayVisible: false\r\n        };\r\n\r\n        this.dirty = false;\r\n        this.selectionPath = null;\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.overlayRef = React.createRef();\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onInputFocus = this.onInputFocus.bind(this);\r\n        this.onInputBlur = this.onInputBlur.bind(this);\r\n        this.onInputKeyDown = this.onInputKeyDown.bind(this);\r\n        this.onOverlayEnter = this.onOverlayEnter.bind(this);\r\n        this.onOverlayEntered = this.onOverlayEntered.bind(this);\r\n        this.onOverlayExit = this.onOverlayExit.bind(this);\r\n        this.onOptionSelect = this.onOptionSelect.bind(this);\r\n        this.onOptionGroupSelect = this.onOptionGroupSelect.bind(this);\r\n        this.onPanelClick = this.onPanelClick.bind(this);\r\n    }\r\n\r\n    onOptionSelect(event) {\r\n        if (this.props.onChange) {\r\n            this.props.onChange({\r\n                originalEvent: event,\r\n                value: event.value\r\n            })\r\n        }\r\n\r\n        this.updateSelectionPath();\r\n        this.hide();\r\n        this.focusInput.focus();\r\n    }\r\n\r\n    onOptionGroupSelect(event) {\r\n        this.dirty = true;\r\n\r\n        if (this.props.onGroupChange) {\r\n            this.props.onGroupChange(event);\r\n        }\r\n    }\r\n\r\n    getOptionLabel(option) {\r\n        return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : option;\r\n    }\r\n\r\n    getOptionValue(option) {\r\n        return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : option;\r\n    }\r\n\r\n    getOptionGroupChildren(optionGroup, level) {\r\n        return ObjectUtils.resolveFieldData(optionGroup, this.props.optionGroupChildren[level]);\r\n    }\r\n\r\n    isOptionGroup(option, level) {\r\n        return Object.prototype.hasOwnProperty.call(option, this.props.optionGroupChildren[level]);\r\n    }\r\n\r\n    updateSelectionPath() {\r\n        let path;\r\n        if (this.props.value != null && this.props.options) {\r\n            for (let option of this.props.options) {\r\n                path = this.findModelOptionInGroup(option, 0);\r\n                if (path) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.selectionPath = path;\r\n    }\r\n\r\n    findModelOptionInGroup(option, level) {\r\n        if (this.isOptionGroup(option, level)) {\r\n            let selectedOption;\r\n            for (let childOption of this.getOptionGroupChildren(option, level)) {\r\n                selectedOption = this.findModelOptionInGroup(childOption, level + 1);\r\n                if (selectedOption) {\r\n                    selectedOption.unshift(option);\r\n                    return selectedOption;\r\n                }\r\n            }\r\n        }\r\n        else if ((ObjectUtils.equals(this.props.value, this.getOptionValue(option), this.props.dataKey))) {\r\n            return [option];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    onClick(event) {\r\n        if (this.props.disabled) {\r\n            return;\r\n        }\r\n\r\n        const overlay = this.overlayRef ? this.overlayRef.current : null;\r\n        if (!overlay || !overlay.contains(event.target)) {\r\n            this.focusInput.focus();\r\n\r\n            if (this.state.overlayVisible) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                this.show();\r\n            }\r\n        }\r\n    }\r\n\r\n    onInputFocus() {\r\n        this.setState({ focused: true });\r\n    }\r\n\r\n    onInputBlur() {\r\n        this.setState({ focused: false });\r\n    }\r\n\r\n    onInputKeyDown(event) {\r\n        switch (event.key) {\r\n            case 'Down':\r\n            case 'ArrowDown':\r\n                if (this.state.overlayVisible) {\r\n                    DomHandler.findSingle(this.overlayRef.current, '.p-cascadeselect-item').children[0].focus();\r\n                }\r\n                else if (event.altKey && this.props.options && this.props.options.length) {\r\n                    this.show();\r\n                }\r\n                event.preventDefault();\r\n                break;\r\n\r\n            case 'Escape':\r\n                if (this.state.overlayVisible) {\r\n                    this.hide();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n\r\n            case 'Tab':\r\n                this.hide();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onPanelClick(event) {\r\n        OverlayEventBus.emit('overlay-click', {\r\n            originalEvent: event,\r\n            target: this.container\r\n        });\r\n    }\r\n\r\n    show() {\r\n        if (this.props.onBeforeShow) {\r\n            this.props.onBeforeShow();\r\n        }\r\n        this.setState({ overlayVisible: true });\r\n    }\r\n\r\n    hide() {\r\n        if (this.props.onBeforeHide) {\r\n            this.props.onBeforeHide();\r\n        }\r\n        this.setState({ overlayVisible: false });\r\n    }\r\n\r\n    onOverlayEnter() {\r\n        this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\r\n        this.alignOverlay();\r\n    }\r\n\r\n    onOverlayEntered() {\r\n        this.bindOutsideClickListener();\r\n        this.bindScrollListener();\r\n        this.bindResizeListener();\r\n        if (this.props.onShow) {\r\n            this.props.onShow();\r\n        }\r\n    }\r\n\r\n    onOverlayExit() {\r\n        this.unbindOutsideClickListener();\r\n        this.unbindScrollListener();\r\n        this.unbindResizeListener();\r\n        this.dirty = false;\r\n        if (this.props.onHide) {\r\n            this.props.onHide();\r\n        }\r\n    }\r\n\r\n    alignOverlay() {\r\n        const container = this.input.parentElement;\r\n        if (this.props.appendTo) {\r\n            DomHandler.absolutePosition(this.overlayRef.current, container);\r\n            this.overlayRef.current.style.minWidth = DomHandler.getOuterWidth(container) + 'px';\r\n        }\r\n        else {\r\n            DomHandler.relativePosition(this.overlayRef.current, container);\r\n        }\r\n    }\r\n\r\n    bindOutsideClickListener() {\r\n        if (!this.outsideClickListener) {\r\n            this.outsideClickListener = (event) => {\r\n                if (this.state.overlayVisible && this.isOutsideClicked(event)) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            document.addEventListener('click', this.outsideClickListener);\r\n        }\r\n    }\r\n\r\n    unbindOutsideClickListener() {\r\n        if (this.outsideClickListener) {\r\n            document.removeEventListener('click', this.outsideClickListener);\r\n            this.outsideClickListener = null;\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    bindResizeListener() {\r\n        if (!this.resizeListener) {\r\n            this.resizeListener = () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            window.addEventListener('resize', this.resizeListener);\r\n        }\r\n    }\r\n\r\n    unbindResizeListener() {\r\n        if (this.resizeListener) {\r\n            window.removeEventListener('resize', this.resizeListener);\r\n            this.resizeListener = null;\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(event) {\r\n        return this.container && !(this.container.isSameNode(event.target) || this.container.contains(event.target)\r\n            || (this.overlayRef && this.overlayRef.current.contains(event.target)));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateSelectionPath();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindOutsideClickListener();\r\n        this.unbindResizeListener();\r\n\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.updateSelectionPath();\r\n        }\r\n    }\r\n\r\n    renderKeyboardHelper() {\r\n        return (\r\n            <div className=\"p-hidden-accessible\">\r\n                <input ref={(el) => this.focusInput = el} type=\"text\" id={this.props.inputId} readOnly disabled={this.props.disabled}\r\n                    onFocus={this.onInputFocus} onBlur={this.onInputBlur} onKeyDown={this.onInputKeyDown}\r\n                    tabIndex={this.props.tabIndex} aria-haspopup=\"listbox\" aria-labelledby={this.props.ariaLabelledBy} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderLabel(value) {\r\n        let label = value ? this.getOptionLabel(this.props.value) : this.props.placeholder || 'p-emptylabel';\r\n        let labelClassName = classNames('p-cascadeselect-label ', {\r\n            'p-placeholder': label === this.props.placeholder,\r\n            'p-cascadeselect-label-empty': !this.props.value && label === 'p-emptylabel'\r\n        });\r\n\r\n        return <span ref={(el) => this.input = el} className={labelClassName}>{label}</span>;\r\n    }\r\n\r\n    renderDropdownIcon() {\r\n        return (\r\n            <div className=\"p-cascadeselect-trigger\" role=\"button\" aria-haspopup=\"listbox\" aria-expanded={this.state.overlayVisible}>\r\n                <span className=\"p-cascadeselect-trigger-icon pi pi-chevron-down\"></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderOverlay() {\r\n        const overlay = (\r\n            <CSSTransition nodeRef={this.overlayRef} classNames=\"p-connected-overlay\" in={this.state.overlayVisible} timeout={{ enter: 120, exit: 100 }}\r\n                unmountOnExit onEnter={this.onOverlayEnter} onEntered={this.onOverlayEntered} onExit={this.onOverlayExit}>\r\n                <div ref={this.overlayRef} className=\"p-cascadeselect-panel p-component\" onClick={this.onPanelClick}>\r\n                    <div className=\"p-cascadeselect-items-wrapper\">\r\n                        <CascadeSelectSub options={this.props.options} selectionPath={this.selectionPath} className={\"p-cascadeselect-items\"} optionLabel={this.props.optionLabel}\r\n                            optionValue={this.props.optionValue} level={0} optionGroupLabel={this.props.optionGroupLabel} optionGroupChildren={this.props.optionGroupChildren}\r\n                            onOptionSelect={this.onOptionSelect} onOptionGroupSelect={this.onOptionGroupSelect} root template={this.props.itemTemplate} />\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n\r\n        return this.props.appendTo ? ReactDOM.createPortal(overlay, this.props.appendTo) : overlay;\r\n    }\r\n\r\n    renderElement() {\r\n        let className = classNames('p-cascadeselect p-component p-inputwrapper', this.props.className, {\r\n            'p-disabled': this.props.disabled,\r\n            'p-focus': this.state.focused,\r\n            'p-inputwrapper-filled': this.props.value,\r\n            'p-inputwrapper-focus': this.state.focused || this.state.overlayVisible\r\n        });\r\n\r\n        let keyboardHelper = this.renderKeyboardHelper();\r\n        let labelElement = this.renderLabel(this.props.value);\r\n        let dropdownIcon = this.renderDropdownIcon();\r\n        let overlay = this.renderOverlay();\r\n\r\n        return (\r\n            <div id={this.id} ref={(el) => this.container = el} className={className} style={this.props.style} onClick={this.onClick}>\r\n                {keyboardHelper}\r\n                {labelElement}\r\n                {dropdownIcon}\r\n                {overlay}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const element = this.renderElement();\r\n\r\n        return element;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}