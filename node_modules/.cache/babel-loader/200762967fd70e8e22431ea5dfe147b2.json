{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nexport function classNames() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args) {\n    var classes = [];\n\n    for (var i = 0; i < args.length; i++) {\n      var className = args[i];\n      if (!className) continue;\n      var type = typeof className;\n\n      if (type === 'string' || type === 'number') {\n        classes.push(className);\n      } else if (type === 'object') {\n        var _classes = Array.isArray(className) ? className : Object.entries(className).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          return !!value ? key : null;\n        });\n\n        classes = _classes.length ? classes.concat(_classes.filter(function (c) {\n          return !!c;\n        })) : classes;\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/utils/ClassNames.js"],"names":["classNames","args","classes","i","length","className","type","push","_classes","Array","isArray","Object","entries","map","key","value","concat","filter","c","join"],"mappings":";AAAA,OAAO,SAASA,UAAT,GAA6B;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAChC,MAAIA,IAAJ,EAAU;AACN,QAAIC,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,UAAIE,SAAS,GAAGJ,IAAI,CAACE,CAAD,CAApB;AAEA,UAAI,CAACE,SAAL,EAAgB;AAEhB,UAAMC,IAAI,GAAG,OAAOD,SAApB;;AAEA,UAAIC,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAAlC,EAA4C;AACxCJ,QAAAA,OAAO,CAACK,IAAR,CAAaF,SAAb;AACH,OAFD,MAGK,IAAIC,IAAI,KAAK,QAAb,EAAuB;AACxB,YAAME,QAAQ,GAAGC,KAAK,CAACC,OAAN,CAAcL,SAAd,IAA2BA,SAA3B,GAAuCM,MAAM,CAACC,OAAP,CAAeP,SAAf,EAA0BQ,GAA1B,CAA8B;AAAA;AAAA,cAAEC,GAAF;AAAA,cAAOC,KAAP;;AAAA,iBAAkB,CAAC,CAACA,KAAF,GAAUD,GAAV,GAAgB,IAAlC;AAAA,SAA9B,CAAxD;;AAEAZ,QAAAA,OAAO,GAAGM,QAAQ,CAACJ,MAAT,GAAkBF,OAAO,CAACc,MAAR,CAAeR,QAAQ,CAACS,MAAT,CAAgB,UAAAC,CAAC;AAAA,iBAAI,CAAC,CAACA,CAAN;AAAA,SAAjB,CAAf,CAAlB,GAA8DhB,OAAxE;AACH;AACJ;;AAED,WAAOA,OAAO,CAACiB,IAAR,CAAa,GAAb,CAAP;AACH;;AAED,SAAO,IAAP;AACH","sourcesContent":["export function classNames(...args) {\r\n    if (args) {\r\n        let classes = [];\r\n\r\n        for (let i = 0; i < args.length; i++) {\r\n            let className = args[i];\r\n\r\n            if (!className) continue;\r\n\r\n            const type = typeof className;\r\n\r\n            if (type === 'string' || type === 'number') {\r\n                classes.push(className);\r\n            }\r\n            else if (type === 'object') {\r\n                const _classes = Array.isArray(className) ? className : Object.entries(className).map(([key, value]) => !!value ? key : null);\r\n\r\n                classes = _classes.length ? classes.concat(_classes.filter(c => !!c)) : classes;\r\n            }\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n\r\n    return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}