{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\chart\\\\PolarAreaChartDemo.js\";\nimport React, { Component } from 'react';\nimport { TabView } from '../../components/tabview/TabView';\nimport { Chart } from '../../components/chart/Chart';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport AppContentContext from '../../AppContentContext';\nexport var PolarAreaChartDemo = /*#__PURE__*/function (_Component) {\n  _inherits(PolarAreaChartDemo, _Component);\n\n  var _super = _createSuper(PolarAreaChartDemo);\n\n  function PolarAreaChartDemo(props) {\n    var _this;\n\n    _classCallCheck(this, PolarAreaChartDemo);\n\n    _this = _super.call(this, props);\n    _this.chartData = {\n      datasets: [{\n        data: [11, 16, 7, 3, 14],\n        backgroundColor: [\"#42A5F5\", \"#66BB6A\", \"#FFA726\", \"#26C6DA\", \"#7E57C2\"],\n        label: 'My dataset'\n      }],\n      labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Blue\"]\n    };\n    _this.lightOptions = {\n      legend: {\n        labels: {\n          fontColor: '#495057'\n        }\n      },\n      scale: {\n        gridLines: {\n          color: '#ebedef'\n        }\n      }\n    };\n    _this.darkOptions = {\n      legend: {\n        labels: {\n          fontColor: '#ebedef'\n        }\n      },\n      scale: {\n        gridLines: {\n          color: 'rgba(255,255,255,0.2)'\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(PolarAreaChartDemo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \"PolarAreaChart\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, \"Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AppContentContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, function (context) {\n        var options = context.darkTheme ? _this2.darkOptions : _this2.lightOptions;\n        return /*#__PURE__*/React.createElement(Chart, {\n          type: \"polarArea\",\n          data: _this2.chartData,\n          options: options,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 44\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(PolarAreaChartDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return PolarAreaChartDemo;\n}(Component);\nexport var PolarAreaChartDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(PolarAreaChartDemoDoc, _Component2);\n\n  var _super2 = _createSuper(PolarAreaChartDemoDoc);\n\n  function PolarAreaChartDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, PolarAreaChartDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class PolarAreaChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.chartData = {\\n            datasets: [{\\n                data: [\\n                    11,\\n                    16,\\n                    7,\\n                    3,\\n                    14\\n                ],\\n                backgroundColor: [\\n                    \\\"#42A5F5\\\",\\n                    \\\"#66BB6A\\\",\\n                    \\\"#FFA726\\\",\\n                    \\\"#26C6DA\\\",\\n                    \\\"#7E57C2\\\"\\n                ],\\n                label: 'My dataset'\\n            }],\\n            labels: [\\n                \\\"Red\\\",\\n                \\\"Green\\\",\\n                \\\"Yellow\\\",\\n                \\\"Grey\\\",\\n                \\\"Blue\\\"\\n            ]\\n        };\\n\\n        this.lightOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scale: {\\n                gridLines: {\\n                    color: '#ebedef'\\n                }\\n            }\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"card\\\">\\n                <Chart type=\\\"polarArea\\\" data={this.chartData} options={this.lightOptions} />\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst PolarAreaChartDemo = () => {\\n    const chartData = {\\n        datasets: [{\\n            data: [\\n                11,\\n                16,\\n                7,\\n                3,\\n                14\\n            ],\\n            backgroundColor: [\\n                \\\"#42A5F5\\\",\\n                \\\"#66BB6A\\\",\\n                \\\"#FFA726\\\",\\n                \\\"#26C6DA\\\",\\n                \\\"#7E57C2\\\"\\n            ],\\n            label: 'My dataset'\\n        }],\\n        labels: [\\n            \\\"Red\\\",\\n            \\\"Green\\\",\\n            \\\"Yellow\\\",\\n            \\\"Grey\\\",\\n            \\\"Blue\\\"\\n        ]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scale: {\\n            gridLines: {\\n                color: '#ebedef'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"polarArea\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst PolarAreaChartDemo = () => {\\n    const chartData = {\\n        datasets: [{\\n            data: [\\n                11,\\n                16,\\n                7,\\n                3,\\n                14\\n            ],\\n            backgroundColor: [\\n                \\\"#42A5F5\\\",\\n                \\\"#66BB6A\\\",\\n                \\\"#FFA726\\\",\\n                \\\"#26C6DA\\\",\\n                \\\"#7E57C2\\\"\\n            ],\\n            label: 'My dataset'\\n        }],\\n        labels: [\\n            \\\"Red\\\",\\n            \\\"Green\\\",\\n            \\\"Yellow\\\",\\n            \\\"Grey\\\",\\n            \\\"Blue\\\"\\n        ]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scale: {\\n            gridLines: {\\n                color: '#ebedef'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"polarArea\\\" data={chartData} options={options} />\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(PolarAreaChartDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'PolarAreaChartDemo',\n        sources: this.sources,\n        dependencies: {\n          'chart.js': '2.7.3'\n        }\n      })));\n    }\n  }]);\n\n  return PolarAreaChartDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/chart/PolarAreaChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","PolarAreaChartDemo","props","chartData","datasets","data","backgroundColor","label","labels","lightOptions","legend","fontColor","scale","gridLines","color","darkOptions","context","options","darkTheme","PolarAreaChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class PolarAreaChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            datasets: [{\r\n                data: [\r\n                    11,\r\n                    16,\r\n                    7,\r\n                    3,\r\n                    14\r\n                ],\r\n                backgroundColor: [\r\n                    \"#42A5F5\",\r\n                    \"#66BB6A\",\r\n                    \"#FFA726\",\r\n                    \"#26C6DA\",\r\n                    \"#7E57C2\"\r\n                ],\r\n                label: 'My dataset'\r\n            }],\r\n            labels: [\r\n                \"Red\",\r\n                \"Green\",\r\n                \"Yellow\",\r\n                \"Grey\",\r\n                \"Blue\"\r\n            ]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scale: {\r\n                gridLines: {\r\n                    color: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        this.darkOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scale: {\r\n                gridLines: {\r\n                    color: 'rgba(255,255,255,0.2)'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>PolarAreaChart</h1>\r\n                        <p>Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <AppContentContext.Consumer>\r\n                            {\r\n                                context => {\r\n                                    let options = context.darkTheme ? this.darkOptions : this.lightOptions;\r\n\r\n                                    return <Chart type=\"polarArea\" data={this.chartData} options={options} />\r\n                                }\r\n                            }\r\n                        </AppContentContext.Consumer>\r\n                    </div>\r\n                </div>\r\n\r\n                <PolarAreaChartDemoDoc></PolarAreaChartDemoDoc>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class PolarAreaChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class PolarAreaChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            datasets: [{\r\n                data: [\r\n                    11,\r\n                    16,\r\n                    7,\r\n                    3,\r\n                    14\r\n                ],\r\n                backgroundColor: [\r\n                    \"#42A5F5\",\r\n                    \"#66BB6A\",\r\n                    \"#FFA726\",\r\n                    \"#26C6DA\",\r\n                    \"#7E57C2\"\r\n                ],\r\n                label: 'My dataset'\r\n            }],\r\n            labels: [\r\n                \"Red\",\r\n                \"Green\",\r\n                \"Yellow\",\r\n                \"Grey\",\r\n                \"Blue\"\r\n            ]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scale: {\r\n                gridLines: {\r\n                    color: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <Chart type=\"polarArea\" data={this.chartData} options={this.lightOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst PolarAreaChartDemo = () => {\r\n    const chartData = {\r\n        datasets: [{\r\n            data: [\r\n                11,\r\n                16,\r\n                7,\r\n                3,\r\n                14\r\n            ],\r\n            backgroundColor: [\r\n                \"#42A5F5\",\r\n                \"#66BB6A\",\r\n                \"#FFA726\",\r\n                \"#26C6DA\",\r\n                \"#7E57C2\"\r\n            ],\r\n            label: 'My dataset'\r\n        }],\r\n        labels: [\r\n            \"Red\",\r\n            \"Green\",\r\n            \"Yellow\",\r\n            \"Grey\",\r\n            \"Blue\"\r\n        ]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scale: {\r\n            gridLines: {\r\n                color: '#ebedef'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"polarArea\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst PolarAreaChartDemo = () => {\r\n    const chartData = {\r\n        datasets: [{\r\n            data: [\r\n                11,\r\n                16,\r\n                7,\r\n                3,\r\n                14\r\n            ],\r\n            backgroundColor: [\r\n                \"#42A5F5\",\r\n                \"#66BB6A\",\r\n                \"#FFA726\",\r\n                \"#26C6DA\",\r\n                \"#7E57C2\"\r\n            ],\r\n            label: 'My dataset'\r\n        }],\r\n        labels: [\r\n            \"Red\",\r\n            \"Green\",\r\n            \"Yellow\",\r\n            \"Grey\",\r\n            \"Blue\"\r\n        ]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scale: {\r\n            gridLines: {\r\n                color: '#ebedef'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"polarArea\" data={chartData} options={options} />\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'PolarAreaChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}