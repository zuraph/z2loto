{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\paginator\\\\Paginator.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport { FirstPageLink } from './FirstPageLink';\nimport { NextPageLink } from './NextPageLink';\nimport { PrevPageLink } from './PrevPageLink';\nimport { LastPageLink } from './LastPageLink';\nimport { PageLinks } from './PageLinks';\nimport { RowsPerPageDropdown } from './RowsPerPageDropdown';\nimport { CurrentPageReport } from './CurrentPageReport';\nimport ObjectUtils from '../utils/ObjectUtils';\nexport var Paginator = /*#__PURE__*/function (_Component) {\n  _inherits(Paginator, _Component);\n\n  var _super = _createSuper(Paginator);\n\n  function Paginator(props) {\n    var _this;\n\n    _classCallCheck(this, Paginator);\n\n    _this = _super.call(this, props);\n    _this.changePageToFirst = _this.changePageToFirst.bind(_assertThisInitialized(_this));\n    _this.changePageToPrev = _this.changePageToPrev.bind(_assertThisInitialized(_this));\n    _this.changePageToNext = _this.changePageToNext.bind(_assertThisInitialized(_this));\n    _this.changePageToLast = _this.changePageToLast.bind(_assertThisInitialized(_this));\n    _this.onRowsChange = _this.onRowsChange.bind(_assertThisInitialized(_this));\n    _this.onPageLinkClick = _this.onPageLinkClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Paginator, [{\n    key: \"isFirstPage\",\n    value: function isFirstPage() {\n      return this.getPage() === 0;\n    }\n  }, {\n    key: \"isLastPage\",\n    value: function isLastPage() {\n      return this.getPage() === this.getPageCount() - 1;\n    }\n  }, {\n    key: \"getPageCount\",\n    value: function getPageCount() {\n      return Math.ceil(this.props.totalRecords / this.props.rows) || 1;\n    }\n  }, {\n    key: \"calculatePageLinkBoundaries\",\n    value: function calculatePageLinkBoundaries() {\n      var numberOfPages = this.getPageCount();\n      var visiblePages = Math.min(this.props.pageLinkSize, numberOfPages); //calculate range, keep current in middle if necessary\n\n      var start = Math.max(0, Math.ceil(this.getPage() - visiblePages / 2));\n      var end = Math.min(numberOfPages - 1, start + visiblePages - 1); //check when approaching to last page\n\n      var delta = this.props.pageLinkSize - (end - start + 1);\n      start = Math.max(0, start - delta);\n      return [start, end];\n    }\n  }, {\n    key: \"updatePageLinks\",\n    value: function updatePageLinks() {\n      var pageLinks = [];\n      var boundaries = this.calculatePageLinkBoundaries();\n      var start = boundaries[0];\n      var end = boundaries[1];\n\n      for (var i = start; i <= end; i++) {\n        pageLinks.push(i + 1);\n      }\n\n      return pageLinks;\n    }\n  }, {\n    key: \"changePage\",\n    value: function changePage(first, rows) {\n      var pc = this.getPageCount();\n      var p = Math.floor(first / rows);\n\n      if (p >= 0 && p < pc) {\n        var newPageState = {\n          first: first,\n          rows: rows,\n          page: p,\n          pageCount: pc\n        };\n\n        if (this.props.onPageChange) {\n          this.props.onPageChange(newPageState);\n        }\n      }\n    }\n  }, {\n    key: \"getPage\",\n    value: function getPage() {\n      return Math.floor(this.props.first / this.props.rows);\n    }\n  }, {\n    key: \"changePageToFirst\",\n    value: function changePageToFirst(event) {\n      this.changePage(0, this.props.rows);\n      event.preventDefault();\n    }\n  }, {\n    key: \"changePageToPrev\",\n    value: function changePageToPrev(event) {\n      this.changePage(this.props.first - this.props.rows, this.props.rows);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onPageLinkClick\",\n    value: function onPageLinkClick(event) {\n      this.changePage((event.value - 1) * this.props.rows, this.props.rows);\n    }\n  }, {\n    key: \"changePageToNext\",\n    value: function changePageToNext(event) {\n      this.changePage(this.props.first + this.props.rows, this.props.rows);\n      event.preventDefault();\n    }\n  }, {\n    key: \"changePageToLast\",\n    value: function changePageToLast(event) {\n      this.changePage((this.getPageCount() - 1) * this.props.rows, this.props.rows);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onRowsChange\",\n    value: function onRowsChange(event) {\n      this.changePage(0, event.value);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.rows !== prevProps.rows) {\n        this.changePage(0, this.props.rows);\n      } else if (this.getPage() > 0 && prevProps.totalRecords !== this.props.totalRecords && this.props.first >= this.props.totalRecords) {\n        this.changePage((this.getPageCount() - 1) * this.props.rows, this.props.rows);\n      }\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(key, template) {\n      var element;\n\n      switch (key) {\n        case 'FirstPageLink':\n          element = /*#__PURE__*/React.createElement(FirstPageLink, {\n            key: key,\n            onClick: this.changePageToFirst,\n            disabled: this.isFirstPage(),\n            template: template,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 27\n            }\n          });\n          break;\n\n        case 'PrevPageLink':\n          element = /*#__PURE__*/React.createElement(PrevPageLink, {\n            key: key,\n            onClick: this.changePageToPrev,\n            disabled: this.isFirstPage(),\n            template: template,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 27\n            }\n          });\n          break;\n\n        case 'NextPageLink':\n          element = /*#__PURE__*/React.createElement(NextPageLink, {\n            key: key,\n            onClick: this.changePageToNext,\n            disabled: this.isLastPage(),\n            template: template,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 27\n            }\n          });\n          break;\n\n        case 'LastPageLink':\n          element = /*#__PURE__*/React.createElement(LastPageLink, {\n            key: key,\n            onClick: this.changePageToLast,\n            disabled: this.isLastPage(),\n            template: template,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 27\n            }\n          });\n          break;\n\n        case 'PageLinks':\n          element = /*#__PURE__*/React.createElement(PageLinks, {\n            key: key,\n            value: this.updatePageLinks(),\n            page: this.getPage(),\n            rows: this.props.rows,\n            pageCount: this.getPageCount(),\n            onClick: this.onPageLinkClick,\n            template: template,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 27\n            }\n          });\n          break;\n\n        case 'RowsPerPageDropdown':\n          element = /*#__PURE__*/React.createElement(RowsPerPageDropdown, {\n            key: key,\n            value: this.props.rows,\n            page: this.getPage(),\n            pageCount: this.getPageCount(),\n            totalRecords: this.props.totalRecords,\n            options: this.props.rowsPerPageOptions,\n            onChange: this.onRowsChange,\n            appendTo: this.props.dropdownAppendTo,\n            template: template,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 27\n            }\n          });\n          break;\n\n        case 'CurrentPageReport':\n          element = /*#__PURE__*/React.createElement(CurrentPageReport, {\n            reportTemplate: this.props.currentPageReportTemplate,\n            key: key,\n            page: this.getPage(),\n            pageCount: this.getPageCount(),\n            first: this.props.first,\n            rows: this.props.rows,\n            totalRecords: this.props.totalRecords,\n            template: template,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 27\n            }\n          });\n          break;\n\n        default:\n          element = null;\n          break;\n      }\n\n      return element;\n    }\n  }, {\n    key: \"renderElements\",\n    value: function renderElements() {\n      var _this2 = this;\n\n      var template = this.props.template;\n\n      if (typeof template === 'object') {\n        return template.layout ? template.layout.split(' ').map(function (value) {\n          var key = value.trim();\n          return _this2.renderElement(key, template[key]);\n        }) : Object.entries(template).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              _template = _ref2[1];\n\n          return _this2.renderElement(key, _template);\n        });\n      }\n\n      return template.split(' ').map(function (value) {\n        return _this2.renderElement(value.trim());\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.alwaysShow && this.getPageCount() === 1) {\n        return null;\n      } else {\n        var className = classNames('p-paginator p-component', this.props.className);\n        var leftContent = ObjectUtils.getJSXElement(this.props.leftContent, this.props);\n        var rightContent = ObjectUtils.getJSXElement(this.props.rightContent, this.props);\n        var elements = this.renderElements();\n        var leftElement = leftContent && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-paginator-left-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 48\n          }\n        }, leftContent);\n        var rightElement = rightContent && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-paginator-right-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 50\n          }\n        }, rightContent);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: className,\n          style: this.props.style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }\n        }, leftElement, elements, rightElement);\n      }\n    }\n  }]);\n\n  return Paginator;\n}(Component);\nPaginator.defaultProps = {\n  totalRecords: 0,\n  rows: 0,\n  first: 0,\n  pageLinkSize: 5,\n  rowsPerPageOptions: null,\n  style: null,\n  className: null,\n  template: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown',\n  onPageChange: null,\n  leftContent: null,\n  rightContent: null,\n  dropdownAppendTo: null,\n  currentPageReportTemplate: '({currentPage} of {totalPages})',\n  alwaysShow: true\n};\nPaginator.propTypes = {\n  totalRecords: PropTypes.number,\n  rows: PropTypes.number,\n  first: PropTypes.number,\n  pageLinkSize: PropTypes.number,\n  rowsPerPageOptions: PropTypes.array,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  template: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  onPageChange: PropTypes.func,\n  leftContent: PropTypes.any,\n  rightContent: PropTypes.any,\n  dropdownAppendTo: PropTypes.any,\n  currentPageReportTemplate: PropTypes.any,\n  alwaysShow: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/paginator/Paginator.js"],"names":["React","Component","PropTypes","classNames","FirstPageLink","NextPageLink","PrevPageLink","LastPageLink","PageLinks","RowsPerPageDropdown","CurrentPageReport","ObjectUtils","Paginator","props","changePageToFirst","bind","changePageToPrev","changePageToNext","changePageToLast","onRowsChange","onPageLinkClick","getPage","getPageCount","Math","ceil","totalRecords","rows","numberOfPages","visiblePages","min","pageLinkSize","start","max","end","delta","pageLinks","boundaries","calculatePageLinkBoundaries","i","push","first","pc","p","floor","newPageState","page","pageCount","onPageChange","event","changePage","preventDefault","value","prevProps","prevState","key","template","element","isFirstPage","isLastPage","updatePageLinks","rowsPerPageOptions","dropdownAppendTo","currentPageReportTemplate","layout","split","map","trim","renderElement","Object","entries","_template","alwaysShow","className","leftContent","getJSXElement","rightContent","elements","renderElements","leftElement","rightElement","style","defaultProps","propTypes","number","array","object","string","oneOfType","func","any","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { FirstPageLink } from './FirstPageLink';\r\nimport { NextPageLink } from './NextPageLink';\r\nimport { PrevPageLink } from './PrevPageLink';\r\nimport { LastPageLink } from './LastPageLink';\r\nimport { PageLinks } from './PageLinks';\r\nimport { RowsPerPageDropdown } from './RowsPerPageDropdown';\r\nimport { CurrentPageReport } from './CurrentPageReport';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\n\r\nexport class Paginator extends Component {\r\n\r\n    static defaultProps = {\r\n        totalRecords: 0,\r\n        rows: 0,\r\n        first: 0,\r\n        pageLinkSize: 5,\r\n        rowsPerPageOptions: null,\r\n        style: null,\r\n        className: null,\r\n        template: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown',\r\n        onPageChange: null,\r\n        leftContent: null,\r\n        rightContent: null,\r\n        dropdownAppendTo: null,\r\n        currentPageReportTemplate: '({currentPage} of {totalPages})',\r\n        alwaysShow: true\r\n    }\r\n\r\n    static propTypes = {\r\n        totalRecords: PropTypes.number,\r\n        rows: PropTypes.number,\r\n        first: PropTypes.number,\r\n        pageLinkSize: PropTypes.number,\r\n        rowsPerPageOptions: PropTypes.array,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        template: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n        onPageChange: PropTypes.func,\r\n        leftContent: PropTypes.any,\r\n        rightContent: PropTypes.any,\r\n        dropdownAppendTo: PropTypes.any,\r\n        currentPageReportTemplate: PropTypes.any,\r\n        alwaysShow: PropTypes.bool\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changePageToFirst = this.changePageToFirst.bind(this);\r\n        this.changePageToPrev = this.changePageToPrev.bind(this);\r\n        this.changePageToNext = this.changePageToNext.bind(this);\r\n        this.changePageToLast = this.changePageToLast.bind(this);\r\n        this.onRowsChange = this.onRowsChange.bind(this);\r\n        this.onPageLinkClick = this.onPageLinkClick.bind(this);\r\n    }\r\n\r\n    isFirstPage() {\r\n        return this.getPage() === 0;\r\n    }\r\n\r\n    isLastPage() {\r\n        return this.getPage() === this.getPageCount() - 1;\r\n    }\r\n\r\n    getPageCount() {\r\n        return Math.ceil(this.props.totalRecords / this.props.rows) || 1;\r\n    }\r\n\r\n    calculatePageLinkBoundaries() {\r\n        let numberOfPages = this.getPageCount();\r\n        let visiblePages = Math.min(this.props.pageLinkSize, numberOfPages);\r\n\r\n        //calculate range, keep current in middle if necessary\r\n        let start = Math.max(0, Math.ceil(this.getPage() - ((visiblePages) / 2)));\r\n        let end = Math.min(numberOfPages - 1, start + visiblePages - 1);\r\n\r\n        //check when approaching to last page\r\n        let delta = this.props.pageLinkSize - (end - start + 1);\r\n        start = Math.max(0, start - delta);\r\n\r\n        return [start, end];\r\n    }\r\n\r\n    updatePageLinks() {\r\n        let pageLinks = [];\r\n        let boundaries = this.calculatePageLinkBoundaries();\r\n        let start = boundaries[0];\r\n        let end = boundaries[1];\r\n\r\n        for (let i = start; i <= end; i++) {\r\n            pageLinks.push(i + 1);\r\n        }\r\n\r\n        return pageLinks;\r\n    }\r\n\r\n    changePage(first, rows) {\r\n        let pc = this.getPageCount();\r\n        let p = Math.floor(first / rows);\r\n\r\n        if (p >= 0 && p < pc) {\r\n            let newPageState = {\r\n                first: first,\r\n                rows: rows,\r\n                page: p,\r\n                pageCount: pc\r\n            };\r\n\r\n            if (this.props.onPageChange) {\r\n                this.props.onPageChange(newPageState);\r\n            }\r\n        }\r\n    }\r\n\r\n    getPage() {\r\n        return Math.floor(this.props.first / this.props.rows);\r\n    }\r\n\r\n    changePageToFirst(event) {\r\n        this.changePage(0, this.props.rows);\r\n        event.preventDefault();\r\n    }\r\n\r\n    changePageToPrev(event) {\r\n        this.changePage(this.props.first - this.props.rows, this.props.rows);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onPageLinkClick(event) {\r\n        this.changePage((event.value - 1) * this.props.rows, this.props.rows);\r\n    }\r\n\r\n    changePageToNext(event) {\r\n        this.changePage(this.props.first + this.props.rows, this.props.rows);\r\n        event.preventDefault();\r\n    }\r\n\r\n    changePageToLast(event) {\r\n        this.changePage((this.getPageCount() - 1) * this.props.rows, this.props.rows);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onRowsChange(event) {\r\n        this.changePage(0, event.value);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.rows !== prevProps.rows) {\r\n            this.changePage(0, this.props.rows);\r\n        }\r\n        else if (this.getPage() > 0 && prevProps.totalRecords !== this.props.totalRecords && this.props.first >= this.props.totalRecords) {\r\n            this.changePage((this.getPageCount() - 1) * this.props.rows, this.props.rows);\r\n        }\r\n    }\r\n\r\n    renderElement(key, template) {\r\n        let element;\r\n\r\n        switch (key) {\r\n            case 'FirstPageLink':\r\n                element = <FirstPageLink key={key} onClick={this.changePageToFirst} disabled={this.isFirstPage()} template={template} />;\r\n                break;\r\n\r\n            case 'PrevPageLink':\r\n                element = <PrevPageLink key={key} onClick={this.changePageToPrev} disabled={this.isFirstPage()} template={template} />;\r\n                break;\r\n\r\n            case 'NextPageLink':\r\n                element = <NextPageLink key={key} onClick={this.changePageToNext} disabled={this.isLastPage()} template={template} />;\r\n                break;\r\n\r\n            case 'LastPageLink':\r\n                element = <LastPageLink key={key} onClick={this.changePageToLast} disabled={this.isLastPage()} template={template} />;\r\n                break;\r\n\r\n            case 'PageLinks':\r\n                element = <PageLinks key={key} value={this.updatePageLinks()} page={this.getPage()} rows={this.props.rows} pageCount={this.getPageCount()} onClick={this.onPageLinkClick} template={template} />;\r\n                break;\r\n\r\n            case 'RowsPerPageDropdown':\r\n                element = <RowsPerPageDropdown key={key} value={this.props.rows} page={this.getPage()} pageCount={this.getPageCount()} totalRecords={this.props.totalRecords} options={this.props.rowsPerPageOptions} onChange={this.onRowsChange} appendTo={this.props.dropdownAppendTo} template={template} />;\r\n                break;\r\n\r\n            case 'CurrentPageReport':\r\n                element = <CurrentPageReport reportTemplate={this.props.currentPageReportTemplate} key={key}\r\n                    page={this.getPage()} pageCount={this.getPageCount()} first={this.props.first}\r\n                    rows={this.props.rows} totalRecords={this.props.totalRecords} template={template}/>;\r\n                break;\r\n\r\n            default:\r\n                element = null;\r\n                break;\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    renderElements() {\r\n        const template = this.props.template;\r\n\r\n        if (typeof template === 'object') {\r\n            return template.layout ?\r\n                template.layout.split(' ').map((value) => {\r\n                    const key = value.trim();\r\n                    return this.renderElement(key, template[key]);\r\n                })\r\n                :\r\n                Object.entries(template).map(([key, _template]) => {\r\n                    return this.renderElement(key, _template);\r\n                });\r\n        }\r\n\r\n        return template.split(' ').map((value) => {\r\n            return this.renderElement(value.trim());\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.alwaysShow && this.getPageCount() === 1) {\r\n            return null;\r\n        }\r\n        else {\r\n            const className = classNames('p-paginator p-component', this.props.className);\r\n            const leftContent = ObjectUtils.getJSXElement(this.props.leftContent, this.props);\r\n            const rightContent = ObjectUtils.getJSXElement(this.props.rightContent, this.props);\r\n\r\n            const elements = this.renderElements();\r\n            const leftElement = leftContent && <div className=\"p-paginator-left-content\">{leftContent}</div>;\r\n            const rightElement = rightContent && <div className=\"p-paginator-right-content\">{rightContent}</div>;\r\n\r\n            return (\r\n                <div className={className} style={this.props.style}>\r\n                    {leftElement}\r\n                    {elements}\r\n                    {rightElement}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}