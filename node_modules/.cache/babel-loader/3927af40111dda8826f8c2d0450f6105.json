{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var DeferredContentDoc=/*#__PURE__*/function(_Component){_inherits(DeferredContentDoc,_Component);var _super=_createSuper(DeferredContentDoc);function DeferredContentDoc(props){var _this;_classCallCheck(this,DeferredContentDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { DeferredContent } from 'primereact/deferredcontent';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nexport class DeferredContentDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            products: null\\n        };\\n\\n        this.productService = new ProductService();\\n        this.onImageLoad = this.onImageLoad.bind(this);\\n        this.onDataLoad = this.onDataLoad.bind(this);\\n    }\\n\\n    onImageLoad() {\\n        this.toast.show({ severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable' });\\n    }\\n\\n    onDataLoad() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n        this.toast.show({ severity: 'success', summary: 'Data Initialized', detail: 'Render Completed' });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => this.toast = el} />\\n\\n                <div className=\\\"card\\\">\\n                    <div style={{ height: '800px' }}>\\n                        Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\\n                    </div>\\n\\n                    <DeferredContent onLoad={this.onImageLoad}>\\n                        <img src=\\\"showcase/demo/images/galleria/galleria1.jpg\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt=\\\"Prime\\\"/>\\n                    </DeferredContent>\\n\\n                    <div style={{height: '500px'}}></div>\\n\\n                    <DeferredContent onLoad={this.onDataLoad}>\\n                        <DataTable value={this.state.products}>\\n                            <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                            <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                            <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                            <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                        </DataTable>\\n                    </DeferredContent>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useRef } from 'react';\\nimport { DeferredContent } from 'primereact/deferredcontent';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nexport class DeferredContentDemo extends Component {\\n    const toast = useRef(null);\\n    const [products, setProducts] = useState(null);\\n    const productService = new ProductService();\\n\\n    const onImageLoad = () => {\\n        toast.current.show({ severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable' });\\n    }\\n\\n    const onDataLoad = () => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n        toast.current.show({ severity: 'success', summary: 'Data Initialized', detail: 'Render Completed' });\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <div style={{ height: '800px' }}>\\n                    Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\\n                </div>\\n\\n                <DeferredContent onLoad={onImageLoad}>\\n                    <img src=\\\"showcase/demo/images/galleria/galleria1.jpg\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt=\\\"Prime\\\"/>\\n                </DeferredContent>\\n\\n                <div style={{height: '500px'}}></div>\\n\\n                <DeferredContent onLoad={onDataLoad}>\\n                    <DataTable value={products}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                    </DataTable>\\n                </DeferredContent>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useRef } from 'react';\\nimport { DeferredContent } from 'primereact/deferredcontent';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport ProductService from '../service/ProductService';\\n\\nexport class DeferredContentDemo extends Component {\\n    const toast = useRef(null);\\n    const [products, setProducts] = useState(null);\\n    const productService = new ProductService();\\n\\n    const onImageLoad = () => {\\n        toast.current.show({ severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable' });\\n    }\\n\\n    const onDataLoad = () => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n        toast.current.show({ severity: 'success', summary: 'Data Initialized', detail: 'Render Completed' });\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <div style={{ height: '800px' }}>\\n                    Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\\n                </div>\\n\\n                <DeferredContent onLoad={onImageLoad}>\\n                    <img src=\\\"showcase/demo/images/galleria/galleria1.jpg\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt=\\\"Prime\\\"/>\\n                </DeferredContent>\\n\\n                <div style={{height: '500px'}}></div>\\n\\n                <DeferredContent onLoad={onDataLoad}>\\n                    <DataTable value={products}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                    </DataTable>\\n                </DeferredContent>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this;}_createClass(DeferredContentDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { DeferredContent } from 'primereact/deferredcontent';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"DeferredContent is used as a wrapper element of its content.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<DeferredContent onLoad={onDataLoad}>\\n    <DataTable value={products}>\\n        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n    </DataTable>\\n</DeferredContent>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Callback\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",null,\"onLoad\"),\" callback is useful to initialize the content when it becomes visible on scroll such as loading data.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<DeferredContent onLoad={onDataLoad}>\\n    <DataTable value={products}>\\n        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n    </DataTable>\\n</DeferredContent>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},\"Component has no attributes.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onLoad\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Event object\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when deferred content is loaded.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},\"Component does not apply any styling.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'DeferredContentDemo',sources:this.sources,service:'ProductService',data:'products-small'})));}}]);return DeferredContentDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/deferredcontent/DeferredContentDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","DeferredContentDoc","props","sources","tabName","content","name","service","data"],"mappings":"wpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,kCAAlC,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CAEA,UAAaC,CAAAA,kBAAb,wHAEI,4BAAYC,KAAZ,CAAmB,oDACf,uBAAMA,KAAN,EAEA,MAAKC,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,w4EAFF,CADE,CAgEX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,ymEAFF,CAhEE,CAqHX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,ymEAFL,CArHK,CAAf,CAHe,aA8KlB,CAhLL,oEAkLI,gCAAwB,CACpB,MAAO,MAAP,CACH,CApLL,sBAsLI,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,mBACI,oBAAC,QAAD,EAAU,MAAM,CAAC,eAAjB,eACI,uCADJ,cAEpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,sEAFoB,cAQI,gDARJ,cASI,4FATJ,cAUpB,oBAAC,aAAD,kXAVoB,cAuBI,yCAvBJ,cAwBI,0CAAG,sCAAH,yGAxBJ,cAyBpB,oBAAC,aAAD,kXAzBoB,cAsCI,2CAtCJ,cAuCI,2BAAK,SAAS,CAAC,kBAAf,iCAvCJ,cA2CI,uCA3CJ,cA4CI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,2CAFJ,cAGI,4CAHJ,CADJ,CADJ,cAQI,8CACI,2CACI,uCADJ,cAEI,oDAFJ,cAGI,oFAHJ,CADJ,CARJ,CADJ,CA5CJ,cA+DI,wCA/DJ,cAgEI,2BAAK,SAAS,CAAC,kBAAf,0CAhEJ,cAoEI,6CApEJ,cAqEI,qCArEJ,CADJ,CA0EQL,iBAAiB,CAAC,CAAEM,IAAI,CAAE,qBAAR,CAA+BH,OAAO,CAAE,KAAKA,OAA7C,CAAsDI,OAAO,CAAE,gBAA/D,CAAiFC,IAAI,CAAE,gBAAvF,CAAD,CA1EzB,CADJ,CADJ,CAiFH,CAxQL,gCAAwCZ,SAAxC","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class DeferredContentDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DeferredContent } from 'primereact/deferredcontent';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class DeferredContentDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.onImageLoad = this.onImageLoad.bind(this);\r\n        this.onDataLoad = this.onDataLoad.bind(this);\r\n    }\r\n\r\n    onImageLoad() {\r\n        this.toast.show({ severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable' });\r\n    }\r\n\r\n    onDataLoad() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n        this.toast.show({ severity: 'success', summary: 'Data Initialized', detail: 'Render Completed' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => this.toast = el} />\r\n\r\n                <div className=\"card\">\r\n                    <div style={{ height: '800px' }}>\r\n                        Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\r\n                    </div>\r\n\r\n                    <DeferredContent onLoad={this.onImageLoad}>\r\n                        <img src=\"showcase/demo/images/galleria/galleria1.jpg\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt=\"Prime\"/>\r\n                    </DeferredContent>\r\n\r\n                    <div style={{height: '500px'}}></div>\r\n\r\n                    <DeferredContent onLoad={this.onDataLoad}>\r\n                        <DataTable value={this.state.products}>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n                    </DeferredContent>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useRef } from 'react';\r\nimport { DeferredContent } from 'primereact/deferredcontent';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class DeferredContentDemo extends Component {\r\n    const toast = useRef(null);\r\n    const [products, setProducts] = useState(null);\r\n    const productService = new ProductService();\r\n\r\n    const onImageLoad = () => {\r\n        toast.current.show({ severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable' });\r\n    }\r\n\r\n    const onDataLoad = () => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n        toast.current.show({ severity: 'success', summary: 'Data Initialized', detail: 'Render Completed' });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <div style={{ height: '800px' }}>\r\n                    Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\r\n                </div>\r\n\r\n                <DeferredContent onLoad={onImageLoad}>\r\n                    <img src=\"showcase/demo/images/galleria/galleria1.jpg\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt=\"Prime\"/>\r\n                </DeferredContent>\r\n\r\n                <div style={{height: '500px'}}></div>\r\n\r\n                <DeferredContent onLoad={onDataLoad}>\r\n                    <DataTable value={products}>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                    </DataTable>\r\n                </DeferredContent>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useRef } from 'react';\r\nimport { DeferredContent } from 'primereact/deferredcontent';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class DeferredContentDemo extends Component {\r\n    const toast = useRef(null);\r\n    const [products, setProducts] = useState(null);\r\n    const productService = new ProductService();\r\n\r\n    const onImageLoad = () => {\r\n        toast.current.show({ severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable' });\r\n    }\r\n\r\n    const onDataLoad = () => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n        toast.current.show({ severity: 'success', summary: 'Data Initialized', detail: 'Render Completed' });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <div style={{ height: '800px' }}>\r\n                    Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\r\n                </div>\r\n\r\n                <DeferredContent onLoad={onImageLoad}>\r\n                    <img src=\"showcase/demo/images/galleria/galleria1.jpg\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt=\"Prime\"/>\r\n                </DeferredContent>\r\n\r\n                <div style={{height: '500px'}}></div>\r\n\r\n                <DeferredContent onLoad={onDataLoad}>\r\n                    <DataTable value={products}>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                    </DataTable>\r\n                </DeferredContent>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { DeferredContent } from 'primereact/deferredcontent';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>DeferredContent is used as a wrapper element of its content.</p>\r\n<CodeHighlight>\r\n{`\r\n<DeferredContent onLoad={onDataLoad}>\r\n    <DataTable value={products}>\r\n        <Column field=\"code\" header=\"Code\"></Column>\r\n        <Column field=\"name\" header=\"Name\"></Column>\r\n        <Column field=\"category\" header=\"Category\"></Column>\r\n        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n    </DataTable>\r\n</DeferredContent>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Callback</h5>\r\n                        <p><i>onLoad</i> callback is useful to initialize the content when it becomes visible on scroll such as loading data.</p>\r\n<CodeHighlight>\r\n{`\r\n<DeferredContent onLoad={onDataLoad}>\r\n    <DataTable value={products}>\r\n        <Column field=\"code\" header=\"Code\"></Column>\r\n        <Column field=\"name\" header=\"Name\"></Column>\r\n        <Column field=\"category\" header=\"Category\"></Column>\r\n        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n    </DataTable>\r\n</DeferredContent>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            Component has no attributes.\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onLoad</td>\r\n                                        <td>event: Event object</td>\r\n                                        <td>Callback to invoke when deferred content is loaded.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            Component does not apply any styling.\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DeferredContentDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}