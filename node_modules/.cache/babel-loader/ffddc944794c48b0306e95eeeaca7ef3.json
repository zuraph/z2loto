{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var ToggleButtonDoc=/*#__PURE__*/function(_Component){_inherits(ToggleButtonDoc,_Component);var _super=_createSuper(ToggleButtonDoc);function ToggleButtonDoc(props){var _this;_classCallCheck(this,ToggleButtonDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { ToggleButton } from 'primereact/togglebutton';\\n\\nexport class ToggleButtonDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            checked1: false,\\n            checked2: false\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <ToggleButton checked={this.state.checked1} onChange={(e) => this.setState({checked1: e.value})} onIcon=\\\"pi pi-check\\\" offIcon=\\\"pi pi-times\\\" />\\n\\n                    <h5>Customized</h5>\\n                    <ToggleButton checked={this.state.checked2} onChange={(e) => this.setState({checked2: e.value})} onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" onIcon=\\\"pi pi-check\\\" offIcon=\\\"pi pi-times\\\" style={{width: '10em'}} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { ToggleButton } from 'primereact/togglebutton';\\n\\nconst ToggleButtonDemo = () => {\\n    const [checked1, setChecked1] = useState(false);\\n    const [checked2, setChecked2] = useState(false);\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <ToggleButton checked={checked1} onChange={(e) => setChecked1(e.value)} onIcon=\\\"pi pi-check\\\" offIcon=\\\"pi pi-times\\\" />\\n\\n                <h5>Customized</h5>\\n                <ToggleButton checked={checked2} onChange={(e) => setChecked2(e.value)} onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" onIcon=\\\"pi pi-check\\\" offIcon=\\\"pi pi-times\\\" style={{width: '10em'}} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { ToggleButton } from 'primereact/togglebutton';\\n\\nconst ToggleButtonDemo = () => {\\n    const [checked1, setChecked1] = useState(false);\\n    const [checked2, setChecked2] = useState(false);\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <ToggleButton checked={checked1} onChange={(e) => setChecked1(e.value)} onIcon=\\\"pi pi-check\\\" offIcon=\\\"pi pi-times\\\" />\\n\\n                <h5>Customized</h5>\\n                <ToggleButton checked={checked2} onChange={(e) => setChecked2(e.value)} onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" onIcon=\\\"pi pi-check\\\" offIcon=\\\"pi pi-times\\\" style={{width: '10em'}} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this;}_createClass(ToggleButtonDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { ToggleButton } from 'primereact/togglebutton';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"ToggleButton is used as a controlled input with \",/*#__PURE__*/React.createElement(\"i\",null,\"checked\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onChange\"),\" properties.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<ToggleButton checked={checked1} onChange={(e) => setChecked1(e.value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Labels and Icons\"),/*#__PURE__*/React.createElement(\"p\",null,\"Icons and Labels can be customized using \",/*#__PURE__*/React.createElement(\"i\",null,\"onLabel\"),\", \",/*#__PURE__*/React.createElement(\"i\",null,\"offLabel\"),\", \",/*#__PURE__*/React.createElement(\"i\",null,\"onIcon\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"offIcon\"),\" properties.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<ToggleButton onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" onIcon=\\\"pi pi-check\\\" offIcon=\\\"pi pi-times\\\" checked={checked2} onChange={(e) => setChecked2(e.value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onIcon\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon for the on state.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"offIcon\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon for the off state.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"yes\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label for the on state.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"offLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"no\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label for the off state.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"checked\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Specifies the on/off state of the button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tabIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"0\"),/*#__PURE__*/React.createElement(\"td\",null,\"Index of the element in tabbing order.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"iconPos\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"left\"),/*#__PURE__*/React.createElement(\"td\",null,\"Position of the icon, valid values are \\\"left\\\" and \\\"right\\\".\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaLabelledBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Establishes relationships between the component and label(s) where its value should be one or more element IDs.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.value: Value as the checked state.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke on value change.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onFocus\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when autocomplete gets focus.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onBlur\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when autocomplete loses focus.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-togglebutton\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-button-icon-left\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-button-text\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label element.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'ToggleButtonDemo',sources:this.sources})));}}]);return ToggleButtonDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/togglebutton/ToggleButtonDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","ToggleButtonDoc","props","sources","tabName","content","name"],"mappings":"wsBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,CAAiBC,QAAjB,KAAiC,kCAAjC,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CAEA,UAAaC,CAAAA,eAAb,kHAEI,yBAAYC,KAAZ,CAAmB,iDACf,uBAAMA,KAAN,EAEA,MAAKC,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,+8BAFF,CADE,CAkCX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,6xBAFF,CAlCE,CA0DX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,6xBAFL,CA1DK,CAAf,CAHe,aAsFlB,CAxFL,iEA0FI,gCAAwB,CACpB,MAAO,MAAP,CACH,CA5FL,sBA8FI,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACR,oBAAC,OAAD,mBACI,oBAAC,QAAD,EAAU,MAAM,CAAC,eAAjB,eACI,uCADJ,cAER,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,gEAFQ,cAQI,gDARJ,cASI,6FAAmD,uCAAnD,sBAAsE,wCAAtE,gBATJ,cAWR,oBAAC,aAAD,uFAXQ,cAiBI,iDAjBJ,cAkBI,sFAA4C,uCAA5C,mBAA4D,wCAA5D,mBAA6E,sCAA7E,sBAA+F,uCAA/F,gBAlBJ,cAoBR,oBAAC,aAAD,kLApBQ,cA0BI,2CA1BJ,cA2BI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,qCAFJ,cAGI,wCAHJ,cAII,4CAJJ,CADJ,CADJ,cASI,8CACI,2CACI,mCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,kEAJJ,CADJ,cAOI,2CACI,uCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,uDAJJ,CAPJ,cAaI,2CACI,wCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,wDAJJ,CAbJ,cAmBI,2CACI,wCADJ,cAEI,uCAFJ,cAGI,oCAHJ,cAII,wDAJJ,CAnBJ,cAyBI,2CACI,yCADJ,cAEI,uCAFJ,cAGI,mCAHJ,cAII,yDAJJ,CAzBJ,cA+BI,2CACI,sCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,6DAJJ,CA/BJ,cAqCI,2CACI,0CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,4DAJJ,CArCJ,cA2CI,2CACI,wCADJ,cAEI,wCAFJ,cAGI,sCAHJ,cAII,0EAJJ,CA3CJ,cAiDI,2CACI,yCADJ,cAEI,uCAFJ,cAGI,kCAHJ,cAII,uEAJJ,CAjDJ,cAuDI,2CACI,wCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,+FAJJ,CAvDJ,cA6DI,2CACI,wCADJ,cAEI,oCAFJ,cAGI,qCAHJ,cAII,wDAJJ,CA7DJ,cAmEI,2CACI,+CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,uHAJJ,CAnEJ,cAyEI,2CACI,+CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,gJAJJ,CAzEJ,CATJ,CADJ,CA3BJ,cAwHI,uCAxHJ,cAyHI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,2CAFJ,cAGI,4CAHJ,CADJ,CADJ,cAQI,8CACI,2CACI,yCADJ,cAEI,iFAAuC,8BAAvC,4CAFJ,cAII,oEAJJ,CADJ,cAOI,2CACI,wCADJ,cAEI,qDAFJ,cAGI,iFAHJ,CAPJ,cAYI,2CACI,uCADJ,cAEI,qDAFJ,cAGI,kFAHJ,CAZJ,CARJ,CADJ,CAzHJ,cAuJI,wCAvJJ,cAwJI,0HAAgF,oBAAC,IAAD,EAAM,EAAE,CAAC,UAAT,aAAhF,UAxJJ,cAyJI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,wCAFJ,CADJ,CADJ,cAOI,8CACI,2CACI,+CADJ,cAEI,kDAFJ,CADJ,cAKI,2CACI,mDADJ,cAEI,8CAFJ,CALJ,cASI,2CACI,8CADJ,cAEI,+CAFJ,CATJ,CAPJ,CADJ,CAzJJ,cAkLI,6CAlLJ,cAmLI,qCAnLJ,CADJ,CAwLQL,iBAAiB,CAAC,CAAEM,IAAI,CAAE,kBAAR,CAA4BH,OAAO,CAAE,KAAKA,OAA1C,CAAD,CAxLzB,CADQ,CADJ,CA+LH,CA9RL,6BAAqCR,SAArC","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView,TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class ToggleButtonDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\n\r\nexport class ToggleButtonDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            checked1: false,\r\n            checked2: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <ToggleButton checked={this.state.checked1} onChange={(e) => this.setState({checked1: e.value})} onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" />\r\n\r\n                    <h5>Customized</h5>\r\n                    <ToggleButton checked={this.state.checked2} onChange={(e) => this.setState({checked2: e.value})} onLabel=\"I confirm\" offLabel=\"I reject\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" style={{width: '10em'}} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\n\r\nconst ToggleButtonDemo = () => {\r\n    const [checked1, setChecked1] = useState(false);\r\n    const [checked2, setChecked2] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <ToggleButton checked={checked1} onChange={(e) => setChecked1(e.value)} onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" />\r\n\r\n                <h5>Customized</h5>\r\n                <ToggleButton checked={checked2} onChange={(e) => setChecked2(e.value)} onLabel=\"I confirm\" offLabel=\"I reject\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" style={{width: '10em'}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\n\r\nconst ToggleButtonDemo = () => {\r\n    const [checked1, setChecked1] = useState(false);\r\n    const [checked2, setChecked2] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <ToggleButton checked={checked1} onChange={(e) => setChecked1(e.value)} onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" />\r\n\r\n                <h5>Customized</h5>\r\n                <ToggleButton checked={checked2} onChange={(e) => setChecked2(e.value)} onLabel=\"I confirm\" offLabel=\"I reject\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" style={{width: '10em'}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n    <TabView>\r\n        <TabPanel header=\"Documentation\">\r\n            <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Getting Started</h5>\r\n            <p>ToggleButton is used as a controlled input with <i>checked</i> and <i>onChange</i> properties.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<ToggleButton checked={checked1} onChange={(e) => setChecked1(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Labels and Icons</h5>\r\n            <p>Icons and Labels can be customized using <i>onLabel</i>, <i>offLabel</i>, <i>onIcon</i> and <i>offIcon</i> properties.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<ToggleButton onLabel=\"I confirm\" offLabel=\"I reject\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" checked={checked2} onChange={(e) => setChecked2(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Properties</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Default</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>id</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Unique identifier of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onIcon</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Icon for the on state.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>offIcon</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Icon for the off state.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onLabel</td>\r\n                            <td>string</td>\r\n                            <td>yes</td>\r\n                            <td>Label for the on state.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>offLabel</td>\r\n                            <td>string</td>\r\n                            <td>no</td>\r\n                            <td>Label for the off state.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>style</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>checked</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Specifies the on/off state of the button.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tabIndex</td>\r\n                            <td>number</td>\r\n                            <td>0</td>\r\n                            <td>Index of the element in tabbing order.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>iconPos</td>\r\n                            <td>string</td>\r\n                            <td>left</td>\r\n                            <td>Position of the icon, valid values are \"left\" and \"right\".</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltip</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Content of the tooltip.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltipOptions</td>\r\n                            <td>object</td>\r\n                            <td>null</td>\r\n                            <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ariaLabelledBy</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Events</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Parameters</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>onChange</td>\r\n                            <td>event.originalEvent: Browser event <br />\r\n                                event.value: Value as the checked state.</td>\r\n                            <td>Callback to invoke on value change.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onFocus</td>\r\n                            <td>event: Browser event</td>\r\n                            <td>Callback to invoke when autocomplete gets focus.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onBlur</td>\r\n                            <td>event: Browser event</td>\r\n                            <td>Callback to invoke when autocomplete loses focus.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Styling</h5>\r\n            <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Element</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>p-togglebutton</td>\r\n                            <td>Container element</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-button-icon-left</td>\r\n                            <td>Icon element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-button-text</td>\r\n                            <td>Label element.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Dependencies</h5>\r\n            <p>None.</p>\r\n        </TabPanel>\r\n\r\n        {\r\n            useLiveEditorTabs({ name: 'ToggleButtonDemo', sources: this.sources })\r\n        }\r\n    </TabView>\r\n</div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}