{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TreeTable}from'../../components/treetable/TreeTable';import{Column}from'../../components/column/Column';import{NodeService}from'../service/NodeService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import'./TreeTableDemo.scss';export var TreeTableResponsiveDemo=/*#__PURE__*/function(_Component){_inherits(TreeTableResponsiveDemo,_Component);var _super=_createSuper(TreeTableResponsiveDemo);function TreeTableResponsiveDemo(props){var _this;_classCallCheck(this,TreeTableResponsiveDemo);_this=_super.call(this,props);_this.state={nodes:[]};_this.nodeservice=new NodeService();_this.nameTemplate=_this.nameTemplate.bind(_assertThisInitialized(_this));return _this;}_createClass(TreeTableResponsiveDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.nodeservice.getTreeTableNodes().then(function(data){return _this2.setState({nodes:data});});}},{key:\"nameTemplate\",value:function nameTemplate(node){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,node.data.name),/*#__PURE__*/React.createElement(\"span\",{className:\"sm-visible\"},\" \",node.data.size),/*#__PURE__*/React.createElement(\"span\",{className:\"sm-visible\"},\" \",node.data.type));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"treeTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"TreeTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Responsive\")),/*#__PURE__*/React.createElement(\"p\",null,\"TreeTable columns are displayed as stacked in responsive mode if the screen size becomes smaller than a certain breakpoint value.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation treetable-responsive-demo\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,header:\"Responsive\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",body:this.nameTemplate,expander:true}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",headerClassName:\"sm-invisible\",bodyClassName:\"sm-invisible\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",headerClassName:\"sm-invisible\",bodyClassName:\"sm-invisible\"})))),/*#__PURE__*/React.createElement(TreeTableResponsiveDemoDoc,null));}}]);return TreeTableResponsiveDemo;}(Component);var TreeTableResponsiveDemoDoc=/*#__PURE__*/function(_Component2){_inherits(TreeTableResponsiveDemoDoc,_Component2);var _super2=_createSuper(TreeTableResponsiveDemoDoc);function TreeTableResponsiveDemoDoc(props){var _this3;_classCallCheck(this,TreeTableResponsiveDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\nimport './TreeTableDemo.css';\\n\\nexport class TreeTableResponsiveDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes: []\\n        };\\n        this.nodeservice = new NodeService();\\n        this.nameTemplate = this.nameTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({nodes: data}));\\n    }\\n\\n    nameTemplate(node) {\\n        return (\\n            <React.Fragment>\\n                <span>{node.data.name}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.size}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.type}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"treetable-responsive-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <TreeTable value={this.state.nodes} header=\\\"Responsive\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" body={this.nameTemplate} expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\nimport './TreeTableDemo.css';\\n\\nconst TreeTableResponsiveDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const nameTemplate = (node) => {\\n        return (\\n            <React.Fragment>\\n                <span>{node.data.name}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.size}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.type}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    return (\\n        <div className=\\\"treetable-responsive-demo\\\">\\n            <div className=\\\"card\\\">\\n                <TreeTable value={nodes} header=\\\"Responsive\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" body={nameTemplate} expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\nimport './TreeTableDemo.css';\\n\\nconst TreeTableResponsiveDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const nameTemplate = (node) => {\\n        return (\\n            <React.Fragment>\\n                <span>{node.data.name}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.size}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.type}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    return (\\n        <div className=\\\"treetable-responsive-demo\\\">\\n            <div className=\\\"card\\\">\\n                <TreeTable value={nodes} header=\\\"Responsive\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" body={nameTemplate} expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};_this3.extFiles={'src/demo/TreeTableDemo.css':{content:\"\\n.treetable-responsive-demo .sm-visible {\\n    display: none;\\n}\\n\\n@media screen and (max-width: 40em) {\\n    .treetable-responsive-demo .sm-invisible {\\n        display: none;\\n    }\\n\\n    .treetable-responsive-demo .sm-visible {\\n        display: inline;\\n        margin-right: .5rem;\\n    }\\n}\\n                \"}};return _this3;}_createClass(TreeTableResponsiveDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'TreeTableResponsiveDemo',sources:this.sources,service:'NodeService',data:'treetablenodes',extFiles:this.extFiles})));}}]);return TreeTableResponsiveDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/treetable/TreeTableResponsiveDemo.js"],"names":["React","Component","TreeTable","Column","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableResponsiveDemo","props","state","nodes","nodeservice","nameTemplate","bind","getTreeTableNodes","then","data","setState","node","name","size","type","TreeTableResponsiveDemoDoc","sources","tabName","content","extFiles","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './TreeTableDemo.scss';\r\n\r\nexport class TreeTableResponsiveDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n        this.nameTemplate = this.nameTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({nodes: data}));\r\n    }\r\n\r\n    nameTemplate(node) {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{node.data.name}</span>\r\n                <span className=\"sm-visible\"> {node.data.size}</span>\r\n                <span className=\"sm-visible\"> {node.data.type}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Responsive</span></h1>\r\n                        <p>TreeTable columns are displayed as stacked in responsive mode if the screen size becomes smaller than a certain breakpoint value.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation treetable-responsive-demo\">\r\n                    <div className=\"card\">\r\n                        <TreeTable value={this.state.nodes} header=\"Responsive\">\r\n                            <Column field=\"name\" header=\"Name\" body={this.nameTemplate} expander></Column>\r\n                            <Column field=\"size\" header=\"Size\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                            <Column field=\"type\" header=\"Type\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableResponsiveDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TreeTableResponsiveDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport './TreeTableDemo.css';\r\n\r\nexport class TreeTableResponsiveDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n        this.nameTemplate = this.nameTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({nodes: data}));\r\n    }\r\n\r\n    nameTemplate(node) {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{node.data.name}</span>\r\n                <span className=\"sm-visible\"> {node.data.size}</span>\r\n                <span className=\"sm-visible\"> {node.data.type}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"treetable-responsive-demo\">\r\n                <div className=\"card\">\r\n                    <TreeTable value={this.state.nodes} header=\"Responsive\">\r\n                        <Column field=\"name\" header=\"Name\" body={this.nameTemplate} expander></Column>\r\n                        <Column field=\"size\" header=\"Size\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                        <Column field=\"type\" header=\"Type\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport './TreeTableDemo.css';\r\n\r\nconst TreeTableResponsiveDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const nameTemplate = (node) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{node.data.name}</span>\r\n                <span className=\"sm-visible\"> {node.data.size}</span>\r\n                <span className=\"sm-visible\"> {node.data.type}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"treetable-responsive-demo\">\r\n            <div className=\"card\">\r\n                <TreeTable value={nodes} header=\"Responsive\">\r\n                    <Column field=\"name\" header=\"Name\" body={nameTemplate} expander></Column>\r\n                    <Column field=\"size\" header=\"Size\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport './TreeTableDemo.css';\r\n\r\nconst TreeTableResponsiveDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const nameTemplate = (node) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{node.data.name}</span>\r\n                <span className=\"sm-visible\"> {node.data.size}</span>\r\n                <span className=\"sm-visible\"> {node.data.type}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"treetable-responsive-demo\">\r\n            <div className=\"card\">\r\n                <TreeTable value={nodes} header=\"Responsive\">\r\n                    <Column field=\"name\" header=\"Name\" body={nameTemplate} expander></Column>\r\n                    <Column field=\"size\" header=\"Size\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/TreeTableDemo.css': {\r\n                content: `\r\n.treetable-responsive-demo .sm-visible {\r\n    display: none;\r\n}\r\n\r\n@media screen and (max-width: 40em) {\r\n    .treetable-responsive-demo .sm-invisible {\r\n        display: none;\r\n    }\r\n\r\n    .treetable-responsive-demo .sm-visible {\r\n        display: inline;\r\n        margin-right: .5rem;\r\n    }\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableResponsiveDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes', extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}