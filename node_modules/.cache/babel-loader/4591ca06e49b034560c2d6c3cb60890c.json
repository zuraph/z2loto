{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var ListBoxDoc=/*#__PURE__*/function(_Component){_inherits(ListBoxDoc,_Component);var _super=_createSuper(ListBoxDoc);function ListBoxDoc(props){var _this;_classCallCheck(this,ListBoxDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, {Component} from 'react';\\nimport { ListBox } from 'primereact/listbox';\\n\\nexport class ListBoxDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            selectedCity: null,\\n            selectedCountries: null\\n        };\\n\\n        this.cities = [\\n            {name: 'New York', code: 'NY'},\\n            {name: 'Rome', code: 'RM'},\\n            {name: 'London', code: 'LDN'},\\n            {name: 'Istanbul', code: 'IST'},\\n            {name: 'Paris', code: 'PRS'}\\n        ];\\n\\n        this.countries = [\\n            {name: 'Australia', code: 'AU'},\\n            {name: 'Brazil', code: 'BR'},\\n            {name: 'China', code: 'CN'},\\n            {name: 'Egypt', code: 'EG'},\\n            {name: 'France', code: 'FR'},\\n            {name: 'Germany', code: 'DE'},\\n            {name: 'India', code: 'IN'},\\n            {name: 'Japan', code: 'JP'},\\n            {name: 'Spain', code: 'ES'},\\n            {name: 'United States', code: 'US'}\\n        ];\\n\\n        this.countryTemplate = this.countryTemplate.bind(this);\\n    }\\n\\n    countryTemplate(option) {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Single</h5>\\n                    <ListBox value={this.state.selectedCity} options={this.cities} onChange={(e) => this.setState({selectedCity: e.value})} optionLabel=\\\"name\\\" style={{width: '15rem'}} />\\n\\n                    <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\\n                    <ListBox value={this.state.selectedCountries} options={this.countries} onChange={(e) => this.setState({selectedCountries: e.value})} multiple filter optionLabel=\\\"name\\\"\\n                        itemTemplate={this.countryTemplate} style={{width: '15rem'}} listStyle={{maxHeight: '250px'}} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { ListBox } from 'primereact/listbox';\\n\\nconst ListBoxDemo = () => {\\n    const [selectedCity, setSelectedCity] = useState(null);\\n    const [selectedCountries, setSelectedCountries] = useState(null);\\n    const cities = [\\n        {name: 'New York', code: 'NY'},\\n        {name: 'Rome', code: 'RM'},\\n        {name: 'London', code: 'LDN'},\\n        {name: 'Istanbul', code: 'IST'},\\n        {name: 'Paris', code: 'PRS'}\\n    ];\\n    const countries = [\\n        {name: 'Australia', code: 'AU'},\\n        {name: 'Brazil', code: 'BR'},\\n        {name: 'China', code: 'CN'},\\n        {name: 'Egypt', code: 'EG'},\\n        {name: 'France', code: 'FR'},\\n        {name: 'Germany', code: 'DE'},\\n        {name: 'India', code: 'IN'},\\n        {name: 'Japan', code: 'JP'},\\n        {name: 'Spain', code: 'ES'},\\n        {name: 'United States', code: 'US'}\\n    ];\\n\\n    const countryTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single</h5>\\n                <ListBox value={selectedCity} options={cities} onChange={(e) => setSelectedCity(e.value)} optionLabel=\\\"name\\\" style={{width: '15rem'}} />\\n\\n                <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\\n                <ListBox value={selectedCountries} options={countries} onChange={(e) => setSelectedCountries(e.value)} multiple filter optionLabel=\\\"name\\\"\\n                    itemTemplate={countryTemplate} style={{width: '15rem'}} listStyle={{maxHeight: '250px'}} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { ListBox } from 'primereact/listbox';\\n\\nconst ListBoxDemo = () => {\\n    const [selectedCity, setSelectedCity] = useState(null);\\n    const [selectedCountries, setSelectedCountries] = useState(null);\\n    const cities = [\\n        {name: 'New York', code: 'NY'},\\n        {name: 'Rome', code: 'RM'},\\n        {name: 'London', code: 'LDN'},\\n        {name: 'Istanbul', code: 'IST'},\\n        {name: 'Paris', code: 'PRS'}\\n    ];\\n    const countries = [\\n        {name: 'Australia', code: 'AU'},\\n        {name: 'Brazil', code: 'BR'},\\n        {name: 'China', code: 'CN'},\\n        {name: 'Egypt', code: 'EG'},\\n        {name: 'France', code: 'FR'},\\n        {name: 'Germany', code: 'DE'},\\n        {name: 'India', code: 'IN'},\\n        {name: 'Japan', code: 'JP'},\\n        {name: 'Spain', code: 'ES'},\\n        {name: 'United States', code: 'US'}\\n    ];\\n\\n    const countryTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single</h5>\\n                <ListBox value={selectedCity} options={cities} onChange={(e) => setSelectedCity(e.value)} optionLabel=\\\"name\\\" style={{width: '15rem'}} />\\n\\n                <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\\n                <ListBox value={selectedCountries} options={countries} onChange={(e) => setSelectedCountries(e.value)} multiple filter optionLabel=\\\"name\\\"\\n                    itemTemplate={countryTemplate} style={{width: '15rem'}} listStyle={{maxHeight: '250px'}} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this;}_createClass(ListBoxDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { ListBox } from 'primereact/listbox';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"Listbox is used as a controlled component with \",/*#__PURE__*/React.createElement(\"i\",null,\"value\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onChange\"),\" properties along with the options collection. There are two alternatives of how to define the options property; One way is providing a collection of \",/*#__PURE__*/React.createElement(\"i\",null,\"SelectItem\"),\" instances having label-value pairs whereas other way is providing an array of arbitrary objects along with the \",/*#__PURE__*/React.createElement(\"i\",null,\"optionLabel\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"optionValue\"),\" properties to specify the label/value field pair. In addition, options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Options as SelectItems\")),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst citySelectItems = [\\n    {label: 'New York', value: 'NY'},\\n    {label: 'Rome', value: 'RM'},\\n    {label: 'London', value: 'LDN'},\\n    {label: 'Istanbul', value: 'IST'},\\n    {label: 'Paris', value: 'PRS'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<ListBox value={city} options={citySelectItems} onChange={(e) => setCity(e.value)} />\\n\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Options as any type\")),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst cities = [\\n    {name: 'New York', code: 'NY'},\\n    {name: 'Rome', code: 'RM'},\\n    {name: 'London', code: 'LDN'},\\n    {name: 'Istanbul', code: 'IST'},\\n    {name: 'Paris', code: 'PRS'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<ListBox optionLabel=\\\"name\\\" value={city} options={cities} onChange={(e) => setCity(e.value)} />\\n<ListBox optionLabel=\\\"name\\\" optionValue=\\\"code\\\" value={city} options={cities} onChange={(e) => setCity(e.value)} />\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"When \",/*#__PURE__*/React.createElement(\"i\",null,\"optionValue\"),\" is not defined, value of an option refers to the option object itself.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Selection\"),/*#__PURE__*/React.createElement(\"p\",null,\"Listbox allows selection of either single or multiple items. In single case, model should be a single object reference whereas in multiple case should be an array. Multiple items can either be selected using metaKey or toggled individually depending on the value of \",/*#__PURE__*/React.createElement(\"i\",null,\"metaKeySelection\"),\" property value which is true by default. On touch enabled devices metaKeySelection is turned off automatically.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<ListBox value={cities} options={cities} onChange={(e) => setCity(e.value)} multiple />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Custom Content\"),/*#__PURE__*/React.createElement(\"p\",null,\"Label of an option is used as the display text of an item by default, for custom content support define an itemTemplate property. Its value can be JSXElement, function or string.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<ListBox value={city} options={cities} onChange={(e) => setCity(e.value)} itemTemplate={itemTemplate} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nitemTemplate(option) {\\n    // custom item content\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Filtering\"),/*#__PURE__*/React.createElement(\"p\",null,\"Options can be filtered using an input field in the overlay by enabling the \",/*#__PURE__*/React.createElement(\"i\",null,\"filter\"),\" property. By default filtering is done against label of the items and \",/*#__PURE__*/React.createElement(\"i\",null,\"filterBy\"),\" property is available to choose one or more properties of the options. In addition \",/*#__PURE__*/React.createElement(\"i\",null,\"filterMatchMode\"),\" can be utilized to define the filtering algorithm, valid options are \\\"contains\\\" (default), \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\" and \\\"notEquals\\\". Also, the \",/*#__PURE__*/React.createElement(\"i\",null,\"filterValue\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onFilterValueChange\"),\" properties can be used to control the filter value.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<ListBox value={city} options={cities} onChange={(e) => setCity(e.value)} filter />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"SelectItem API\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"label\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"ClassName of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"title\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Tooltip text of the option. (Not supported)\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether the option is disabled or not. (Not supported)\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Selected value to display.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"options\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"An array of objects to display as the available options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"optionLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the label field of an option when an arbitrary objects instead of SelectItems are used as options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"optionValue\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the value field of an option when arbitrary objects are used as options instead of SelectItems.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"itemTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Custom template for the items.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"listStyle\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of inner list element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"listClassName\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style class of inner list element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When specified, disables the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"dataKey\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"A property to uniquely match the value in options for better performance.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"multiple\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When specified, allows selecting multiple values.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"metaKeySelection\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filter\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When specified, displays a filter input at header.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"label\"),/*#__PURE__*/React.createElement(\"td\",null,\"When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterValue\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"When specified, filter displays with this value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterMatchMode\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"contains\"),/*#__PURE__*/React.createElement(\"td\",null,\"Defines how the items are filtered, valid values are \\\"contains\\\" (default), \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\" and \\\"notEquals\\\".\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterPlaceholder\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Placeholder text to show when filter input is empty.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterLocale\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"undefined\"),/*#__PURE__*/React.createElement(\"td\",null,\"Locale to use in filtering. The default locale is the host environment's current locale.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tabIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Index of the element in tabbing order.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.value: Single value or an array of values depending on the selection mode \",/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when value of listbox changes.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onFilterValueChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.value: the filtered value \",/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when filter value changes.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-listbox\"),/*#__PURE__*/React.createElement(\"td\",null,\"Main container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-listbox-header\"),/*#__PURE__*/React.createElement(\"td\",null,\"Header element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-listbox-list-wrapper\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container of list element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-listbox-list\"),/*#__PURE__*/React.createElement(\"td\",null,\"List element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-listbox-item\"),/*#__PURE__*/React.createElement(\"td\",null,\"An item in the list element.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'ListBoxDemo',sources:this.sources})));}}]);return ListBoxDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/listbox/ListBoxDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","ListBoxDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class ListBoxDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, {Component} from 'react';\r\nimport { ListBox } from 'primereact/listbox';\r\n\r\nexport class ListBoxDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedCity: null,\r\n            selectedCountries: null\r\n        };\r\n\r\n        this.cities = [\r\n            {name: 'New York', code: 'NY'},\r\n            {name: 'Rome', code: 'RM'},\r\n            {name: 'London', code: 'LDN'},\r\n            {name: 'Istanbul', code: 'IST'},\r\n            {name: 'Paris', code: 'PRS'}\r\n        ];\r\n\r\n        this.countries = [\r\n            {name: 'Australia', code: 'AU'},\r\n            {name: 'Brazil', code: 'BR'},\r\n            {name: 'China', code: 'CN'},\r\n            {name: 'Egypt', code: 'EG'},\r\n            {name: 'France', code: 'FR'},\r\n            {name: 'Germany', code: 'DE'},\r\n            {name: 'India', code: 'IN'},\r\n            {name: 'Japan', code: 'JP'},\r\n            {name: 'Spain', code: 'ES'},\r\n            {name: 'United States', code: 'US'}\r\n        ];\r\n\r\n        this.countryTemplate = this.countryTemplate.bind(this);\r\n    }\r\n\r\n    countryTemplate(option) {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Single</h5>\r\n                    <ListBox value={this.state.selectedCity} options={this.cities} onChange={(e) => this.setState({selectedCity: e.value})} optionLabel=\"name\" style={{width: '15rem'}} />\r\n\r\n                    <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\r\n                    <ListBox value={this.state.selectedCountries} options={this.countries} onChange={(e) => this.setState({selectedCountries: e.value})} multiple filter optionLabel=\"name\"\r\n                        itemTemplate={this.countryTemplate} style={{width: '15rem'}} listStyle={{maxHeight: '250px'}} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { ListBox } from 'primereact/listbox';\r\n\r\nconst ListBoxDemo = () => {\r\n    const [selectedCity, setSelectedCity] = useState(null);\r\n    const [selectedCountries, setSelectedCountries] = useState(null);\r\n    const cities = [\r\n        {name: 'New York', code: 'NY'},\r\n        {name: 'Rome', code: 'RM'},\r\n        {name: 'London', code: 'LDN'},\r\n        {name: 'Istanbul', code: 'IST'},\r\n        {name: 'Paris', code: 'PRS'}\r\n    ];\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n\r\n    const countryTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single</h5>\r\n                <ListBox value={selectedCity} options={cities} onChange={(e) => setSelectedCity(e.value)} optionLabel=\"name\" style={{width: '15rem'}} />\r\n\r\n                <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\r\n                <ListBox value={selectedCountries} options={countries} onChange={(e) => setSelectedCountries(e.value)} multiple filter optionLabel=\"name\"\r\n                    itemTemplate={countryTemplate} style={{width: '15rem'}} listStyle={{maxHeight: '250px'}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { ListBox } from 'primereact/listbox';\r\n\r\nconst ListBoxDemo = () => {\r\n    const [selectedCity, setSelectedCity] = useState(null);\r\n    const [selectedCountries, setSelectedCountries] = useState(null);\r\n    const cities = [\r\n        {name: 'New York', code: 'NY'},\r\n        {name: 'Rome', code: 'RM'},\r\n        {name: 'London', code: 'LDN'},\r\n        {name: 'Istanbul', code: 'IST'},\r\n        {name: 'Paris', code: 'PRS'}\r\n    ];\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n\r\n    const countryTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single</h5>\r\n                <ListBox value={selectedCity} options={cities} onChange={(e) => setSelectedCity(e.value)} optionLabel=\"name\" style={{width: '15rem'}} />\r\n\r\n                <h5>Advanced with Templating, Filtering and Multiple Selection</h5>\r\n                <ListBox value={selectedCountries} options={countries} onChange={(e) => setSelectedCountries(e.value)} multiple filter optionLabel=\"name\"\r\n                    itemTemplate={countryTemplate} style={{width: '15rem'}} listStyle={{maxHeight: '250px'}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n    <TabView>\r\n        <TabPanel header=\"Documentation\">\r\n\r\n            <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { ListBox } from 'primereact/listbox';\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Getting Started</h5>\r\n            <p>Listbox is used as a controlled component with <i>value</i> and <i>onChange</i> properties along with the options collection. There are two alternatives\r\n                of how to define the options property; One way is providing a collection of <i>SelectItem</i> instances having label-value pairs\r\n                whereas other way is providing an array of arbitrary objects along with the <i>optionLabel</i> and <i>optionValue</i> properties to specify the label/value field pair.\r\n                In addition, options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.</p>\r\n\r\n            <p><b>Options as SelectItems</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst citySelectItems = [\r\n    {label: 'New York', value: 'NY'},\r\n    {label: 'Rome', value: 'RM'},\r\n    {label: 'London', value: 'LDN'},\r\n    {label: 'Istanbul', value: 'IST'},\r\n    {label: 'Paris', value: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<ListBox value={city} options={citySelectItems} onChange={(e) => setCity(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <p><b>Options as any type</b></p>\r\n            <CodeHighlight lang=\"js\">\r\n{`\r\nconst cities = [\r\n    {name: 'New York', code: 'NY'},\r\n    {name: 'Rome', code: 'RM'},\r\n    {name: 'London', code: 'LDN'},\r\n    {name: 'Istanbul', code: 'IST'},\r\n    {name: 'Paris', code: 'PRS'}\r\n];\r\n`}\r\n            </CodeHighlight>\r\n\r\n            <CodeHighlight>\r\n{`\r\n<ListBox optionLabel=\"name\" value={city} options={cities} onChange={(e) => setCity(e.value)} />\r\n<ListBox optionLabel=\"name\" optionValue=\"code\" value={city} options={cities} onChange={(e) => setCity(e.value)} />\r\n`}\r\n            </CodeHighlight>\r\n            <p>When <i>optionValue</i> is not defined, value of an option refers to the option object itself.</p>\r\n\r\n            <h5>Selection</h5>\r\n            <p>Listbox allows selection of either single or multiple items. In single case, model should be a single object reference whereas in multiple case should be an array. Multiple items can either be selected\r\n                using metaKey or toggled individually depending on the value of <i>metaKeySelection</i> property value which is true by default. On touch enabled\r\n                devices metaKeySelection is turned off automatically.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<ListBox value={cities} options={cities} onChange={(e) => setCity(e.value)} multiple />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Custom Content</h5>\r\n            <p>Label of an option is used as the display text of an item by default, for custom content support define an itemTemplate property. Its value can be JSXElement, function or string.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<ListBox value={city} options={cities} onChange={(e) => setCity(e.value)} itemTemplate={itemTemplate} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nitemTemplate(option) {\r\n    // custom item content\r\n}\r\n`}\r\n</CodeHighlight>\r\n            <h5>Filtering</h5>\r\n            <p>Options can be filtered using an input field in the overlay by enabling the <i>filter</i> property. By default filtering is done against\r\n            label of the items and <i>filterBy</i> property is available to choose one or more properties of the options. In addition <i>filterMatchMode</i> can be utilized\r\n            to define the filtering algorithm, valid options are \"contains\" (default), \"startsWith\", \"endsWith\", \"equals\" and \"notEquals\".\r\n            Also, the <i>filterValue</i> and <i>onFilterValueChange</i> properties can be used to control the filter value.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<ListBox value={city} options={cities} onChange={(e) => setCity(e.value)} filter />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>SelectItem API</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Default</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>label</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>value</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Value of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>ClassName of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>title</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Tooltip text of the option. (Not supported)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Whether the option is disabled or not. (Not supported)</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Properties</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Default</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>id</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Unique identifier of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>value</td>\r\n                            <td>object</td>\r\n                            <td>null</td>\r\n                            <td>Selected value to display.</td>\r\n                        </tr>\r\n                         <tr>\r\n                            <td>options</td>\r\n                            <td>array</td>\r\n                            <td>null</td>\r\n                            <td>An array of objects to display as the available options.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>optionLabel</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the label field of an option when an arbitrary objects instead of SelectItems are used as options.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>optionValue</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the value field of an option when arbitrary objects are used as options instead of SelectItems.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>itemTemplate</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Custom template for the items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>style</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>listStyle</td>\r\n                            <td>object</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of inner list element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>listClassName</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style class of inner list element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When specified, disables the component.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>dataKey</td>\r\n                            <td>string</td>\r\n                            <td>false</td>\r\n                            <td>A property to uniquely match the value in options for better performance.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>multiple</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When specified, allows selecting multiple values.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>metaKeySelection</td>\r\n                            <td>boolean</td>\r\n                            <td>true</td>\r\n                            <td>Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item\r\n                            can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filter</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When specified, displays a filter input at header.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterBy</td>\r\n                            <td>string</td>\r\n                            <td>label</td>\r\n                            <td>When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterValue</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>When specified, filter displays with this value.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterMatchMode</td>\r\n                            <td>string</td>\r\n                            <td>contains</td>\r\n                            <td>Defines how the items are filtered, valid values are \"contains\" (default), \"startsWith\", \"endsWith\", \"equals\" and \"notEquals\".</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterPlaceholder</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Placeholder text to show when filter input is empty.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterLocale</td>\r\n                            <td>string</td>\r\n                            <td>undefined</td>\r\n                            <td>Locale to use in filtering. The default locale is the host environment's current locale.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tabIndex</td>\r\n                            <td>number</td>\r\n                            <td>null</td>\r\n                            <td>Index of the element in tabbing order.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltip</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Content of the tooltip.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltipOptions</td>\r\n                            <td>object</td>\r\n                            <td>null</td>\r\n                            <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Events</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Parameters</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>onChange</td>\r\n                            <td>event.originalEvent: Browser event <br/>\r\n                                event.value: Single value or an array of values depending on the selection mode <br/>\r\n                            </td>\r\n                            <td>Callback to invoke when value of listbox changes.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onFilterValueChange</td>\r\n                            <td>event.originalEvent: Browser event <br/>\r\n                                event.value: the filtered value <br/>\r\n                            </td>\r\n                            <td>Callback to invoke when filter value changes.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Styling</h5>\r\n            <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Element</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>p-listbox</td>\r\n                            <td>Main container element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-listbox-header</td>\r\n                            <td>Header element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-listbox-list-wrapper</td>\r\n                            <td>Container of list element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-listbox-list</td>\r\n                            <td>List element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-listbox-item</td>\r\n                            <td>An item in the list element.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Dependencies</h5>\r\n            <p>None.</p>\r\n        </TabPanel>\r\n\r\n        {\r\n            useLiveEditorTabs({ name: 'ListBoxDemo', sources: this.sources })\r\n        }\r\n    </TabView>\r\n</div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}