{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView}from'../../components/tabview/TabView';import{Chart}from'../../components/chart/Chart';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import AppContentContext from'../../AppContentContext';export var PolarAreaChartDemo=/*#__PURE__*/function(_Component){_inherits(PolarAreaChartDemo,_Component);var _super=_createSuper(PolarAreaChartDemo);function PolarAreaChartDemo(props){var _this;_classCallCheck(this,PolarAreaChartDemo);_this=_super.call(this,props);_this.chartData={datasets:[{data:[11,16,7,3,14],backgroundColor:[\"#42A5F5\",\"#66BB6A\",\"#FFA726\",\"#26C6DA\",\"#7E57C2\"],label:'My dataset'}],labels:[\"Red\",\"Green\",\"Yellow\",\"Grey\",\"Blue\"]};_this.lightOptions={legend:{labels:{fontColor:'#495057'}},scale:{gridLines:{color:'#ebedef'}}};_this.darkOptions={legend:{labels:{fontColor:'#ebedef'}},scale:{gridLines:{color:'rgba(255,255,255,0.2)'}}};return _this;}_createClass(PolarAreaChartDemo,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"chart\"},/*#__PURE__*/React.createElement(\"h1\",null,\"PolarAreaChart\"),/*#__PURE__*/React.createElement(\"p\",null,\"Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(AppContentContext.Consumer,null,function(context){var options=context.darkTheme?_this2.darkOptions:_this2.lightOptions;return/*#__PURE__*/React.createElement(Chart,{type:\"polarArea\",data:_this2.chartData,options:options});}))),/*#__PURE__*/React.createElement(PolarAreaChartDemoDoc,null));}}]);return PolarAreaChartDemo;}(Component);export var PolarAreaChartDemoDoc=/*#__PURE__*/function(_Component2){_inherits(PolarAreaChartDemoDoc,_Component2);var _super2=_createSuper(PolarAreaChartDemoDoc);function PolarAreaChartDemoDoc(props){var _this3;_classCallCheck(this,PolarAreaChartDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class PolarAreaChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.chartData = {\\n            datasets: [{\\n                data: [\\n                    11,\\n                    16,\\n                    7,\\n                    3,\\n                    14\\n                ],\\n                backgroundColor: [\\n                    \\\"#42A5F5\\\",\\n                    \\\"#66BB6A\\\",\\n                    \\\"#FFA726\\\",\\n                    \\\"#26C6DA\\\",\\n                    \\\"#7E57C2\\\"\\n                ],\\n                label: 'My dataset'\\n            }],\\n            labels: [\\n                \\\"Red\\\",\\n                \\\"Green\\\",\\n                \\\"Yellow\\\",\\n                \\\"Grey\\\",\\n                \\\"Blue\\\"\\n            ]\\n        };\\n\\n        this.lightOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scale: {\\n                gridLines: {\\n                    color: '#ebedef'\\n                }\\n            }\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"card\\\">\\n                <Chart type=\\\"polarArea\\\" data={this.chartData} options={this.lightOptions} />\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst PolarAreaChartDemo = () => {\\n    const chartData = {\\n        datasets: [{\\n            data: [\\n                11,\\n                16,\\n                7,\\n                3,\\n                14\\n            ],\\n            backgroundColor: [\\n                \\\"#42A5F5\\\",\\n                \\\"#66BB6A\\\",\\n                \\\"#FFA726\\\",\\n                \\\"#26C6DA\\\",\\n                \\\"#7E57C2\\\"\\n            ],\\n            label: 'My dataset'\\n        }],\\n        labels: [\\n            \\\"Red\\\",\\n            \\\"Green\\\",\\n            \\\"Yellow\\\",\\n            \\\"Grey\\\",\\n            \\\"Blue\\\"\\n        ]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scale: {\\n            gridLines: {\\n                color: '#ebedef'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"polarArea\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst PolarAreaChartDemo = () => {\\n    const chartData = {\\n        datasets: [{\\n            data: [\\n                11,\\n                16,\\n                7,\\n                3,\\n                14\\n            ],\\n            backgroundColor: [\\n                \\\"#42A5F5\\\",\\n                \\\"#66BB6A\\\",\\n                \\\"#FFA726\\\",\\n                \\\"#26C6DA\\\",\\n                \\\"#7E57C2\\\"\\n            ],\\n            label: 'My dataset'\\n        }],\\n        labels: [\\n            \\\"Red\\\",\\n            \\\"Green\\\",\\n            \\\"Yellow\\\",\\n            \\\"Grey\\\",\\n            \\\"Blue\\\"\\n        ]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scale: {\\n            gridLines: {\\n                color: '#ebedef'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"polarArea\\\" data={chartData} options={options} />\\n        </div>\\n    );\\n}\\n                \"}};return _this3;}_createClass(PolarAreaChartDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'PolarAreaChartDemo',sources:this.sources,dependencies:{'chart.js':'2.7.3'}})));}}]);return PolarAreaChartDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/chart/PolarAreaChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","PolarAreaChartDemo","props","chartData","datasets","data","backgroundColor","label","labels","lightOptions","legend","fontColor","scale","gridLines","color","darkOptions","context","options","darkTheme","PolarAreaChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"wpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,kCAAxB,CACA,OAASC,KAAT,KAAsB,8BAAtB,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CACA,OAASC,eAAT,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yBAA9B,CAEA,UAAaC,CAAAA,kBAAb,wHAEI,4BAAYC,KAAZ,CAAmB,oDACf,uBAAMA,KAAN,EAEA,MAAKC,SAAL,CAAiB,CACbC,QAAQ,CAAE,CAAC,CACPC,IAAI,CAAE,CACF,EADE,CAEF,EAFE,CAGF,CAHE,CAIF,CAJE,CAKF,EALE,CADC,CAQPC,eAAe,CAAE,CACb,SADa,CAEb,SAFa,CAGb,SAHa,CAIb,SAJa,CAKb,SALa,CARV,CAePC,KAAK,CAAE,YAfA,CAAD,CADG,CAkBbC,MAAM,CAAE,CACJ,KADI,CAEJ,OAFI,CAGJ,QAHI,CAIJ,MAJI,CAKJ,MALI,CAlBK,CAAjB,CA2BA,MAAKC,YAAL,CAAoB,CAChBC,MAAM,CAAE,CACJF,MAAM,CAAE,CACJG,SAAS,CAAE,SADP,CADJ,CADQ,CAMhBC,KAAK,CAAE,CACHC,SAAS,CAAE,CACPC,KAAK,CAAE,SADA,CADR,CANS,CAApB,CAaA,MAAKC,WAAL,CAAmB,CACfL,MAAM,CAAE,CACJF,MAAM,CAAE,CACJG,SAAS,CAAE,SADP,CADJ,CADO,CAMfC,KAAK,CAAE,CACHC,SAAS,CAAE,CACPC,KAAK,CAAE,uBADA,CADR,CANQ,CAAnB,CA3Ce,aAuDlB,CAzDL,qDA2DI,iBAAS,iBACL,mBACI,4CACI,2BAAK,SAAS,CAAC,8BAAf,eACI,oBAAC,eAAD,EAAiB,aAAa,CAAC,OAA/B,eACI,+CADJ,cAEI,4KAFJ,CADJ,CADJ,cAQI,2BAAK,SAAS,CAAC,gCAAf,eACI,2BAAK,SAAS,CAAC,MAAf,eACI,oBAAC,iBAAD,CAAmB,QAAnB,MAEQ,SAAAE,OAAO,CAAI,CACP,GAAIC,CAAAA,OAAO,CAAGD,OAAO,CAACE,SAAR,CAAoB,MAAI,CAACH,WAAzB,CAAuC,MAAI,CAACN,YAA1D,CAEA,mBAAO,oBAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,IAAI,CAAE,MAAI,CAACN,SAAnC,CAA8C,OAAO,CAAEc,OAAvD,EAAP,CACH,CANT,CADJ,CADJ,CARJ,cAsBI,oBAAC,qBAAD,MAtBJ,CADJ,CA0BH,CAtFL,gCAAwCtB,SAAxC,EAyFA,UAAawB,CAAAA,qBAAb,iIAEI,+BAAYjB,KAAZ,CAAmB,wDACf,yBAAMA,KAAN,EAEA,OAAKkB,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,u4CAFF,CADE,CA+DX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,imCAFF,CA/DE,CAsHX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,4lCAFL,CAtHK,CAAf,CAHe,cAiLlB,CAnLL,uEAqLI,gCAAwB,CACpB,MAAO,MAAP,CACH,CAvLL,sBAyLI,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,MAEQxB,iBAAiB,CAAC,CAAEyB,IAAI,CAAE,oBAAR,CAA8BH,OAAO,CAAE,KAAKA,OAA5C,CAAqDI,YAAY,CAAE,CAAE,WAAY,OAAd,CAAnE,CAAD,CAFzB,CADJ,CADJ,CASH,CAnML,mCAA2C7B,SAA3C","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class PolarAreaChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            datasets: [{\r\n                data: [\r\n                    11,\r\n                    16,\r\n                    7,\r\n                    3,\r\n                    14\r\n                ],\r\n                backgroundColor: [\r\n                    \"#42A5F5\",\r\n                    \"#66BB6A\",\r\n                    \"#FFA726\",\r\n                    \"#26C6DA\",\r\n                    \"#7E57C2\"\r\n                ],\r\n                label: 'My dataset'\r\n            }],\r\n            labels: [\r\n                \"Red\",\r\n                \"Green\",\r\n                \"Yellow\",\r\n                \"Grey\",\r\n                \"Blue\"\r\n            ]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scale: {\r\n                gridLines: {\r\n                    color: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        this.darkOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scale: {\r\n                gridLines: {\r\n                    color: 'rgba(255,255,255,0.2)'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>PolarAreaChart</h1>\r\n                        <p>Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <AppContentContext.Consumer>\r\n                            {\r\n                                context => {\r\n                                    let options = context.darkTheme ? this.darkOptions : this.lightOptions;\r\n\r\n                                    return <Chart type=\"polarArea\" data={this.chartData} options={options} />\r\n                                }\r\n                            }\r\n                        </AppContentContext.Consumer>\r\n                    </div>\r\n                </div>\r\n\r\n                <PolarAreaChartDemoDoc></PolarAreaChartDemoDoc>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class PolarAreaChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class PolarAreaChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            datasets: [{\r\n                data: [\r\n                    11,\r\n                    16,\r\n                    7,\r\n                    3,\r\n                    14\r\n                ],\r\n                backgroundColor: [\r\n                    \"#42A5F5\",\r\n                    \"#66BB6A\",\r\n                    \"#FFA726\",\r\n                    \"#26C6DA\",\r\n                    \"#7E57C2\"\r\n                ],\r\n                label: 'My dataset'\r\n            }],\r\n            labels: [\r\n                \"Red\",\r\n                \"Green\",\r\n                \"Yellow\",\r\n                \"Grey\",\r\n                \"Blue\"\r\n            ]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scale: {\r\n                gridLines: {\r\n                    color: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <Chart type=\"polarArea\" data={this.chartData} options={this.lightOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst PolarAreaChartDemo = () => {\r\n    const chartData = {\r\n        datasets: [{\r\n            data: [\r\n                11,\r\n                16,\r\n                7,\r\n                3,\r\n                14\r\n            ],\r\n            backgroundColor: [\r\n                \"#42A5F5\",\r\n                \"#66BB6A\",\r\n                \"#FFA726\",\r\n                \"#26C6DA\",\r\n                \"#7E57C2\"\r\n            ],\r\n            label: 'My dataset'\r\n        }],\r\n        labels: [\r\n            \"Red\",\r\n            \"Green\",\r\n            \"Yellow\",\r\n            \"Grey\",\r\n            \"Blue\"\r\n        ]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scale: {\r\n            gridLines: {\r\n                color: '#ebedef'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"polarArea\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst PolarAreaChartDemo = () => {\r\n    const chartData = {\r\n        datasets: [{\r\n            data: [\r\n                11,\r\n                16,\r\n                7,\r\n                3,\r\n                14\r\n            ],\r\n            backgroundColor: [\r\n                \"#42A5F5\",\r\n                \"#66BB6A\",\r\n                \"#FFA726\",\r\n                \"#26C6DA\",\r\n                \"#7E57C2\"\r\n            ],\r\n            label: 'My dataset'\r\n        }],\r\n        labels: [\r\n            \"Red\",\r\n            \"Green\",\r\n            \"Yellow\",\r\n            \"Grey\",\r\n            \"Blue\"\r\n        ]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scale: {\r\n            gridLines: {\r\n                color: '#ebedef'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"polarArea\" data={chartData} options={options} />\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'PolarAreaChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}