{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TreeTable}from'../../components/treetable/TreeTable';import{Column}from'../../components/column/Column';import{Button}from'../../components/button/Button';import{NodeService}from'../service/NodeService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var TreeTableTemplatingDemo=/*#__PURE__*/function(_Component){_inherits(TreeTableTemplatingDemo,_Component);var _super=_createSuper(TreeTableTemplatingDemo);function TreeTableTemplatingDemo(props){var _this;_classCallCheck(this,TreeTableTemplatingDemo);_this=_super.call(this,props);_this.state={nodes:[]};_this.nodeservice=new NodeService();_this.actionTemplate=_this.actionTemplate.bind(_assertThisInitialized(_this));return _this;}_createClass(TreeTableTemplatingDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.nodeservice.getTreeTableNodes().then(function(data){return _this2.setState({nodes:data});});}},{key:\"actionTemplate\",value:function actionTemplate(node,column){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-search\",className:\"p-button-success\",style:{marginRight:'.5em'}}),/*#__PURE__*/React.createElement(Button,{type:\"button\",icon:\"pi pi-pencil\",className:\"p-button-warning\"}));}},{key:\"render\",value:function render(){var header=\"File Viewer\";var footer=/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'left'}},/*#__PURE__*/React.createElement(Button,{icon:\"pi pi-refresh\",tooltip:\"Reload\"}));return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"treeTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"TreeTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Templating\")),/*#__PURE__*/React.createElement(\"p\",null,\"Custom content at header, body and footer sections are supported via templating.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,header:header,footer:footer},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\"}),/*#__PURE__*/React.createElement(Column,{body:this.actionTemplate,style:{textAlign:'center',width:'8em'}})))),/*#__PURE__*/React.createElement(TreeTableTemplatingDemoDoc,null));}}]);return TreeTableTemplatingDemo;}(Component);var TreeTableTemplatingDemoDoc=/*#__PURE__*/function(_Component2){_inherits(TreeTableTemplatingDemoDoc,_Component2);var _super2=_createSuper(TreeTableTemplatingDemoDoc);function TreeTableTemplatingDemoDoc(props){var _this3;_classCallCheck(this,TreeTableTemplatingDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport class TreeTableTemplatingDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes: []\\n        };\\n        this.nodeservice = new NodeService();\\n        this.actionTemplate = this.actionTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\\n    }\\n\\n    actionTemplate(node, column) {\\n        return <div>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.5em' }}></Button>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" className=\\\"p-button-warning\\\"></Button>\\n        </div>;\\n    }\\n\\n    render() {\\n        const header = \\\"File Viewer\\\";\\n        const footer = <div style={{ textAlign: 'left' }}><Button icon=\\\"pi pi-refresh\\\" tooltip=\\\"Reload\\\" /></div>;\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <TreeTable value={this.state.nodes} header={header} footer={footer}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                        <Column body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableTemplatingDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const actionTemplate = (node, column) => {\\n        return <div>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.5em' }}></Button>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" className=\\\"p-button-warning\\\"></Button>\\n        </div>;\\n    }\\n\\n    const header = \\\"File Viewer\\\";\\n    const footer = <div style={{ textAlign: 'left' }}><Button icon=\\\"pi pi-refresh\\\" tooltip=\\\"Reload\\\" /></div>;\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <TreeTable value={nodes} header={header} footer={footer}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    <Column body={actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableTemplatingDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const actionTemplate = (node, column) => {\\n        return <div>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.5em' }}></Button>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" className=\\\"p-button-warning\\\"></Button>\\n        </div>;\\n    }\\n\\n    const header = \\\"File Viewer\\\";\\n    const footer = <div style={{ textAlign: 'left' }}><Button icon=\\\"pi pi-refresh\\\" tooltip=\\\"Reload\\\" /></div>;\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <TreeTable value={nodes} header={header} footer={footer}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    <Column body={actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this3;}_createClass(TreeTableTemplatingDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'TreeTableTemplatingDemo',sources:this.sources,service:'NodeService',data:'treetablenodes'})));}}]);return TreeTableTemplatingDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/treetable/TreeTableTemplatingDemo.js"],"names":["React","Component","TreeTable","Column","Button","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableTemplatingDemo","props","state","nodes","nodeservice","actionTemplate","bind","getTreeTableNodes","then","data","setState","node","column","marginRight","header","footer","textAlign","width","TreeTableTemplatingDemoDoc","sources","tabName","content","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { Button } from '../../components/button/Button';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class TreeTableTemplatingDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    actionTemplate(node, column) {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-success\" style={{ marginRight: '.5em' }}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\"></Button>\r\n        </div>;\r\n    }\r\n\r\n    render() {\r\n        const header = \"File Viewer\";\r\n        const footer = <div style={{ textAlign: 'left' }}><Button icon=\"pi pi-refresh\" tooltip=\"Reload\" /></div>;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Templating</span></h1>\r\n                        <p>Custom content at header, body and footer sections are supported via templating.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <TreeTable value={this.state.nodes} header={header} footer={footer}>\r\n                            <Column field=\"name\" header=\"Name\" expander></Column>\r\n                            <Column field=\"size\" header=\"Size\"></Column>\r\n                            <Column field=\"type\" header=\"Type\"></Column>\r\n                            <Column body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableTemplatingDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TreeTableTemplatingDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport class TreeTableTemplatingDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    actionTemplate(node, column) {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-success\" style={{ marginRight: '.5em' }}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\"></Button>\r\n        </div>;\r\n    }\r\n\r\n    render() {\r\n        const header = \"File Viewer\";\r\n        const footer = <div style={{ textAlign: 'left' }}><Button icon=\"pi pi-refresh\" tooltip=\"Reload\" /></div>;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <TreeTable value={this.state.nodes} header={header} footer={footer}>\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                        <Column body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableTemplatingDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const actionTemplate = (node, column) => {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-success\" style={{ marginRight: '.5em' }}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\"></Button>\r\n        </div>;\r\n    }\r\n\r\n    const header = \"File Viewer\";\r\n    const footer = <div style={{ textAlign: 'left' }}><Button icon=\"pi pi-refresh\" tooltip=\"Reload\" /></div>;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <TreeTable value={nodes} header={header} footer={footer}>\r\n                    <Column field=\"name\" header=\"Name\" expander></Column>\r\n                    <Column field=\"size\" header=\"Size\"></Column>\r\n                    <Column field=\"type\" header=\"Type\"></Column>\r\n                    <Column body={actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableTemplatingDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const actionTemplate = (node, column) => {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-success\" style={{ marginRight: '.5em' }}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\"></Button>\r\n        </div>;\r\n    }\r\n\r\n    const header = \"File Viewer\";\r\n    const footer = <div style={{ textAlign: 'left' }}><Button icon=\"pi pi-refresh\" tooltip=\"Reload\" /></div>;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <TreeTable value={nodes} header={header} footer={footer}>\r\n                    <Column field=\"name\" header=\"Name\" expander></Column>\r\n                    <Column field=\"size\" header=\"Size\"></Column>\r\n                    <Column field=\"type\" header=\"Type\"></Column>\r\n                    <Column body={actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableTemplatingDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}