{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\gmap\\\\GMap.js\";\n\n/*global google*/\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport var GMap = /*#__PURE__*/function (_Component) {\n  _inherits(GMap, _Component);\n\n  var _super = _createSuper(GMap);\n\n  function GMap() {\n    _classCallCheck(this, GMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GMap, [{\n    key: \"initMap\",\n    value: function initMap() {\n      this.map = new google.maps.Map(this.container, this.props.options);\n\n      if (this.props.onMapReady) {\n        this.props.onMapReady({\n          map: this.map\n        });\n      }\n\n      this.initOverlays(this.props.overlays);\n      this.bindMapEvent('click', this.props.onMapClick);\n      this.bindMapEvent('dragend', this.props.onMapDragEnd);\n      this.bindMapEvent('zoom_changed', this.props.onZoomChanged);\n    }\n  }, {\n    key: \"initOverlays\",\n    value: function initOverlays(overlays) {\n      if (overlays) {\n        var _iterator = _createForOfIteratorHelper(overlays),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var overlay = _step.value;\n            overlay.setMap(this.map);\n            this.bindOverlayEvents(overlay);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }, {\n    key: \"bindOverlayEvents\",\n    value: function bindOverlayEvents(overlay) {\n      var _this = this;\n\n      overlay.addListener('click', function (event) {\n        if (_this.props.onOverlayClick) {\n          _this.props.onOverlayClick({\n            originalEvent: event,\n            overlay: overlay,\n            map: _this.map\n          });\n        }\n      });\n\n      if (overlay.getDraggable()) {\n        this.bindDragEvents(overlay);\n      }\n    }\n  }, {\n    key: \"bindDragEvents\",\n    value: function bindDragEvents(overlay) {\n      this.bindDragEvent(overlay, 'dragstart', this.props.onOverlayDragStart);\n      this.bindDragEvent(overlay, 'drag', this.props.onOverlayDrag);\n      this.bindDragEvent(overlay, 'dragend', this.props.onOverlayDragEnd);\n    }\n  }, {\n    key: \"bindMapEvent\",\n    value: function bindMapEvent(eventName, callback) {\n      this.map.addListener(eventName, function (event) {\n        if (callback) {\n          callback(event);\n        }\n      });\n    }\n  }, {\n    key: \"bindDragEvent\",\n    value: function bindDragEvent(overlay, eventName, callback) {\n      var _this2 = this;\n\n      overlay.addListener(eventName, function (event) {\n        if (callback) {\n          callback({\n            originalEvent: event,\n            overlay: overlay,\n            map: _this2.map\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getMap\",\n    value: function getMap() {\n      return this.map;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.overlays !== this.props.overlays) {\n        if (prevProps.overlays) {\n          var _iterator2 = _createForOfIteratorHelper(prevProps.overlays),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var overlay = _step2.value;\n              google.maps.event.clearInstanceListeners(overlay);\n              overlay.setMap(null);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n\n        this.initOverlays(this.props.overlays);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initMap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this3.container = el;\n        },\n        style: this.props.style,\n        className: this.props.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return GMap;\n}(Component);\nGMap.defaultProps = {\n  options: null,\n  overlays: null,\n  style: null,\n  className: null,\n  onMapReady: null,\n  onMapClick: null,\n  onMapDragEnd: null,\n  onZoomChanged: null,\n  onOverlayDragStart: null,\n  onOverlayDrag: null,\n  onOverlayDragEnd: null,\n  onOverlayClick: null\n};\nGMap.propTypes = {\n  options: PropTypes.object,\n  overlays: PropTypes.array,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  onMapReady: PropTypes.func,\n  onMapClick: PropTypes.func,\n  onMapDragEnd: PropTypes.func,\n  onZoomChanged: PropTypes.func,\n  onOverlayDragStart: PropTypes.func,\n  onOverlayDrag: PropTypes.func,\n  onOverlayDragEnd: PropTypes.func,\n  onOverlayClick: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/gmap/GMap.js"],"names":["React","Component","PropTypes","GMap","map","google","maps","Map","container","props","options","onMapReady","initOverlays","overlays","bindMapEvent","onMapClick","onMapDragEnd","onZoomChanged","overlay","setMap","bindOverlayEvents","addListener","event","onOverlayClick","originalEvent","getDraggable","bindDragEvents","bindDragEvent","onOverlayDragStart","onOverlayDrag","onOverlayDragEnd","eventName","callback","prevProps","prevState","snapshot","clearInstanceListeners","initMap","el","style","className","defaultProps","propTypes","object","array","string","func"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GMap extends Component {\r\n\r\n    static defaultProps = {\r\n        options: null,\r\n        overlays: null,\r\n        style: null,\r\n        className: null,\r\n        onMapReady: null,\r\n        onMapClick: null,\r\n        onMapDragEnd: null,\r\n        onZoomChanged: null,\r\n        onOverlayDragStart: null,\r\n        onOverlayDrag: null,\r\n        onOverlayDragEnd: null,\r\n        onOverlayClick: null\r\n    }\r\n\r\n    static propTypes = {\r\n        options: PropTypes.object,\r\n        overlays: PropTypes.array,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        onMapReady: PropTypes.func,\r\n        onMapClick: PropTypes.func,\r\n        onMapDragEnd: PropTypes.func,\r\n        onZoomChanged: PropTypes.func,\r\n        onOverlayDragStart: PropTypes.func,\r\n        onOverlayDrag: PropTypes.func,\r\n        onOverlayDragEnd: PropTypes.func,\r\n        onOverlayClick: PropTypes.func\r\n    };\r\n        \r\n    initMap() {\r\n        this.map = new google.maps.Map(this.container, this.props.options);\r\n        \r\n        if(this.props.onMapReady) {\r\n            this.props.onMapReady({\r\n                map: this.map\r\n            });\r\n        } \r\n        \r\n        this.initOverlays(this.props.overlays);\r\n        \r\n        this.bindMapEvent('click', this.props.onMapClick);\r\n        this.bindMapEvent('dragend', this.props.onMapDragEnd);\r\n        this.bindMapEvent('zoom_changed', this.props.onZoomChanged);\r\n    }\r\n    \r\n    initOverlays(overlays) {\r\n        if(overlays) {\r\n            for(let overlay of overlays) {\r\n                overlay.setMap(this.map);\r\n                this.bindOverlayEvents(overlay);\r\n            }\r\n        }\r\n    }\r\n    \r\n    bindOverlayEvents(overlay) {\r\n        overlay.addListener('click', (event) => {\r\n            if(this.props.onOverlayClick) {\r\n                this.props.onOverlayClick({\r\n                    originalEvent: event,\r\n                    overlay: overlay,\r\n                    map: this.map\r\n                });\r\n            }\r\n        });\r\n        \r\n        if(overlay.getDraggable()) {\r\n            this.bindDragEvents(overlay);\r\n        }\r\n    }\r\n    \r\n    bindDragEvents(overlay) {\r\n        this.bindDragEvent(overlay, 'dragstart', this.props.onOverlayDragStart);\r\n        this.bindDragEvent(overlay, 'drag', this.props.onOverlayDrag);\r\n        this.bindDragEvent(overlay, 'dragend', this.props.onOverlayDragEnd);\r\n    }\r\n    \r\n    bindMapEvent(eventName, callback) {\r\n        this.map.addListener(eventName, (event) => {\r\n            if(callback) {\r\n                callback(event);\r\n            }\r\n        });\r\n    }\r\n    \r\n    bindDragEvent(overlay, eventName, callback) {\r\n        overlay.addListener(eventName, (event) => {\r\n            if(callback) {\r\n                callback({\r\n                    originalEvent: event,\r\n                    overlay: overlay,\r\n                    map: this.map\r\n                });\r\n            }\r\n        });\r\n    }\r\n    \r\n    getMap() {\r\n        return this.map;\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.overlays !== this.props.overlays) {\r\n            if(prevProps.overlays) {\r\n                for(let overlay of prevProps.overlays) {\r\n                    google.maps.event.clearInstanceListeners(overlay);\r\n                    overlay.setMap(null);\r\n                }\r\n            }\r\n            \r\n            this.initOverlays(this.props.overlays);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.initMap();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div ref={(el) => this.container = el} style={this.props.style} className={this.props.className}></div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}