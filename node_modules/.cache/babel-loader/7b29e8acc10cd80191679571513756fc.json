{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\treetable\\\\TreeTableBody.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TreeTableRow } from './TreeTableRow';\nexport var TreeTableBody = /*#__PURE__*/function (_Component) {\n  _inherits(TreeTableBody, _Component);\n\n  var _super = _createSuper(TreeTableBody);\n\n  function TreeTableBody() {\n    _classCallCheck(this, TreeTableBody);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TreeTableBody, [{\n    key: \"createRow\",\n    value: function createRow(node, index) {\n      return /*#__PURE__*/React.createElement(TreeTableRow, {\n        key: node.key || JSON.stringify(node.data),\n        level: 0,\n        rowIndex: index,\n        node: node,\n        columns: this.props.columns,\n        expandedKeys: this.props.expandedKeys,\n        onToggle: this.props.onToggle,\n        onExpand: this.props.onExpand,\n        onCollapse: this.props.onCollapse,\n        selectionMode: this.props.selectionMode,\n        selectionKeys: this.props.selectionKeys,\n        onSelectionChange: this.props.onSelectionChange,\n        metaKeySelection: this.props.metaKeySelection,\n        onRowClick: this.props.onRowClick,\n        onSelect: this.props.onSelect,\n        onUnselect: this.props.onUnselect,\n        propagateSelectionUp: this.props.propagateSelectionUp,\n        propagateSelectionDown: this.props.propagateSelectionDown,\n        rowClassName: this.props.rowClassName,\n        contextMenuSelectionKey: this.props.contextMenuSelectionKey,\n        onContextMenuSelectionChange: this.props.onContextMenuSelectionChange,\n        onContextMenu: this.props.onContextMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this = this;\n\n      if (this.props.paginator && !this.props.lazy) {\n        var rpp = this.props.rows || 0;\n        var startIndex = this.props.first || 0;\n        var endIndex = startIndex + rpp;\n        var rows = [];\n\n        for (var i = startIndex; i < endIndex; i++) {\n          var rowData = this.props.value[i];\n          if (rowData) rows.push(this.createRow(this.props.value[i]));else break;\n        }\n\n        return rows;\n      } else {\n        return this.props.value.map(function (node, index) {\n          return _this.createRow(node, index);\n        });\n      }\n    }\n  }, {\n    key: \"renderEmptyMessage\",\n    value: function renderEmptyMessage() {\n      if (this.props.loading) {\n        return null;\n      } else {\n        var colSpan = this.props.columns ? this.props.columns.length : null;\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          className: \"p-treetable-emptymessage\",\n          colSpan: colSpan,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }, this.props.emptyMessage));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content = this.props.value && this.props.value.length ? this.renderRows() : this.renderEmptyMessage();\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        className: \"p-treetable-tbody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, content);\n    }\n  }]);\n\n  return TreeTableBody;\n}(Component);\nTreeTableBody.defaultProps = {\n  value: null,\n  columns: null,\n  expandedKeys: null,\n  contextMenuSelectionKey: null,\n  paginator: false,\n  first: null,\n  rows: null,\n  selectionMode: null,\n  selectionKeys: null,\n  metaKeySelection: true,\n  propagateSelectionUp: true,\n  propagateSelectionDown: true,\n  lazy: false,\n  rowClassName: null,\n  emptyMessage: \"No records found\",\n  loading: false,\n  onExpand: null,\n  onCollapse: null,\n  onToggle: null,\n  onRowClick: null,\n  onSelect: null,\n  onUnselect: null,\n  onSelectionChange: null,\n  onContextMenuSelectionChange: null,\n  onContextMenu: null\n};\nTreeTableBody.propTypes = {\n  value: PropTypes.array,\n  columns: PropTypes.array,\n  expandedKeys: PropTypes.object,\n  contextMenuSelectionKey: PropTypes.any,\n  paginator: PropTypes.bool,\n  first: PropTypes.number,\n  rows: PropTypes.number,\n  selectionMode: PropTypes.string,\n  selectionKeys: PropTypes.any,\n  metaKeySelection: PropTypes.bool,\n  propagateSelectionUp: PropTypes.bool,\n  propagateSelectionDown: PropTypes.bool,\n  lazy: PropTypes.bool,\n  rowClassName: PropTypes.func,\n  emptyMessage: PropTypes.string,\n  loading: PropTypes.bool,\n  onExpand: PropTypes.func,\n  onCollapse: PropTypes.func,\n  onToggle: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onSelect: PropTypes.func,\n  onUnselect: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n  onContextMenuSelectionChange: PropTypes.func,\n  onContextMenu: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/treetable/TreeTableBody.js"],"names":["React","Component","PropTypes","TreeTableRow","TreeTableBody","node","index","key","JSON","stringify","data","props","columns","expandedKeys","onToggle","onExpand","onCollapse","selectionMode","selectionKeys","onSelectionChange","metaKeySelection","onRowClick","onSelect","onUnselect","propagateSelectionUp","propagateSelectionDown","rowClassName","contextMenuSelectionKey","onContextMenuSelectionChange","onContextMenu","paginator","lazy","rpp","rows","startIndex","first","endIndex","i","rowData","value","push","createRow","map","loading","colSpan","length","emptyMessage","content","renderRows","renderEmptyMessage","defaultProps","propTypes","array","object","any","bool","number","string","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TreeTableRow } from './TreeTableRow';\r\n\r\nexport class TreeTableBody extends Component {\r\n\r\n    static defaultProps = {\r\n        value: null,\r\n        columns: null,\r\n        expandedKeys: null,\r\n        contextMenuSelectionKey: null,\r\n        paginator: false,\r\n        first: null,\r\n        rows: null,\r\n        selectionMode: null,\r\n        selectionKeys: null,\r\n        metaKeySelection: true,\r\n        propagateSelectionUp: true,\r\n        propagateSelectionDown: true,\r\n        lazy: false,\r\n        rowClassName: null,\r\n        emptyMessage: \"No records found\",\r\n        loading: false,\r\n        onExpand: null,\r\n        onCollapse: null,\r\n        onToggle: null,\r\n        onRowClick: null,\r\n        onSelect: null,\r\n        onUnselect: null,\r\n        onSelectionChange: null,\r\n        onContextMenuSelectionChange: null,\r\n        onContextMenu: null\r\n    }\r\n\r\n    static propTypes = {\r\n        value: PropTypes.array,\r\n        columns: PropTypes.array,\r\n        expandedKeys: PropTypes.object,\r\n        contextMenuSelectionKey: PropTypes.any,\r\n        paginator: PropTypes.bool,\r\n        first: PropTypes.number,\r\n        rows: PropTypes.number,\r\n        selectionMode: PropTypes.string,\r\n        selectionKeys: PropTypes.any,\r\n        metaKeySelection: PropTypes.bool,\r\n        propagateSelectionUp: PropTypes.bool,\r\n        propagateSelectionDown: PropTypes.bool,\r\n        lazy: PropTypes.bool,\r\n        rowClassName: PropTypes.func,\r\n        emptyMessage: PropTypes.string,\r\n        loading: PropTypes.bool,\r\n        onExpand: PropTypes.func,\r\n        onCollapse: PropTypes.func,\r\n        onToggle: PropTypes.func,\r\n        onRowClick: PropTypes.func,\r\n        onSelect: PropTypes.func,\r\n        onUnselect: PropTypes.func,\r\n        onSelectionChange: PropTypes.func,\r\n        onContextMenuSelectionChange: PropTypes.func,\r\n        onContextMenu: PropTypes.func\r\n    }\r\n\r\n    createRow(node, index) {\r\n        return (\r\n            <TreeTableRow key={node.key||JSON.stringify(node.data)} level={0} rowIndex={index}\r\n                            node={node} columns={this.props.columns} expandedKeys={this.props.expandedKeys}\r\n                            onToggle={this.props.onToggle} onExpand={this.props.onExpand} onCollapse={this.props.onCollapse}\r\n                            selectionMode={this.props.selectionMode} selectionKeys={this.props.selectionKeys} onSelectionChange={this.props.onSelectionChange}\r\n                            metaKeySelection={this.props.metaKeySelection} onRowClick={this.props.onRowClick} onSelect={this.props.onSelect} onUnselect={this.props.onUnselect}\r\n                            propagateSelectionUp={this.props.propagateSelectionUp} propagateSelectionDown={this.props.propagateSelectionDown}\r\n                            rowClassName={this.props.rowClassName}\r\n                            contextMenuSelectionKey={this.props.contextMenuSelectionKey} onContextMenuSelectionChange={this.props.onContextMenuSelectionChange} onContextMenu={this.props.onContextMenu} />\r\n        );\r\n    }\r\n\r\n    renderRows() {\r\n        if (this.props.paginator && !this.props.lazy) {\r\n            let rpp = this.props.rows||0;\r\n            let startIndex = this.props.first||0;\r\n            let endIndex = (startIndex + rpp);\r\n            let rows = [];\r\n\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let rowData = this.props.value[i];\r\n                if (rowData)\r\n                    rows.push(this.createRow(this.props.value[i]));\r\n                else\r\n                    break;\r\n            }\r\n\r\n            return rows;\r\n        }\r\n        else {\r\n            return this.props.value.map((node, index) => this.createRow(node, index));\r\n        }\r\n    }\r\n\r\n    renderEmptyMessage() {\r\n        if (this.props.loading) {\r\n            return null;\r\n        }\r\n        else {\r\n            const colSpan = this.props.columns ? this.props.columns.length : null;\r\n            return (\r\n                <tr>\r\n                    <td className=\"p-treetable-emptymessage\" colSpan={colSpan}>{this.props.emptyMessage}</td>\r\n                </tr>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const content = (this.props.value && this.props.value.length) ? this.renderRows() : this.renderEmptyMessage();\r\n\r\n        return (\r\n            <tbody className=\"p-treetable-tbody\">\r\n                {content}\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}