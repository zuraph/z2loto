{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\listbox\\\\ListBox.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FilterUtils from '../utils/FilterUtils';\nimport { ListBoxItem } from './ListBoxItem';\nimport { ListBoxHeader } from './ListBoxHeader';\nimport { tip } from '../tooltip/Tooltip';\nexport var ListBox = /*#__PURE__*/function (_Component) {\n  _inherits(ListBox, _Component);\n\n  var _super = _createSuper(ListBox);\n\n  function ListBox(props) {\n    var _this;\n\n    _classCallCheck(this, ListBox);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n\n    if (!_this.props.onFilterValueChange) {\n      _this.state.filterValue = '';\n    }\n\n    _this.onFilter = _this.onFilter.bind(_assertThisInitialized(_this));\n    _this.onOptionClick = _this.onOptionClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ListBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.element,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"getFilterValue\",\n    value: function getFilterValue() {\n      return (this.props.onFilterValueChange ? this.props.filterValue : this.state.filterValue) || '';\n    }\n  }, {\n    key: \"onOptionClick\",\n    value: function onOptionClick(event) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      if (this.props.multiple) this.onOptionClickMultiple(event.originalEvent, event.option);else this.onOptionClickSingle(event.originalEvent, event.option);\n      this.optionTouched = false;\n    }\n  }, {\n    key: \"onOptionTouchEnd\",\n    value: function onOptionTouchEnd() {\n      if (this.props.disabled) {\n        return;\n      }\n\n      this.optionTouched = true;\n    }\n  }, {\n    key: \"onOptionClickSingle\",\n    value: function onOptionClickSingle(event, option) {\n      var selected = this.isSelected(option);\n      var valueChanged = false;\n      var value = null;\n      var metaSelection = this.optionTouched ? false : this.props.metaKeySelection;\n\n      if (metaSelection) {\n        var metaKey = event.metaKey || event.ctrlKey;\n\n        if (selected) {\n          if (metaKey) {\n            value = null;\n            valueChanged = true;\n          }\n        } else {\n          value = this.getOptionValue(option);\n          valueChanged = true;\n        }\n      } else {\n        value = selected ? null : this.getOptionValue(option);\n        valueChanged = true;\n      }\n\n      if (valueChanged) {\n        this.updateModel(event, value);\n      }\n    }\n  }, {\n    key: \"onOptionClickMultiple\",\n    value: function onOptionClickMultiple(event, option) {\n      var selected = this.isSelected(option);\n      var valueChanged = false;\n      var value = null;\n      var metaSelection = this.optionTouched ? false : this.props.metaKeySelection;\n\n      if (metaSelection) {\n        var metaKey = event.metaKey || event.ctrlKey;\n\n        if (selected) {\n          if (metaKey) value = this.removeOption(option);else value = [this.getOptionValue(option)];\n          valueChanged = true;\n        } else {\n          value = metaKey ? this.props.value || [] : [];\n          value = [].concat(_toConsumableArray(value), [this.getOptionValue(option)]);\n          valueChanged = true;\n        }\n      } else {\n        if (selected) value = this.removeOption(option);else value = [].concat(_toConsumableArray(this.props.value || []), [this.getOptionValue(option)]);\n        valueChanged = true;\n      }\n\n      if (valueChanged) {\n        this.props.onChange({\n          originalEvent: event,\n          value: value,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.props.id,\n            value: value\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onFilter\",\n    value: function onFilter(event) {\n      var originalEvent = event.originalEvent,\n          value = event.value;\n\n      if (this.props.onFilterValueChange) {\n        this.props.onFilterValueChange({\n          originalEvent: originalEvent,\n          value: value\n        });\n      } else {\n        this.setState({\n          filterValue: value\n        });\n      }\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(event, value) {\n      if (this.props.onChange) {\n        this.props.onChange({\n          originalEvent: event,\n          value: value,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.props.id,\n            value: value\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeOption\",\n    value: function removeOption(option) {\n      var _this2 = this;\n\n      return this.props.value.filter(function (val) {\n        return !ObjectUtils.equals(val, _this2.getOptionValue(option), _this2.props.dataKey);\n      });\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(option) {\n      var selected = false;\n      var optionValue = this.getOptionValue(option);\n\n      if (this.props.multiple) {\n        if (this.props.value) {\n          var _iterator = _createForOfIteratorHelper(this.props.value),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var val = _step.value;\n\n              if (ObjectUtils.equals(val, optionValue, this.props.dataKey)) {\n                selected = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      } else {\n        selected = ObjectUtils.equals(this.props.value, optionValue, this.props.dataKey);\n      }\n\n      return selected;\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(option) {\n      var filterValue = this.getFilterValue().trim().toLocaleLowerCase(this.props.filterLocale);\n      var optionLabel = this.getOptionLabel(option).toLocaleLowerCase(this.props.filterLocale);\n      return optionLabel.indexOf(filterValue) > -1;\n    }\n  }, {\n    key: \"hasFilter\",\n    value: function hasFilter() {\n      var filter = this.getFilterValue();\n      return filter && filter.trim().length > 0;\n    }\n  }, {\n    key: \"getOptionLabel\",\n    value: function getOptionLabel(option) {\n      return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : option['label'] !== undefined ? option['label'] : option;\n    }\n  }, {\n    key: \"getOptionValue\",\n    value: function getOptionValue(option) {\n      return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : option['value'] !== undefined ? option['value'] : option;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var className = classNames('p-listbox p-component', {\n        'p-disabled': this.props.disabled\n      }, this.props.className);\n      var listClassName = classNames('p-listbox-list-wrapper', this.props.listClassName);\n      var items = this.props.options;\n      var header;\n\n      if (this.props.options) {\n        if (this.hasFilter()) {\n          var filterValue = this.getFilterValue().trim().toLocaleLowerCase(this.props.filterLocale);\n          var searchFields = this.props.filterBy ? this.props.filterBy.split(',') : [this.props.optionLabel || 'label'];\n          items = FilterUtils.filter(items, searchFields, filterValue, this.props.filterMatchMode, this.props.filterLocale);\n        }\n\n        items = items.map(function (option, index) {\n          var optionLabel = _this3.getOptionLabel(option);\n\n          var optionKey = \"pr_id__\".concat(optionLabel, \"-\").concat(index);\n          return /*#__PURE__*/React.createElement(ListBoxItem, {\n            key: optionKey,\n            label: optionLabel,\n            option: option,\n            template: _this3.props.itemTemplate,\n            selected: _this3.isSelected(option),\n            onClick: _this3.onOptionClick,\n            onTouchEnd: function onTouchEnd(e) {\n              return _this3.onOptionTouchEnd(e, option, index);\n            },\n            tabIndex: _this3.props.tabIndex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }\n          });\n        });\n      }\n\n      if (this.props.filter) {\n        header = /*#__PURE__*/React.createElement(ListBoxHeader, {\n          filter: this.getFilterValue(),\n          onFilter: this.onFilter,\n          disabled: this.props.disabled,\n          filterPlaceholder: this.props.filterPlaceholder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 22\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this3.element = el;\n        },\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }\n      }, header, /*#__PURE__*/React.createElement(\"div\", {\n        className: listClassName,\n        style: this.props.listStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"p-listbox-list\",\n        role: \"listbox\",\n        \"aria-multiselectable\": this.props.multiple,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }\n      }, items)));\n    }\n  }]);\n\n  return ListBox;\n}(Component);\nListBox.defaultProps = {\n  id: null,\n  value: null,\n  options: null,\n  optionLabel: null,\n  optionValue: null,\n  itemTemplate: null,\n  style: null,\n  listStyle: null,\n  listClassName: null,\n  className: null,\n  disabled: null,\n  dataKey: null,\n  multiple: false,\n  metaKeySelection: false,\n  filter: false,\n  filterBy: null,\n  filterValue: null,\n  filterMatchMode: 'contains',\n  filterPlaceholder: null,\n  filterLocale: undefined,\n  tabIndex: 0,\n  tooltip: null,\n  tooltipOptions: null,\n  ariaLabelledBy: null,\n  onChange: null,\n  onFilterValueChange: null\n};\nListBox.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.any,\n  options: PropTypes.array,\n  optionLabel: PropTypes.string,\n  optionValue: PropTypes.string,\n  itemTemplate: PropTypes.any,\n  style: PropTypes.object,\n  listStyle: PropTypes.object,\n  listClassName: PropTypes.string,\n  className: PropTypes.string,\n  dataKey: PropTypes.string,\n  multiple: PropTypes.bool,\n  metaKeySelection: PropTypes.bool,\n  filter: PropTypes.bool,\n  filterBy: PropTypes.string,\n  filterValue: PropTypes.string,\n  filterMatchMode: PropTypes.string,\n  filterPlaceholder: PropTypes.string,\n  filterLocale: PropTypes.string,\n  tabIndex: PropTypes.number,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  ariaLabelledBy: PropTypes.string,\n  onChange: PropTypes.func,\n  onFilterValueChange: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/listbox/ListBox.js"],"names":["React","Component","PropTypes","classNames","ObjectUtils","FilterUtils","ListBoxItem","ListBoxHeader","tip","ListBox","props","state","onFilterValueChange","filterValue","onFilter","bind","onOptionClick","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","target","element","options","event","disabled","multiple","onOptionClickMultiple","originalEvent","option","onOptionClickSingle","optionTouched","selected","isSelected","valueChanged","value","metaSelection","metaKeySelection","metaKey","ctrlKey","getOptionValue","updateModel","removeOption","onChange","stopPropagation","preventDefault","name","id","setState","filter","val","equals","dataKey","optionValue","getFilterValue","trim","toLocaleLowerCase","filterLocale","optionLabel","getOptionLabel","indexOf","length","resolveFieldData","undefined","className","listClassName","items","header","hasFilter","searchFields","filterBy","split","filterMatchMode","map","index","optionKey","itemTemplate","e","onOptionTouchEnd","tabIndex","filterPlaceholder","el","style","listStyle","defaultProps","ariaLabelledBy","propTypes","string","any","array","object","bool","number","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport FilterUtils from '../utils/FilterUtils';\r\nimport {ListBoxItem} from './ListBoxItem';\r\nimport {ListBoxHeader} from './ListBoxHeader';\r\nimport { tip } from '../tooltip/Tooltip';\r\n\r\nexport class ListBox extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        options: null,\r\n        optionLabel: null,\r\n        optionValue: null,\r\n        itemTemplate: null,\r\n        style: null,\r\n        listStyle: null,\r\n        listClassName: null,\r\n        className: null,\r\n        disabled: null,\r\n        dataKey: null,\r\n        multiple: false,\r\n        metaKeySelection: false,\r\n        filter: false,\r\n        filterBy: null,\r\n        filterValue: null,\r\n        filterMatchMode: 'contains',\r\n        filterPlaceholder: null,\r\n        filterLocale: undefined,\r\n        tabIndex: 0,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        ariaLabelledBy: null,\r\n        onChange: null,\r\n        onFilterValueChange: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.any,\r\n        options: PropTypes.array,\r\n        optionLabel: PropTypes.string,\r\n        optionValue: PropTypes.string,\r\n        itemTemplate: PropTypes.any,\r\n        style: PropTypes.object,\r\n        listStyle: PropTypes.object,\r\n        listClassName: PropTypes.string,\r\n        className: PropTypes.string,\r\n        dataKey: PropTypes.string,\r\n        multiple: PropTypes.bool,\r\n        metaKeySelection: PropTypes.bool,\r\n        filter: PropTypes.bool,\r\n        filterBy: PropTypes.string,\r\n        filterValue: PropTypes.string,\r\n        filterMatchMode: PropTypes.string,\r\n        filterPlaceholder: PropTypes.string,\r\n        filterLocale: PropTypes.string,\r\n        tabIndex: PropTypes.number,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        ariaLabelledBy: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n        onFilterValueChange: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        if (!this.props.onFilterValueChange) {\r\n            this.state.filterValue = '';\r\n        }\r\n\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onOptionClick = this.onOptionClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.element,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    getFilterValue() {\r\n        return (this.props.onFilterValueChange ? this.props.filterValue : this.state.filterValue) || '';\r\n    }\r\n\r\n    onOptionClick(event) {\r\n        if (this.props.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.multiple)\r\n            this.onOptionClickMultiple(event.originalEvent, event.option);\r\n        else\r\n            this.onOptionClickSingle(event.originalEvent, event.option);\r\n\r\n        this.optionTouched = false;\r\n    }\r\n\r\n    onOptionTouchEnd() {\r\n        if (this.props.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.optionTouched = true;\r\n    }\r\n\r\n    onOptionClickSingle(event, option) {\r\n        let selected = this.isSelected(option);\r\n        let valueChanged = false;\r\n        let value = null;\r\n        let metaSelection = this.optionTouched ? false : this.props.metaKeySelection;\r\n\r\n        if (metaSelection) {\r\n            let metaKey = (event.metaKey || event.ctrlKey);\r\n\r\n            if (selected) {\r\n                if (metaKey) {\r\n                    value = null;\r\n                    valueChanged = true;\r\n                }\r\n            }\r\n            else {\r\n                value = this.getOptionValue(option);\r\n                valueChanged = true;\r\n            }\r\n        }\r\n        else {\r\n            value = selected ? null : this.getOptionValue(option);\r\n            valueChanged = true;\r\n        }\r\n\r\n        if (valueChanged) {\r\n            this.updateModel(event, value);\r\n        }\r\n    }\r\n\r\n    onOptionClickMultiple(event, option) {\r\n        let selected = this.isSelected(option);\r\n        let valueChanged = false;\r\n        let value = null;\r\n        let metaSelection = this.optionTouched ? false : this.props.metaKeySelection;\r\n\r\n        if (metaSelection) {\r\n            let metaKey = (event.metaKey || event.ctrlKey);\r\n\r\n            if (selected) {\r\n                if (metaKey)\r\n                    value = this.removeOption(option);\r\n                else\r\n                    value = [this.getOptionValue(option)];\r\n\r\n                valueChanged = true;\r\n            }\r\n            else {\r\n                value = (metaKey) ? this.props.value || [] : [];\r\n                value = [...value, this.getOptionValue(option)];\r\n                valueChanged = true;\r\n            }\r\n        }\r\n        else {\r\n            if (selected)\r\n                value = this.removeOption(option);\r\n            else\r\n                value = [...this.props.value || [], this.getOptionValue(option)];\r\n\r\n            valueChanged = true;\r\n        }\r\n\r\n        if (valueChanged) {\r\n            this.props.onChange({\r\n                originalEvent: event,\r\n                value: value,\r\n                stopPropagation : () =>{},\r\n                preventDefault : () =>{},\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.props.id,\r\n                    value: value\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onFilter(event) {\r\n        const { originalEvent, value } = event;\r\n        if (this.props.onFilterValueChange) {\r\n            this.props.onFilterValueChange({\r\n                originalEvent,\r\n                value\r\n            });\r\n        }\r\n        else {\r\n            this.setState({ filterValue: value });\r\n        }\r\n    }\r\n\r\n    updateModel(event, value) {\r\n        if (this.props.onChange) {\r\n            this.props.onChange({\r\n                originalEvent: event,\r\n                value: value,\r\n                stopPropagation : () =>{},\r\n                preventDefault : () =>{},\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.props.id,\r\n                    value: value\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    removeOption(option) {\r\n        return this.props.value.filter(val => !ObjectUtils.equals(val, this.getOptionValue(option), this.props.dataKey));\r\n    }\r\n\r\n    isSelected(option) {\r\n        let selected = false;\r\n        let optionValue = this.getOptionValue(option);\r\n\r\n        if (this.props.multiple) {\r\n            if (this.props.value) {\r\n                for (let val of this.props.value) {\r\n                    if (ObjectUtils.equals(val, optionValue, this.props.dataKey)) {\r\n                        selected = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            selected = ObjectUtils.equals(this.props.value, optionValue, this.props.dataKey);\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    filter(option) {\r\n        let filterValue = this.getFilterValue().trim().toLocaleLowerCase(this.props.filterLocale);\r\n        let optionLabel = this.getOptionLabel(option).toLocaleLowerCase(this.props.filterLocale);\r\n\r\n        return optionLabel.indexOf(filterValue) > -1;\r\n    }\r\n\r\n    hasFilter() {\r\n        let filter = this.getFilterValue();\r\n        return filter && filter.trim().length > 0;\r\n    }\r\n\r\n    getOptionLabel(option) {\r\n        return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : (option['label'] !== undefined ? option['label'] : option);\r\n    }\r\n\r\n    getOptionValue(option) {\r\n        return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : (option['value'] !== undefined ? option['value'] : option);\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-listbox p-component', {\r\n            'p-disabled': this.props.disabled\r\n        }, this.props.className);\r\n        let listClassName = classNames('p-listbox-list-wrapper', this.props.listClassName);\r\n        let items = this.props.options;\r\n        let header;\r\n\r\n        if (this.props.options) {\r\n            if (this.hasFilter()) {\r\n                let filterValue = this.getFilterValue().trim().toLocaleLowerCase(this.props.filterLocale)\r\n                let searchFields = this.props.filterBy ? this.props.filterBy.split(',') : [this.props.optionLabel || 'label'];\r\n                items = FilterUtils.filter(items, searchFields, filterValue, this.props.filterMatchMode, this.props.filterLocale);\r\n            }\r\n\r\n            items = items.map((option, index) => {\r\n                let optionLabel = this.getOptionLabel(option);\r\n                let optionKey = `pr_id__${optionLabel}-${index}`;\r\n\r\n                return (\r\n                    <ListBoxItem key={optionKey} label={optionLabel} option={option} template={this.props.itemTemplate} selected={this.isSelected(option)}\r\n                        onClick={this.onOptionClick} onTouchEnd={(e) => this.onOptionTouchEnd(e, option, index)} tabIndex={this.props.tabIndex} />\r\n                );\r\n            });\r\n        }\r\n\r\n        if (this.props.filter) {\r\n            header = <ListBoxHeader filter={this.getFilterValue()} onFilter={this.onFilter} disabled={this.props.disabled} filterPlaceholder={this.props.filterPlaceholder} />\r\n        }\r\n\r\n        return (\r\n            <div ref={(el) => this.element = el} id={this.props.id} className={className} style={this.props.style}>\r\n                {header}\r\n                <div className={listClassName} style={this.props.listStyle}>\r\n                    <ul className=\"p-listbox-list\" role=\"listbox\" aria-multiselectable={this.props.multiple}>\r\n                        {items}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}