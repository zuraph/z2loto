{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var OrganizationChartDoc=/*#__PURE__*/function(_Component){_inherits(OrganizationChartDoc,_Component);var _super=_createSuper(OrganizationChartDoc);function OrganizationChartDoc(props){var _this;_classCallCheck(this,OrganizationChartDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { OrganizationChart } from 'primereact/organizationchart';\\nimport './OrganizationChartDemo.css';\\n\\nexport class OrganizationChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            selection: []\\n        };\\n\\n        this.data1 = [{\\n            label: 'CEO',\\n            type: 'person',\\n            className: 'p-person',\\n            expanded: true,\\n            data: { name: 'Walter White', 'avatar': 'walter.jpg' },\\n            children: [\\n                {\\n                    label: 'CFO',\\n                    type: 'person',\\n                    className: 'p-person',\\n                    expanded: true,\\n                    data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\\n                    children: [{\\n                        label: 'Tax',\\n                        className: 'department-cfo'\\n                    },\\n                    {\\n                        label: 'Legal',\\n                        className: 'department-cfo'\\n                    }],\\n                },\\n                {\\n                    label: 'COO',\\n                    type: 'person',\\n                    className: 'p-person',\\n                    expanded: true,\\n                    data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\\n                    children: [{\\n                        label: 'Operations',\\n                        className: 'department-coo'\\n                    }]\\n                },\\n                {\\n                    label: 'CTO',\\n                    type: 'person',\\n                    className: 'p-person',\\n                    expanded: true,\\n                    data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\\n                    children: [{\\n                        label: 'Development',\\n                        className: 'department-cto',\\n                        expanded: true,\\n                        children: [{\\n                            label: 'Analysis',\\n                            className: 'department-cto'\\n                        },\\n                        {\\n                            label: 'Front End',\\n                            className: 'department-cto'\\n                        },\\n                        {\\n                            label: 'Back End',\\n                            className: 'department-cto'\\n                        }]\\n                    },\\n                    {\\n                        label: 'QA',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'R&D',\\n                        className: 'department-cto'\\n                    }]\\n                }\\n            ]\\n        }];\\n\\n        this.data2 = [{\\n            label: 'F.C Barcelona',\\n            expanded: true,\\n            children: [\\n                {\\n                    label: 'F.C Barcelona',\\n                    expanded: true,\\n                    children: [\\n                        {\\n                            label: 'Chelsea FC'\\n                        },\\n                        {\\n                            label: 'F.C. Barcelona'\\n                        }\\n                    ]\\n                },\\n                {\\n                    label: 'Real Madrid',\\n                    expanded: true,\\n                    children: [\\n                        {\\n                            label: 'Bayern Munich'\\n                        },\\n                        {\\n                            label: 'Real Madrid'\\n                        }\\n                    ]\\n                }\\n            ]\\n        }];\\n\\n        this.nodeTemplate = this.nodeTemplate.bind(this);\\n    }\\n\\n    nodeTemplate(node) {\\n        if (node.type === \\\"person\\\") {\\n            return (\\n                <div>\\n                    <div className=\\\"node-header\\\">{node.label}</div>\\n                    <div className=\\\"node-content\\\">\\n                        <img alt={node.data.avatar} src={`showcase/demo/images/organization/${node.data.avatar}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\\n                        <div>{node.data.name}</div>\\n                    </div>\\n                </div>\\n            );\\n        }\\n\\n        if (node.type === \\\"department\\\") {\\n            return node.label;\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"organizationchart-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <h5>Advanced</h5>\\n                    <OrganizationChart value={this.data1} nodeTemplate={this.nodeTemplate} selection={this.state.selection} selectionMode=\\\"multiple\\\"\\n                        onSelectionChange={event => this.setState({ selection: event.data })} className=\\\"company\\\"></OrganizationChart>\\n\\n                    <h5>Basic</h5>\\n                    <OrganizationChart value={this.data2}></OrganizationChart>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { OrganizationChart } from 'primereact/organizationchart';\\nimport './OrganizationChartDemo.css';\\n\\nconst OrganizationChartDemo = () => {\\n    const [selection, setSelection] = useState([]);\\n    const data1 = [{\\n        label: 'CEO',\\n        type: 'person',\\n        className: 'p-person',\\n        expanded: true,\\n        data: { name: 'Walter White', 'avatar': 'walter.jpg' },\\n        children: [\\n            {\\n                label: 'CFO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\\n                children: [{\\n                    label: 'Tax',\\n                    className: 'department-cfo'\\n                },\\n                {\\n                    label: 'Legal',\\n                    className: 'department-cfo'\\n                }],\\n            },\\n            {\\n                label: 'COO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\\n                children: [{\\n                    label: 'Operations',\\n                    className: 'department-coo'\\n                }]\\n            },\\n            {\\n                label: 'CTO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\\n                children: [{\\n                    label: 'Development',\\n                    className: 'department-cto',\\n                    expanded: true,\\n                    children: [{\\n                        label: 'Analysis',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'Front End',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'Back End',\\n                        className: 'department-cto'\\n                    }]\\n                },\\n                {\\n                    label: 'QA',\\n                    className: 'department-cto'\\n                },\\n                {\\n                    label: 'R&D',\\n                    className: 'department-cto'\\n                }]\\n            }\\n        ]\\n    }];\\n\\n    const data2 = [{\\n        label: 'F.C Barcelona',\\n        expanded: true,\\n        children: [\\n            {\\n                label: 'F.C Barcelona',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Chelsea FC'\\n                    },\\n                    {\\n                        label: 'F.C. Barcelona'\\n                    }\\n                ]\\n            },\\n            {\\n                label: 'Real Madrid',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Bayern Munich'\\n                    },\\n                    {\\n                        label: 'Real Madrid'\\n                    }\\n                ]\\n            }\\n        ]\\n    }];\\n\\n    const nodeTemplate = (node) => {\\n        if (node.type === \\\"person\\\") {\\n            return (\\n                <div>\\n                    <div className=\\\"node-header\\\">{node.label}</div>\\n                    <div className=\\\"node-content\\\">\\n                        <img alt={node.data.avatar} src={`showcase/demo/images/organization/${node.data.avatar}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\\n                        <div>{node.data.name}</div>\\n                    </div>\\n                </div>\\n            );\\n        }\\n\\n        if (node.type === \\\"department\\\") {\\n            return node.label;\\n        }\\n    }\\n\\n    return (\\n        <div className=\\\"organizationchart-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Advanced</h5>\\n                <OrganizationChart value={data1} nodeTemplate={nodeTemplate} selection={selection} selectionMode=\\\"multiple\\\"\\n                    onSelectionChange={event => setSelection(event.data)} className=\\\"company\\\"></OrganizationChart>\\n\\n                <h5>Basic</h5>\\n                <OrganizationChart value={data2}></OrganizationChart>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { OrganizationChart } from 'primereact/organizationchart';\\nimport './OrganizationChartDemo.css';\\n\\nconst OrganizationChartDemo = () => {\\n    const [selection, setSelection] = useState([]);\\n    const data1 = [{\\n        label: 'CEO',\\n        type: 'person',\\n        className: 'p-person',\\n        expanded: true,\\n        data: { name: 'Walter White', 'avatar': 'walter.jpg' },\\n        children: [\\n            {\\n                label: 'CFO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\\n                children: [{\\n                    label: 'Tax',\\n                    className: 'department-cfo'\\n                },\\n                {\\n                    label: 'Legal',\\n                    className: 'department-cfo'\\n                }],\\n            },\\n            {\\n                label: 'COO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\\n                children: [{\\n                    label: 'Operations',\\n                    className: 'department-coo'\\n                }]\\n            },\\n            {\\n                label: 'CTO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\\n                children: [{\\n                    label: 'Development',\\n                    className: 'department-cto',\\n                    expanded: true,\\n                    children: [{\\n                        label: 'Analysis',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'Front End',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'Back End',\\n                        className: 'department-cto'\\n                    }]\\n                },\\n                {\\n                    label: 'QA',\\n                    className: 'department-cto'\\n                },\\n                {\\n                    label: 'R&D',\\n                    className: 'department-cto'\\n                }]\\n            }\\n        ]\\n    }];\\n\\n    const data2 = [{\\n        label: 'F.C Barcelona',\\n        expanded: true,\\n        children: [\\n            {\\n                label: 'F.C Barcelona',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Chelsea FC'\\n                    },\\n                    {\\n                        label: 'F.C. Barcelona'\\n                    }\\n                ]\\n            },\\n            {\\n                label: 'Real Madrid',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Bayern Munich'\\n                    },\\n                    {\\n                        label: 'Real Madrid'\\n                    }\\n                ]\\n            }\\n        ]\\n    }];\\n\\n    const nodeTemplate = (node) => {\\n        if (node.type === \\\"person\\\") {\\n            return (\\n                <div>\\n                    <div className=\\\"node-header\\\">{node.label}</div>\\n                    <div className=\\\"node-content\\\">\\n                        <img alt={node.data.avatar} src={`showcase/demo/images/organization/${node.data.avatar}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\\n                        <div>{node.data.name}</div>\\n                    </div>\\n                </div>\\n            );\\n        }\\n\\n        if (node.type === \\\"department\\\") {\\n            return node.label;\\n        }\\n    }\\n\\n    return (\\n        <div className=\\\"organizationchart-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Advanced</h5>\\n                <OrganizationChart value={data1} nodeTemplate={nodeTemplate} selection={selection} selectionMode=\\\"multiple\\\"\\n                    onSelectionChange={event => setSelection(event.data)} className=\\\"company\\\"></OrganizationChart>\\n\\n                <h5>Basic</h5>\\n                <OrganizationChart value={data2}></OrganizationChart>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};_this.extFiles={'src/demo/OrganizationChartDemo.css':{content:\"\\n.organizationchart-demo .p-organizationchart .p-person {\\n    padding: 0;\\n    border: 0 none;\\n}\\n\\n.organizationchart-demo .p-organizationchart .node-header, .organizationchart-demo .p-organizationchart .node-content {\\n    padding: .5em .7rem;\\n}\\n\\n.organizationchart-demo .p-organizationchart .node-header {\\n    background-color: #495ebb;\\n    color: #ffffff;\\n}\\n\\n.organizationchart-demo .p-organizationchart .node-content {\\n    text-align: center;\\n    border: 1px solid #495ebb;\\n}\\n\\n.organizationchart-demo .p-organizationchart .node-content img {\\n    border-radius: 50%;\\n}\\n\\n.organizationchart-demo .p-organizationchart .department-cfo {\\n    background-color: #7247bc;\\n    color: #ffffff;\\n}\\n\\n.organizationchart-demo .p-organizationchart .department-coo {\\n    background-color: #a534b6;\\n    color: #ffffff;\\n}\\n\\n.organizationchart-demo .p-organizationchart .department-cto {\\n    background-color: #e9286f;\\n    color: #ffffff;\\n}\\n                \"}};return _this;}_createClass(OrganizationChartDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { OrganizationChart } from 'primereact/organizationchart';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"OrganizationChart requires a model of TreeNode as its value.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nexport const OrganizationChartDemo = () => {\\n\\n    const data = [{\\n        label: 'F.C Barcelona',\\n        expanded: true,\\n        children: [\\n            {\\n                label: 'F.C Barcelona',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Chelsea FC'\\n                    },\\n                    {\\n                        label: 'F.C. Barcelona'\\n                    }\\n                ]\\n            },\\n            {\\n                label: 'Real Madrid',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Bayern Munich'\\n                    },\\n                    {\\n                        label: 'Real Madrid'\\n                    }\\n                ]\\n            }\\n        ]\\n    }];\\n\\n    return (\\n        <OrganizationChart value={data}></OrganizationChart>\\n    )\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Templating\"),/*#__PURE__*/React.createElement(\"p\",null,\"Label of the treenode is displayed inside the node content by default and templating enables further customization.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<OrganizationChart value={data} nodeTemplate={nodeTemplate}></OrganizationChart>\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\n\\nconst nodeTemplate = (node) => {\\n    if (node.type === \\\"person\\\") {\\n        return (\\n            <div>\\n                <div className=\\\"node-header\\\">{node.label}</div>\\n                    <div className=\\\"node-content\\\">\\n                        <img alt={node.data.avatar} src={`showcase/demo/images/organization/${node.data.avatar}`} style={{ width: '32px' }}/>\\n                    <div>{node.data.name}</div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    if (node.type === \\\"department\\\") {\\n        return node.label;\\n    }\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Expand/Collapse State\"),/*#__PURE__*/React.createElement(\"p\",null,\"In order to display a treenode as expanded by default, set \\\"expanded\\\" property as true in your model.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Selection\"),/*#__PURE__*/React.createElement(\"p\",null,\"OrganizationChart supports two selection methods; single or multiple. Selection is enabled by setting \",/*#__PURE__*/React.createElement(\"i\",null,\"selectionMode\"),\" property to the corresponding mode, defining \",/*#__PURE__*/React.createElement(\"i\",null,\"selection\"),\" property along with \",/*#__PURE__*/React.createElement(\"i\",null,\"selectionChange\"),\" callback.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<OrganizationChart value={data} selectionMode=\\\"single\\\" selection={selectedNode} onSelectionChange={event => setSelectedNode(event.data)}></OrganizationChart>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"An array of nested TreeNodes.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"selectionMode\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Defines the selection mode, valid values \\\"single\\\" and \\\"multiple\\\".\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"selection\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"A single treenode instance or an array to refer to the selections.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"nodeTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"function\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Template function that gets a node as a parameter and returns a content.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onNodeSelect\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.node: Selected node instance.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a node is selected.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onNodeUnselect\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.node: Unselected node instance.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a node is unselected.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onSelectionChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.data: New selection.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when node selection changes.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-organizationchart\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-organizationchart-table\"),/*#__PURE__*/React.createElement(\"td\",null,\"Table container of a node.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-organizationchart-lines\"),/*#__PURE__*/React.createElement(\"td\",null,\"Connector lines container.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-organizationchart-nodes\"),/*#__PURE__*/React.createElement(\"td\",null,\"Contained of node children.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-organizationchart-line-right\"),/*#__PURE__*/React.createElement(\"td\",null,\"Right side line of a node connector.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-organizationchart-line-left\"),/*#__PURE__*/React.createElement(\"td\",null,\"Left side line of a node connector.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-organizationchart-line-top\"),/*#__PURE__*/React.createElement(\"td\",null,\"Top side line of a node connector.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'OrganizationChartDemo',sources:this.sources,extFiles:this.extFiles})));}}]);return OrganizationChartDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/organizationchart/OrganizationChartDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","OrganizationChartDoc","props","sources","tabName","content","extFiles","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class OrganizationChartDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { OrganizationChart } from 'primereact/organizationchart';\r\nimport './OrganizationChartDemo.css';\r\n\r\nexport class OrganizationChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selection: []\r\n        };\r\n\r\n        this.data1 = [{\r\n            label: 'CEO',\r\n            type: 'person',\r\n            className: 'p-person',\r\n            expanded: true,\r\n            data: { name: 'Walter White', 'avatar': 'walter.jpg' },\r\n            children: [\r\n                {\r\n                    label: 'CFO',\r\n                    type: 'person',\r\n                    className: 'p-person',\r\n                    expanded: true,\r\n                    data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\r\n                    children: [{\r\n                        label: 'Tax',\r\n                        className: 'department-cfo'\r\n                    },\r\n                    {\r\n                        label: 'Legal',\r\n                        className: 'department-cfo'\r\n                    }],\r\n                },\r\n                {\r\n                    label: 'COO',\r\n                    type: 'person',\r\n                    className: 'p-person',\r\n                    expanded: true,\r\n                    data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\r\n                    children: [{\r\n                        label: 'Operations',\r\n                        className: 'department-coo'\r\n                    }]\r\n                },\r\n                {\r\n                    label: 'CTO',\r\n                    type: 'person',\r\n                    className: 'p-person',\r\n                    expanded: true,\r\n                    data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\r\n                    children: [{\r\n                        label: 'Development',\r\n                        className: 'department-cto',\r\n                        expanded: true,\r\n                        children: [{\r\n                            label: 'Analysis',\r\n                            className: 'department-cto'\r\n                        },\r\n                        {\r\n                            label: 'Front End',\r\n                            className: 'department-cto'\r\n                        },\r\n                        {\r\n                            label: 'Back End',\r\n                            className: 'department-cto'\r\n                        }]\r\n                    },\r\n                    {\r\n                        label: 'QA',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'R&D',\r\n                        className: 'department-cto'\r\n                    }]\r\n                }\r\n            ]\r\n        }];\r\n\r\n        this.data2 = [{\r\n            label: 'F.C Barcelona',\r\n            expanded: true,\r\n            children: [\r\n                {\r\n                    label: 'F.C Barcelona',\r\n                    expanded: true,\r\n                    children: [\r\n                        {\r\n                            label: 'Chelsea FC'\r\n                        },\r\n                        {\r\n                            label: 'F.C. Barcelona'\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    label: 'Real Madrid',\r\n                    expanded: true,\r\n                    children: [\r\n                        {\r\n                            label: 'Bayern Munich'\r\n                        },\r\n                        {\r\n                            label: 'Real Madrid'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }];\r\n\r\n        this.nodeTemplate = this.nodeTemplate.bind(this);\r\n    }\r\n\r\n    nodeTemplate(node) {\r\n        if (node.type === \"person\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"node-header\">{node.label}</div>\r\n                    <div className=\"node-content\">\r\n                        <img alt={node.data.avatar} src={\\`showcase/demo/images/organization/\\${node.data.avatar}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\r\n                        <div>{node.data.name}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (node.type === \"department\") {\r\n            return node.label;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"organizationchart-demo\">\r\n                <div className=\"card\">\r\n                    <h5>Advanced</h5>\r\n                    <OrganizationChart value={this.data1} nodeTemplate={this.nodeTemplate} selection={this.state.selection} selectionMode=\"multiple\"\r\n                        onSelectionChange={event => this.setState({ selection: event.data })} className=\"company\"></OrganizationChart>\r\n\r\n                    <h5>Basic</h5>\r\n                    <OrganizationChart value={this.data2}></OrganizationChart>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { OrganizationChart } from 'primereact/organizationchart';\r\nimport './OrganizationChartDemo.css';\r\n\r\nconst OrganizationChartDemo = () => {\r\n    const [selection, setSelection] = useState([]);\r\n    const data1 = [{\r\n        label: 'CEO',\r\n        type: 'person',\r\n        className: 'p-person',\r\n        expanded: true,\r\n        data: { name: 'Walter White', 'avatar': 'walter.jpg' },\r\n        children: [\r\n            {\r\n                label: 'CFO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\r\n                children: [{\r\n                    label: 'Tax',\r\n                    className: 'department-cfo'\r\n                },\r\n                {\r\n                    label: 'Legal',\r\n                    className: 'department-cfo'\r\n                }],\r\n            },\r\n            {\r\n                label: 'COO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\r\n                children: [{\r\n                    label: 'Operations',\r\n                    className: 'department-coo'\r\n                }]\r\n            },\r\n            {\r\n                label: 'CTO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\r\n                children: [{\r\n                    label: 'Development',\r\n                    className: 'department-cto',\r\n                    expanded: true,\r\n                    children: [{\r\n                        label: 'Analysis',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'Front End',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'Back End',\r\n                        className: 'department-cto'\r\n                    }]\r\n                },\r\n                {\r\n                    label: 'QA',\r\n                    className: 'department-cto'\r\n                },\r\n                {\r\n                    label: 'R&D',\r\n                    className: 'department-cto'\r\n                }]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    const data2 = [{\r\n        label: 'F.C Barcelona',\r\n        expanded: true,\r\n        children: [\r\n            {\r\n                label: 'F.C Barcelona',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Chelsea FC'\r\n                    },\r\n                    {\r\n                        label: 'F.C. Barcelona'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Real Madrid',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Bayern Munich'\r\n                    },\r\n                    {\r\n                        label: 'Real Madrid'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    const nodeTemplate = (node) => {\r\n        if (node.type === \"person\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"node-header\">{node.label}</div>\r\n                    <div className=\"node-content\">\r\n                        <img alt={node.data.avatar} src={\\`showcase/demo/images/organization/\\${node.data.avatar}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\r\n                        <div>{node.data.name}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (node.type === \"department\") {\r\n            return node.label;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"organizationchart-demo\">\r\n            <div className=\"card\">\r\n                <h5>Advanced</h5>\r\n                <OrganizationChart value={data1} nodeTemplate={nodeTemplate} selection={selection} selectionMode=\"multiple\"\r\n                    onSelectionChange={event => setSelection(event.data)} className=\"company\"></OrganizationChart>\r\n\r\n                <h5>Basic</h5>\r\n                <OrganizationChart value={data2}></OrganizationChart>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { OrganizationChart } from 'primereact/organizationchart';\r\nimport './OrganizationChartDemo.css';\r\n\r\nconst OrganizationChartDemo = () => {\r\n    const [selection, setSelection] = useState([]);\r\n    const data1 = [{\r\n        label: 'CEO',\r\n        type: 'person',\r\n        className: 'p-person',\r\n        expanded: true,\r\n        data: { name: 'Walter White', 'avatar': 'walter.jpg' },\r\n        children: [\r\n            {\r\n                label: 'CFO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\r\n                children: [{\r\n                    label: 'Tax',\r\n                    className: 'department-cfo'\r\n                },\r\n                {\r\n                    label: 'Legal',\r\n                    className: 'department-cfo'\r\n                }],\r\n            },\r\n            {\r\n                label: 'COO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\r\n                children: [{\r\n                    label: 'Operations',\r\n                    className: 'department-coo'\r\n                }]\r\n            },\r\n            {\r\n                label: 'CTO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\r\n                children: [{\r\n                    label: 'Development',\r\n                    className: 'department-cto',\r\n                    expanded: true,\r\n                    children: [{\r\n                        label: 'Analysis',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'Front End',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'Back End',\r\n                        className: 'department-cto'\r\n                    }]\r\n                },\r\n                {\r\n                    label: 'QA',\r\n                    className: 'department-cto'\r\n                },\r\n                {\r\n                    label: 'R&D',\r\n                    className: 'department-cto'\r\n                }]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    const data2 = [{\r\n        label: 'F.C Barcelona',\r\n        expanded: true,\r\n        children: [\r\n            {\r\n                label: 'F.C Barcelona',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Chelsea FC'\r\n                    },\r\n                    {\r\n                        label: 'F.C. Barcelona'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Real Madrid',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Bayern Munich'\r\n                    },\r\n                    {\r\n                        label: 'Real Madrid'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    const nodeTemplate = (node) => {\r\n        if (node.type === \"person\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"node-header\">{node.label}</div>\r\n                    <div className=\"node-content\">\r\n                        <img alt={node.data.avatar} src={\\`showcase/demo/images/organization/\\${node.data.avatar}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\r\n                        <div>{node.data.name}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (node.type === \"department\") {\r\n            return node.label;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"organizationchart-demo\">\r\n            <div className=\"card\">\r\n                <h5>Advanced</h5>\r\n                <OrganizationChart value={data1} nodeTemplate={nodeTemplate} selection={selection} selectionMode=\"multiple\"\r\n                    onSelectionChange={event => setSelection(event.data)} className=\"company\"></OrganizationChart>\r\n\r\n                <h5>Basic</h5>\r\n                <OrganizationChart value={data2}></OrganizationChart>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/OrganizationChartDemo.css': {\r\n                content: `\r\n.organizationchart-demo .p-organizationchart .p-person {\r\n    padding: 0;\r\n    border: 0 none;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .node-header, .organizationchart-demo .p-organizationchart .node-content {\r\n    padding: .5em .7rem;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .node-header {\r\n    background-color: #495ebb;\r\n    color: #ffffff;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .node-content {\r\n    text-align: center;\r\n    border: 1px solid #495ebb;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .node-content img {\r\n    border-radius: 50%;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .department-cfo {\r\n    background-color: #7247bc;\r\n    color: #ffffff;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .department-coo {\r\n    background-color: #a534b6;\r\n    color: #ffffff;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .department-cto {\r\n    background-color: #e9286f;\r\n    color: #ffffff;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { OrganizationChart } from 'primereact/organizationchart';\r\n`}\r\n</CodeHighlight>\r\n\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>OrganizationChart requires a model of TreeNode as its value.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nexport const OrganizationChartDemo = () => {\r\n\r\n    const data = [{\r\n        label: 'F.C Barcelona',\r\n        expanded: true,\r\n        children: [\r\n            {\r\n                label: 'F.C Barcelona',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Chelsea FC'\r\n                    },\r\n                    {\r\n                        label: 'F.C. Barcelona'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Real Madrid',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Bayern Munich'\r\n                    },\r\n                    {\r\n                        label: 'Real Madrid'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    return (\r\n        <OrganizationChart value={data}></OrganizationChart>\r\n    )\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Templating</h5>\r\n                        <p>Label of the treenode is displayed inside the node content by default and templating enables further customization.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<OrganizationChart value={data} nodeTemplate={nodeTemplate}></OrganizationChart>\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\n\r\nconst nodeTemplate = (node) => {\r\n    if (node.type === \"person\") {\r\n        return (\r\n            <div>\r\n                <div className=\"node-header\">{node.label}</div>\r\n                    <div className=\"node-content\">\r\n                        <img alt={node.data.avatar} src={\\`showcase/demo/images/organization/\\${node.data.avatar}\\`} style={{ width: '32px' }}/>\r\n                    <div>{node.data.name}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (node.type === \"department\") {\r\n        return node.label;\r\n    }\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Expand/Collapse State</h5>\r\n                        <p>In order to display a treenode as expanded by default, set \"expanded\" property as true in your model.</p>\r\n\r\n                        <h5>Selection</h5>\r\n                        <p>OrganizationChart supports two selection methods; single or multiple. Selection is enabled by setting <i>selectionMode</i> property to the corresponding mode, defining <i>selection</i> property along with <i>selectionChange</i> callback.</p>\r\n<CodeHighlight>\r\n{`\r\n<OrganizationChart value={data} selectionMode=\"single\" selection={selectedNode} onSelectionChange={event => setSelectedNode(event.data)}></OrganizationChart>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>value</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of nested TreeNodes.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>selectionMode</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Defines the selection mode, valid values \"single\" and \"multiple\".</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>selection</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>A single treenode instance or an array to refer to the selections.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>nodeTemplate</td>\r\n                                        <td>function</td>\r\n                                        <td>null</td>\r\n                                        <td>Template function that gets a node as a parameter and returns a content.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onNodeSelect</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                    event.node: Selected node instance.</td>\r\n                                        <td>Callback to invoke when a node is selected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onNodeUnselect</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                    event.node: Unselected node instance.</td>\r\n                                        <td>Callback to invoke when a node is unselected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onSelectionChange</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                    event.data: New selection.</td>\r\n                                        <td>Callback to invoke when node selection changes.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-organizationchart</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-table</td>\r\n                                        <td>Table container of a node.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-lines</td>\r\n                                        <td>Connector lines container.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-nodes</td>\r\n                                        <td>Contained of node children.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-line-right</td>\r\n                                        <td>Right side line of a node connector.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-line-left</td>\r\n                                        <td>Left side line of a node connector.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-line-top</td>\r\n                                        <td>Top side line of a node connector.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'OrganizationChartDemo', sources: this.sources, extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}