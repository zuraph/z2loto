{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\button\\\\Button.js\",\n    _this2 = this;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport { tip } from '../tooltip/Tooltip';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { Ripple } from '../ripple/Ripple';\nexport var ButtonComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ButtonComponent, _Component);\n\n  var _super = _createSuper(ButtonComponent);\n\n  function ButtonComponent() {\n    _classCallCheck(this, ButtonComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ButtonComponent, [{\n    key: \"getElementRef\",\n    value: function getElementRef(el) {\n      this.element = el;\n\n      if (this.props.forwardRef) {\n        if (ObjectUtils.isFunction(this.props.forwardRef)) {\n          return this.props.forwardRef(el);\n        } else {\n          return this.props.forwardRef;\n        }\n      }\n\n      return this.element;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.element,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      if (this.props.icon) {\n        var className = classNames(this.props.icon, 'p-c', {\n          'p-button-icon-left': this.props.iconPos === 'left' && this.props.label,\n          'p-button-icon-right': this.props.iconPos === 'right' && this.props.label,\n          'p-button-icon-top': this.props.iconPos === 'top' && this.props.label,\n          'p-button-icon-bottom': this.props.iconPos === 'bottom' && this.props.label\n        });\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: className,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      if (this.props.label) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-button-label p-c\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 20\n          }\n        }, this.props.label);\n      }\n\n      return !this.props.children && !this.props.label && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-button-label p-c\",\n        dangerouslySetInnerHTML: {\n          __html: \"&nbsp;\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 61\n        }\n      });\n    }\n  }, {\n    key: \"renderBadge\",\n    value: function renderBadge() {\n      if (this.props.badge) {\n        var badgeClassName = classNames('p-badge', this.props.badgeClassName);\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: badgeClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 20\n          }\n        }, this.props.badge);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var className = classNames('p-button p-component', this.props.className, {\n        'p-button-icon-only': this.props.icon && !this.props.label,\n        'p-button-vertical': (this.props.iconPos === 'top' || this.props.iconPos === 'bottom') && this.label,\n        'p-disabled': this.props.disabled\n      });\n      var icon = this.renderIcon();\n      var label = this.renderLabel();\n      var badge = this.renderBadge();\n      var buttonProps = ObjectUtils.findDiffKeys(this.props, ButtonComponent.defaultProps);\n      return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n        ref: function ref(el) {\n          return _this.getElementRef(el);\n        }\n      }, buttonProps, {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }), icon, label, this.props.children, badge, /*#__PURE__*/React.createElement(Ripple, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ButtonComponent;\n}(Component);\nButtonComponent.defaultProps = {\n  label: null,\n  icon: null,\n  iconPos: 'left',\n  badge: null,\n  badgeClassName: null,\n  tooltip: null,\n  tooltipOptions: null,\n  forwardRef: null\n};\nButtonComponent.propTypes = {\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  iconPos: PropTypes.string,\n  badge: PropTypes.string,\n  badgeClassName: PropTypes.string,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  forwardRef: PropTypes.any\n};\nexport var Button = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(ButtonComponent, Object.assign({\n    forwardRef: ref\n  }, props, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 56\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/button/Button.js"],"names":["React","Component","PropTypes","classNames","tip","ObjectUtils","Ripple","ButtonComponent","el","element","props","forwardRef","isFunction","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","target","options","icon","className","iconPos","label","children","__html","badge","badgeClassName","disabled","renderIcon","renderLabel","renderBadge","buttonProps","findDiffKeys","defaultProps","getElementRef","propTypes","string","object","any","Button","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { Ripple } from '../ripple/Ripple';\r\n\r\nexport class ButtonComponent extends Component {\r\n\r\n    static defaultProps = {\r\n        label: null,\r\n        icon: null,\r\n        iconPos: 'left',\r\n        badge: null,\r\n        badgeClassName: null,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        forwardRef: null\r\n    }\r\n\r\n    static propTypes = {\r\n        label: PropTypes.string,\r\n        icon: PropTypes.string,\r\n        iconPos: PropTypes.string,\r\n        badge: PropTypes.string,\r\n        badgeClassName: PropTypes.string,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        forwardRef: PropTypes.any\r\n    };\r\n\r\n    getElementRef(el) {\r\n        this.element = el;\r\n\r\n        if (this.props.forwardRef) {\r\n            if (ObjectUtils.isFunction(this.props.forwardRef)) {\r\n                return this.props.forwardRef(el);\r\n            }\r\n            else {\r\n                return this.props.forwardRef;\r\n            }\r\n        }\r\n\r\n        return this.element;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.element,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    renderIcon() {\r\n        if (this.props.icon) {\r\n            let className = classNames(this.props.icon, 'p-c', {\r\n                'p-button-icon-left': this.props.iconPos === 'left' && this.props.label,\r\n                'p-button-icon-right': this.props.iconPos === 'right' && this.props.label,\r\n                'p-button-icon-top': this.props.iconPos === 'top' && this.props.label,\r\n                'p-button-icon-bottom': this.props.iconPos === 'bottom' && this.props.label\r\n            });\r\n\r\n            return (\r\n                <span className={className}></span>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderLabel() {\r\n        if (this.props.label) {\r\n            return <span className=\"p-button-label p-c\">{this.props.label}</span>;\r\n        }\r\n\r\n        return !this.props.children && !this.props.label && <span className=\"p-button-label p-c\" dangerouslySetInnerHTML={{ __html: \"&nbsp;\" }}></span>\r\n    }\r\n\r\n    renderBadge() {\r\n        if (this.props.badge) {\r\n            const badgeClassName = classNames('p-badge', this.props.badgeClassName);\r\n\r\n            return <span className={badgeClassName}>{this.props.badge}</span>\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-button p-component', this.props.className, {\r\n            'p-button-icon-only': this.props.icon && !this.props.label,\r\n            'p-button-vertical': (this.props.iconPos === 'top' || this.props.iconPos === 'bottom') && this.label,\r\n            'p-disabled': this.props.disabled\r\n        });\r\n        let icon = this.renderIcon();\r\n        let label = this.renderLabel();\r\n        let badge = this.renderBadge();\r\n\r\n        let buttonProps = ObjectUtils.findDiffKeys(this.props, ButtonComponent.defaultProps);\r\n\r\n        return (\r\n            <button ref={(el) => this.getElementRef(el)} {...buttonProps} className={className}>\r\n                {icon}\r\n                {label}\r\n                {this.props.children}\r\n                {badge}\r\n                <Ripple />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Button = React.forwardRef((props, ref) => <ButtonComponent forwardRef={ref} {...props} />);\r\n"]},"metadata":{},"sourceType":"module"}