{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\knob\\\\KnobDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var KnobDoc = /*#__PURE__*/function (_Component) {\n  _inherits(KnobDoc, _Component);\n\n  var _super = _createSuper(KnobDoc);\n\n  function KnobDoc(props) {\n    var _this;\n\n    _classCallCheck(this, KnobDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, {Component} from 'react';\\nimport { Knob } from 'primereact/knob';\\nimport { Button } from 'primereact/button';\\n\\nexport class KnobDemo extends Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            value: 0,\\n            value1 : 0,\\n            value2 : 50,\\n            value3 : 75,\\n            value4 : 10,\\n            value5 : 40,\\n            value6 : 60,\\n            value7 : 40,\\n            value8 : 60,\\n            value9 : 50,\\n            value10: 0,\\n            disabledIncrementBtn: false,\\n            disabledDecrementBtn: true\\n        }\\n\\n        this.increment = this.increment.bind(this);\\n        this.decrement = this.decrement.bind(this);\\n    }\\n\\n    increment() {\\n        this.setState((prevState) => {\\n            const value = prevState.value10 + 1;\\n            return {\\n                value10: value,\\n                disabledIncrementBtn: value === 100,\\n                disabledDecrementBtn: false\\n            }\\n        });\\n    }\\n\\n    decrement() {\\n        this.setState((prevState) => {\\n            const value = prevState.value10 - 1;\\n            return {\\n                value10: value,\\n                disabledIncrementBtn: false,\\n                disabledDecrementBtn: value === 0\\n            }\\n        });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                     <div className=\\\"p-grid p-formgrid p-text-center\\\">\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5>Basic</h5>\\n                            <Knob value={this.state.value1} onChange={(e)=>this.setState({value1: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5>Readonly</h5>\\n                            <Knob value={this.state.value2} readOnly/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5>Disabled</h5>\\n                            <Knob value={this.state.value3} disabled/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Min/Max</h5>\\n                            <Knob value={this.state.value4} min={-50} max={50} onChange={(e)=>this.setState({value4: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Step</h5>\\n                            <Knob value={this.state.value5} step={10} onChange={(e)=>this.setState({value5: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Template</h5>\\n                            <Knob value={this.state.value6} valueTemplate={\\\"{value}%\\\"} onChange={(e)=>this.setState({value6: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Stroke</h5>\\n                            <Knob value={this.state.value7} strokeWidth={5} onChange={(e)=>this.setState({value7: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Size</h5>\\n                            <Knob value={this.state.value8} size={200} onChange={(e)=>this.setState({value8: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Color</h5>\\n                            <Knob value={this.state.value9} valueColor={\\\"SlateGray\\\"} rangeColor={\\\"MediumTurquoise\\\"} onChange={(e)=>this.setState({value9: e.value})}/>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div className=\\\"card p-text-center\\\">\\n                    <h5>Reactive Knob</h5>\\n                    <Knob value={this.state.value10} size={150} readOnly />\\n                    <Button label=\\\"Increment\\\" onClick={this.increment} className=\\\"p-mr-2\\\" disabled={this.state.disabledIncrementBtn} />\\n                    <Button label=\\\"Decrement\\\" onClick={this.decrement} disabled={this.state.disabledDecrementBtn} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { Knob } from 'primereact/knob';\\nimport { Button } from 'primereact/button';\\n\\nconst KnobDemo = () => {\\n    const [value, setValue] = useState(0);\\n    const [value1, setValue1] = useState(0);\\n    const [value2, setValue2] = useState(50);\\n    const [value3, setValue3] = useState(75);\\n    const [value4, setValue4] = useState(10);\\n    const [value5, setValue5] = useState(40);\\n    const [value6, setValue6] = useState(60);\\n    const [value7, setValue7] = useState(40);\\n    const [value8, setValue8] = useState(60);\\n    const [value9, setValue9] = useState(50);\\n    const [value10, setValue10] = useState(0);\\n    const [disabledIncrementBtn, setDisabledIncrementBtn] = useState(false);\\n    const [disabledDecrementBtn, setDisabledDecrementBtn] = useState(true);\\n\\n    const increment = () => {\\n        const value = value10 + 1;\\n        setValue10(value);\\n        setDisabledIncrementBtn(value === 100);\\n        setDisabledDecrementBtn(false);\\n    }\\n\\n    const decrement = () => {\\n        const value = value10 - 1;\\n        setValue10(value);\\n        setDisabledIncrementBtn(false);\\n        setDisabledDecrementBtn(value === 0);\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <div className=\\\"p-grid p-formgrid p-text-center\\\">\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Basic</h5>\\n                        <Knob value={value1} onChange={(e) => setValue1(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Readonly</h5>\\n                        <Knob value={value2} readOnly/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Disabled</h5>\\n                        <Knob value={value3} disabled/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Min/Max</h5>\\n                        <Knob value={value4} min={-50} max={50} onChange={(e) =>  setValue4(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Step</h5>\\n                        <Knob value={value5} step={10} onChange={(e) => setValue5(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Template</h5>\\n                        <Knob value={value6} valueTemplate={\\\"{value}%\\\"} onChange={(e) => setValue6(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Stroke</h5>\\n                        <Knob value={value7} strokeWidth={5} onChange={(e) => setValue7(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Size</h5>\\n                        <Knob value={value8} size={200} onChange={(e) => setValue8(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Color</h5>\\n                        <Knob value={value9} valueColor={\\\"SlateGray\\\"} rangeColor={\\\"MediumTurquoise\\\"} onChange={(e) => setValue9(e.value)}/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div className=\\\"card p-text-center\\\">\\n                <h5>Reactive Knob</h5>\\n                <Knob value={value10} size={150} readOnly />\\n                <Button label=\\\"Increment\\\" onClick={increment} className=\\\"p-mr-2\\\" disabled={disabledIncrementBtn} />\\n                <Button label=\\\"Decrement\\\" onClick={decrement} disabled={disabledDecrementBtn} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { Knob } from 'primereact/knob';\\nimport { Button } from 'primereact/button';\\n\\nconst KnobDemo = () => {\\n    const [value, setValue] = useState(0);\\n    const [value1, setValue1] = useState(0);\\n    const [value2, setValue2] = useState(50);\\n    const [value3, setValue3] = useState(75);\\n    const [value4, setValue4] = useState(10);\\n    const [value5, setValue5] = useState(40);\\n    const [value6, setValue6] = useState(60);\\n    const [value7, setValue7] = useState(40);\\n    const [value8, setValue8] = useState(60);\\n    const [value9, setValue9] = useState(50);\\n    const [value10, setValue10] = useState(0);\\n    const [disabledIncrementBtn, setDisabledIncrementBtn] = useState(false);\\n    const [disabledDecrementBtn, setDisabledDecrementBtn] = useState(true);\\n\\n    const increment = () => {\\n        const value = value10 + 1;\\n        setValue10(value);\\n        setDisabledIncrementBtn(value === 100);\\n        setDisabledDecrementBtn(false);\\n    }\\n\\n    const decrement = () => {\\n        const value = value10 - 1;\\n        setValue10(value);\\n        setDisabledIncrementBtn(false);\\n        setDisabledDecrementBtn(value === 0);\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <div className=\\\"p-grid p-formgrid p-text-center\\\">\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Basic</h5>\\n                        <Knob value={value1} onChange={(e) => setValue1(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Readonly</h5>\\n                        <Knob value={value2} readOnly/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Disabled</h5>\\n                        <Knob value={value3} disabled/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Min/Max</h5>\\n                        <Knob value={value4} min={-50} max={50} onChange={(e) => setValue4(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Step</h5>\\n                        <Knob value={value5} step={10} onChange={(e) => setValue5(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Template</h5>\\n                        <Knob value={value6} valueTemplate={\\\"{value}%\\\"} onChange={(e) => setValue6(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Stroke</h5>\\n                        <Knob value={value7} strokeWidth={5} onChange={(e) => setValue7(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Size</h5>\\n                        <Knob value={value8} size={200} onChange={(e) => setValue8(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Color</h5>\\n                        <Knob value={value9} valueColor={\\\"SlateGray\\\"} rangeColor={\\\"MediumTurquoise\\\"} onChange={(e) => setValue9(e.value)}/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div className=\\\"card p-text-center\\\">\\n                <h5>Reactive Knob</h5>\\n                <Knob value={value10} size={150} readOnly />\\n                <Button label=\\\"Increment\\\" onClick={increment} className=\\\"p-mr-2\\\" disabled={disabledIncrementBtn} />\\n                <Button label=\\\"Decrement\\\" onClick={decrement} disabled={disabledDecrementBtn} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(KnobDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }\n      }, \"\\nimport { Knob } from 'primereact/knob';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }\n      }, \"Knob is used as a controlled input with value and onChange properties.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }\n      }, \"\\n<Knob value={value} onChange={(e) => setValue(value)} />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }\n      }, \"Minimum and Maximum\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }\n      }, \"Boundaries are configured with the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 63\n        }\n      }, \"min\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 78\n        }\n      }, \"max\"), \" values whose defaults are 0 and 100 respectively.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }\n      }, \"\\n<Knob value={value} min={0} max={100} onChange={(e) => setValue(value)} />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }\n      }, \"Step\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }\n      }, \"Step factor is 1 by default and can be customized with \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 83\n        }\n      }, \"step\"), \" option.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }\n      }, \"\\n<Knob value={value} step={10} onChange={(e) => setValue(value)} />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 28\n        }\n      }, \"valueColor\"), \" defines the value color, \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 71\n        }\n      }, \"rangeColor\"), \" defines the range background and similarly \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 132\n        }\n      }, \"textColor\"), \" configures the color of the value text. In addition, \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 42\n        }\n      }, \"strokeWidth\"), \" is used to determine the width of the stroke of range and value sections.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }\n      }, \"\\n<Knob value={value} valueColor={\\\"SlateGray\\\"} rangeColor={\\\"MediumTurquoise\\\"} onChange={(e) => setValue(value)} />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }\n      }, \"Size\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }\n      }, \"Default size of the Knob is 100 pixels for width and height, use the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 97\n        }\n      }, \"size\"), \" property to customize it per your requirements.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }\n      }, \"\\n<Knob value={value} size={200} onChange={(e) => setValue(value)} />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 25\n        }\n      }, \"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 37\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 37\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 37\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 37\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 37\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 37\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 37\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 37\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 37\n        }\n      }, \"value\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 37\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 37\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 37\n        }\n      }, \"Value of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 37\n        }\n      }, \"size\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 37\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 37\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 37\n        }\n      }, \"Size of the component in pixels.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 37\n        }\n      }, \"disabled\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 37\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 37\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 37\n        }\n      }, \"When present, it specifies that the component should be disabled.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 37\n        }\n      }, \"readOnly\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 37\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 37\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 37\n        }\n      }, \"When present, it specifies that the component value cannot be edited.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 37\n        }\n      }, \"step\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 37\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 37\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 37\n        }\n      }, \"Step factor to increment/decrement the value.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 37\n        }\n      }, \"min\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 37\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 37\n        }\n      }, \"0\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 37\n        }\n      }, \"Mininum boundary value.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 37\n        }\n      }, \"max\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 37\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 37\n        }\n      }, \"100\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 37\n        }\n      }, \"Maximum boundary value.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 37\n        }\n      }, \"valueColor\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 37\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 37\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 37\n        }\n      }, \"Background of the value.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 37\n        }\n      }, \"rangeColor\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 37\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 37\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 37\n        }\n      }, \"Background color of the range.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 37\n        }\n      }, \"textColor\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 37\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 37\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 37\n        }\n      }, \"Color of the value text.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 37\n        }\n      }, \"strokeWidth\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 37\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 37\n        }\n      }, \"14\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 37\n        }\n      }, \"Width of the knob stroke.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 37\n        }\n      }, \"showValue\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 37\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 37\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 37\n        }\n      }, \"Whether the show the value inside the knob.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 37\n        }\n      }, \"valueTemplate\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 37\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 37\n        }\n      }, \"{value}\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 37\n        }\n      }, \"Template string of the value.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 37\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 37\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 37\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 37\n        }\n      }, \"onChange\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 37\n        }\n      }, \"value: New value\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 37\n        }\n      }, \"Callback to invoke when the value changes.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }\n      }, \"Following is the list of structural style classes, for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 105\n        }\n      }, \" theming\"), \" page.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 37\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 37\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 37\n        }\n      }, \"p-knob\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 37\n        }\n      }, \"Container element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 37\n        }\n      }, \"p-knob-range\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 37\n        }\n      }, \"Range element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 37\n        }\n      }, \"p-knob-value\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 37\n        }\n      }, \"Value element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 37\n        }\n      }, \"p-knob-text\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 37\n        }\n      }, \"Text element.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 25\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 25\n        }\n      }, \"None.\")), useLiveEditorTabs({\n        name: 'KnobDemo',\n        sources: this.sources\n      })));\n    }\n  }]);\n\n  return KnobDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/knob/KnobDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","KnobDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class KnobDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, {Component} from 'react';\r\nimport { Knob } from 'primereact/knob';\r\nimport { Button } from 'primereact/button';\r\n\r\nexport class KnobDemo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n            value1 : 0,\r\n            value2 : 50,\r\n            value3 : 75,\r\n            value4 : 10,\r\n            value5 : 40,\r\n            value6 : 60,\r\n            value7 : 40,\r\n            value8 : 60,\r\n            value9 : 50,\r\n            value10: 0,\r\n            disabledIncrementBtn: false,\r\n            disabledDecrementBtn: true\r\n        }\r\n\r\n        this.increment = this.increment.bind(this);\r\n        this.decrement = this.decrement.bind(this);\r\n    }\r\n\r\n    increment() {\r\n        this.setState((prevState) => {\r\n            const value = prevState.value10 + 1;\r\n            return {\r\n                value10: value,\r\n                disabledIncrementBtn: value === 100,\r\n                disabledDecrementBtn: false\r\n            }\r\n        });\r\n    }\r\n\r\n    decrement() {\r\n        this.setState((prevState) => {\r\n            const value = prevState.value10 - 1;\r\n            return {\r\n                value10: value,\r\n                disabledIncrementBtn: false,\r\n                disabledDecrementBtn: value === 0\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                     <div className=\"p-grid p-formgrid p-text-center\">\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5>Basic</h5>\r\n                            <Knob value={this.state.value1} onChange={(e)=>this.setState({value1: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5>Readonly</h5>\r\n                            <Knob value={this.state.value2} readOnly/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5>Disabled</h5>\r\n                            <Knob value={this.state.value3} disabled/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Min/Max</h5>\r\n                            <Knob value={this.state.value4} min={-50} max={50} onChange={(e)=>this.setState({value4: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Step</h5>\r\n                            <Knob value={this.state.value5} step={10} onChange={(e)=>this.setState({value5: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Template</h5>\r\n                            <Knob value={this.state.value6} valueTemplate={\"{value}%\"} onChange={(e)=>this.setState({value6: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Stroke</h5>\r\n                            <Knob value={this.state.value7} strokeWidth={5} onChange={(e)=>this.setState({value7: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Size</h5>\r\n                            <Knob value={this.state.value8} size={200} onChange={(e)=>this.setState({value8: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Color</h5>\r\n                            <Knob value={this.state.value9} valueColor={\"SlateGray\"} rangeColor={\"MediumTurquoise\"} onChange={(e)=>this.setState({value9: e.value})}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card p-text-center\">\r\n                    <h5>Reactive Knob</h5>\r\n                    <Knob value={this.state.value10} size={150} readOnly />\r\n                    <Button label=\"Increment\" onClick={this.increment} className=\"p-mr-2\" disabled={this.state.disabledIncrementBtn} />\r\n                    <Button label=\"Decrement\" onClick={this.decrement} disabled={this.state.disabledDecrementBtn} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Knob } from 'primereact/knob';\r\nimport { Button } from 'primereact/button';\r\n\r\nconst KnobDemo = () => {\r\n    const [value, setValue] = useState(0);\r\n    const [value1, setValue1] = useState(0);\r\n    const [value2, setValue2] = useState(50);\r\n    const [value3, setValue3] = useState(75);\r\n    const [value4, setValue4] = useState(10);\r\n    const [value5, setValue5] = useState(40);\r\n    const [value6, setValue6] = useState(60);\r\n    const [value7, setValue7] = useState(40);\r\n    const [value8, setValue8] = useState(60);\r\n    const [value9, setValue9] = useState(50);\r\n    const [value10, setValue10] = useState(0);\r\n    const [disabledIncrementBtn, setDisabledIncrementBtn] = useState(false);\r\n    const [disabledDecrementBtn, setDisabledDecrementBtn] = useState(true);\r\n\r\n    const increment = () => {\r\n        const value = value10 + 1;\r\n        setValue10(value);\r\n        setDisabledIncrementBtn(value === 100);\r\n        setDisabledDecrementBtn(false);\r\n    }\r\n\r\n    const decrement = () => {\r\n        const value = value10 - 1;\r\n        setValue10(value);\r\n        setDisabledIncrementBtn(false);\r\n        setDisabledDecrementBtn(value === 0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"p-grid p-formgrid p-text-center\">\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Basic</h5>\r\n                        <Knob value={value1} onChange={(e) => setValue1(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Readonly</h5>\r\n                        <Knob value={value2} readOnly/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Disabled</h5>\r\n                        <Knob value={value3} disabled/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Min/Max</h5>\r\n                        <Knob value={value4} min={-50} max={50} onChange={(e) =>  setValue4(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Step</h5>\r\n                        <Knob value={value5} step={10} onChange={(e) => setValue5(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Template</h5>\r\n                        <Knob value={value6} valueTemplate={\"{value}%\"} onChange={(e) => setValue6(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Stroke</h5>\r\n                        <Knob value={value7} strokeWidth={5} onChange={(e) => setValue7(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Size</h5>\r\n                        <Knob value={value8} size={200} onChange={(e) => setValue8(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Color</h5>\r\n                        <Knob value={value9} valueColor={\"SlateGray\"} rangeColor={\"MediumTurquoise\"} onChange={(e) => setValue9(e.value)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card p-text-center\">\r\n                <h5>Reactive Knob</h5>\r\n                <Knob value={value10} size={150} readOnly />\r\n                <Button label=\"Increment\" onClick={increment} className=\"p-mr-2\" disabled={disabledIncrementBtn} />\r\n                <Button label=\"Decrement\" onClick={decrement} disabled={disabledDecrementBtn} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Knob } from 'primereact/knob';\r\nimport { Button } from 'primereact/button';\r\n\r\nconst KnobDemo = () => {\r\n    const [value, setValue] = useState(0);\r\n    const [value1, setValue1] = useState(0);\r\n    const [value2, setValue2] = useState(50);\r\n    const [value3, setValue3] = useState(75);\r\n    const [value4, setValue4] = useState(10);\r\n    const [value5, setValue5] = useState(40);\r\n    const [value6, setValue6] = useState(60);\r\n    const [value7, setValue7] = useState(40);\r\n    const [value8, setValue8] = useState(60);\r\n    const [value9, setValue9] = useState(50);\r\n    const [value10, setValue10] = useState(0);\r\n    const [disabledIncrementBtn, setDisabledIncrementBtn] = useState(false);\r\n    const [disabledDecrementBtn, setDisabledDecrementBtn] = useState(true);\r\n\r\n    const increment = () => {\r\n        const value = value10 + 1;\r\n        setValue10(value);\r\n        setDisabledIncrementBtn(value === 100);\r\n        setDisabledDecrementBtn(false);\r\n    }\r\n\r\n    const decrement = () => {\r\n        const value = value10 - 1;\r\n        setValue10(value);\r\n        setDisabledIncrementBtn(false);\r\n        setDisabledDecrementBtn(value === 0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"p-grid p-formgrid p-text-center\">\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Basic</h5>\r\n                        <Knob value={value1} onChange={(e) => setValue1(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Readonly</h5>\r\n                        <Knob value={value2} readOnly/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Disabled</h5>\r\n                        <Knob value={value3} disabled/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Min/Max</h5>\r\n                        <Knob value={value4} min={-50} max={50} onChange={(e) => setValue4(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Step</h5>\r\n                        <Knob value={value5} step={10} onChange={(e) => setValue5(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Template</h5>\r\n                        <Knob value={value6} valueTemplate={\"{value}%\"} onChange={(e) => setValue6(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Stroke</h5>\r\n                        <Knob value={value7} strokeWidth={5} onChange={(e) => setValue7(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Size</h5>\r\n                        <Knob value={value8} size={200} onChange={(e) => setValue8(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Color</h5>\r\n                        <Knob value={value9} valueColor={\"SlateGray\"} rangeColor={\"MediumTurquoise\"} onChange={(e) => setValue9(e.value)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card p-text-center\">\r\n                <h5>Reactive Knob</h5>\r\n                <Knob value={value10} size={150} readOnly />\r\n                <Button label=\"Increment\" onClick={increment} className=\"p-mr-2\" disabled={disabledIncrementBtn} />\r\n                <Button label=\"Decrement\" onClick={decrement} disabled={disabledDecrementBtn} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n                        <CodeHighlight lang=\"js\">\r\n                            {`\r\nimport { Knob } from 'primereact/knob';\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Knob is used as a controlled input with value and onChange properties.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Minimum and Maximum</h5>\r\n                        <p>Boundaries are configured with the <i>min</i> and <i>max</i> values whose defaults are 0 and 100 respectively.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} min={0} max={100} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Step</h5>\r\n                        <p>Step factor is 1 by default and can be customized with <i>step</i> option.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} step={10} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p><i>valueColor</i> defines the value color, <i>rangeColor</i> defines the range background and similarly <i>textColor</i> configures the color of the value text.\r\n                            In addition, <i>strokeWidth</i> is used to determine the width of the stroke of range and value sections.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} valueColor={\"SlateGray\"} rangeColor={\"MediumTurquoise\"} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Size</h5>\r\n                        <p>Default size of the Knob is 100 pixels for width and height, use the <i>size</i> property to customize it per your requirements.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} size={200} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <p>Any property as style and class are passed to the main container element. Following are the\r\n                            additional properties to configure the component.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Type</th>\r\n                                    <th>Default</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>id</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Unique identifier of the element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>value</td>\r\n                                    <td>number</td>\r\n                                    <td>null</td>\r\n                                    <td>Value of the component.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>size</td>\r\n                                    <td>number</td>\r\n                                    <td>100</td>\r\n                                    <td>Size of the component in pixels.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>disabled</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>When present, it specifies that the component should be disabled.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>readOnly</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>When present, it specifies that the component value cannot be edited.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>step</td>\r\n                                    <td>number</td>\r\n                                    <td>null</td>\r\n                                    <td>Step factor to increment/decrement the value.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>min</td>\r\n                                    <td>number</td>\r\n                                    <td>0</td>\r\n                                    <td>Mininum boundary value.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>max</td>\r\n                                    <td>number</td>\r\n                                    <td>100</td>\r\n                                    <td>Maximum boundary value.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>valueColor</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Background of the value.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>rangeColor</td>\r\n                                    <td>number</td>\r\n                                    <td>null</td>\r\n                                    <td>Background color of the range.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>textColor</td>\r\n                                    <td>number</td>\r\n                                    <td>null</td>\r\n                                    <td>Color of the value text.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>strokeWidth</td>\r\n                                    <td>number</td>\r\n                                    <td>14</td>\r\n                                    <td>Width of the knob stroke.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>showValue</td>\r\n                                    <td>boolean</td>\r\n                                    <td>true</td>\r\n                                    <td>Whether the show the value inside the knob.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>valueTemplate</td>\r\n                                    <td>string</td>\r\n                                    <td>&#123;value&#125;</td>\r\n                                    <td>Template string of the value.</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Parameters</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>onChange</td>\r\n                                    <td>value: New value</td>\r\n                                    <td>Callback to invoke when the value changes.</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.\r\n                        </p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Element</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>p-knob</td>\r\n                                    <td>Container element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-knob-range</td>\r\n                                    <td>Range element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-knob-value</td>\r\n                                    <td>Value element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-knob-text</td>\r\n                                    <td>Text element.</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'KnobDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}