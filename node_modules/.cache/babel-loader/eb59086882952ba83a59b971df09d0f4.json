{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\datatable\\\\DataTableRowGroupDemo.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from '../../components/datatable/DataTable';\nimport { Column } from '../../components/column/Column';\nimport { Toast } from '../../components/toast/Toast';\nimport { CustomerService } from '../service/CustomerService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport './DataTableDemo.scss';\nexport var DataTableRowGroupDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableRowGroupDemo, _Component);\n\n  var _super = _createSuper(DataTableRowGroupDemo);\n\n  function DataTableRowGroupDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableRowGroupDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      customers: [],\n      expandedRowGroups: []\n    };\n    _this.customerService = new CustomerService();\n    _this.headerTemplate = _this.headerTemplate.bind(_assertThisInitialized(_this));\n    _this.footerTemplate = _this.footerTemplate.bind(_assertThisInitialized(_this));\n    _this.countryBodyTemplate = _this.countryBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.statusBodyTemplate = _this.statusBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.representativeBodyTemplate = _this.representativeBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.onRowGroupExpand = _this.onRowGroupExpand.bind(_assertThisInitialized(_this));\n    _this.onRowGroupCollapse = _this.onRowGroupCollapse.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataTableRowGroupDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.customerService.getCustomersMedium().then(function (data) {\n        return _this2.setState({\n          customers: data\n        });\n      });\n    }\n  }, {\n    key: \"headerTemplate\",\n    value: function headerTemplate(data) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: data.representative.name,\n        src: \"showcase/demo/images/avatar/\".concat(data.representative.image),\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        width: \"32\",\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"image-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, data.representative.name));\n    }\n  }, {\n    key: \"footerTemplate\",\n    value: function footerTemplate(data) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: \"4\",\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, \"Total Customers\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, this.calculateCustomerTotal(data.representative.name)));\n    }\n  }, {\n    key: \"countryBodyTemplate\",\n    value: function countryBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: rowData.country.name,\n        src: \"showcase/demo/images/flag_placeholder.png\",\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        className: \"flag flag-\".concat(rowData.country.code),\n        width: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"image-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, rowData.country.name));\n    }\n  }, {\n    key: \"statusBodyTemplate\",\n    value: function statusBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"customer-badge status-\".concat(rowData.status),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }\n      }, rowData.status);\n    }\n  }, {\n    key: \"representativeBodyTemplate\",\n    value: function representativeBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: rowData.representative.name,\n        src: \"showcase/demo/images/avatar/\".concat(rowData.representative.image),\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        width: \"32\",\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"image-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, rowData.representative.name));\n    }\n  }, {\n    key: \"onRowGroupExpand\",\n    value: function onRowGroupExpand(event) {\n      this.toast.show({\n        severity: 'info',\n        summary: 'Row Group Expanded',\n        detail: 'Value: ' + event.data.representative.name,\n        life: 3000\n      });\n    }\n  }, {\n    key: \"onRowGroupCollapse\",\n    value: function onRowGroupCollapse(event) {\n      this.toast.show({\n        severity: 'success',\n        summary: 'Row Group Collapsed',\n        detail: 'Value: ' + event.data.representative.name,\n        life: 3000\n      });\n    }\n  }, {\n    key: \"calculateCustomerTotal\",\n    value: function calculateCustomerTotal(name) {\n      var total = 0;\n\n      if (this.state.customers) {\n        var _iterator = _createForOfIteratorHelper(this.state.customers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var customer = _step.value;\n\n            if (customer.representative.name === name) {\n              total++;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, \"DataTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 39\n        }\n      }, \"Row Grouping\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, \"Rows can either be grouped by a separate grouping row or using rowspan.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation datatable-rowgroup-demo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        ref: function ref(el) {\n          return _this3.toast = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, \"Subheader Grouping\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"Group customers by their representative.\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.customers,\n        rowGroupMode: \"subheader\",\n        groupField: \"representative.name\",\n        sortMode: \"single\",\n        sortField: \"representative.name\",\n        sortOrder: 1,\n        rowGroupHeaderTemplate: this.headerTemplate,\n        rowGroupFooterTemplate: this.footerTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"representative.name\",\n        header: \"Representative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"country\",\n        header: \"Country\",\n        body: this.countryBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"company\",\n        header: \"Company\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"status\",\n        header: \"Status\",\n        body: this.statusBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"date\",\n        header: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, \"Expandable Row Groups\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, \"Group customers by their representative.\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.customers,\n        rowGroupMode: \"subheader\",\n        groupField: \"representative.name\",\n        sortMode: \"single\",\n        sortField: \"representative.name\",\n        sortOrder: 1,\n        expandableRowGroups: true,\n        expandedRows: this.state.expandedRows,\n        onRowToggle: function onRowToggle(e) {\n          return _this3.setState({\n            expandedRows: e.data\n          });\n        },\n        onRowExpand: this.onRowGroupExpand,\n        onRowCollapse: this.onRowGroupCollapse,\n        rowGroupHeaderTemplate: this.headerTemplate,\n        rowGroupFooterTemplate: this.footerTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"representative.name\",\n        header: \"Representative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"country\",\n        header: \"Country\",\n        body: this.countryBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"company\",\n        header: \"Company\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"status\",\n        header: \"Status\",\n        body: this.statusBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"date\",\n        header: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }, \"RowSpan Grouping\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.customers,\n        rowGroupMode: \"rowspan\",\n        groupField: \"representative.name\",\n        sortMode: \"single\",\n        sortField: \"representative.name\",\n        sortOrder: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        header: \"#\",\n        headerStyle: {\n          width: '3em'\n        },\n        body: function body(data, props) {\n          return props.rowIndex + 1;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"representative.name\",\n        header: \"Representative\",\n        body: this.representativeBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"country\",\n        header: \"Country\",\n        body: this.countryBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"company\",\n        header: \"Company\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"status\",\n        header: \"Status\",\n        body: this.statusBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"date\",\n        header: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(DataTableColGroupDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataTableRowGroupDemo;\n}(Component);\nexport var DataTableColGroupDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataTableColGroupDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataTableColGroupDemoDoc);\n\n  function DataTableColGroupDemoDoc(props) {\n    var _this4;\n\n    _classCallCheck(this, DataTableColGroupDemoDoc);\n\n    _this4 = _super2.call(this, props);\n    _this4.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport { CustomerService } from '../service/CustomerService';\\nimport './DataTableDemo.css';\\n\\nexport class DataTableRowGroupDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            customers: [],\\n            expandedRowGroups: []\\n        };\\n\\n        this.customerService = new CustomerService();\\n        this.headerTemplate = this.headerTemplate.bind(this);\\n        this.footerTemplate = this.footerTemplate.bind(this);\\n        this.countryBodyTemplate = this.countryBodyTemplate.bind(this);\\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\\n        this.representativeBodyTemplate = this.representativeBodyTemplate.bind(this);\\n        this.onRowGroupExpand = this.onRowGroupExpand.bind(this);\\n        this.onRowGroupCollapse = this.onRowGroupCollapse.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\\n    }\\n\\n    headerTemplate(data) {\\n        return (\\n            <React.Fragment>\\n                <img alt={data.representative.name} src={`showcase/demo/images/avatar/${data.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{data.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    footerTemplate(data) {\\n        return (\\n            <React.Fragment>\\n                <td colSpan=\\\"4\\\" style={{ textAlign: 'right' }}>Total Customers</td>\\n                <td>{this.calculateCustomerTotal(data.representative.name)}</td>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    countryBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    statusBodyTemplate(rowData) {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    representativeBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    onRowGroupExpand(event) {\\n        this.toast.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    onRowGroupCollapse(event) {\\n        this.toast.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    calculateCustomerTotal(name) {\\n        let total = 0;\\n\\n        if (this.state.customers) {\\n            for (let customer of this.state.customers) {\\n                if (customer.representative.name === name) {\\n                    total++;\\n                }\\n            }\\n        }\\n\\n        return total;\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"datatable-rowgroup-demo\\\">\\n                <Toast ref={(el) => this.toast = el}></Toast>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Subheader Grouping</h5>\\n                    <p>Group customers by their representative.</p>\\n                    <DataTable value={this.state.customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                        sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                        rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\\n                        <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"country\\\" header=\\\"Country\\\" body={this.countryBodyTemplate}></Column>\\n                        <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate}></Column>\\n                        <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Expandable Row Groups</h5>\\n                    <p>Group customers by their representative.</p>\\n                    <DataTable value={this.state.customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                        sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                        expandableRowGroups expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\\n                        onRowExpand={this.onRowGroupExpand} onRowCollapse={this.onRowGroupCollapse}\\n                        rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\\n                        <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"country\\\" header=\\\"Country\\\" body={this.countryBodyTemplate}></Column>\\n                        <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate}></Column>\\n                        <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>RowSpan Grouping</h5>\\n                    <DataTable value={this.state.customers} rowGroupMode=\\\"rowspan\\\" groupField=\\\"representative.name\\\"\\n                        sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}>\\n                        <Column header=\\\"#\\\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\\n                        <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={this.representativeBodyTemplate}></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"country\\\" header=\\\"Country\\\" body={this.countryBodyTemplate}></Column>\\n                        <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                        <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusBodyTemplate}></Column>\\n                        <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport { CustomerService } from '../service/CustomerService';\\nimport './DataTableDemo.css';\\n\\nconst DataTableRowGroupDemo = () => {\\n    const [customers, setCustomers] = useState([]);\\n    const [expandedRows, setExpandedRows] = useState([]);\\n    const toast = useRef(null);\\n    const customerService = new CustomerService();\\n\\n    useEffect(() => {\\n        customerService.getCustomersMedium().then(data => setCustomers(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const headerTemplate = (data) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={data.representative.name} src={`showcase/demo/images/avatar/${data.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{data.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const footerTemplate = (data) => {\\n        return (\\n            <React.Fragment>\\n                <td colSpan=\\\"4\\\" style={{ textAlign: 'right' }}>Total Customers</td>\\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const countryBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    const representativeBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    const onRowGroupExpand = (event) => {\\n        toast.current.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    const onRowGroupCollapse = (event) => {\\n        toast.current.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    const calculateCustomerTotal = (name) => {\\n        let total = 0;\\n\\n        if (customers) {\\n            for (let customer of customers) {\\n                if (customer.representative.name === name) {\\n                    total++;\\n                }\\n            }\\n        }\\n\\n        return total;\\n    }\\n\\n    return (\\n        <div className=\\\"datatable-rowgroup-demo\\\">\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Subheader Grouping</h5>\\n                <p>Group customers by their representative.</p>\\n                <DataTable value={customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Expandable Row Groups</h5>\\n                <p>Group customers by their representative.</p>\\n                <DataTable value={customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\\n                    onRowExpand={onRowGroupExpand} onRowCollapse={onRowGroupCollapse}\\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>RowSpan Grouping</h5>\\n                <DataTable value={customers} rowGroupMode=\\\"rowspan\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}>\\n                    <Column header=\\\"#\\\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={representativeBodyTemplate}></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { Toast } from 'primereact/toast';\\nimport { CustomerService } from '../service/CustomerService';\\nimport './DataTableDemo.css';\\n\\nconst DataTableRowGroupDemo = () => {\\n    const [customers, setCustomers] = useState([]);\\n    const [expandedRows, setExpandedRows] = useState([]);\\n    const toast = useRef(null);\\n    const customerService = new CustomerService();\\n\\n    useEffect(() => {\\n        customerService.getCustomersMedium().then(data => setCustomers(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const headerTemplate = (data) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={data.representative.name} src={`showcase/demo/images/avatar/${data.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{data.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const footerTemplate = (data) => {\\n        return (\\n            <React.Fragment>\\n                <td colSpan=\\\"4\\\" style={{ textAlign: 'right' }}>Total Customers</td>\\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const countryBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.country.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\\\"30\\\" />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\\n    }\\n\\n    const representativeBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\\\"32\\\" style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    const onRowGroupExpand = (event) => {\\n        toast.current.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    const onRowGroupCollapse = (event) => {\\n        toast.current.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\\n    }\\n\\n    const calculateCustomerTotal = (name) => {\\n        let total = 0;\\n\\n        if (customers) {\\n            for (let customer of customers) {\\n                if (customer.representative.name === name) {\\n                    total++;\\n                }\\n            }\\n        }\\n\\n        return total;\\n    }\\n\\n    return (\\n        <div className=\\\"datatable-rowgroup-demo\\\">\\n            <Toast ref={toast}></Toast>\\n            <div className=\\\"card\\\">\\n                <h5>Subheader Grouping</h5>\\n                <p>Group customers by their representative.</p>\\n                <DataTable value={customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Expandable Row Groups</h5>\\n                <p>Group customers by their representative.</p>\\n                <DataTable value={customers} rowGroupMode=\\\"subheader\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}\\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\\n                    onRowExpand={onRowGroupExpand} onRowCollapse={onRowGroupCollapse}\\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>RowSpan Grouping</h5>\\n                <DataTable value={customers} rowGroupMode=\\\"rowspan\\\" groupField=\\\"representative.name\\\"\\n                    sortMode=\\\"single\\\" sortField=\\\"representative.name\\\" sortOrder={1}>\\n                    <Column header=\\\"#\\\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\\n                    <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={representativeBodyTemplate}></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"country\\\" header=\\\"Country\\\" body={countryBodyTemplate}></Column>\\n                    <Column field=\\\"company\\\" header=\\\"Company\\\"></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusBodyTemplate}></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\"></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    _this4.extFiles = {\n      'src/demo/DataTableDemo.css': {\n        content: \"\\n.datatable-rowgroup-demo .p-rowgroup-footer td {\\n    font-weight: 700;\\n}\\n\\n.datatable-rowgroup-demo .p-rowgroup-header span {\\n    font-weight: 700;\\n}\\n\\n.datatable-rowgroup-demo .p-rowgroup-header .p-row-toggler {\\n    vertical-align: middle;\\n    margin-right: .25rem;\\n}\\n                \"\n      }\n    };\n    return _this4;\n  }\n\n  _createClass(DataTableColGroupDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataTableRowGroupDemo',\n        sources: this.sources,\n        service: 'CustomerService',\n        data: 'customers-medium',\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return DataTableColGroupDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/datatable/DataTableRowGroupDemo.js"],"names":["React","Component","DataTable","Column","Toast","CustomerService","TabView","useLiveEditorTabs","AppInlineHeader","DataTableRowGroupDemo","props","state","customers","expandedRowGroups","customerService","headerTemplate","bind","footerTemplate","countryBodyTemplate","statusBodyTemplate","representativeBodyTemplate","onRowGroupExpand","onRowGroupCollapse","getCustomersMedium","then","data","setState","representative","name","image","e","target","src","verticalAlign","textAlign","calculateCustomerTotal","rowData","country","code","status","event","toast","show","severity","summary","detail","life","total","customer","el","expandedRows","width","rowIndex","DataTableColGroupDemoDoc","sources","tabName","content","extFiles","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './DataTableDemo.scss';\r\n\r\nexport class DataTableRowGroupDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customers: [],\r\n            expandedRowGroups: []\r\n        };\r\n\r\n        this.customerService = new CustomerService();\r\n        this.headerTemplate = this.headerTemplate.bind(this);\r\n        this.footerTemplate = this.footerTemplate.bind(this);\r\n        this.countryBodyTemplate = this.countryBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.representativeBodyTemplate = this.representativeBodyTemplate.bind(this);\r\n        this.onRowGroupExpand = this.onRowGroupExpand.bind(this);\r\n        this.onRowGroupCollapse = this.onRowGroupCollapse.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\r\n    }\r\n\r\n    headerTemplate(data) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={data.representative.name} src={`showcase/demo/images/avatar/${data.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{data.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    footerTemplate(data) {\r\n        return (\r\n            <React.Fragment>\r\n                <td colSpan=\"4\" style={{ textAlign: 'right' }}>Total Customers</td>\r\n                <td>{this.calculateCustomerTotal(data.representative.name)}</td>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    countryBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\r\n    }\r\n\r\n    representativeBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onRowGroupExpand(event) {\r\n        this.toast.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    onRowGroupCollapse(event) {\r\n        this.toast.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    calculateCustomerTotal(name) {\r\n        let total = 0;\r\n\r\n        if (this.state.customers) {\r\n            for (let customer of this.state.customers) {\r\n                if (customer.representative.name === name) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Row Grouping</span></h1>\r\n                        <p>Rows can either be grouped by a separate grouping row or using rowspan.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation datatable-rowgroup-demo\">\r\n                    <Toast ref={(el) => this.toast = el}></Toast>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Subheader Grouping</h5>\r\n                        <p>Group customers by their representative.</p>\r\n                        <DataTable value={this.state.customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                            sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                            rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\r\n                            <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                            <Column field=\"company\" header=\"Company\"></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                            <Column field=\"date\" header=\"Date\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Expandable Row Groups</h5>\r\n                        <p>Group customers by their representative.</p>\r\n                        <DataTable value={this.state.customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                            sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                            expandableRowGroups expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\r\n                            onRowExpand={this.onRowGroupExpand} onRowCollapse={this.onRowGroupCollapse}\r\n                            rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\r\n                            <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                            <Column field=\"company\" header=\"Company\"></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                            <Column field=\"date\" header=\"Date\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>RowSpan Grouping</h5>\r\n                        <DataTable value={this.state.customers} rowGroupMode=\"rowspan\" groupField=\"representative.name\"\r\n                            sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}>\r\n                            <Column header=\"#\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\r\n                            <Column field=\"representative.name\" header=\"Representative\" body={this.representativeBodyTemplate}></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                            <Column field=\"company\" header=\"Company\"></Column>\r\n                            <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                            <Column field=\"date\" header=\"Date\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableColGroupDemoDoc></DataTableColGroupDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableColGroupDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport './DataTableDemo.css';\r\n\r\nexport class DataTableRowGroupDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customers: [],\r\n            expandedRowGroups: []\r\n        };\r\n\r\n        this.customerService = new CustomerService();\r\n        this.headerTemplate = this.headerTemplate.bind(this);\r\n        this.footerTemplate = this.footerTemplate.bind(this);\r\n        this.countryBodyTemplate = this.countryBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.representativeBodyTemplate = this.representativeBodyTemplate.bind(this);\r\n        this.onRowGroupExpand = this.onRowGroupExpand.bind(this);\r\n        this.onRowGroupCollapse = this.onRowGroupCollapse.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.customerService.getCustomersMedium().then(data => this.setState({ customers: data }));\r\n    }\r\n\r\n    headerTemplate(data) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={data.representative.name} src={\\`showcase/demo/images/avatar/\\${data.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{data.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    footerTemplate(data) {\r\n        return (\r\n            <React.Fragment>\r\n                <td colSpan=\"4\" style={{ textAlign: 'right' }}>Total Customers</td>\r\n                <td>{this.calculateCustomerTotal(data.representative.name)}</td>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    countryBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    representativeBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onRowGroupExpand(event) {\r\n        this.toast.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    onRowGroupCollapse(event) {\r\n        this.toast.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    calculateCustomerTotal(name) {\r\n        let total = 0;\r\n\r\n        if (this.state.customers) {\r\n            for (let customer of this.state.customers) {\r\n                if (customer.representative.name === name) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"datatable-rowgroup-demo\">\r\n                <Toast ref={(el) => this.toast = el}></Toast>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Subheader Grouping</h5>\r\n                    <p>Group customers by their representative.</p>\r\n                    <DataTable value={this.state.customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                        sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                        rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\r\n                        <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                        <Column field=\"company\" header=\"Company\"></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                        <Column field=\"date\" header=\"Date\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Expandable Row Groups</h5>\r\n                    <p>Group customers by their representative.</p>\r\n                    <DataTable value={this.state.customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                        sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                        expandableRowGroups expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\r\n                        onRowExpand={this.onRowGroupExpand} onRowCollapse={this.onRowGroupCollapse}\r\n                        rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate}>\r\n                        <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                        <Column field=\"company\" header=\"Company\"></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                        <Column field=\"date\" header=\"Date\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>RowSpan Grouping</h5>\r\n                    <DataTable value={this.state.customers} rowGroupMode=\"rowspan\" groupField=\"representative.name\"\r\n                        sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}>\r\n                        <Column header=\"#\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\r\n                        <Column field=\"representative.name\" header=\"Representative\" body={this.representativeBodyTemplate}></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"country\" header=\"Country\" body={this.countryBodyTemplate}></Column>\r\n                        <Column field=\"company\" header=\"Company\"></Column>\r\n                        <Column field=\"status\" header=\"Status\" body={this.statusBodyTemplate}></Column>\r\n                        <Column field=\"date\" header=\"Date\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableRowGroupDemo = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState([]);\r\n    const toast = useRef(null);\r\n    const customerService = new CustomerService();\r\n\r\n    useEffect(() => {\r\n        customerService.getCustomersMedium().then(data => setCustomers(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const headerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={data.representative.name} src={\\`showcase/demo/images/avatar/\\${data.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{data.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const footerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <td colSpan=\"4\" style={{ textAlign: 'right' }}>Total Customers</td>\r\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const countryBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const representativeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const onRowGroupExpand = (event) => {\r\n        toast.current.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    const onRowGroupCollapse = (event) => {\r\n        toast.current.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    const calculateCustomerTotal = (name) => {\r\n        let total = 0;\r\n\r\n        if (customers) {\r\n            for (let customer of customers) {\r\n                if (customer.representative.name === name) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    return (\r\n        <div className=\"datatable-rowgroup-demo\">\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Subheader Grouping</h5>\r\n                <p>Group customers by their representative.</p>\r\n                <DataTable value={customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Expandable Row Groups</h5>\r\n                <p>Group customers by their representative.</p>\r\n                <DataTable value={customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    onRowExpand={onRowGroupExpand} onRowCollapse={onRowGroupCollapse}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>RowSpan Grouping</h5>\r\n                <DataTable value={customers} rowGroupMode=\"rowspan\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}>\r\n                    <Column header=\"#\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\r\n                    <Column field=\"representative.name\" header=\"Representative\" body={representativeBodyTemplate}></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { CustomerService } from '../service/CustomerService';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableRowGroupDemo = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState([]);\r\n    const toast = useRef(null);\r\n    const customerService = new CustomerService();\r\n\r\n    useEffect(() => {\r\n        customerService.getCustomersMedium().then(data => setCustomers(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const headerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={data.representative.name} src={\\`showcase/demo/images/avatar/\\${data.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{data.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const footerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <td colSpan=\"4\" style={{ textAlign: 'right' }}>Total Customers</td>\r\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const countryBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.country.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width=\"30\" />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`customer-badge status-\\${rowData.status}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const representativeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width=\"32\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const onRowGroupExpand = (event) => {\r\n        toast.current.show({ severity: 'info', summary: 'Row Group Expanded', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    const onRowGroupCollapse = (event) => {\r\n        toast.current.show({ severity: 'success', summary: 'Row Group Collapsed', detail: 'Value: ' + event.data.representative.name, life: 3000 });\r\n    }\r\n\r\n    const calculateCustomerTotal = (name) => {\r\n        let total = 0;\r\n\r\n        if (customers) {\r\n            for (let customer of customers) {\r\n                if (customer.representative.name === name) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    return (\r\n        <div className=\"datatable-rowgroup-demo\">\r\n            <Toast ref={toast}></Toast>\r\n            <div className=\"card\">\r\n                <h5>Subheader Grouping</h5>\r\n                <p>Group customers by their representative.</p>\r\n                <DataTable value={customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Expandable Row Groups</h5>\r\n                <p>Group customers by their representative.</p>\r\n                <DataTable value={customers} rowGroupMode=\"subheader\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}\r\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    onRowExpand={onRowGroupExpand} onRowCollapse={onRowGroupCollapse}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>RowSpan Grouping</h5>\r\n                <DataTable value={customers} rowGroupMode=\"rowspan\" groupField=\"representative.name\"\r\n                    sortMode=\"single\" sortField=\"representative.name\" sortOrder={1}>\r\n                    <Column header=\"#\" headerStyle={{ width: '3em' }} body={(data, props) => props.rowIndex + 1}></Column>\r\n                    <Column field=\"representative.name\" header=\"Representative\" body={representativeBodyTemplate}></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"country\" header=\"Country\" body={countryBodyTemplate}></Column>\r\n                    <Column field=\"company\" header=\"Company\"></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusBodyTemplate}></Column>\r\n                    <Column field=\"date\" header=\"Date\"></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'src/demo/DataTableDemo.css': {\r\n                content: `\r\n.datatable-rowgroup-demo .p-rowgroup-footer td {\r\n    font-weight: 700;\r\n}\r\n\r\n.datatable-rowgroup-demo .p-rowgroup-header span {\r\n    font-weight: 700;\r\n}\r\n\r\n.datatable-rowgroup-demo .p-rowgroup-header .p-row-toggler {\r\n    vertical-align: middle;\r\n    margin-right: .25rem;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableRowGroupDemo', sources: this.sources, service: 'CustomerService', data: 'customers-medium', extFiles: this.extFiles  })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}