{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\progressbar\\\\ProgressBarDemo.js\";\nimport React, { Component } from 'react';\nimport { ProgressBar } from '../../components/progressbar/ProgressBar';\nimport { Toast } from '../../components/toast/Toast';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport { ProgressBarDoc } from './ProgressBarDoc';\nexport var ProgressBarDemo = /*#__PURE__*/function (_Component) {\n  _inherits(ProgressBarDemo, _Component);\n\n  var _super = _createSuper(ProgressBarDemo);\n\n  function ProgressBarDemo(props) {\n    var _this;\n\n    _classCallCheck(this, ProgressBarDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value1: 0\n    };\n    _this.displayValueTemplate = _this.displayValueTemplate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProgressBarDemo, [{\n    key: \"displayValueTemplate\",\n    value: function displayValueTemplate(value) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, value, \"/\", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, \"100\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var val = this.state.value1;\n      this.interval = setInterval(function () {\n        val += Math.floor(Math.random() * 10) + 1;\n\n        if (val >= 100) {\n          val = 100;\n\n          _this2.toast.show({\n            severity: 'info',\n            summary: 'Success',\n            detail: 'Process Completed'\n          });\n\n          clearInterval(_this2.interval);\n        }\n\n        _this2.setState({\n          value1: val\n        });\n      }, 2000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n        this.interval = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"progressBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"ProgressBar\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"ProgressBar is a process status indicator\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        ref: function ref(el) {\n          return _this3.toast = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"Dynamic\"), /*#__PURE__*/React.createElement(ProgressBar, {\n        value: this.state.value1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"Static\"), /*#__PURE__*/React.createElement(ProgressBar, {\n        value: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, \"Custom display value\"), /*#__PURE__*/React.createElement(ProgressBar, {\n        value: 40,\n        displayValueTemplate: this.displayValueTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, \"Indeterminate\"), /*#__PURE__*/React.createElement(ProgressBar, {\n        mode: \"indeterminate\",\n        style: {\n          height: '6px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(ProgressBarDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ProgressBarDemo;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/progressbar/ProgressBarDemo.js"],"names":["React","Component","ProgressBar","Toast","AppInlineHeader","ProgressBarDoc","ProgressBarDemo","props","state","value1","displayValueTemplate","bind","value","val","interval","setInterval","Math","floor","random","toast","show","severity","summary","detail","clearInterval","setState","el","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ProgressBar } from '../../components/progressbar/ProgressBar';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport { ProgressBarDoc } from './ProgressBarDoc';\r\n\r\nexport class ProgressBarDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value1: 0\r\n        };\r\n\r\n        this.displayValueTemplate = this.displayValueTemplate.bind(this);\r\n    }\r\n\r\n    displayValueTemplate(value) {\r\n        return (\r\n            <React.Fragment>\r\n                {value}/<b>100</b>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        let val = this.state.value1;\r\n        this.interval = setInterval(() => {\r\n            val += Math.floor(Math.random() * 10) + 1;\r\n\r\n            if (val >= 100) {\r\n                val = 100;\r\n                this.toast.show({ severity: 'info', summary: 'Success', detail: 'Process Completed' });\r\n                clearInterval(this.interval);\r\n            }\r\n\r\n            this.setState({\r\n                value1: val\r\n            });\r\n        }, 2000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n            this.interval = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"progressBar\">\r\n                        <h1>ProgressBar</h1>\r\n                        <p>ProgressBar is a process status indicator</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <Toast ref={(el) => this.toast = el}></Toast>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Dynamic</h5>\r\n                        <ProgressBar value={this.state.value1}></ProgressBar>\r\n\r\n                        <h5>Static</h5>\r\n                        <ProgressBar value={50}></ProgressBar>\r\n\r\n                        <h5>Custom display value</h5>\r\n                        <ProgressBar value={40} displayValueTemplate={this.displayValueTemplate}></ProgressBar>\r\n\r\n                        <h5>Indeterminate</h5>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n                </div>\r\n\r\n                <ProgressBarDoc />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}