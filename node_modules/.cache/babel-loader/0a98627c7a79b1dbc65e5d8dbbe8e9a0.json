{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\chart\\\\LineChartDemo.js\";\nimport React, { Component } from 'react';\nimport { TabView } from '../../components/tabview/TabView';\nimport { Chart } from '../../components/chart/Chart';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport AppContentContext from '../../AppContentContext';\nexport var LineChartDemo = /*#__PURE__*/function (_Component) {\n  _inherits(LineChartDemo, _Component);\n\n  var _super = _createSuper(LineChartDemo);\n\n  function LineChartDemo(props) {\n    var _this;\n\n    _classCallCheck(this, LineChartDemo);\n\n    _this = _super.call(this, props);\n    _this.basicData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'First Dataset',\n        data: [65, 59, 80, 81, 56, 55, 40],\n        fill: false,\n        borderColor: '#42A5F5'\n      }, {\n        label: 'Second Dataset',\n        data: [28, 48, 40, 19, 86, 27, 90],\n        fill: false,\n        borderColor: '#FFA726'\n      }]\n    };\n    _this.multiAxisData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'Dataset 1',\n        fill: false,\n        borderColor: '#42A5F5',\n        yAxisID: 'y-axis-1',\n        data: [65, 59, 80, 81, 56, 55, 10]\n      }, {\n        label: 'Dataset 2',\n        fill: false,\n        borderColor: '#00bb7e',\n        yAxisID: 'y-axis-2',\n        data: [28, 48, 40, 19, 86, 27, 90]\n      }]\n    };\n    _this.lineStylesData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'First Dataset',\n        data: [65, 59, 80, 81, 56, 55, 40],\n        fill: false,\n        borderColor: '#42A5F5'\n      }, {\n        label: 'Second Dataset',\n        data: [28, 48, 40, 19, 86, 27, 90],\n        fill: false,\n        borderDash: [5, 5],\n        borderColor: '#66BB6A'\n      }, {\n        label: 'Third Dataset',\n        data: [12, 51, 62, 33, 21, 62, 45],\n        fill: true,\n        borderColor: '#FFA726',\n        backgroundColor: 'rgba(255,167,38,0.2)'\n      }]\n    };\n    _this.options = {\n      'light': _this.getLightTheme(),\n      'dark': _this.getDarkTheme()\n    };\n    return _this;\n  }\n\n  _createClass(LineChartDemo, [{\n    key: \"getLightTheme\",\n    value: function getLightTheme() {\n      var basicOptions = {\n        legend: {\n          labels: {\n            fontColor: '#495057'\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#495057'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontColor: '#495057'\n            }\n          }]\n        }\n      };\n      var multiAxisOptions = {\n        responsive: true,\n        hoverMode: 'index',\n        stacked: false,\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#495057'\n            },\n            gridLines: {\n              color: '#ebedef'\n            }\n          }],\n          yAxes: [{\n            type: 'linear',\n            display: true,\n            position: 'left',\n            id: 'y-axis-1',\n            ticks: {\n              fontColor: '#495057'\n            },\n            gridLines: {\n              color: '#ebedef'\n            }\n          }, {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            id: 'y-axis-2',\n            ticks: {\n              fontColor: '#495057'\n            },\n            gridLines: {\n              drawOnChartArea: false,\n              color: '#ebedef'\n            }\n          }]\n        },\n        legend: {\n          labels: {\n            fontColor: '#495057'\n          }\n        }\n      };\n      return {\n        basicOptions: basicOptions,\n        multiAxisOptions: multiAxisOptions\n      };\n    }\n  }, {\n    key: \"getDarkTheme\",\n    value: function getDarkTheme() {\n      var basicOptions = {\n        legend: {\n          labels: {\n            fontColor: '#ebedef'\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }]\n        }\n      };\n      var multiAxisOptions = {\n        responsive: true,\n        hoverMode: 'index',\n        stacked: false,\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }],\n          yAxes: [{\n            type: 'linear',\n            display: true,\n            position: 'left',\n            id: 'y-axis-1',\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }, {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            id: 'y-axis-2',\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              drawOnChartArea: false,\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }]\n        },\n        legend: {\n          labels: {\n            fontColor: '#ebedef'\n          }\n        }\n      };\n      return {\n        basicOptions: basicOptions,\n        multiAxisOptions: multiAxisOptions\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      }, \"LineChart\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }\n      }, \"A line chart or line graph is a type of chart which displays information as a series of data points called 'markers' connected by straight line segments.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppContentContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, function (context) {\n        var _this2$options$ = _this2.options[\"\".concat(context.darkTheme ? 'dark' : 'light')],\n            basicOptions = _this2$options$.basicOptions,\n            multiAxisOptions = _this2$options$.multiAxisOptions;\n\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 45\n          }\n        }, \"Basic\"), /*#__PURE__*/React.createElement(Chart, {\n          type: \"line\",\n          data: _this2.basicData,\n          options: basicOptions,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 45\n          }\n        }, \"Multi Axis\"), /*#__PURE__*/React.createElement(Chart, {\n          type: \"line\",\n          data: _this2.multiAxisData,\n          options: multiAxisOptions,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 45\n          }\n        }, \"Line Styles\"), /*#__PURE__*/React.createElement(Chart, {\n          type: \"line\",\n          data: _this2.lineStylesData,\n          options: basicOptions,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 45\n          }\n        })));\n      })), /*#__PURE__*/React.createElement(LineChartDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LineChartDemo;\n}(Component);\nexport var LineChartDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(LineChartDemoDoc, _Component2);\n\n  var _super2 = _createSuper(LineChartDemoDoc);\n\n  function LineChartDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, LineChartDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class LineChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.basicData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                {\\n                    label: 'First Dataset',\\n                    data: [65, 59, 80, 81, 56, 55, 40],\\n                    fill: false,\\n                    borderColor: '#42A5F5'\\n                },\\n                {\\n                    label: 'Second Dataset',\\n                    data: [28, 48, 40, 19, 86, 27, 90],\\n                    fill: false,\\n                    borderColor: '#FFA726'\\n                }\\n            ]\\n        };\\n\\n        this.multiAxisData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [{\\n                label: 'Dataset 1',\\n                fill: false,\\n                borderColor: '#42A5F5',\\n                yAxisID: 'y-axis-1',\\n                data: [65, 59, 80, 81, 56, 55, 10]\\n            }, {\\n                label: 'Dataset 2',\\n                fill: false,\\n                borderColor: '#00bb7e',\\n                yAxisID: 'y-axis-2',\\n                data: [28, 48, 40, 19, 86, 27, 90]\\n            }]\\n        };\\n\\n        this.lineStylesData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                {\\n                    label: 'First Dataset',\\n                    data: [65, 59, 80, 81, 56, 55, 40],\\n                    fill: false,\\n                    borderColor: '#42A5F5'\\n                },\\n                {\\n                    label: 'Second Dataset',\\n                    data: [28, 48, 40, 19, 86, 27, 90],\\n                    fill: false,\\n                    borderDash: [5, 5],\\n                    borderColor: '#66BB6A'\\n                },\\n                {\\n                    label: 'Third Dataset',\\n                    data: [12, 51, 62, 33, 21, 62, 45],\\n                    fill: true,\\n                    borderColor: '#FFA726',\\n                    backgroundColor: 'rgba(255,167,38,0.2)'\\n                }\\n            ]\\n        };\\n\\n        this.options = this.getLightTheme();\\n    }\\n\\n    getLightTheme() {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            hoverMode: 'index',\\n            stacked: false,\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }, {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    render() {\\n        const { basicOptions, multiAxisOptions } = this.options;\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <Chart type=\\\"line\\\" data={this.basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multi Axis</h5>\\n                    <Chart type=\\\"line\\\" data={this.multiAxisData} options={multiAxisOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Line Styles</h5>\\n                    <Chart type=\\\"line\\\" data={this.lineStylesData} options={basicOptions} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst LineChartDemo = () => {\\n    const basicData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'First Dataset',\\n                data: [65, 59, 80, 81, 56, 55, 40],\\n                fill: false,\\n                borderColor: '#42A5F5'\\n            },\\n            {\\n                label: 'Second Dataset',\\n                data: [28, 48, 40, 19, 86, 27, 90],\\n                fill: false,\\n                borderColor: '#FFA726'\\n            }\\n        ]\\n    };\\n\\n    const multiAxisData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            label: 'Dataset 1',\\n            fill: false,\\n            borderColor: '#42A5F5',\\n            yAxisID: 'y-axis-1',\\n            data: [65, 59, 80, 81, 56, 55, 10]\\n        }, {\\n            label: 'Dataset 2',\\n            fill: false,\\n            borderColor: '#00bb7e',\\n            yAxisID: 'y-axis-2',\\n            data: [28, 48, 40, 19, 86, 27, 90]\\n        }]\\n    };\\n\\n    const lineStylesData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'First Dataset',\\n                data: [65, 59, 80, 81, 56, 55, 40],\\n                fill: false,\\n                borderColor: '#42A5F5'\\n            },\\n            {\\n                label: 'Second Dataset',\\n                data: [28, 48, 40, 19, 86, 27, 90],\\n                fill: false,\\n                borderDash: [5, 5],\\n                borderColor: '#66BB6A'\\n            },\\n            {\\n                label: 'Third Dataset',\\n                data: [12, 51, 62, 33, 21, 62, 45],\\n                fill: true,\\n                borderColor: '#FFA726',\\n                backgroundColor: 'rgba(255,167,38,0.2)'\\n            }\\n        ]\\n    };\\n\\n    const getLightTheme = () => {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            hoverMode: 'index',\\n            stacked: false,\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }, {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    const { basicOptions, multiAxisOptions } = getLightTheme();\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Chart type=\\\"line\\\" data={basicData} options={basicOptions} />\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multi Axis</h5>\\n                <Chart type=\\\"line\\\" data={multiAxisData} options={multiAxisOptions} />\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Line Styles</h5>\\n                <Chart type=\\\"line\\\" data={lineStylesData} options={basicOptions} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst LineChartDemo = () => {\\n    const basicData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'First Dataset',\\n                data: [65, 59, 80, 81, 56, 55, 40],\\n                fill: false,\\n                borderColor: '#42A5F5'\\n            },\\n            {\\n                label: 'Second Dataset',\\n                data: [28, 48, 40, 19, 86, 27, 90],\\n                fill: false,\\n                borderColor: '#FFA726'\\n            }\\n        ]\\n    };\\n\\n    const multiAxisData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            label: 'Dataset 1',\\n            fill: false,\\n            borderColor: '#42A5F5',\\n            yAxisID: 'y-axis-1',\\n            data: [65, 59, 80, 81, 56, 55, 10]\\n        }, {\\n            label: 'Dataset 2',\\n            fill: false,\\n            borderColor: '#00bb7e',\\n            yAxisID: 'y-axis-2',\\n            data: [28, 48, 40, 19, 86, 27, 90]\\n        }]\\n    };\\n\\n    const lineStylesData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'First Dataset',\\n                data: [65, 59, 80, 81, 56, 55, 40],\\n                fill: false,\\n                borderColor: '#42A5F5'\\n            },\\n            {\\n                label: 'Second Dataset',\\n                data: [28, 48, 40, 19, 86, 27, 90],\\n                fill: false,\\n                borderDash: [5, 5],\\n                borderColor: '#66BB6A'\\n            },\\n            {\\n                label: 'Third Dataset',\\n                data: [12, 51, 62, 33, 21, 62, 45],\\n                fill: true,\\n                borderColor: '#FFA726',\\n                backgroundColor: 'rgba(255,167,38,0.2)'\\n            }\\n        ]\\n    };\\n\\n    const getLightTheme = () => {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            hoverMode: 'index',\\n            stacked: false,\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }, {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    const { basicOptions, multiAxisOptions } = getLightTheme();\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Chart type=\\\"line\\\" data={basicData} options={basicOptions} />\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multi Axis</h5>\\n                <Chart type=\\\"line\\\" data={multiAxisData} options={multiAxisOptions} />\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Line Styles</h5>\\n                <Chart type=\\\"line\\\" data={lineStylesData} options={basicOptions} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(LineChartDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'LineChartDemo',\n        sources: this.sources,\n        dependencies: {\n          'chart.js': '2.7.3'\n        }\n      })));\n    }\n  }]);\n\n  return LineChartDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/chart/LineChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","LineChartDemo","props","basicData","labels","datasets","label","data","fill","borderColor","multiAxisData","yAxisID","lineStylesData","borderDash","backgroundColor","options","getLightTheme","getDarkTheme","basicOptions","legend","fontColor","scales","xAxes","ticks","yAxes","multiAxisOptions","responsive","hoverMode","stacked","gridLines","color","type","display","position","id","drawOnChartArea","context","darkTheme","LineChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class LineChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.basicData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    borderColor: '#42A5F5'\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    borderColor: '#FFA726'\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.multiAxisData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                label: 'Dataset 1',\r\n                fill: false,\r\n                borderColor: '#42A5F5',\r\n                yAxisID: 'y-axis-1',\r\n                data: [65, 59, 80, 81, 56, 55, 10]\r\n            }, {\r\n                label: 'Dataset 2',\r\n                fill: false,\r\n                borderColor: '#00bb7e',\r\n                yAxisID: 'y-axis-2',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }]\r\n        };\r\n\r\n        this.lineStylesData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    borderColor: '#42A5F5'\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    borderDash: [5, 5],\r\n                    borderColor: '#66BB6A'\r\n                },\r\n                {\r\n                    label: 'Third Dataset',\r\n                    data: [12, 51, 62, 33, 21, 62, 45],\r\n                    fill: true,\r\n                    borderColor: '#FFA726',\r\n                    backgroundColor: 'rgba(255,167,38,0.2)'\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.options = {\r\n            'light': this.getLightTheme(),\r\n            'dark': this.getDarkTheme()\r\n        };\r\n    }\r\n\r\n\r\n    getLightTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    getDarkTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>LineChart</h1>\r\n                        <p>A line chart or line graph is a type of chart which displays information as a series of data points called 'markers' connected by straight line segments.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <AppContentContext.Consumer>\r\n                        {\r\n                            context => {\r\n                                const { basicOptions, multiAxisOptions } = this.options[`${context.darkTheme ? 'dark' : 'light'}`];\r\n\r\n                                return (\r\n                                    <>\r\n                                        <div className=\"card\">\r\n                                            <h5>Basic</h5>\r\n                                            <Chart type=\"line\" data={this.basicData} options={basicOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Multi Axis</h5>\r\n                                            <Chart type=\"line\" data={this.multiAxisData} options={multiAxisOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Line Styles</h5>\r\n                                            <Chart type=\"line\" data={this.lineStylesData} options={basicOptions} />\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        }\r\n                    </AppContentContext.Consumer>\r\n                </div>\r\n\r\n                <LineChartDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class LineChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class LineChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.basicData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    borderColor: '#42A5F5'\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    borderColor: '#FFA726'\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.multiAxisData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                label: 'Dataset 1',\r\n                fill: false,\r\n                borderColor: '#42A5F5',\r\n                yAxisID: 'y-axis-1',\r\n                data: [65, 59, 80, 81, 56, 55, 10]\r\n            }, {\r\n                label: 'Dataset 2',\r\n                fill: false,\r\n                borderColor: '#00bb7e',\r\n                yAxisID: 'y-axis-2',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }]\r\n        };\r\n\r\n        this.lineStylesData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    borderColor: '#42A5F5'\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    borderDash: [5, 5],\r\n                    borderColor: '#66BB6A'\r\n                },\r\n                {\r\n                    label: 'Third Dataset',\r\n                    data: [12, 51, 62, 33, 21, 62, 45],\r\n                    fill: true,\r\n                    borderColor: '#FFA726',\r\n                    backgroundColor: 'rgba(255,167,38,0.2)'\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.options = this.getLightTheme();\r\n    }\r\n\r\n    getLightTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { basicOptions, multiAxisOptions } = this.options;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <Chart type=\"line\" data={this.basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multi Axis</h5>\r\n                    <Chart type=\"line\" data={this.multiAxisData} options={multiAxisOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Line Styles</h5>\r\n                    <Chart type=\"line\" data={this.lineStylesData} options={basicOptions} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst LineChartDemo = () => {\r\n    const basicData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderColor: '#FFA726'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const multiAxisData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            label: 'Dataset 1',\r\n            fill: false,\r\n            borderColor: '#42A5F5',\r\n            yAxisID: 'y-axis-1',\r\n            data: [65, 59, 80, 81, 56, 55, 10]\r\n        }, {\r\n            label: 'Dataset 2',\r\n            fill: false,\r\n            borderColor: '#00bb7e',\r\n            yAxisID: 'y-axis-2',\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n        }]\r\n    };\r\n\r\n    const lineStylesData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderDash: [5, 5],\r\n                borderColor: '#66BB6A'\r\n            },\r\n            {\r\n                label: 'Third Dataset',\r\n                data: [12, 51, 62, 33, 21, 62, 45],\r\n                fill: true,\r\n                borderColor: '#FFA726',\r\n                backgroundColor: 'rgba(255,167,38,0.2)'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    const { basicOptions, multiAxisOptions } = getLightTheme();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Chart type=\"line\" data={basicData} options={basicOptions} />\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multi Axis</h5>\r\n                <Chart type=\"line\" data={multiAxisData} options={multiAxisOptions} />\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Line Styles</h5>\r\n                <Chart type=\"line\" data={lineStylesData} options={basicOptions} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst LineChartDemo = () => {\r\n    const basicData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderColor: '#FFA726'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const multiAxisData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            label: 'Dataset 1',\r\n            fill: false,\r\n            borderColor: '#42A5F5',\r\n            yAxisID: 'y-axis-1',\r\n            data: [65, 59, 80, 81, 56, 55, 10]\r\n        }, {\r\n            label: 'Dataset 2',\r\n            fill: false,\r\n            borderColor: '#00bb7e',\r\n            yAxisID: 'y-axis-2',\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n        }]\r\n    };\r\n\r\n    const lineStylesData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderDash: [5, 5],\r\n                borderColor: '#66BB6A'\r\n            },\r\n            {\r\n                label: 'Third Dataset',\r\n                data: [12, 51, 62, 33, 21, 62, 45],\r\n                fill: true,\r\n                borderColor: '#FFA726',\r\n                backgroundColor: 'rgba(255,167,38,0.2)'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            hoverMode: 'index',\r\n            stacked: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }, {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    const { basicOptions, multiAxisOptions } = getLightTheme();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Chart type=\"line\" data={basicData} options={basicOptions} />\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multi Axis</h5>\r\n                <Chart type=\"line\" data={multiAxisData} options={multiAxisOptions} />\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Line Styles</h5>\r\n                <Chart type=\"line\" data={lineStylesData} options={basicOptions} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'LineChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}