{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView}from'../../components/tabview/TabView';import{Chart}from'../../components/chart/Chart';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import AppContentContext from'../../AppContentContext';export var DoughnutChartDemo=/*#__PURE__*/function(_Component){_inherits(DoughnutChartDemo,_Component);var _super=_createSuper(DoughnutChartDemo);function DoughnutChartDemo(props){var _this;_classCallCheck(this,DoughnutChartDemo);_this=_super.call(this,props);_this.chartData={labels:['A','B','C'],datasets:[{data:[300,50,100],backgroundColor:[\"#FF6384\",\"#36A2EB\",\"#FFCE56\"],hoverBackgroundColor:[\"#FF6384\",\"#36A2EB\",\"#FFCE56\"]}]};_this.lightOptions={legend:{labels:{fontColor:'#495057'}}};_this.darkOptions={legend:{labels:{fontColor:'#ebedef'}}};return _this;}_createClass(DoughnutChartDemo,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"chart\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DoughnutChart\"),/*#__PURE__*/React.createElement(\"p\",null,\"A doughnut chart is a variant of the pie chart, with a blank center allowing for additional information about the data as a whole to be included.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(AppContentContext.Consumer,null,function(context){var options=context.darkTheme?_this2.darkOptions:_this2.lightOptions;return/*#__PURE__*/React.createElement(Chart,{type:\"doughnut\",data:_this2.chartData,options:options});}))),/*#__PURE__*/React.createElement(DoughnutChartDemoDoc,null));}}]);return DoughnutChartDemo;}(Component);export var DoughnutChartDemoDoc=/*#__PURE__*/function(_Component2){_inherits(DoughnutChartDemoDoc,_Component2);var _super2=_createSuper(DoughnutChartDemoDoc);function DoughnutChartDemoDoc(props){var _this3;_classCallCheck(this,DoughnutChartDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class DoughnutChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.chartData = {\\n            labels: ['A', 'B', 'C'],\\n            datasets: [\\n                {\\n                    data: [300, 50, 100],\\n                    backgroundColor: [\\n                        \\\"#FF6384\\\",\\n                        \\\"#36A2EB\\\",\\n                        \\\"#FFCE56\\\"\\n                    ],\\n                    hoverBackgroundColor: [\\n                        \\\"#FF6384\\\",\\n                        \\\"#36A2EB\\\",\\n                        \\\"#FFCE56\\\"\\n                    ]\\n                }]\\n        };\\n\\n        this.lightOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"card\\\">\\n                <Chart type=\\\"doughnut\\\" data={this.chartData} options={this.lightOptions} />\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst DoughnutChartDemo = () => {\\n    const chartData = {\\n        labels: ['A', 'B', 'C'],\\n        datasets: [\\n            {\\n                data: [300, 50, 100],\\n                backgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#36A2EB\\\",\\n                    \\\"#FFCE56\\\"\\n                ],\\n                hoverBackgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#36A2EB\\\",\\n                    \\\"#FFCE56\\\"\\n                ]\\n            }]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"doughnut\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst DoughnutChartDemo = () => {\\n    const chartData = {\\n        labels: ['A', 'B', 'C'],\\n        datasets: [\\n            {\\n                data: [300, 50, 100],\\n                backgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#36A2EB\\\",\\n                    \\\"#FFCE56\\\"\\n                ],\\n                hoverBackgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#36A2EB\\\",\\n                    \\\"#FFCE56\\\"\\n                ]\\n            }]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"doughnut\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    )\\n}\\n                \"}};return _this3;}_createClass(DoughnutChartDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DoughnutChartDemo',sources:this.sources,dependencies:{'chart.js':'2.7.3'}})));}}]);return DoughnutChartDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/chart/DoughnutChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","DoughnutChartDemo","props","chartData","labels","datasets","data","backgroundColor","hoverBackgroundColor","lightOptions","legend","fontColor","darkOptions","context","options","darkTheme","DoughnutChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"wsBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,kCAAxB,CACA,OAASC,KAAT,KAAsB,8BAAtB,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CACA,OAASC,eAAT,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yBAA9B,CAEA,UAAaC,CAAAA,iBAAb,sHAEI,2BAAYC,KAAZ,CAAmB,mDACf,uBAAMA,KAAN,EAEA,MAAKC,SAAL,CAAiB,CACbC,MAAM,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CADK,CAEbC,QAAQ,CAAE,CACN,CACIC,IAAI,CAAE,CAAC,GAAD,CAAM,EAAN,CAAU,GAAV,CADV,CAEIC,eAAe,CAAE,CACb,SADa,CAEb,SAFa,CAGb,SAHa,CAFrB,CAOIC,oBAAoB,CAAE,CAClB,SADkB,CAElB,SAFkB,CAGlB,SAHkB,CAP1B,CADM,CAFG,CAAjB,CAkBA,MAAKC,YAAL,CAAoB,CAChBC,MAAM,CAAE,CACJN,MAAM,CAAE,CACJO,SAAS,CAAE,SADP,CADJ,CADQ,CAApB,CAQA,MAAKC,WAAL,CAAmB,CACfF,MAAM,CAAE,CACJN,MAAM,CAAE,CACJO,SAAS,CAAE,SADP,CADJ,CADO,CAAnB,CA7Be,aAoClB,CAtCL,oDAwCI,iBAAS,iBACL,mBACI,4CACI,2BAAK,SAAS,CAAC,8BAAf,eACI,oBAAC,eAAD,EAAiB,aAAa,CAAC,OAA/B,eACI,8CADJ,cAEI,iLAFJ,CADJ,CADJ,cAQI,2BAAK,SAAS,CAAC,gCAAf,eACI,2BAAK,SAAS,CAAC,MAAf,eACI,oBAAC,iBAAD,CAAmB,QAAnB,MAEQ,SAAAE,OAAO,CAAI,CACP,GAAIC,CAAAA,OAAO,CAAGD,OAAO,CAACE,SAAR,CAAoB,MAAI,CAACH,WAAzB,CAAuC,MAAI,CAACH,YAA1D,CAEA,mBAAO,oBAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,IAAI,CAAE,MAAI,CAACN,SAAlC,CAA6C,OAAO,CAAEW,OAAtD,EAAP,CACH,CANT,CADJ,CADJ,CARJ,cAsBI,oBAAC,oBAAD,MAtBJ,CADJ,CA0BH,CAnEL,+BAAuCnB,SAAvC,EAsEA,UAAaqB,CAAAA,oBAAb,+HAEI,8BAAYd,KAAZ,CAAmB,uDACf,yBAAMA,KAAN,EAEA,OAAKe,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,ynCAFF,CADE,CAiDX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,04BAFF,CAjDE,CA0FX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,04BAFL,CA1FK,CAAf,CAHe,cAuIlB,CAzIL,sEA2II,gCAAwB,CACpB,MAAO,MAAP,CACH,CA7IL,sBA+II,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,MAEQrB,iBAAiB,CAAC,CAAEsB,IAAI,CAAE,mBAAR,CAA6BH,OAAO,CAAE,KAAKA,OAA3C,CAAoDI,YAAY,CAAE,CAAE,WAAY,OAAd,CAAlE,CAAD,CAFzB,CADJ,CADJ,CASH,CAzJL,kCAA0C1B,SAA1C","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class DoughnutChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['A', 'B', 'C'],\r\n            datasets: [\r\n                {\r\n                    data: [300, 50, 100],\r\n                    backgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ]\r\n                }]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        this.darkOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>DoughnutChart</h1>\r\n                        <p>A doughnut chart is a variant of the pie chart, with a blank center allowing for additional information about the data as a whole to be included.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <AppContentContext.Consumer>\r\n                            {\r\n                                context => {\r\n                                    let options = context.darkTheme ? this.darkOptions : this.lightOptions;\r\n\r\n                                    return <Chart type=\"doughnut\" data={this.chartData} options={options} />\r\n                                }\r\n                            }\r\n                        </AppContentContext.Consumer>\r\n                    </div>\r\n                </div>\r\n\r\n                <DoughnutChartDemoDoc></DoughnutChartDemoDoc>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class DoughnutChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class DoughnutChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['A', 'B', 'C'],\r\n            datasets: [\r\n                {\r\n                    data: [300, 50, 100],\r\n                    backgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ]\r\n                }]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <Chart type=\"doughnut\" data={this.chartData} options={this.lightOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst DoughnutChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['A', 'B', 'C'],\r\n        datasets: [\r\n            {\r\n                data: [300, 50, 100],\r\n                backgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\"\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\"\r\n                ]\r\n            }]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"doughnut\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst DoughnutChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['A', 'B', 'C'],\r\n        datasets: [\r\n            {\r\n                data: [300, 50, 100],\r\n                backgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\"\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\"\r\n                ]\r\n            }]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"doughnut\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DoughnutChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}