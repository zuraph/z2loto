{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\fullcalendar\\\\FullCalendar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { Calendar } from '@fullcalendar/core';\nexport var FullCalendar = /*#__PURE__*/function (_Component) {\n  _inherits(FullCalendar, _Component);\n\n  var _super = _createSuper(FullCalendar);\n\n  function FullCalendar() {\n    _classCallCheck(this, FullCalendar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FullCalendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.config = {\n        theme: true\n      };\n\n      if (this.props.options) {\n        for (var prop in this.props.options) {\n          this.config[prop] = this.props.options[prop];\n        }\n      }\n\n      this.initialize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!this.calendar) {\n        this.initialize();\n      } else {\n        if (!ObjectUtils.equals(prevProps.events, this.props.events)) {\n          this.calendar.removeAllEventSources();\n          this.calendar.addEventSource(this.props.events);\n        }\n\n        if (!ObjectUtils.equals(prevProps.options, this.props.options)) {\n          for (var prop in this.props.options) {\n            var optionValue = this.props.options[prop];\n            this.config[prop] = optionValue;\n            this.calendar.setOption(prop, optionValue);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.calendar = new Calendar(this.element, this.config);\n      this.calendar.render();\n\n      if (this.props.events) {\n        this.calendar.removeAllEventSources();\n        this.calendar.addEventSource(this.props.events);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.calendar) {\n        this.calendar.destroy();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        ref: function ref(el) {\n          return _this.element = el;\n        },\n        style: this.props.style,\n        className: this.props.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return FullCalendar;\n}(Component);\nFullCalendar.defaultProps = {\n  id: null,\n  events: [],\n  style: null,\n  className: null,\n  options: null\n};\nFullCalendar.propTypes = {\n  id: PropTypes.string,\n  events: PropTypes.array,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  options: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/fullcalendar/FullCalendar.js"],"names":["React","Component","PropTypes","ObjectUtils","Calendar","FullCalendar","config","theme","props","options","prop","initialize","prevProps","calendar","equals","events","removeAllEventSources","addEventSource","optionValue","setOption","element","render","destroy","id","el","style","className","defaultProps","propTypes","string","array","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport {Calendar} from '@fullcalendar/core';\r\n\r\nexport class FullCalendar extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        events: [],\r\n        style: null,\r\n        className: null,\r\n        options: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        events: PropTypes.array,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        options: PropTypes.object\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.config = {\r\n            theme: true\r\n        };\r\n\r\n        if (this.props.options) {\r\n            for (let prop in this.props.options) {\r\n                this.config[prop] = this.props.options[prop];\r\n            }\r\n        }\r\n\r\n        this.initialize();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!this.calendar) {\r\n            this.initialize();\r\n        }\r\n        else {\r\n            if (!ObjectUtils.equals(prevProps.events, this.props.events)) {\r\n                this.calendar.removeAllEventSources();\r\n                this.calendar.addEventSource(this.props.events);\r\n            }\r\n\r\n            if (!ObjectUtils.equals(prevProps.options, this.props.options)) {\r\n                for (let prop in this.props.options) {\r\n                    let optionValue = this.props.options[prop];\r\n                    this.config[prop] = optionValue;\r\n                    this.calendar.setOption(prop, optionValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.calendar = new Calendar(this.element, this.config);\r\n        this.calendar.render();\r\n\r\n        if (this.props.events) {\r\n            this.calendar.removeAllEventSources();\r\n            this.calendar.addEventSource(this.props.events);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.calendar) {\r\n            this.calendar.destroy();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.id} ref={(el) => this.element = el} style={this.props.style} className={this.props.className}></div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}