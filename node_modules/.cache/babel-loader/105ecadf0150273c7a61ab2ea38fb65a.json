{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\datatable\\\\BodyRow.js\";\nimport React, { Component } from 'react';\nimport { classNames } from '../utils/ClassNames';\nimport { BodyCell } from './BodyCell';\nimport DomHandler from '../utils/DomHandler';\nexport var BodyRow = /*#__PURE__*/function (_Component) {\n  _inherits(BodyRow, _Component);\n\n  var _super = _createSuper(BodyRow);\n\n  function BodyRow(props) {\n    var _this;\n\n    _classCallCheck(this, BodyRow);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      editing: false\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onDoubleClick = _this.onDoubleClick.bind(_assertThisInitialized(_this));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_this));\n    _this.onRightClick = _this.onRightClick.bind(_assertThisInitialized(_this));\n    _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized(_this));\n    _this.onDragEnd = _this.onDragEnd.bind(_assertThisInitialized(_this));\n    _this.onDragOver = _this.onDragOver.bind(_assertThisInitialized(_this));\n    _this.onDragLeave = _this.onDragLeave.bind(_assertThisInitialized(_this));\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.onRowEditInit = _this.onRowEditInit.bind(_assertThisInitialized(_this));\n    _this.onRowEditSave = _this.onRowEditSave.bind(_assertThisInitialized(_this));\n    _this.onRowEditCancel = _this.onRowEditCancel.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BodyRow, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.props.onClick) {\n        this.props.onClick({\n          originalEvent: event,\n          data: this.props.rowData,\n          index: this.props.rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"onDoubleClick\",\n    value: function onDoubleClick(event) {\n      if (this.props.onDoubleClick) {\n        this.props.onDoubleClick({\n          originalEvent: event,\n          data: this.props.rowData,\n          index: this.props.rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(event) {\n      if (this.props.onTouchEnd) {\n        this.props.onTouchEnd(event);\n      }\n    }\n  }, {\n    key: \"onRightClick\",\n    value: function onRightClick(event) {\n      if (this.props.onRightClick) {\n        this.props.onRightClick({\n          originalEvent: event,\n          data: this.props.rowData,\n          index: this.props.rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (DomHandler.hasClass(event.target, 'p-table-reorderablerow-handle')) event.currentTarget.draggable = true;else event.currentTarget.draggable = false;\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(event) {\n      if (this.props.onDragEnd) {\n        this.props.onDragEnd(event);\n      }\n\n      event.currentTarget.draggable = false;\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event) {\n      if (this.props.onDragOver) {\n        this.props.onDragOver({\n          originalEvent: event,\n          rowElement: this.container\n        });\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      if (this.props.onDragLeave) {\n        this.props.onDragLeave({\n          originalEvent: event,\n          rowElement: this.container\n        });\n      }\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      if (this.props.onDrop) {\n        this.props.onDrop({\n          originalEvent: event,\n          rowElement: this.container\n        });\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      if (this.props.selectionMode) {\n        var row = event.currentTarget;\n\n        switch (event.which) {\n          //down arrow\n          case 40:\n            var nextRow = this.findNextSelectableRow(row);\n\n            if (nextRow) {\n              this.changeTabIndex(row, nextRow);\n              nextRow.focus();\n            }\n\n            event.preventDefault();\n            break;\n          //up arrow\n\n          case 38:\n            var prevRow = this.findPrevSelectableRow(row);\n\n            if (prevRow) {\n              this.changeTabIndex(row, prevRow);\n              prevRow.focus();\n            }\n\n            event.preventDefault();\n            break;\n          //enter or space\n\n          case 13: // @deprecated\n\n          case 32:\n            this.onClick(event);\n            event.preventDefault();\n            break;\n\n          default:\n            //no op\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"changeTabIndex\",\n    value: function changeTabIndex(currentRow, nextRow) {\n      if (currentRow && nextRow) {\n        currentRow.tabIndex = -1;\n        nextRow.tabIndex = 0;\n      }\n    }\n  }, {\n    key: \"findNextSelectableRow\",\n    value: function findNextSelectableRow(row) {\n      var nextRow = row.nextElementSibling;\n\n      if (nextRow) {\n        if (DomHandler.hasClass(nextRow, 'p-selectable-row')) return nextRow;else return this.findNextSelectableRow(nextRow);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"findPrevSelectableRow\",\n    value: function findPrevSelectableRow(row) {\n      var prevRow = row.previousElementSibling;\n\n      if (prevRow) {\n        if (DomHandler.hasClass(prevRow, 'p-selectable-row')) return prevRow;else return this.findPrevSelectableRow(prevRow);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"onRowEditInit\",\n    value: function onRowEditInit(event) {\n      if (this.props.onRowEditInit) {\n        this.props.onRowEditInit({\n          originalEvent: event,\n          data: this.props.rowData,\n          index: this.props.rowIndex\n        });\n      }\n\n      this.setState({\n        editing: true\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"onRowEditSave\",\n    value: function onRowEditSave(event) {\n      var valid = true;\n\n      if (this.props.rowEditorValidator) {\n        valid = this.props.rowEditorValidator(this.props.rowData);\n      }\n\n      if (this.props.onRowEditSave) {\n        this.props.onRowEditSave({\n          originalEvent: event,\n          data: this.props.rowData,\n          index: this.props.rowIndex\n        });\n      }\n\n      this.setState({\n        editing: !valid\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"onRowEditCancel\",\n    value: function onRowEditCancel(event) {\n      if (this.props.onRowEditCancel) {\n        this.props.onRowEditCancel({\n          originalEvent: event,\n          data: this.props.rowData,\n          index: this.props.rowIndex\n        });\n      }\n\n      this.setState({\n        editing: false\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"getTabIndex\",\n    value: function getTabIndex() {\n      return this.props.selectionMode ? this.props.rowIndex === 0 ? 0 : -1 : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = React.Children.toArray(this.props.children);\n      var conditionalClassNames = {\n        'p-highlight': this.props.selected,\n        'p-highlight-contextmenu': this.props.contextMenuSelected,\n        'p-selectable-row': this.props.selectionMode\n      };\n\n      if (this.props.rowClassName) {\n        var rowClassNameCondition = this.props.rowClassName(this.props.rowData);\n        conditionalClassNames = _objectSpread(_objectSpread({}, conditionalClassNames), rowClassNameCondition);\n      }\n\n      var className = classNames(conditionalClassNames);\n      var style = this.props.virtualScroll ? {\n        height: this.props.virtualRowHeight\n      } : {};\n      var hasRowSpanGrouping = this.props.rowGroupMode === 'rowspan';\n      var tabIndex = this.getTabIndex();\n      var cells = [];\n\n      for (var i = 0; i < columns.length; i++) {\n        var column = columns[i];\n        var rowSpan = void 0;\n\n        if (hasRowSpanGrouping) {\n          if (this.props.sortField === column.props.field) {\n            if (this.props.groupRowSpan) {\n              rowSpan = this.props.groupRowSpan;\n              className += ' p-datatable-rowspan-group';\n            } else {\n              continue;\n            }\n          }\n        }\n\n        var cell = /*#__PURE__*/React.createElement(BodyCell, Object.assign({\n          tableId: this.props.tableId,\n          key: i\n        }, column.props, {\n          value: this.props.value,\n          rowSpan: rowSpan,\n          rowData: this.props.rowData,\n          rowIndex: this.props.rowIndex,\n          onRowToggle: this.props.onRowToggle,\n          expanded: this.props.expanded,\n          onRadioClick: this.props.onRadioClick,\n          onCheckboxClick: this.props.onCheckboxClick,\n          selected: this.props.selected,\n          editMode: this.props.editMode,\n          editing: this.state.editing,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          showRowReorderElement: this.props.showRowReorderElement,\n          showSelectionElement: this.props.showSelectionElement,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 24\n          }\n        }));\n        cells.push(cell);\n      }\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        role: \"row\",\n        tabIndex: tabIndex,\n        ref: function ref(el) {\n          _this2.container = el;\n        },\n        className: className,\n        onClick: this.onClick,\n        onDoubleClick: this.onDoubleClick,\n        onTouchEnd: this.onTouchEnd,\n        onContextMenu: this.onRightClick,\n        onMouseDown: this.onMouseDown,\n        onDragStart: this.props.onDragStart,\n        onDragEnd: this.onDragEnd,\n        onDragOver: this.onDragOver,\n        onDragLeave: this.onDragLeave,\n        onDrop: this.onDrop,\n        style: style,\n        onKeyDown: this.onKeyDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, cells);\n    }\n  }]);\n\n  return BodyRow;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/datatable/BodyRow.js"],"names":["React","Component","classNames","BodyCell","DomHandler","BodyRow","props","state","editing","onClick","bind","onDoubleClick","onTouchEnd","onRightClick","onMouseDown","onDragEnd","onDragOver","onDragLeave","onDrop","onKeyDown","onRowEditInit","onRowEditSave","onRowEditCancel","event","originalEvent","data","rowData","index","rowIndex","hasClass","target","currentTarget","draggable","rowElement","container","preventDefault","selectionMode","row","which","nextRow","findNextSelectableRow","changeTabIndex","focus","prevRow","findPrevSelectableRow","currentRow","tabIndex","nextElementSibling","previousElementSibling","setState","valid","rowEditorValidator","columns","Children","toArray","children","conditionalClassNames","selected","contextMenuSelected","rowClassName","rowClassNameCondition","className","style","virtualScroll","height","virtualRowHeight","hasRowSpanGrouping","rowGroupMode","getTabIndex","cells","i","length","column","rowSpan","sortField","field","groupRowSpan","cell","tableId","value","onRowToggle","expanded","onRadioClick","onCheckboxClick","editMode","showRowReorderElement","showSelectionElement","push","el","onDragStart"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,WAAaC,OAAb;AAAA;;AAAA;;AAEI,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAIA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,+BAArB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAlB;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,+BAApB;AACA,UAAKI,WAAL,GAAmB,MAAKA,WAAL,CAAiBJ,IAAjB,+BAAnB;AACA,UAAKK,SAAL,GAAiB,MAAKA,SAAL,CAAeL,IAAf,+BAAjB;AACA,UAAKM,UAAL,GAAkB,MAAKA,UAAL,CAAgBN,IAAhB,+BAAlB;AACA,UAAKO,WAAL,GAAmB,MAAKA,WAAL,CAAiBP,IAAjB,+BAAnB;AACA,UAAKQ,MAAL,GAAc,MAAKA,MAAL,CAAYR,IAAZ,+BAAd;AACA,UAAKS,SAAL,GAAiB,MAAKA,SAAL,CAAeT,IAAf,+BAAjB;AACA,UAAKU,aAAL,GAAqB,MAAKA,aAAL,CAAmBV,IAAnB,+BAArB;AACA,UAAKW,aAAL,GAAqB,MAAKA,aAAL,CAAmBX,IAAnB,+BAArB;AACA,UAAKY,eAAL,GAAuB,MAAKA,eAAL,CAAqBZ,IAArB,+BAAvB;AAlBe;AAmBlB;;AArBL;AAAA;AAAA,WAuBI,iBAAQa,KAAR,EAAe;AACX,UAAI,KAAKjB,KAAL,CAAWG,OAAf,EAAwB;AACpB,aAAKH,KAAL,CAAWG,OAAX,CAAmB;AACfe,UAAAA,aAAa,EAAED,KADA;AAEfE,UAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,OAFF;AAGfC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB;AAHH,SAAnB;AAKH;AACJ;AA/BL;AAAA;AAAA,WAiCI,uBAAcL,KAAd,EAAqB;AACjB,UAAG,KAAKjB,KAAL,CAAWK,aAAd,EAA6B;AACzB,aAAKL,KAAL,CAAWK,aAAX,CAAyB;AACrBa,UAAAA,aAAa,EAAED,KADM;AAErBE,UAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,OAFI;AAGrBC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB;AAHG,SAAzB;AAKH;AACJ;AAzCL;AAAA;AAAA,WA2CI,oBAAWL,KAAX,EAAkB;AACd,UAAG,KAAKjB,KAAL,CAAWM,UAAd,EAA0B;AACtB,aAAKN,KAAL,CAAWM,UAAX,CAAsBW,KAAtB;AACH;AACJ;AA/CL;AAAA;AAAA,WAiDI,sBAAaA,KAAb,EAAoB;AAChB,UAAG,KAAKjB,KAAL,CAAWO,YAAd,EAA4B;AACxB,aAAKP,KAAL,CAAWO,YAAX,CAAwB;AACpBW,UAAAA,aAAa,EAAED,KADK;AAEpBE,UAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,OAFG;AAGpBC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB;AAHE,SAAxB;AAKH;AACJ;AAzDL;AAAA;AAAA,WA2DI,qBAAYL,KAAZ,EAAmB;AACf,UAAInB,UAAU,CAACyB,QAAX,CAAoBN,KAAK,CAACO,MAA1B,EAAkC,+BAAlC,CAAJ,EACIP,KAAK,CAACQ,aAAN,CAAoBC,SAApB,GAAgC,IAAhC,CADJ,KAGIT,KAAK,CAACQ,aAAN,CAAoBC,SAApB,GAAgC,KAAhC;AACP;AAhEL;AAAA;AAAA,WAkEI,mBAAUT,KAAV,EAAiB;AACb,UAAG,KAAKjB,KAAL,CAAWS,SAAd,EAAyB;AACrB,aAAKT,KAAL,CAAWS,SAAX,CAAqBQ,KAArB;AACH;;AACDA,MAAAA,KAAK,CAACQ,aAAN,CAAoBC,SAApB,GAAgC,KAAhC;AACH;AAvEL;AAAA;AAAA,WAyEI,oBAAWT,KAAX,EAAkB;AACd,UAAG,KAAKjB,KAAL,CAAWU,UAAd,EAA0B;AACtB,aAAKV,KAAL,CAAWU,UAAX,CAAsB;AAClBQ,UAAAA,aAAa,EAAED,KADG;AAElBU,UAAAA,UAAU,EAAE,KAAKC;AAFC,SAAtB;AAIH;;AACDX,MAAAA,KAAK,CAACY,cAAN;AACH;AAjFL;AAAA;AAAA,WAmFI,qBAAYZ,KAAZ,EAAmB;AACf,UAAG,KAAKjB,KAAL,CAAWW,WAAd,EAA2B;AACvB,aAAKX,KAAL,CAAWW,WAAX,CAAuB;AACnBO,UAAAA,aAAa,EAAED,KADI;AAEnBU,UAAAA,UAAU,EAAE,KAAKC;AAFE,SAAvB;AAIH;AACJ;AA1FL;AAAA;AAAA,WA4FI,gBAAOX,KAAP,EAAc;AACV,UAAG,KAAKjB,KAAL,CAAWY,MAAd,EAAsB;AAClB,aAAKZ,KAAL,CAAWY,MAAX,CAAkB;AACdM,UAAAA,aAAa,EAAED,KADD;AAEdU,UAAAA,UAAU,EAAE,KAAKC;AAFH,SAAlB;AAIH;;AACDX,MAAAA,KAAK,CAACY,cAAN;AACH;AApGL;AAAA;AAAA,WAsGI,mBAAUZ,KAAV,EAAiB;AACb,UAAI,KAAKjB,KAAL,CAAW8B,aAAf,EAA8B;AAC1B,YAAMC,GAAG,GAAGd,KAAK,CAACQ,aAAlB;;AAEA,gBAAQR,KAAK,CAACe,KAAd;AACI;AACA,eAAK,EAAL;AACI,gBAAIC,OAAO,GAAG,KAAKC,qBAAL,CAA2BH,GAA3B,CAAd;;AACA,gBAAIE,OAAJ,EAAa;AACT,mBAAKE,cAAL,CAAoBJ,GAApB,EAAyBE,OAAzB;AACAA,cAAAA,OAAO,CAACG,KAAR;AACH;;AAEDnB,YAAAA,KAAK,CAACY,cAAN;AACJ;AAEA;;AACA,eAAK,EAAL;AACI,gBAAIQ,OAAO,GAAG,KAAKC,qBAAL,CAA2BP,GAA3B,CAAd;;AACA,gBAAIM,OAAJ,EAAa;AACT,mBAAKF,cAAL,CAAoBJ,GAApB,EAAyBM,OAAzB;AACAA,cAAAA,OAAO,CAACD,KAAR;AACH;;AAEDnB,YAAAA,KAAK,CAACY,cAAN;AACJ;AAEA;;AACA,eAAK,EAAL,CAxBJ,CAwBa;;AACT,eAAK,EAAL;AACI,iBAAK1B,OAAL,CAAac,KAAb;AACAA,YAAAA,KAAK,CAACY,cAAN;AACJ;;AAEA;AACI;AACJ;AAhCJ;AAkCH;AACJ;AA7IL;AAAA;AAAA,WA+II,wBAAeU,UAAf,EAA2BN,OAA3B,EAAoC;AAChC,UAAIM,UAAU,IAAIN,OAAlB,EAA2B;AACvBM,QAAAA,UAAU,CAACC,QAAX,GAAsB,CAAC,CAAvB;AACAP,QAAAA,OAAO,CAACO,QAAR,GAAmB,CAAnB;AACH;AACJ;AApJL;AAAA;AAAA,WAsJI,+BAAsBT,GAAtB,EAA2B;AACvB,UAAIE,OAAO,GAAGF,GAAG,CAACU,kBAAlB;;AACA,UAAIR,OAAJ,EAAa;AACT,YAAInC,UAAU,CAACyB,QAAX,CAAoBU,OAApB,EAA6B,kBAA7B,CAAJ,EACI,OAAOA,OAAP,CADJ,KAGI,OAAO,KAAKC,qBAAL,CAA2BD,OAA3B,CAAP;AACP,OALD,MAMK;AACD,eAAO,IAAP;AACH;AACJ;AAjKL;AAAA;AAAA,WAmKI,+BAAsBF,GAAtB,EAA2B;AACvB,UAAIM,OAAO,GAAGN,GAAG,CAACW,sBAAlB;;AACA,UAAIL,OAAJ,EAAa;AACT,YAAIvC,UAAU,CAACyB,QAAX,CAAoBc,OAApB,EAA6B,kBAA7B,CAAJ,EACI,OAAOA,OAAP,CADJ,KAGI,OAAO,KAAKC,qBAAL,CAA2BD,OAA3B,CAAP;AACP,OALD,MAMK;AACD,eAAO,IAAP;AACH;AACJ;AA9KL;AAAA;AAAA,WAgLI,uBAAcpB,KAAd,EAAqB;AACjB,UAAI,KAAKjB,KAAL,CAAWc,aAAf,EAA8B;AAC1B,aAAKd,KAAL,CAAWc,aAAX,CAAyB;AACrBI,UAAAA,aAAa,EAAED,KADM;AAErBE,UAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,OAFI;AAGrBC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB;AAHG,SAAzB;AAKH;;AAED,WAAKqB,QAAL,CAAc;AACVzC,QAAAA,OAAO,EAAE;AADC,OAAd;AAIAe,MAAAA,KAAK,CAACY,cAAN;AACH;AA9LL;AAAA;AAAA,WAgMI,uBAAcZ,KAAd,EAAqB;AACjB,UAAI2B,KAAK,GAAG,IAAZ;;AAEA,UAAI,KAAK5C,KAAL,CAAW6C,kBAAf,EAAmC;AAC/BD,QAAAA,KAAK,GAAG,KAAK5C,KAAL,CAAW6C,kBAAX,CAA8B,KAAK7C,KAAL,CAAWoB,OAAzC,CAAR;AACH;;AAED,UAAI,KAAKpB,KAAL,CAAWe,aAAf,EAA8B;AAC1B,aAAKf,KAAL,CAAWe,aAAX,CAAyB;AACrBG,UAAAA,aAAa,EAAED,KADM;AAErBE,UAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,OAFI;AAGrBC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB;AAHG,SAAzB;AAKH;;AAED,WAAKqB,QAAL,CAAc;AACVzC,QAAAA,OAAO,EAAE,CAAC0C;AADA,OAAd;AAIA3B,MAAAA,KAAK,CAACY,cAAN;AACH;AApNL;AAAA;AAAA,WAsNI,yBAAgBZ,KAAhB,EAAuB;AACnB,UAAI,KAAKjB,KAAL,CAAWgB,eAAf,EAAgC;AAC5B,aAAKhB,KAAL,CAAWgB,eAAX,CAA2B;AACvBE,UAAAA,aAAa,EAAED,KADQ;AAEvBE,UAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,OAFM;AAGvBC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB;AAHK,SAA3B;AAKH;;AAED,WAAKqB,QAAL,CAAc;AACVzC,QAAAA,OAAO,EAAE;AADC,OAAd;AAIAe,MAAAA,KAAK,CAACY,cAAN;AACH;AApOL;AAAA;AAAA,WAsOI,uBAAc;AACV,aAAO,KAAK7B,KAAL,CAAW8B,aAAX,GAA4B,KAAK9B,KAAL,CAAWsB,QAAX,KAAwB,CAAxB,GAA4B,CAA5B,GAAgC,CAAC,CAA7D,GAAkE,IAAzE;AACH;AAxOL;AAAA;AAAA,WA0OI,kBAAS;AAAA;;AACL,UAAIwB,OAAO,GAAGpD,KAAK,CAACqD,QAAN,CAAeC,OAAf,CAAuB,KAAKhD,KAAL,CAAWiD,QAAlC,CAAd;AACA,UAAIC,qBAAqB,GAAG;AACxB,uBAAe,KAAKlD,KAAL,CAAWmD,QADF;AAExB,mCAA2B,KAAKnD,KAAL,CAAWoD,mBAFd;AAGxB,4BAAoB,KAAKpD,KAAL,CAAW8B;AAHP,OAA5B;;AAMA,UAAI,KAAK9B,KAAL,CAAWqD,YAAf,EAA6B;AACzB,YAAIC,qBAAqB,GAAG,KAAKtD,KAAL,CAAWqD,YAAX,CAAwB,KAAKrD,KAAL,CAAWoB,OAAnC,CAA5B;AACA8B,QAAAA,qBAAqB,mCAAOA,qBAAP,GAAiCI,qBAAjC,CAArB;AACH;;AACD,UAAIC,SAAS,GAAG3D,UAAU,CAACsD,qBAAD,CAA1B;AACA,UAAIM,KAAK,GAAG,KAAKxD,KAAL,CAAWyD,aAAX,GAA2B;AAACC,QAAAA,MAAM,EAAE,KAAK1D,KAAL,CAAW2D;AAApB,OAA3B,GAAmE,EAA/E;AACA,UAAIC,kBAAkB,GAAG,KAAK5D,KAAL,CAAW6D,YAAX,KAA4B,SAArD;AACA,UAAIrB,QAAQ,GAAG,KAAKsB,WAAL,EAAf;AACA,UAAIC,KAAK,GAAG,EAAZ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,OAAO,CAACmB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAIE,MAAM,GAAGpB,OAAO,CAACkB,CAAD,CAApB;AACA,YAAIG,OAAO,SAAX;;AACA,YAAGP,kBAAH,EAAuB;AACnB,cAAG,KAAK5D,KAAL,CAAWoE,SAAX,KAAyBF,MAAM,CAAClE,KAAP,CAAaqE,KAAzC,EAAgD;AAC5C,gBAAG,KAAKrE,KAAL,CAAWsE,YAAd,EAA4B;AACxBH,cAAAA,OAAO,GAAG,KAAKnE,KAAL,CAAWsE,YAArB;AACAf,cAAAA,SAAS,IAAI,4BAAb;AACH,aAHD,MAIK;AACD;AACH;AACJ;AACJ;;AAED,YAAIgB,IAAI,gBAAG,oBAAC,QAAD;AAAU,UAAA,OAAO,EAAE,KAAKvE,KAAL,CAAWwE,OAA9B;AAAuC,UAAA,GAAG,EAAER;AAA5C,WAAmDE,MAAM,CAAClE,KAA1D;AAAiE,UAAA,KAAK,EAAE,KAAKA,KAAL,CAAWyE,KAAnF;AAA0F,UAAA,OAAO,EAAEN,OAAnG;AAA4G,UAAA,OAAO,EAAE,KAAKnE,KAAL,CAAWoB,OAAhI;AAAyI,UAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWsB,QAA9J;AAAwK,UAAA,WAAW,EAAE,KAAKtB,KAAL,CAAW0E,WAAhM;AAA6M,UAAA,QAAQ,EAAE,KAAK1E,KAAL,CAAW2E,QAAlO;AACC,UAAA,YAAY,EAAE,KAAK3E,KAAL,CAAW4E,YAD1B;AACwC,UAAA,eAAe,EAAE,KAAK5E,KAAL,CAAW6E,eADpE;AACqF,UAAA,QAAQ,EAAE,KAAK7E,KAAL,CAAWmD,QAD1G;AAEC,UAAA,QAAQ,EAAE,KAAKnD,KAAL,CAAW8E,QAFtB;AAEgC,UAAA,OAAO,EAAE,KAAK7E,KAAL,CAAWC,OAFpD;AAE6D,UAAA,aAAa,EAAE,KAAKY,aAFjF;AAEgG,UAAA,aAAa,EAAE,KAAKC,aAFpH;AAEmI,UAAA,eAAe,EAAE,KAAKC,eAFzJ;AAGC,UAAA,qBAAqB,EAAE,KAAKhB,KAAL,CAAW+E,qBAHnC;AAG0D,UAAA,oBAAoB,EAAE,KAAK/E,KAAL,CAAWgF,oBAH3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAX;AAKAjB,QAAAA,KAAK,CAACkB,IAAN,CAAWV,IAAX;AACH;;AAED,0BACI;AAAI,QAAA,IAAI,EAAC,KAAT;AAAe,QAAA,QAAQ,EAAE/B,QAAzB;AAAmC,QAAA,GAAG,EAAE,aAAC0C,EAAD,EAAQ;AAAC,UAAA,MAAI,CAACtD,SAAL,GAAiBsD,EAAjB;AAAqB,SAAtE;AAAwE,QAAA,SAAS,EAAE3B,SAAnF;AAA8F,QAAA,OAAO,EAAE,KAAKpD,OAA5G;AAAqH,QAAA,aAAa,EAAE,KAAKE,aAAzI;AAAwJ,QAAA,UAAU,EAAE,KAAKC,UAAzK;AAAqL,QAAA,aAAa,EAAE,KAAKC,YAAzM;AAAuN,QAAA,WAAW,EAAE,KAAKC,WAAzO;AACI,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWmF,WAD5B;AACyC,QAAA,SAAS,EAAE,KAAK1E,SADzD;AACoE,QAAA,UAAU,EAAE,KAAKC,UADrF;AACiG,QAAA,WAAW,EAAE,KAAKC,WADnH;AACgI,QAAA,MAAM,EAAE,KAAKC,MAD7I;AACqJ,QAAA,KAAK,EAAE4C,KAD5J;AACmK,QAAA,SAAS,EAAE,KAAK3C,SADnL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKkD,KAFL,CADJ;AAMH;AAzRL;;AAAA;AAAA,EAA6BpE,SAA7B","sourcesContent":["import React, { Component } from 'react';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport {BodyCell} from './BodyCell';\r\nimport DomHandler from '../utils/DomHandler';\r\n\r\nexport class BodyRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onDoubleClick = this.onDoubleClick.bind(this);\r\n        this.onTouchEnd = this.onTouchEnd.bind(this);\r\n        this.onRightClick = this.onRightClick.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDragLeave = this.onDragLeave.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onRowEditInit = this.onRowEditInit.bind(this);\r\n        this.onRowEditSave = this.onRowEditSave.bind(this);\r\n        this.onRowEditCancel = this.onRowEditCancel.bind(this);\r\n    }\r\n\r\n    onClick(event) {\r\n        if (this.props.onClick) {\r\n            this.props.onClick({\r\n                originalEvent: event,\r\n                data: this.props.rowData,\r\n                index: this.props.rowIndex\r\n            });\r\n        }\r\n    }\r\n\r\n    onDoubleClick(event) {\r\n        if(this.props.onDoubleClick) {\r\n            this.props.onDoubleClick({\r\n                originalEvent: event,\r\n                data: this.props.rowData,\r\n                index: this.props.rowIndex\r\n            });\r\n        }\r\n    }\r\n\r\n    onTouchEnd(event) {\r\n        if(this.props.onTouchEnd) {\r\n            this.props.onTouchEnd(event);\r\n        }\r\n    }\r\n\r\n    onRightClick(event) {\r\n        if(this.props.onRightClick) {\r\n            this.props.onRightClick({\r\n                originalEvent: event,\r\n                data: this.props.rowData,\r\n                index: this.props.rowIndex\r\n            });\r\n        }\r\n    }\r\n\r\n    onMouseDown(event) {\r\n        if (DomHandler.hasClass(event.target, 'p-table-reorderablerow-handle'))\r\n            event.currentTarget.draggable = true;\r\n        else\r\n            event.currentTarget.draggable = false;\r\n    }\r\n\r\n    onDragEnd(event) {\r\n        if(this.props.onDragEnd) {\r\n            this.props.onDragEnd(event);\r\n        }\r\n        event.currentTarget.draggable = false;\r\n    }\r\n\r\n    onDragOver(event) {\r\n        if(this.props.onDragOver) {\r\n            this.props.onDragOver({\r\n                originalEvent: event,\r\n                rowElement: this.container\r\n            });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragLeave(event) {\r\n        if(this.props.onDragLeave) {\r\n            this.props.onDragLeave({\r\n                originalEvent: event,\r\n                rowElement: this.container\r\n            });\r\n        }\r\n    }\r\n\r\n    onDrop(event) {\r\n        if(this.props.onDrop) {\r\n            this.props.onDrop({\r\n                originalEvent: event,\r\n                rowElement: this.container\r\n            });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (this.props.selectionMode) {\r\n            const row = event.currentTarget;\r\n\r\n            switch (event.which) {\r\n                //down arrow\r\n                case 40:\r\n                    let nextRow = this.findNextSelectableRow(row);\r\n                    if (nextRow) {\r\n                        this.changeTabIndex(row, nextRow);\r\n                        nextRow.focus();\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                break;\r\n\r\n                //up arrow\r\n                case 38:\r\n                    let prevRow = this.findPrevSelectableRow(row);\r\n                    if (prevRow) {\r\n                        this.changeTabIndex(row, prevRow);\r\n                        prevRow.focus();\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                break;\r\n\r\n                //enter or space\r\n                case 13: // @deprecated\r\n                case 32:\r\n                    this.onClick(event);\r\n                    event.preventDefault();\r\n                break;\r\n\r\n                default:\r\n                    //no op\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeTabIndex(currentRow, nextRow) {\r\n        if (currentRow && nextRow) {\r\n            currentRow.tabIndex = -1;\r\n            nextRow.tabIndex = 0;\r\n        }\r\n    }\r\n\r\n    findNextSelectableRow(row) {\r\n        let nextRow = row.nextElementSibling;\r\n        if (nextRow) {\r\n            if (DomHandler.hasClass(nextRow, 'p-selectable-row'))\r\n                return nextRow;\r\n            else\r\n                return this.findNextSelectableRow(nextRow);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    findPrevSelectableRow(row) {\r\n        let prevRow = row.previousElementSibling;\r\n        if (prevRow) {\r\n            if (DomHandler.hasClass(prevRow, 'p-selectable-row'))\r\n                return prevRow;\r\n            else\r\n                return this.findPrevSelectableRow(prevRow);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onRowEditInit(event) {\r\n        if (this.props.onRowEditInit) {\r\n            this.props.onRowEditInit({\r\n                originalEvent: event,\r\n                data: this.props.rowData,\r\n                index: this.props.rowIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            editing: true\r\n        });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    onRowEditSave(event) {\r\n        let valid = true;\r\n\r\n        if (this.props.rowEditorValidator) {\r\n            valid = this.props.rowEditorValidator(this.props.rowData);\r\n        }\r\n\r\n        if (this.props.onRowEditSave) {\r\n            this.props.onRowEditSave({\r\n                originalEvent: event,\r\n                data: this.props.rowData,\r\n                index: this.props.rowIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            editing: !valid\r\n        });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    onRowEditCancel(event) {\r\n        if (this.props.onRowEditCancel) {\r\n            this.props.onRowEditCancel({\r\n                originalEvent: event,\r\n                data: this.props.rowData,\r\n                index: this.props.rowIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            editing: false\r\n        });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    getTabIndex() {\r\n        return this.props.selectionMode ? (this.props.rowIndex === 0 ? 0 : -1) : null;\r\n    }\r\n\r\n    render() {\r\n        let columns = React.Children.toArray(this.props.children);\r\n        let conditionalClassNames = {\r\n            'p-highlight': this.props.selected,\r\n            'p-highlight-contextmenu': this.props.contextMenuSelected,\r\n            'p-selectable-row': this.props.selectionMode\r\n        };\r\n\r\n        if (this.props.rowClassName) {\r\n            let rowClassNameCondition = this.props.rowClassName(this.props.rowData);\r\n            conditionalClassNames = {...conditionalClassNames, ...rowClassNameCondition};\r\n        }\r\n        let className = classNames(conditionalClassNames);\r\n        let style = this.props.virtualScroll ? {height: this.props.virtualRowHeight} : {};\r\n        let hasRowSpanGrouping = this.props.rowGroupMode === 'rowspan';\r\n        let tabIndex = this.getTabIndex();\r\n        let cells = [];\r\n\r\n        for (let i = 0; i < columns.length; i++) {\r\n            let column = columns[i];\r\n            let rowSpan;\r\n            if(hasRowSpanGrouping) {\r\n                if(this.props.sortField === column.props.field) {\r\n                    if(this.props.groupRowSpan) {\r\n                        rowSpan = this.props.groupRowSpan;\r\n                        className += ' p-datatable-rowspan-group'\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let cell = <BodyCell tableId={this.props.tableId} key={i} {...column.props} value={this.props.value} rowSpan={rowSpan} rowData={this.props.rowData} rowIndex={this.props.rowIndex} onRowToggle={this.props.onRowToggle} expanded={this.props.expanded}\r\n                        onRadioClick={this.props.onRadioClick} onCheckboxClick={this.props.onCheckboxClick} selected={this.props.selected}\r\n                        editMode={this.props.editMode} editing={this.state.editing} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}\r\n                        showRowReorderElement={this.props.showRowReorderElement} showSelectionElement={this.props.showSelectionElement}/>;\r\n\r\n            cells.push(cell);\r\n        }\r\n\r\n        return (\r\n            <tr role=\"row\" tabIndex={tabIndex} ref={(el) => {this.container = el;}} className={className} onClick={this.onClick} onDoubleClick={this.onDoubleClick} onTouchEnd={this.onTouchEnd} onContextMenu={this.onRightClick} onMouseDown={this.onMouseDown}\r\n                onDragStart={this.props.onDragStart} onDragEnd={this.onDragEnd} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave} onDrop={this.onDrop} style={style} onKeyDown={this.onKeyDown}>\r\n                {cells}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}