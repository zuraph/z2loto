{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\views\\\\transferProviders\\\\components\\\\providerGroups.js\";\n\nimport { Column } from \"../../../components/column/Column\";\nimport { DataTable } from \"../../../components/datatable/DataTable\";\nimport React, { useEffect, useState } from \"react\";\nimport { Actions } from \"../../../core\";\nimport { ProgressBar } from \"../../../components/progressbar/ProgressBar\";\nexport var ProviderGroups = function ProviderGroups(_ref) {\n  var onSelect = _ref.onSelect;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  useEffect(function () {\n    loadData();\n  }, []);\n  useEffect(function () {\n    if (selected) {\n      onSelect(selected.id);\n    }\n  }, [selected]);\n\n  var loadData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Actions.Providers.ProviderGroups();\n\n            case 2:\n              response = _context.sent;\n              setData(response.status ? response.data.data : []);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !data && /*#__PURE__*/React.createElement(ProgressBar, {\n    style: {\n      height: '6px'\n    },\n    mode: \"indeterminate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    selection: selected,\n    onSelectionChange: function onSelectionChange(e) {\n      return setSelected(e.value);\n    },\n    selectionMode: \"single\",\n    dataKey: \"id\",\n    scrollable: true,\n    value: data,\n    className: \"p-datatable-gridlines\",\n    rowClassName: function rowClassName(data) {\n      return {\n        'bg-red': data.disabled === 1\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    field: \"id\",\n    header: \"ID\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"name\",\n    header: \"Group Name\",\n    filter: true,\n    filterPlaceholder: \"Search by name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"disabled\",\n    header: \"On/Off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/views/transferProviders/components/providerGroups.js"],"names":["Column","DataTable","React","useEffect","useState","Actions","ProgressBar","ProviderGroups","onSelect","data","setData","selected","setSelected","loadData","id","Providers","response","status","height","e","value","disabled"],"mappings":";;;;;;;AAAA,SAAQA,MAAR,QAAqB,mCAArB;AACA,SAAQC,SAAR,QAAwB,yCAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAAQC,WAAR,QAA0B,6CAA1B;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAe;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AACzC,kBAAqBJ,QAAQ,CAAC,IAAD,CAA7B;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAYC,OAAZ;;AACA,mBAA6BN,QAAQ,CAAC,IAAD,CAArC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAgBC,WAAhB;;AACAT,EAAAA,SAAS,CAAC,YAAI;AACVU,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;AAIAV,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGQ,QAAH,EAAY;AACRH,MAAAA,QAAQ,CAACG,QAAQ,CAACG,EAAV,CAAR;AACH;AACJ,GAJQ,EAIP,CAACH,QAAD,CAJO,CAAT;;AAMA,MAAME,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUR,OAAO,CAACU,SAAR,CAAkBR,cAAlB,EADV;;AAAA;AACPS,cAAAA,QADO;AAEbN,cAAAA,OAAO,CAACM,QAAQ,CAACC,MAAT,GAAgBD,QAAQ,CAACP,IAAT,CAAcA,IAA9B,GAAmC,EAApC,CAAP;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARI,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAMA,sBACI,0CACK,CAACJ,IAAD,iBAAS,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE;AAAV,KAApB;AAAuC,IAAA,IAAI,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,eAEI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAEP,QADf;AACyB,IAAA,iBAAiB,EAAE,2BAAAQ,CAAC;AAAA,aAAIP,WAAW,CAACO,CAAC,CAACC,KAAH,CAAf;AAAA,KAD7C;AACuE,IAAA,aAAa,EAAC,QADrF;AAC8F,IAAA,OAAO,EAAC,IADtG;AAEI,IAAA,UAAU,MAFd;AAEe,IAAA,KAAK,EAAEX,IAFtB;AAE6B,IAAA,SAAS,EAAC,uBAFvC;AAE+D,IAAA,YAAY,EAAE,sBAAAA,IAAI,EAAI;AAChF,aAAO;AACJ,kBAAUA,IAAI,CAACY,QAAL,KAAkB;AADxB,OAAP;AAGJ,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAmB,IAAA,MAAM,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,MAAM,EAAC,YAA5B;AAAyC,IAAA,MAAM,MAA/C;AAAiD,IAAA,iBAAiB,EAAC,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,MAAM,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAFJ,CADJ;AAiBH,CApCM","sourcesContent":["import {Column} from \"../../../components/column/Column\";\r\nimport {DataTable} from \"../../../components/datatable/DataTable\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Actions} from \"../../../core\";\r\nimport {ProgressBar} from \"../../../components/progressbar/ProgressBar\";\r\n\r\nexport const ProviderGroups = ({onSelect}) =>{\r\n    const [data,setData]=useState(null)\r\n    const [selected,setSelected]=useState(null)\r\n    useEffect(()=>{\r\n        loadData()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(selected){\r\n            onSelect(selected.id)\r\n        }\r\n    },[selected])\r\n\r\n    const loadData = async () => {\r\n        const response = await Actions.Providers.ProviderGroups();\r\n        setData(response.status?response.data.data:[])\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!data && <ProgressBar style={{ height: '6px' }} mode=\"indeterminate\" />}\r\n            <DataTable\r\n                selection={selected} onSelectionChange={e => setSelected(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                scrollable value={data}  className=\"p-datatable-gridlines\" rowClassName={data => {\r\n                 return {\r\n                    'bg-red': data.disabled === 1\r\n                }\r\n            }}>\r\n                <Column field=\"id\" header=\"ID\" />\r\n                <Column field=\"name\" header=\"Group Name\" filter  filterPlaceholder=\"Search by name\"/>\r\n                <Column field=\"disabled\" header=\"On/Off\"/>\r\n            </DataTable>\r\n        </>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}