{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\toast\\\\ToastDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var ToastDoc = /*#__PURE__*/function (_Component) {\n  _inherits(ToastDoc, _Component);\n\n  var _super = _createSuper(ToastDoc);\n\n  function ToastDoc(props) {\n    var _this;\n\n    _classCallCheck(this, ToastDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Toast } from 'primereact/toast';\\nimport { Button } from 'primereact/button';\\nimport './ToastDemo.css';\\n\\nexport class ToastDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.showSuccess = this.showSuccess.bind(this);\\n        this.showInfo = this.showInfo.bind(this);\\n        this.showWarn = this.showWarn.bind(this);\\n        this.showError = this.showError.bind(this);\\n        this.showTopLeft = this.showTopLeft.bind(this);\\n        this.showBottomLeft = this.showBottomLeft.bind(this);\\n        this.showBottomRight = this.showBottomRight.bind(this);\\n        this.showMultiple = this.showMultiple.bind(this);\\n        this.showSticky = this.showSticky.bind(this);\\n        this.showConfirm = this.showConfirm.bind(this);\\n        this.clear = this.clear.bind(this);\\n    }\\n\\n    showSuccess() {\\n        this.toast.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    showInfo() {\\n        this.toast.show({severity:'info', summary: 'Info Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    showWarn() {\\n        this.toast.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    showError() {\\n        this.toast.show({severity:'error', summary: 'Error Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    showTopLeft() {\\n        this.toastTL.show({severity: 'info', summary: 'Info Message', detail: 'Message Content', life: 3000});\\n    }\\n\\n    showBottomLeft() {\\n        this.toastBL.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    showBottomRight() {\\n        this.toastBR.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    showSticky() {\\n        this.toast.show({severity: 'info', summary: 'Sticky Message', detail: 'Message Content', sticky: true});\\n    }\\n\\n    showConfirm() {\\n        this.toastBC.show({ severity: 'warn', sticky: true, content: (\\n            <div className=\\\"p-flex p-flex-column\\\" style={{flex: '1'}}>\\n                <div className=\\\"p-text-center\\\">\\n                    <i className=\\\"pi pi-exclamation-triangle\\\" style={{fontSize: '3rem'}}></i>\\n                    <h4>Are you sure?</h4>\\n                    <p>Confirm to proceed</p>\\n                </div>\\n                <div className=\\\"p-grid p-fluid\\\">\\n                    <div className=\\\"p-col-6\\\">\\n                        <Button type=\\\"button\\\" label=\\\"Yes\\\" className=\\\"p-button-success\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-6\\\">\\n                        <Button type=\\\"button\\\" label=\\\"No\\\" className=\\\"p-button-secondary\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n        ) });\\n    }\\n\\n    showMultiple() {\\n        this.toast.show([\\n            {severity:'info', summary:'Message 1', detail:'Message 1 Content', life: 3000},\\n            {severity:'info', summary:'Message 2', detail:'Message 2 Content', life: 3000},\\n            {severity:'info', summary:'Message 3', detail:'Message 3 Content', life: 3000}\\n        ]);\\n    }\\n\\n    clear() {\\n        this.toast.clear();\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => this.toast = el} />\\n                <Toast ref={(el) => this.toastTL = el} position=\\\"top-left\\\" />\\n                <Toast ref={(el) => this.toastBL = el} position=\\\"bottom-left\\\" />\\n                <Toast ref={(el) => this.toastBR = el} position=\\\"bottom-right\\\" />\\n                <Toast ref={(el) => this.toastBC = el} position=\\\"bottom-center\\\" />\\n\\n                <div className=\\\"card toast-demo\\\">\\n                    <h5>Severities</h5>\\n                    <Button label=\\\"Success\\\" className=\\\"p-button-success\\\" onClick={this.showSuccess} />\\n                    <Button label=\\\"Info\\\" className=\\\"p-button-info\\\" onClick={this.showInfo} />\\n                    <Button label=\\\"Warn\\\" className=\\\"p-button-warning\\\" onClick={this.showWarn} />\\n                    <Button label=\\\"Error\\\" className=\\\"p-button-danger\\\" onClick={this.showError} />\\n\\n                    <h5>Positions</h5>\\n                    <Button label=\\\"Top Left\\\" className=\\\"p-mr-2\\\" onClick={this.showTopLeft} />\\n                    <Button label=\\\"Bottom Left\\\" className=\\\"p-button-warning\\\" onClick={this.showBottomLeft} />\\n                    <Button label=\\\"Bottom Right\\\" className=\\\"p-button-success\\\" onClick={this.showBottomRight} />\\n\\n                    <h5>Options</h5>\\n                    <Button onClick={this.showMultiple} label=\\\"Multiple\\\" className=\\\"p-button-warning\\\" />\\n                    <Button onClick={this.showSticky} label=\\\"Sticky\\\" />\\n\\n                    <h5>Clear</h5>\\n                    <Button onClick={this.clear} label=\\\"Clear\\\" />\\n\\n                    <h5>Custom</h5>\\n                    <Button type=\\\"button\\\" onClick={this.showConfirm} label=\\\"Confirm\\\" className=\\\"ui-button-warning\\\" />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useRef } from 'react';\\nimport { Toast } from 'primereact/toast';\\nimport { Button } from 'primereact/button';\\nimport './ToastDemo.css';\\n\\nconst ToastDemo = () => {\\n    const toast = useRef(null);\\n    const toastTL = useRef(null);\\n    const toastBL = useRef(null);\\n    const toastBR = useRef(null);\\n    const toastBC = useRef(null);\\n\\n    const showSuccess = () => {\\n        toast.current.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showInfo = () => {\\n        toast.current.show({severity:'info', summary: 'Info Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showWarn = () => {\\n        toast.current.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showError = () => {\\n        toast.current.show({severity:'error', summary: 'Error Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showTopLeft = () => {\\n        toastTL.current.show({severity: 'info', summary: 'Info Message', detail: 'Message Content', life: 3000});\\n    }\\n\\n    const showBottomLeft = () => {\\n        toastBL.current.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showBottomRight = () => {\\n        toastBR.current.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showSticky = () => {\\n        toast.current.show({severity: 'info', summary: 'Sticky Message', detail: 'Message Content', sticky: true});\\n    }\\n\\n    const showConfirm = () => {\\n        toastBC.current.show({ severity: 'warn', sticky: true, content: (\\n            <div className=\\\"p-flex p-flex-column\\\" style={{flex: '1'}}>\\n                <div className=\\\"p-text-center\\\">\\n                    <i className=\\\"pi pi-exclamation-triangle\\\" style={{fontSize: '3rem'}}></i>\\n                    <h4>Are you sure?</h4>\\n                    <p>Confirm to proceed</p>\\n                </div>\\n                <div className=\\\"p-grid p-fluid\\\">\\n                    <div className=\\\"p-col-6\\\">\\n                        <Button type=\\\"button\\\" label=\\\"Yes\\\" className=\\\"p-button-success\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-6\\\">\\n                        <Button type=\\\"button\\\" label=\\\"No\\\" className=\\\"p-button-secondary\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n        ) });\\n    }\\n\\n    const showMultiple = () => {\\n        toast.current.show([\\n            {severity:'info', summary:'Message 1', detail:'Message 1 Content', life: 3000},\\n            {severity:'info', summary:'Message 2', detail:'Message 2 Content', life: 3000},\\n            {severity:'info', summary:'Message 3', detail:'Message 3 Content', life: 3000}\\n        ]);\\n    }\\n\\n    const clear = () => {\\n        toast.current.clear();\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n            <Toast ref={toastTL} position=\\\"top-left\\\" />\\n            <Toast ref={toastBL} position=\\\"bottom-left\\\" />\\n            <Toast ref={toastBR} position=\\\"bottom-right\\\" />\\n            <Toast ref={toastBC} position=\\\"bottom-center\\\" />\\n\\n            <div className=\\\"card toast-demo\\\">\\n                <h5>Severities</h5>\\n                <Button label=\\\"Success\\\" className=\\\"p-button-success\\\" onClick={showSuccess} />\\n                <Button label=\\\"Info\\\" className=\\\"p-button-info\\\" onClick={showInfo} />\\n                <Button label=\\\"Warn\\\" className=\\\"p-button-warning\\\" onClick={showWarn} />\\n                <Button label=\\\"Error\\\" className=\\\"p-button-danger\\\" onClick={showError} />\\n\\n                <h5>Positions</h5>\\n                <Button label=\\\"Top Left\\\" className=\\\"p-mr-2\\\" onClick={showTopLeft} />\\n                <Button label=\\\"Bottom Left\\\" className=\\\"p-button-warning\\\" onClick={showBottomLeft} />\\n                <Button label=\\\"Bottom Right\\\" className=\\\"p-button-success\\\" onClick={showBottomRight} />\\n\\n                <h5>Options</h5>\\n                <Button onClick={showMultiple} label=\\\"Multiple\\\" className=\\\"p-button-warning\\\" />\\n                <Button onClick={showSticky} label=\\\"Sticky\\\" />\\n\\n                <h5>Clear</h5>\\n                <Button onClick={clear} label=\\\"Clear\\\" />\\n\\n                <h5>Custom</h5>\\n                <Button type=\\\"button\\\" onClick={showConfirm} label=\\\"Confirm\\\" className=\\\"ui-button-warning\\\" />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useRef } from 'react';\\nimport { Toast } from 'primereact/toast';\\nimport { Button } from 'primereact/button';\\nimport './ToastDemo.css';\\n\\nconst ToastDemo = () => {\\n    const toast = useRef(null);\\n    const toastTL = useRef(null);\\n    const toastBL = useRef(null);\\n    const toastBR = useRef(null);\\n    const toastBC = useRef(null);\\n\\n    const showSuccess = () => {\\n        toast.current.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showInfo = () => {\\n        toast.current.show({severity:'info', summary: 'Info Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showWarn = () => {\\n        toast.current.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showError = () => {\\n        toast.current.show({severity:'error', summary: 'Error Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showTopLeft = () => {\\n        toastTL.current.show({severity: 'info', summary: 'Info Message', detail: 'Message Content', life: 3000});\\n    }\\n\\n    const showBottomLeft = () => {\\n        toastBL.current.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showBottomRight = () => {\\n        toastBR.current.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\\n    }\\n\\n    const showSticky = () => {\\n        toast.current.show({severity: 'info', summary: 'Sticky Message', detail: 'Message Content', sticky: true});\\n    }\\n\\n    const showConfirm = () => {\\n        toastBC.current.show({ severity: 'warn', sticky: true, content: (\\n            <div className=\\\"p-flex p-flex-column\\\" style={{flex: '1'}}>\\n                <div className=\\\"p-text-center\\\">\\n                    <i className=\\\"pi pi-exclamation-triangle\\\" style={{fontSize: '3rem'}}></i>\\n                    <h4>Are you sure?</h4>\\n                    <p>Confirm to proceed</p>\\n                </div>\\n                <div className=\\\"p-grid p-fluid\\\">\\n                    <div className=\\\"p-col-6\\\">\\n                        <Button type=\\\"button\\\" label=\\\"Yes\\\" className=\\\"p-button-success\\\" />\\n                    </div>\\n                    <div className=\\\"p-col-6\\\">\\n                        <Button type=\\\"button\\\" label=\\\"No\\\" className=\\\"p-button-secondary\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n        ) });\\n    }\\n\\n    const showMultiple = () => {\\n        toast.current.show([\\n            {severity:'info', summary:'Message 1', detail:'Message 1 Content', life: 3000},\\n            {severity:'info', summary:'Message 2', detail:'Message 2 Content', life: 3000},\\n            {severity:'info', summary:'Message 3', detail:'Message 3 Content', life: 3000}\\n        ]);\\n    }\\n\\n    const clear = () => {\\n        toast.current.clear();\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n            <Toast ref={toastTL} position=\\\"top-left\\\" />\\n            <Toast ref={toastBL} position=\\\"bottom-left\\\" />\\n            <Toast ref={toastBR} position=\\\"bottom-right\\\" />\\n            <Toast ref={toastBC} position=\\\"bottom-center\\\" />\\n\\n            <div className=\\\"card toast-demo\\\">\\n                <h5>Severities</h5>\\n                <Button label=\\\"Success\\\" className=\\\"p-button-success\\\" onClick={showSuccess} />\\n                <Button label=\\\"Info\\\" className=\\\"p-button-info\\\" onClick={showInfo} />\\n                <Button label=\\\"Warn\\\" className=\\\"p-button-warning\\\" onClick={showWarn} />\\n                <Button label=\\\"Error\\\" className=\\\"p-button-danger\\\" onClick={showError} />\\n\\n                <h5>Positions</h5>\\n                <Button label=\\\"Top Left\\\" className=\\\"p-mr-2\\\" onClick={showTopLeft} />\\n                <Button label=\\\"Bottom Left\\\" className=\\\"p-button-warning\\\" onClick={showBottomLeft} />\\n                <Button label=\\\"Bottom Right\\\" className=\\\"p-button-success\\\" onClick={showBottomRight} />\\n\\n                <h5>Options</h5>\\n                <Button onClick={showMultiple} label=\\\"Multiple\\\" className=\\\"p-button-warning\\\" />\\n                <Button onClick={showSticky} label=\\\"Sticky\\\" />\\n\\n                <h5>Clear</h5>\\n                <Button onClick={clear} label=\\\"Clear\\\" />\\n\\n                <h5>Custom</h5>\\n                <Button type=\\\"button\\\" onClick={showConfirm} label=\\\"Confirm\\\" className=\\\"ui-button-warning\\\" />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    _this.extFiles = {\n      'src/demo/ToastDemo.css': {\n        content: \"\\n.toast-demo button {\\n    min-width: 10rem;\\n    margin-right: .5rem;\\n}\\n\\n@media screen and (max-width: 960px) {\\n    .toast-demo button {\\n        width: 100%;\\n        margin-bottom: .5rem;\\n    }\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ToastDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 1\n        }\n      }, \"\\nimport { Toast } from 'primereact/toast';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 25\n        }\n      }, \"A single message is represented by the Message interface in PrimeReact that defines various properties such as severity, summary and detail. Messages are displayed by using the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 72\n        }\n      }, \"show\"), \" method on the ref of the Toast instance.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }\n      }, \"Note that for animations, toast requires react-transition-group package.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 1\n        }\n      }, \"\\n<Toast ref={toast} />\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 1\n        }\n      }, \"\\ntoast.current.show({severity: 'success', summary: 'Success Message', detail: 'Order submitted'});\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }\n      }, \"Message API\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 41\n        }\n      }, \"severity\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 41\n        }\n      }, \"Severity of the message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 41\n        }\n      }, \"summary\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 41\n        }\n      }, \"element/string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 41\n        }\n      }, \"Summary content of the message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 41\n        }\n      }, \"detail\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 41\n        }\n      }, \"element/string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 41\n        }\n      }, \"Detail content of the message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 41\n        }\n      }, \"content\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 41\n        }\n      }, \"Custom content of the message. If enabled, summary and details properties are ignored.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 41\n        }\n      }, \"closable\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 41\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 41\n        }\n      }, \"Whether the message can be closed manually using the close icon.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 41\n        }\n      }, \"sticky\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 41\n        }\n      }, \"element\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 41\n        }\n      }, \"When enabled, message is not removed automatically.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 41\n        }\n      }, \"life\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 41\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 41\n        }\n      }, \"3000\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 41\n        }\n      }, \"Delay in milliseconds to close the message automatically.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 25\n        }\n      }, \"Severities\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }\n      }, \"There are four possible values for the severity of a message.\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 29\n        }\n      }, \"success\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 29\n        }\n      }, \"info\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 29\n        }\n      }, \"warn\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 29\n        }\n      }, \"error\")), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }\n      }, \"Showing Messages\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 25\n        }\n      }, \"Show method accepts either a single message or an array of messages.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 1\n        }\n      }, \"\\n<Toast ref={toast}></Toast>\\n\\n<Button onClick={showSuccess} label=\\\"Success\\\" className=\\\"p-button-success\\\" />\\n<Button onClick={showInfo} label=\\\"Info\\\" className=\\\"p-button-info\\\" />\\n<Button onClick={showWarn} label=\\\"Warn\\\" className=\\\"p-button-warning\\\" />\\n<Button onClick={showError} label=\\\"Error\\\" className=\\\"p-button-danger\\\" />\\n<Button onClick={showMultiple} label=\\\"Multiple\\\" />\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 1\n        }\n      }, \"\\nshowSuccess() {\\n    toast.current.show({severity: 'success', summary: 'Success Message', detail: 'Order submitted'});\\n}\\n\\nshowInfo() {\\n    toast.current.show({severity: 'info', summary: 'Info Message', detail: 'PrimeReact rocks'});\\n}\\n\\nshowWarn() {\\n    toast.current.show({severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes'});\\n}\\n\\nshowError() {\\n    toast.current.show({severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\\n}\\n\\nshowMultiple() {\\n    toast.current.show([\\n        {severity:'info', summary:'Message 1', detail:'PrimeReact rocks'},\\n        {severity:'info', summary:'Message 2', detail:'PrimeReact rocks'},\\n        {severity:'info', summary:'Message 3', detail:'PrimeFaces rocks'}\\n    ]);\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 25\n        }\n      }, \"Closable\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 25\n        }\n      }, \"Toasts are closable by default resulting in a close icon being displayed on top right corner. In order to disable closable messages, set closable to false.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 1\n        }\n      }, \"\\ntoast.current.show({closable: false, severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 25\n        }\n      }, \"Sticky\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 25\n        }\n      }, \"Messages are cleared automatically after the timeout defined by \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 92\n        }\n      }, \"life\"), \" property which is 3 seconds by default. Use \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 148\n        }\n      }, \"sticky\"), \" mode to make them stay until they are manually removed.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 1\n        }\n      }, \"\\n//sticky\\ntoast.current.show({sticky: true, severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\\n\\n//automatically removed after 5 seconds\\ntoast.current.show({life: 5000, severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 25\n        }\n      }, \"Position\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 25\n        }\n      }, \"There are four positions available for the toast container defined by the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 102\n        }\n      }, \"position\"), \" property that defaults to \\\"top-right\\\". Other valid values are \\\"top-left\\\", \\\"bottom-left\\\" and \\\"bottom-right\\\"\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 1\n        }\n      }, \"\\n<Toast ref={toast} position=\\\"top-left\\\"></Toast>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 25\n        }\n      }, \"Clearing Messages\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 28\n        }\n      }, \"clear()\"), \" method removes all messages from Toast.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 1\n        }\n      }, \"\\n    toast.current.clear();\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 41\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 41\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 41\n        }\n      }, \"Style class of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 41\n        }\n      }, \"Inline style of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 41\n        }\n      }, \"baseZIndex\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 41\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 41\n        }\n      }, \"0\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 41\n        }\n      }, \"Base zIndex value to add to initial layering of PrimeReact components which start from 1000.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 41\n        }\n      }, \"position\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 41\n        }\n      }, \"topright\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 41\n        }\n      }, \"Position of the toast in viewport, valid values are \\\"top-right\\\", \\\"top-left\\\", \\\"bottom-left\\\" and \\\"bottom-right\\\".\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 25\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 41\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 41\n        }\n      }, \"onRemove\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 41\n        }\n      }, \"message: Removed message \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a message is removed.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 41\n        }\n      }, \"onClick\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 41\n        }\n      }, \"message: Clicked message \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a message gets clicked.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 25\n        }\n      }, \"Following is the list of structural style classes, for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 105\n        }\n      }, \" theming\"), \" page.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 41\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 41\n        }\n      }, \"p-toast\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 41\n        }\n      }, \"Main container element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 41\n        }\n      }, \"p-toast-container\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 41\n        }\n      }, \"Container of a message item.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 41\n        }\n      }, \"p-toast-item\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 41\n        }\n      }, \"Message element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 41\n        }\n      }, \"p-toast-icon-close\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 41\n        }\n      }, \"Close icon of a message.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 41\n        }\n      }, \"p-toast-image\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 41\n        }\n      }, \"Severity icon.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 41\n        }\n      }, \"p-toast-message\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 41\n        }\n      }, \"Container of message texts.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 41\n        }\n      }, \"p-toast-title\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 41\n        }\n      }, \"Summary of the message.\")))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 29\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 33\n        }\n      }, \"react-transition-group\")))), useLiveEditorTabs({\n        name: 'ToastDemo',\n        sources: this.sources,\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return ToastDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/toast/ToastDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","ToastDoc","props","sources","tabName","content","extFiles","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class ToastDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport './ToastDemo.css';\r\n\r\nexport class ToastDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.showSuccess = this.showSuccess.bind(this);\r\n        this.showInfo = this.showInfo.bind(this);\r\n        this.showWarn = this.showWarn.bind(this);\r\n        this.showError = this.showError.bind(this);\r\n        this.showTopLeft = this.showTopLeft.bind(this);\r\n        this.showBottomLeft = this.showBottomLeft.bind(this);\r\n        this.showBottomRight = this.showBottomRight.bind(this);\r\n        this.showMultiple = this.showMultiple.bind(this);\r\n        this.showSticky = this.showSticky.bind(this);\r\n        this.showConfirm = this.showConfirm.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n    }\r\n\r\n    showSuccess() {\r\n        this.toast.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    showInfo() {\r\n        this.toast.show({severity:'info', summary: 'Info Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    showWarn() {\r\n        this.toast.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    showError() {\r\n        this.toast.show({severity:'error', summary: 'Error Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    showTopLeft() {\r\n        this.toastTL.show({severity: 'info', summary: 'Info Message', detail: 'Message Content', life: 3000});\r\n    }\r\n\r\n    showBottomLeft() {\r\n        this.toastBL.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    showBottomRight() {\r\n        this.toastBR.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    showSticky() {\r\n        this.toast.show({severity: 'info', summary: 'Sticky Message', detail: 'Message Content', sticky: true});\r\n    }\r\n\r\n    showConfirm() {\r\n        this.toastBC.show({ severity: 'warn', sticky: true, content: (\r\n            <div className=\"p-flex p-flex-column\" style={{flex: '1'}}>\r\n                <div className=\"p-text-center\">\r\n                    <i className=\"pi pi-exclamation-triangle\" style={{fontSize: '3rem'}}></i>\r\n                    <h4>Are you sure?</h4>\r\n                    <p>Confirm to proceed</p>\r\n                </div>\r\n                <div className=\"p-grid p-fluid\">\r\n                    <div className=\"p-col-6\">\r\n                        <Button type=\"button\" label=\"Yes\" className=\"p-button-success\" />\r\n                    </div>\r\n                    <div className=\"p-col-6\">\r\n                        <Button type=\"button\" label=\"No\" className=\"p-button-secondary\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) });\r\n    }\r\n\r\n    showMultiple() {\r\n        this.toast.show([\r\n            {severity:'info', summary:'Message 1', detail:'Message 1 Content', life: 3000},\r\n            {severity:'info', summary:'Message 2', detail:'Message 2 Content', life: 3000},\r\n            {severity:'info', summary:'Message 3', detail:'Message 3 Content', life: 3000}\r\n        ]);\r\n    }\r\n\r\n    clear() {\r\n        this.toast.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => this.toast = el} />\r\n                <Toast ref={(el) => this.toastTL = el} position=\"top-left\" />\r\n                <Toast ref={(el) => this.toastBL = el} position=\"bottom-left\" />\r\n                <Toast ref={(el) => this.toastBR = el} position=\"bottom-right\" />\r\n                <Toast ref={(el) => this.toastBC = el} position=\"bottom-center\" />\r\n\r\n                <div className=\"card toast-demo\">\r\n                    <h5>Severities</h5>\r\n                    <Button label=\"Success\" className=\"p-button-success\" onClick={this.showSuccess} />\r\n                    <Button label=\"Info\" className=\"p-button-info\" onClick={this.showInfo} />\r\n                    <Button label=\"Warn\" className=\"p-button-warning\" onClick={this.showWarn} />\r\n                    <Button label=\"Error\" className=\"p-button-danger\" onClick={this.showError} />\r\n\r\n                    <h5>Positions</h5>\r\n                    <Button label=\"Top Left\" className=\"p-mr-2\" onClick={this.showTopLeft} />\r\n                    <Button label=\"Bottom Left\" className=\"p-button-warning\" onClick={this.showBottomLeft} />\r\n                    <Button label=\"Bottom Right\" className=\"p-button-success\" onClick={this.showBottomRight} />\r\n\r\n                    <h5>Options</h5>\r\n                    <Button onClick={this.showMultiple} label=\"Multiple\" className=\"p-button-warning\" />\r\n                    <Button onClick={this.showSticky} label=\"Sticky\" />\r\n\r\n                    <h5>Clear</h5>\r\n                    <Button onClick={this.clear} label=\"Clear\" />\r\n\r\n                    <h5>Custom</h5>\r\n                    <Button type=\"button\" onClick={this.showConfirm} label=\"Confirm\" className=\"ui-button-warning\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport './ToastDemo.css';\r\n\r\nconst ToastDemo = () => {\r\n    const toast = useRef(null);\r\n    const toastTL = useRef(null);\r\n    const toastBL = useRef(null);\r\n    const toastBR = useRef(null);\r\n    const toastBC = useRef(null);\r\n\r\n    const showSuccess = () => {\r\n        toast.current.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showInfo = () => {\r\n        toast.current.show({severity:'info', summary: 'Info Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showWarn = () => {\r\n        toast.current.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showError = () => {\r\n        toast.current.show({severity:'error', summary: 'Error Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showTopLeft = () => {\r\n        toastTL.current.show({severity: 'info', summary: 'Info Message', detail: 'Message Content', life: 3000});\r\n    }\r\n\r\n    const showBottomLeft = () => {\r\n        toastBL.current.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showBottomRight = () => {\r\n        toastBR.current.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showSticky = () => {\r\n        toast.current.show({severity: 'info', summary: 'Sticky Message', detail: 'Message Content', sticky: true});\r\n    }\r\n\r\n    const showConfirm = () => {\r\n        toastBC.current.show({ severity: 'warn', sticky: true, content: (\r\n            <div className=\"p-flex p-flex-column\" style={{flex: '1'}}>\r\n                <div className=\"p-text-center\">\r\n                    <i className=\"pi pi-exclamation-triangle\" style={{fontSize: '3rem'}}></i>\r\n                    <h4>Are you sure?</h4>\r\n                    <p>Confirm to proceed</p>\r\n                </div>\r\n                <div className=\"p-grid p-fluid\">\r\n                    <div className=\"p-col-6\">\r\n                        <Button type=\"button\" label=\"Yes\" className=\"p-button-success\" />\r\n                    </div>\r\n                    <div className=\"p-col-6\">\r\n                        <Button type=\"button\" label=\"No\" className=\"p-button-secondary\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) });\r\n    }\r\n\r\n    const showMultiple = () => {\r\n        toast.current.show([\r\n            {severity:'info', summary:'Message 1', detail:'Message 1 Content', life: 3000},\r\n            {severity:'info', summary:'Message 2', detail:'Message 2 Content', life: 3000},\r\n            {severity:'info', summary:'Message 3', detail:'Message 3 Content', life: 3000}\r\n        ]);\r\n    }\r\n\r\n    const clear = () => {\r\n        toast.current.clear();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n            <Toast ref={toastTL} position=\"top-left\" />\r\n            <Toast ref={toastBL} position=\"bottom-left\" />\r\n            <Toast ref={toastBR} position=\"bottom-right\" />\r\n            <Toast ref={toastBC} position=\"bottom-center\" />\r\n\r\n            <div className=\"card toast-demo\">\r\n                <h5>Severities</h5>\r\n                <Button label=\"Success\" className=\"p-button-success\" onClick={showSuccess} />\r\n                <Button label=\"Info\" className=\"p-button-info\" onClick={showInfo} />\r\n                <Button label=\"Warn\" className=\"p-button-warning\" onClick={showWarn} />\r\n                <Button label=\"Error\" className=\"p-button-danger\" onClick={showError} />\r\n\r\n                <h5>Positions</h5>\r\n                <Button label=\"Top Left\" className=\"p-mr-2\" onClick={showTopLeft} />\r\n                <Button label=\"Bottom Left\" className=\"p-button-warning\" onClick={showBottomLeft} />\r\n                <Button label=\"Bottom Right\" className=\"p-button-success\" onClick={showBottomRight} />\r\n\r\n                <h5>Options</h5>\r\n                <Button onClick={showMultiple} label=\"Multiple\" className=\"p-button-warning\" />\r\n                <Button onClick={showSticky} label=\"Sticky\" />\r\n\r\n                <h5>Clear</h5>\r\n                <Button onClick={clear} label=\"Clear\" />\r\n\r\n                <h5>Custom</h5>\r\n                <Button type=\"button\" onClick={showConfirm} label=\"Confirm\" className=\"ui-button-warning\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport './ToastDemo.css';\r\n\r\nconst ToastDemo = () => {\r\n    const toast = useRef(null);\r\n    const toastTL = useRef(null);\r\n    const toastBL = useRef(null);\r\n    const toastBR = useRef(null);\r\n    const toastBC = useRef(null);\r\n\r\n    const showSuccess = () => {\r\n        toast.current.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showInfo = () => {\r\n        toast.current.show({severity:'info', summary: 'Info Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showWarn = () => {\r\n        toast.current.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showError = () => {\r\n        toast.current.show({severity:'error', summary: 'Error Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showTopLeft = () => {\r\n        toastTL.current.show({severity: 'info', summary: 'Info Message', detail: 'Message Content', life: 3000});\r\n    }\r\n\r\n    const showBottomLeft = () => {\r\n        toastBL.current.show({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showBottomRight = () => {\r\n        toastBR.current.show({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\r\n    }\r\n\r\n    const showSticky = () => {\r\n        toast.current.show({severity: 'info', summary: 'Sticky Message', detail: 'Message Content', sticky: true});\r\n    }\r\n\r\n    const showConfirm = () => {\r\n        toastBC.current.show({ severity: 'warn', sticky: true, content: (\r\n            <div className=\"p-flex p-flex-column\" style={{flex: '1'}}>\r\n                <div className=\"p-text-center\">\r\n                    <i className=\"pi pi-exclamation-triangle\" style={{fontSize: '3rem'}}></i>\r\n                    <h4>Are you sure?</h4>\r\n                    <p>Confirm to proceed</p>\r\n                </div>\r\n                <div className=\"p-grid p-fluid\">\r\n                    <div className=\"p-col-6\">\r\n                        <Button type=\"button\" label=\"Yes\" className=\"p-button-success\" />\r\n                    </div>\r\n                    <div className=\"p-col-6\">\r\n                        <Button type=\"button\" label=\"No\" className=\"p-button-secondary\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) });\r\n    }\r\n\r\n    const showMultiple = () => {\r\n        toast.current.show([\r\n            {severity:'info', summary:'Message 1', detail:'Message 1 Content', life: 3000},\r\n            {severity:'info', summary:'Message 2', detail:'Message 2 Content', life: 3000},\r\n            {severity:'info', summary:'Message 3', detail:'Message 3 Content', life: 3000}\r\n        ]);\r\n    }\r\n\r\n    const clear = () => {\r\n        toast.current.clear();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n            <Toast ref={toastTL} position=\"top-left\" />\r\n            <Toast ref={toastBL} position=\"bottom-left\" />\r\n            <Toast ref={toastBR} position=\"bottom-right\" />\r\n            <Toast ref={toastBC} position=\"bottom-center\" />\r\n\r\n            <div className=\"card toast-demo\">\r\n                <h5>Severities</h5>\r\n                <Button label=\"Success\" className=\"p-button-success\" onClick={showSuccess} />\r\n                <Button label=\"Info\" className=\"p-button-info\" onClick={showInfo} />\r\n                <Button label=\"Warn\" className=\"p-button-warning\" onClick={showWarn} />\r\n                <Button label=\"Error\" className=\"p-button-danger\" onClick={showError} />\r\n\r\n                <h5>Positions</h5>\r\n                <Button label=\"Top Left\" className=\"p-mr-2\" onClick={showTopLeft} />\r\n                <Button label=\"Bottom Left\" className=\"p-button-warning\" onClick={showBottomLeft} />\r\n                <Button label=\"Bottom Right\" className=\"p-button-success\" onClick={showBottomRight} />\r\n\r\n                <h5>Options</h5>\r\n                <Button onClick={showMultiple} label=\"Multiple\" className=\"p-button-warning\" />\r\n                <Button onClick={showSticky} label=\"Sticky\" />\r\n\r\n                <h5>Clear</h5>\r\n                <Button onClick={clear} label=\"Clear\" />\r\n\r\n                <h5>Custom</h5>\r\n                <Button type=\"button\" onClick={showConfirm} label=\"Confirm\" className=\"ui-button-warning\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'src/demo/ToastDemo.css': {\r\n                content: `\r\n.toast-demo button {\r\n    min-width: 10rem;\r\n    margin-right: .5rem;\r\n}\r\n\r\n@media screen and (max-width: 960px) {\r\n    .toast-demo button {\r\n        width: 100%;\r\n        margin-bottom: .5rem;\r\n    }\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Toast } from 'primereact/toast';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>A single message is represented by the Message interface in PrimeReact that defines various properties such as severity,\r\n               summary and detail. Messages are displayed by using the <i>show</i> method on the ref of the Toast instance.</p>\r\n\r\n                        <p>Note that for animations, toast requires react-transition-group package.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Toast ref={toast} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\ntoast.current.show({severity: 'success', summary: 'Success Message', detail: 'Order submitted'});\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Message API</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>severity</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Severity of the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>summary</td>\r\n                                        <td>element/string</td>\r\n                                        <td>null</td>\r\n                                        <td>Summary content of the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>detail</td>\r\n                                        <td>element/string</td>\r\n                                        <td>null</td>\r\n                                        <td>Detail content of the message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>content</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Custom content of the message. If enabled, summary and details properties are ignored.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>closable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether the message can be closed manually using the close icon.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>sticky</td>\r\n                                        <td>element</td>\r\n                                        <td>null</td>\r\n                                        <td>When enabled, message is not removed automatically.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>life</td>\r\n                                        <td>number</td>\r\n                                        <td>3000</td>\r\n                                        <td>Delay in milliseconds to close the message automatically.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Severities</h5>\r\n                        <p>There are four possible values for the severity of a message.</p>\r\n\r\n                        <ul>\r\n                            <li>success</li>\r\n                            <li>info</li>\r\n                            <li>warn</li>\r\n                            <li>error</li>\r\n                        </ul>\r\n\r\n                        <h5>Showing Messages</h5>\r\n                        <p>Show method accepts either a single message or an array of messages.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Toast ref={toast}></Toast>\r\n\r\n<Button onClick={showSuccess} label=\"Success\" className=\"p-button-success\" />\r\n<Button onClick={showInfo} label=\"Info\" className=\"p-button-info\" />\r\n<Button onClick={showWarn} label=\"Warn\" className=\"p-button-warning\" />\r\n<Button onClick={showError} label=\"Error\" className=\"p-button-danger\" />\r\n<Button onClick={showMultiple} label=\"Multiple\" />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nshowSuccess() {\r\n    toast.current.show({severity: 'success', summary: 'Success Message', detail: 'Order submitted'});\r\n}\r\n\r\nshowInfo() {\r\n    toast.current.show({severity: 'info', summary: 'Info Message', detail: 'PrimeReact rocks'});\r\n}\r\n\r\nshowWarn() {\r\n    toast.current.show({severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes'});\r\n}\r\n\r\nshowError() {\r\n    toast.current.show({severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\r\n}\r\n\r\nshowMultiple() {\r\n    toast.current.show([\r\n        {severity:'info', summary:'Message 1', detail:'PrimeReact rocks'},\r\n        {severity:'info', summary:'Message 2', detail:'PrimeReact rocks'},\r\n        {severity:'info', summary:'Message 3', detail:'PrimeFaces rocks'}\r\n    ]);\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Closable</h5>\r\n                        <p>Toasts are closable by default resulting in a close icon being displayed on top right corner. In order to disable closable messages, set closable to false.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\ntoast.current.show({closable: false, severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Sticky</h5>\r\n                        <p>Messages are cleared automatically after the timeout defined by <i>life</i> property which is 3 seconds by default. Use <i>sticky</i> mode to make them stay until\r\n            they are manually removed.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\n//sticky\r\ntoast.current.show({sticky: true, severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\r\n\r\n//automatically removed after 5 seconds\r\ntoast.current.show({life: 5000, severity: 'error', summary: 'Error Message', detail: 'Validation failed'});\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Position</h5>\r\n                        <p>There are four positions available for the toast container defined by the <i>position</i> property that defaults to \"top-right\". Other\r\n                valid values are \"top-left\", \"bottom-left\" and \"bottom-right\"\r\n            </p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Toast ref={toast} position=\"top-left\"></Toast>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Clearing Messages</h5>\r\n                        <p><i>clear()</i> method removes all messages from Toast.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n    toast.current.clear();\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>baseZIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>0</td>\r\n                                        <td>Base zIndex value to add to initial layering of PrimeReact components which start from 1000.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>position</td>\r\n                                        <td>string</td>\r\n                                        <td>topright</td>\r\n                                        <td>Position of the toast in viewport, valid values are \"top-right\", \"top-left\", \"bottom-left\" and \"bottom-right\".</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onRemove</td>\r\n                                        <td>message: Removed message </td>\r\n                                        <td>Callback to invoke when a message is removed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onClick</td>\r\n                                        <td>message: Clicked message </td>\r\n                                        <td>Callback to invoke when a message gets clicked.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-toast</td>\r\n                                        <td>Main container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-toast-container</td>\r\n                                        <td>Container of a message item.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-toast-item</td>\r\n                                        <td>Message element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-toast-icon-close</td>\r\n                                        <td>Close icon of a message.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-toast-image</td>\r\n                                        <td>Severity icon.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-toast-message</td>\r\n                                        <td>Container of message texts.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-toast-title</td>\r\n                                        <td>Summary of the message.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <h5>Dependencies</h5>\r\n                            <ul>\r\n                                <li>react-transition-group</li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'ToastDemo', sources: this.sources, extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}