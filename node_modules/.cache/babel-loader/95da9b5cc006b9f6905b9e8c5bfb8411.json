{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\scrollpanel\\\\ScrollPanel.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DomHandler from '../utils/DomHandler';\nimport { classNames } from '../utils/ClassNames';\nexport var ScrollPanel = /*#__PURE__*/function (_Component) {\n  _inherits(ScrollPanel, _Component);\n\n  var _super = _createSuper(ScrollPanel);\n\n  function ScrollPanel(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollPanel);\n\n    _this = _super.call(this, props);\n    _this.moveBar = _this.moveBar.bind(_assertThisInitialized(_this));\n    _this.onXBarMouseDown = _this.onXBarMouseDown.bind(_assertThisInitialized(_this));\n    _this.onYBarMouseDown = _this.onYBarMouseDown.bind(_assertThisInitialized(_this));\n    _this.onDocumentMouseMove = _this.onDocumentMouseMove.bind(_assertThisInitialized(_this));\n    _this.onDocumentMouseUp = _this.onDocumentMouseUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollPanel, [{\n    key: \"calculateContainerHeight\",\n    value: function calculateContainerHeight() {\n      var containerStyles = getComputedStyle(this.container),\n          xBarStyles = getComputedStyle(this.xBar),\n          pureContainerHeight = DomHandler.getHeight(this.container) - parseInt(xBarStyles['height'], 10);\n\n      if (containerStyles['max-height'] !== \"none\" && pureContainerHeight === 0) {\n        if (this.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\n          this.container.style.height = containerStyles['max-height'];\n        } else {\n          this.container.style.height = this.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + \"px\";\n        }\n      }\n    }\n  }, {\n    key: \"moveBar\",\n    value: function moveBar() {\n      var _this2 = this;\n\n      /* horizontal scroll */\n      var totalWidth = this.content.scrollWidth;\n      var ownWidth = this.content.clientWidth;\n      var bottom = (this.container.clientHeight - this.xBar.clientHeight) * -1;\n      this.scrollXRatio = ownWidth / totalWidth;\n      /* vertical scroll */\n\n      var totalHeight = this.content.scrollHeight;\n      var ownHeight = this.content.clientHeight;\n      var right = (this.container.clientWidth - this.yBar.clientWidth) * -1;\n      this.scrollYRatio = ownHeight / totalHeight;\n      this.frame = this.requestAnimationFrame(function () {\n        if (_this2.scrollXRatio >= 1) {\n          DomHandler.addClass(_this2.xBar, 'p-scrollpanel-hidden');\n        } else {\n          DomHandler.removeClass(_this2.xBar, 'p-scrollpanel-hidden');\n          _this2.xBar.style.cssText = 'width:' + Math.max(_this2.scrollXRatio * 100, 10) + '%; left:' + _this2.content.scrollLeft / totalWidth * 100 + '%;bottom:' + bottom + 'px;';\n        }\n\n        if (_this2.scrollYRatio >= 1) {\n          DomHandler.addClass(_this2.yBar, 'p-scrollpanel-hidden');\n        } else {\n          DomHandler.removeClass(_this2.yBar, 'p-scrollpanel-hidden');\n          _this2.yBar.style.cssText = 'height:' + Math.max(_this2.scrollYRatio * 100, 10) + '%; top: calc(' + _this2.content.scrollTop / totalHeight * 100 + '% - ' + _this2.xBar.clientHeight + 'px);right:' + right + 'px;';\n        }\n      });\n    }\n  }, {\n    key: \"onYBarMouseDown\",\n    value: function onYBarMouseDown(e) {\n      this.isYBarClicked = true;\n      this.lastPageY = e.pageY;\n      DomHandler.addClass(this.yBar, 'p-scrollpanel-grabbed');\n      DomHandler.addClass(document.body, 'p-scrollpanel-grabbed');\n      document.addEventListener('mousemove', this.onDocumentMouseMove);\n      document.addEventListener('mouseup', this.onDocumentMouseUp);\n      e.preventDefault();\n    }\n  }, {\n    key: \"onXBarMouseDown\",\n    value: function onXBarMouseDown(e) {\n      this.isXBarClicked = true;\n      this.lastPageX = e.pageX;\n      DomHandler.addClass(this.xBar, 'p-scrollpanel-grabbed');\n      DomHandler.addClass(document.body, 'p-scrollpanel-grabbed');\n      document.addEventListener('mousemove', this.onDocumentMouseMove);\n      document.addEventListener('mouseup', this.onDocumentMouseUp);\n      e.preventDefault();\n    }\n  }, {\n    key: \"onDocumentMouseMove\",\n    value: function onDocumentMouseMove(e) {\n      if (this.isXBarClicked) {\n        this.onMouseMoveForXBar(e);\n      } else if (this.isYBarClicked) {\n        this.onMouseMoveForYBar(e);\n      } else {\n        this.onMouseMoveForXBar(e);\n        this.onMouseMoveForYBar(e);\n      }\n    }\n  }, {\n    key: \"onMouseMoveForXBar\",\n    value: function onMouseMoveForXBar(e) {\n      var _this3 = this;\n\n      var deltaX = e.pageX - this.lastPageX;\n      this.lastPageX = e.pageX;\n      this.frame = this.requestAnimationFrame(function () {\n        _this3.content.scrollLeft += deltaX / _this3.scrollXRatio;\n      });\n    }\n  }, {\n    key: \"onMouseMoveForYBar\",\n    value: function onMouseMoveForYBar(e) {\n      var _this4 = this;\n\n      var deltaY = e.pageY - this.lastPageY;\n      this.lastPageY = e.pageY;\n      this.frame = this.requestAnimationFrame(function () {\n        _this4.content.scrollTop += deltaY / _this4.scrollYRatio;\n      });\n    }\n  }, {\n    key: \"onDocumentMouseUp\",\n    value: function onDocumentMouseUp(e) {\n      DomHandler.removeClass(this.yBar, 'p-scrollpanel-grabbed');\n      DomHandler.removeClass(this.xBar, 'p-scrollpanel-grabbed');\n      DomHandler.removeClass(document.body, 'p-scrollpanel-grabbed');\n      document.removeEventListener('mousemove', this.onDocumentMouseMove);\n      document.removeEventListener('mouseup', this.onDocumentMouseUp);\n      this.isXBarClicked = false;\n      this.isYBarClicked = false;\n    }\n  }, {\n    key: \"requestAnimationFrame\",\n    value: function requestAnimationFrame(f) {\n      var frame = window.requestAnimationFrame || this.timeoutFrame;\n      return frame(f);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.moveBar();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.moveBar();\n      this.moveBar = this.moveBar.bind(this);\n      window.addEventListener('resize', this.moveBar);\n      this.calculateContainerHeight();\n      this.initialized = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.initialized) {\n        window.removeEventListener('resize', this.moveBar);\n      }\n\n      if (this.frame) {\n        window.cancelAnimationFrame(this.frame);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var className = classNames('p-scrollpanel p-component', this.props.className);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this5.container = el;\n        },\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-scrollpanel-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this5.content = el;\n        },\n        className: \"p-scrollpanel-content\",\n        onScroll: this.moveBar,\n        onMouseEnter: this.moveBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, this.props.children)), /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this5.xBar = el;\n        },\n        className: \"p-scrollpanel-bar p-scrollpanel-bar-x\",\n        onMouseDown: this.onXBarMouseDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this5.yBar = el;\n        },\n        className: \"p-scrollpanel-bar p-scrollpanel-bar-y\",\n        onMouseDown: this.onYBarMouseDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ScrollPanel;\n}(Component);\nScrollPanel.defaultProps = {\n  id: null,\n  style: null,\n  className: null\n};\nScrollPanel.propTypes = {\n  id: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/scrollpanel/ScrollPanel.js"],"names":["React","Component","PropTypes","DomHandler","classNames","ScrollPanel","props","moveBar","bind","onXBarMouseDown","onYBarMouseDown","onDocumentMouseMove","onDocumentMouseUp","containerStyles","getComputedStyle","container","xBarStyles","xBar","pureContainerHeight","getHeight","parseInt","content","offsetHeight","style","height","parseFloat","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","totalWidth","scrollWidth","ownWidth","clientWidth","bottom","clientHeight","scrollXRatio","totalHeight","scrollHeight","ownHeight","right","yBar","scrollYRatio","frame","requestAnimationFrame","addClass","removeClass","cssText","Math","max","scrollLeft","scrollTop","e","isYBarClicked","lastPageY","pageY","document","body","addEventListener","preventDefault","isXBarClicked","lastPageX","pageX","onMouseMoveForXBar","onMouseMoveForYBar","deltaX","deltaY","removeEventListener","f","window","timeoutFrame","calculateContainerHeight","initialized","cancelAnimationFrame","className","el","id","children","defaultProps","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { classNames } from '../utils/ClassNames';\r\n\r\nexport class ScrollPanel extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        style: null,\r\n        className: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.moveBar = this.moveBar.bind(this);\r\n        this.onXBarMouseDown = this.onXBarMouseDown.bind(this);\r\n        this.onYBarMouseDown = this.onYBarMouseDown.bind(this);\r\n\r\n        this.onDocumentMouseMove = this.onDocumentMouseMove.bind(this);\r\n        this.onDocumentMouseUp = this.onDocumentMouseUp.bind(this);\r\n    }\r\n\r\n    calculateContainerHeight() {\r\n        let containerStyles = getComputedStyle(this.container),\r\n        xBarStyles = getComputedStyle(this.xBar),\r\n        pureContainerHeight = DomHandler.getHeight(this.container) - parseInt(xBarStyles['height'], 10);\r\n\r\n        if (containerStyles['max-height'] !== \"none\" && pureContainerHeight === 0) {\r\n            if(this.content.offsetHeight + parseInt(xBarStyles['height'], 10) > parseInt(containerStyles['max-height'], 10)) {\r\n                this.container.style.height = containerStyles['max-height'];\r\n            }\r\n            else {\r\n                this.container.style.height = this.content.offsetHeight + parseFloat(containerStyles.paddingTop) + parseFloat(containerStyles.paddingBottom) + parseFloat(containerStyles.borderTopWidth) + parseFloat(containerStyles.borderBottomWidth) + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    moveBar() {\r\n        /* horizontal scroll */\r\n        let totalWidth = this.content.scrollWidth;\r\n        let ownWidth = this.content.clientWidth;\r\n        let bottom = (this.container.clientHeight - this.xBar.clientHeight) * -1;\r\n\r\n        this.scrollXRatio = ownWidth / totalWidth;\r\n\r\n        /* vertical scroll */\r\n        let totalHeight = this.content.scrollHeight;\r\n        let ownHeight = this.content.clientHeight;\r\n        let right = (this.container.clientWidth - this.yBar.clientWidth) * -1;\r\n\r\n        this.scrollYRatio = ownHeight / totalHeight;\r\n\r\n        this.frame = this.requestAnimationFrame(() => {\r\n            if (this.scrollXRatio >= 1) {\r\n                DomHandler.addClass(this.xBar, 'p-scrollpanel-hidden');\r\n            }\r\n            else {\r\n                DomHandler.removeClass(this.xBar, 'p-scrollpanel-hidden');\r\n                this.xBar.style.cssText = 'width:' + Math.max(this.scrollXRatio * 100, 10) + '%; left:' + (this.content.scrollLeft / totalWidth) * 100 + '%;bottom:' + bottom + 'px;';\r\n            }\r\n\r\n            if (this.scrollYRatio >= 1) {\r\n                DomHandler.addClass(this.yBar, 'p-scrollpanel-hidden');\r\n            }\r\n            else {\r\n                DomHandler.removeClass(this.yBar, 'p-scrollpanel-hidden');\r\n                this.yBar.style.cssText = 'height:' + Math.max(this.scrollYRatio * 100, 10) + '%; top: calc(' + (this.content.scrollTop / totalHeight) * 100 + '% - ' + this.xBar.clientHeight + 'px);right:' + right + 'px;';\r\n            }\r\n        });\r\n    }\r\n\r\n    onYBarMouseDown(e) {\r\n        this.isYBarClicked = true;\r\n        this.lastPageY = e.pageY;\r\n        DomHandler.addClass(this.yBar, 'p-scrollpanel-grabbed');\r\n        DomHandler.addClass(document.body, 'p-scrollpanel-grabbed');\r\n\r\n        document.addEventListener('mousemove', this.onDocumentMouseMove);\r\n        document.addEventListener('mouseup', this.onDocumentMouseUp);\r\n        e.preventDefault();\r\n    }\r\n\r\n    onXBarMouseDown(e) {\r\n        this.isXBarClicked = true;\r\n        this.lastPageX = e.pageX;\r\n        DomHandler.addClass(this.xBar, 'p-scrollpanel-grabbed');\r\n        DomHandler.addClass(document.body, 'p-scrollpanel-grabbed');\r\n\r\n        document.addEventListener('mousemove', this.onDocumentMouseMove);\r\n        document.addEventListener('mouseup', this.onDocumentMouseUp);\r\n        e.preventDefault();\r\n    }\r\n\r\n    onDocumentMouseMove(e) {\r\n        if(this.isXBarClicked) {\r\n            this.onMouseMoveForXBar(e);\r\n        }\r\n        else if(this.isYBarClicked) {\r\n            this.onMouseMoveForYBar(e);\r\n        }\r\n        else {\r\n            this.onMouseMoveForXBar(e);\r\n            this.onMouseMoveForYBar(e);\r\n        }\r\n\r\n    }\r\n\r\n    onMouseMoveForXBar(e) {\r\n        let deltaX = e.pageX - this.lastPageX;\r\n        this.lastPageX = e.pageX;\r\n\r\n        this.frame = this.requestAnimationFrame(() => {\r\n            this.content.scrollLeft += deltaX / this.scrollXRatio;\r\n        });\r\n    }\r\n\r\n    onMouseMoveForYBar(e) {\r\n        let deltaY = e.pageY - this.lastPageY;\r\n        this.lastPageY = e.pageY;\r\n\r\n        this.frame = this.requestAnimationFrame(() => {\r\n            this.content.scrollTop += deltaY / this.scrollYRatio;\r\n        });\r\n    }\r\n\r\n    onDocumentMouseUp(e) {\r\n        DomHandler.removeClass(this.yBar, 'p-scrollpanel-grabbed');\r\n        DomHandler.removeClass(this.xBar, 'p-scrollpanel-grabbed');\r\n        DomHandler.removeClass(document.body, 'p-scrollpanel-grabbed');\r\n\r\n        document.removeEventListener('mousemove', this.onDocumentMouseMove);\r\n        document.removeEventListener('mouseup', this.onDocumentMouseUp);\r\n        this.isXBarClicked = false;\r\n        this.isYBarClicked = false;\r\n    }\r\n\r\n    requestAnimationFrame(f) {\r\n        let frame = window.requestAnimationFrame || this.timeoutFrame;\r\n        return frame(f);\r\n    }\r\n\r\n    refresh() {\r\n        this.moveBar();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.moveBar();\r\n        this.moveBar = this.moveBar.bind(this);\r\n\r\n        window.addEventListener('resize', this.moveBar);\r\n\r\n        this.calculateContainerHeight();\r\n        this.initialized = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.initialized) {\r\n            window.removeEventListener('resize', this.moveBar);\r\n        }\r\n\r\n        if (this.frame) {\r\n            window.cancelAnimationFrame(this.frame);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-scrollpanel p-component', this.props.className);\r\n\r\n        return (\r\n            <div ref={(el) => this.container = el} id={this.props.id} className={className} style={this.props.style}>\r\n                <div className=\"p-scrollpanel-wrapper\">\r\n                    <div ref={(el) => this.content = el} className=\"p-scrollpanel-content\" onScroll={this.moveBar} onMouseEnter={this.moveBar}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                <div ref={(el) => this.xBar = el} className=\"p-scrollpanel-bar p-scrollpanel-bar-x\" onMouseDown={this.onXBarMouseDown}></div>\r\n                <div ref={(el) => this.yBar = el} className=\"p-scrollpanel-bar p-scrollpanel-bar-y\" onMouseDown={this.onYBarMouseDown}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}