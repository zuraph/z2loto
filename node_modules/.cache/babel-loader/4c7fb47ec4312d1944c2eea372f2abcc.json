{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\dropdown\\\\Dropdown.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DomHandler from '../utils/DomHandler';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FilterUtils from '../utils/FilterUtils';\nimport { classNames } from '../utils/ClassNames';\nimport { DropdownPanel } from './DropdownPanel';\nimport { DropdownItem } from './DropdownItem';\nimport { tip } from '../tooltip/Tooltip';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport var Dropdown = /*#__PURE__*/function (_Component) {\n  _inherits(Dropdown, _Component);\n\n  var _super = _createSuper(Dropdown);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      filter: '',\n      focused: false,\n      overlayVisible: false\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onInputFocus = _this.onInputFocus.bind(_assertThisInitialized(_this));\n    _this.onInputBlur = _this.onInputBlur.bind(_assertThisInitialized(_this));\n    _this.onInputKeyDown = _this.onInputKeyDown.bind(_assertThisInitialized(_this));\n    _this.onEditableInputClick = _this.onEditableInputClick.bind(_assertThisInitialized(_this));\n    _this.onEditableInputChange = _this.onEditableInputChange.bind(_assertThisInitialized(_this));\n    _this.onEditableInputFocus = _this.onEditableInputFocus.bind(_assertThisInitialized(_this));\n    _this.onOptionClick = _this.onOptionClick.bind(_assertThisInitialized(_this));\n    _this.onFilterInputChange = _this.onFilterInputChange.bind(_assertThisInitialized(_this));\n    _this.onFilterInputKeyDown = _this.onFilterInputKeyDown.bind(_assertThisInitialized(_this));\n    _this.onPanelClick = _this.onPanelClick.bind(_assertThisInitialized(_this));\n    _this.onOverlayEnter = _this.onOverlayEnter.bind(_assertThisInitialized(_this));\n    _this.onOverlayEntered = _this.onOverlayEntered.bind(_assertThisInitialized(_this));\n    _this.onOverlayExit = _this.onOverlayExit.bind(_assertThisInitialized(_this));\n    _this.onOverlayExited = _this.onOverlayExited.bind(_assertThisInitialized(_this));\n    _this.clear = _this.clear.bind(_assertThisInitialized(_this));\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.overlayRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      if (!this.isClearClicked(event)) {\n        this.focusInput.focus();\n\n        if (this.state.overlayVisible) {\n          this.hideOverlay();\n        } else {\n          this.showOverlay();\n        }\n      }\n    }\n  }, {\n    key: \"onInputFocus\",\n    value: function onInputFocus(event) {\n      var _this2 = this;\n\n      event.persist();\n      this.setState({\n        focused: true\n      }, function () {\n        if (_this2.props.onFocus) {\n          _this2.props.onFocus(event);\n        }\n      });\n    }\n  }, {\n    key: \"onInputBlur\",\n    value: function onInputBlur(event) {\n      var _this3 = this;\n\n      event.persist();\n      this.setState({\n        focused: false\n      }, function () {\n        if (_this3.props.onBlur) {\n          _this3.props.onBlur(event);\n        }\n      });\n    }\n  }, {\n    key: \"onPanelClick\",\n    value: function onPanelClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.container\n      });\n    }\n  }, {\n    key: \"onInputKeyDown\",\n    value: function onInputKeyDown(event) {\n      switch (event.which) {\n        //down\n        case 40:\n          this.onDownKey(event);\n          break;\n        //up\n\n        case 38:\n          this.onUpKey(event);\n          break;\n        //space\n\n        case 32:\n          if (!this.state.overlayVisible) {\n            this.showOverlay();\n            event.preventDefault();\n          }\n\n          break;\n        //enter\n\n        case 13:\n          this.hideOverlay();\n          event.preventDefault();\n          break;\n        //escape and tab\n\n        case 27:\n        case 9:\n          this.hideOverlay();\n          break;\n\n        default:\n          this.search(event);\n          break;\n      }\n    }\n  }, {\n    key: \"onFilterInputKeyDown\",\n    value: function onFilterInputKeyDown(event) {\n      switch (event.which) {\n        //down\n        case 40:\n          this.onDownKey(event);\n          break;\n        //up\n\n        case 38:\n          this.onUpKey(event);\n          break;\n        //enter and escape\n\n        case 13:\n        case 27:\n          this.hideOverlay();\n          event.preventDefault();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"onUpKey\",\n    value: function onUpKey(event) {\n      if (this.props.options) {\n        var visibleOptions = this.getVisibleOptions();\n        var selectedItemIndex = this.findOptionIndex(this.props.value, visibleOptions);\n        var prevItem = this.findPrevVisibleItem(selectedItemIndex, visibleOptions);\n\n        if (prevItem) {\n          this.selectItem({\n            originalEvent: event,\n            option: prevItem\n          });\n        }\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onDownKey\",\n    value: function onDownKey(event) {\n      if (this.props.options) {\n        if (!this.state.overlayVisible && event.altKey) {\n          this.showOverlay();\n        } else {\n          var visibleOptions = this.getVisibleOptions();\n          var selectedItemIndex = this.findOptionIndex(this.props.value, visibleOptions);\n          var nextItem = this.findNextVisibleItem(selectedItemIndex, visibleOptions);\n\n          if (nextItem) {\n            this.selectItem({\n              originalEvent: event,\n              option: nextItem\n            });\n          }\n        }\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"search\",\n    value: function search(event) {\n      var _this4 = this;\n\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n\n      var char = String.fromCharCode(event.keyCode);\n      this.previousSearchChar = this.currentSearchChar;\n      this.currentSearchChar = char;\n      if (this.previousSearchChar === this.currentSearchChar) this.searchValue = this.currentSearchChar;else this.searchValue = this.searchValue ? this.searchValue + char : char;\n      var searchIndex = this.props.value ? this.findOptionIndex(this.props.value, this.props.options) : -1;\n      var newOption = this.searchOption(++searchIndex);\n\n      if (newOption) {\n        this.selectItem({\n          originalEvent: event,\n          option: newOption\n        });\n        this.selectedOptionUpdated = true;\n      }\n\n      this.searchTimeout = setTimeout(function () {\n        _this4.searchValue = null;\n      }, 250);\n    }\n  }, {\n    key: \"searchOption\",\n    value: function searchOption(index) {\n      var option;\n\n      if (this.searchValue) {\n        option = this.searchOptionInRange(index, this.props.options.length);\n\n        if (!option) {\n          option = this.searchOptionInRange(0, index);\n        }\n      }\n\n      return option;\n    }\n  }, {\n    key: \"searchOptionInRange\",\n    value: function searchOptionInRange(start, end) {\n      for (var i = start; i < end; i++) {\n        var opt = this.props.options[i];\n        var label = this.getOptionLabel(opt).toString().toLocaleLowerCase(this.props.filterLocale);\n\n        if (label.startsWith(this.searchValue.toLocaleLowerCase(this.props.filterLocale))) {\n          return opt;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(options) {\n      var filterValue = this.state.filter.trim().toLocaleLowerCase(this.props.filterLocale);\n      var searchFields = this.props.filterBy ? this.props.filterBy.split(',') : [this.props.optionLabel || 'label'];\n      var items = FilterUtils.filter(options, searchFields, filterValue, this.props.filterMatchMode, this.props.filterLocale);\n      return items && items.length ? items : null;\n    }\n  }, {\n    key: \"findNextVisibleItem\",\n    value: function findNextVisibleItem(index, options) {\n      var i = index + 1;\n\n      if (i === options.length) {\n        return null;\n      }\n\n      var option = options[i];\n      if (option.disabled) return this.findNextVisibleItem(i);else return option;\n    }\n  }, {\n    key: \"findPrevVisibleItem\",\n    value: function findPrevVisibleItem(index, options) {\n      var i = index - 1;\n\n      if (i < 0) {\n        return null;\n      }\n\n      var option = options[i];\n      if (option.disabled) return this.findPrevVisibleItem(i);else return option;\n    }\n  }, {\n    key: \"onEditableInputClick\",\n    value: function onEditableInputClick(event) {\n      this.bindDocumentClickListener();\n      event.stopPropagation();\n    }\n  }, {\n    key: \"onEditableInputChange\",\n    value: function onEditableInputChange(event) {\n      this.props.onChange({\n        originalEvent: event.originalEvent,\n        value: event.target.value,\n        stopPropagation: function stopPropagation() {},\n        preventDefault: function preventDefault() {},\n        target: {\n          name: this.props.name,\n          id: this.id,\n          value: event.target.value\n        }\n      });\n    }\n  }, {\n    key: \"onEditableInputFocus\",\n    value: function onEditableInputFocus(event) {\n      var _this5 = this;\n\n      event.persist();\n      this.setState({\n        focused: true\n      }, function () {\n        _this5.hideOverlay();\n\n        if (_this5.props.onFocus) {\n          _this5.props.onFocus(event);\n        }\n      });\n    }\n  }, {\n    key: \"onOptionClick\",\n    value: function onOptionClick(event) {\n      var option = event.option;\n\n      if (!option.disabled) {\n        this.selectItem(event);\n        this.focusInput.focus();\n      }\n\n      this.hideOverlay();\n    }\n  }, {\n    key: \"onFilterInputChange\",\n    value: function onFilterInputChange(event) {\n      this.setState({\n        filter: event.target.value\n      });\n    }\n  }, {\n    key: \"resetFilter\",\n    value: function resetFilter() {\n      this.setState({\n        filter: ''\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(event) {\n      this.props.onChange({\n        originalEvent: event,\n        value: undefined,\n        stopPropagation: function stopPropagation() {},\n        preventDefault: function preventDefault() {},\n        target: {\n          name: this.props.name,\n          id: this.id,\n          value: undefined\n        }\n      });\n      this.updateEditableLabel();\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(event) {\n      var currentSelectedOption = this.findOption(this.props.value);\n\n      if (currentSelectedOption !== event.option) {\n        this.updateEditableLabel(event.option);\n        var optionValue = this.getOptionValue(event.option);\n        this.props.onChange({\n          originalEvent: event.originalEvent,\n          value: optionValue,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.id,\n            value: optionValue\n          }\n        });\n      }\n    }\n  }, {\n    key: \"findOptionIndex\",\n    value: function findOptionIndex(value, options) {\n      var selectedOptionIndex = -1;\n\n      if (options) {\n        for (var i = 0; i < options.length; i++) {\n          var optionValue = this.getOptionValue(options[i]);\n\n          if (value === null && optionValue == null || ObjectUtils.equals(value, optionValue, this.props.dataKey)) {\n            selectedOptionIndex = i;\n            break;\n          }\n        }\n      }\n\n      return selectedOptionIndex;\n    }\n  }, {\n    key: \"findOption\",\n    value: function findOption(value) {\n      var index = this.findOptionIndex(value, this.props.options);\n      return index !== -1 ? this.props.options[index] : null;\n    }\n  }, {\n    key: \"showOverlay\",\n    value: function showOverlay() {\n      this.setState({\n        overlayVisible: true\n      });\n    }\n  }, {\n    key: \"hideOverlay\",\n    value: function hideOverlay() {\n      this.setState({\n        overlayVisible: false\n      });\n    }\n  }, {\n    key: \"onOverlayEnter\",\n    value: function onOverlayEnter() {\n      this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\n      this.alignPanel();\n    }\n  }, {\n    key: \"onOverlayEntered\",\n    value: function onOverlayEntered() {\n      this.scrollInView();\n      this.bindDocumentClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n\n      if (this.props.filter && this.props.filterInputAutoFocus) {\n        this.filterInput.focus();\n      }\n    }\n  }, {\n    key: \"onOverlayExit\",\n    value: function onOverlayExit() {\n      this.unbindDocumentClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n    }\n  }, {\n    key: \"onOverlayExited\",\n    value: function onOverlayExited() {\n      if (this.props.filter && this.props.resetFilterOnHide) {\n        this.resetFilter();\n      }\n    }\n  }, {\n    key: \"alignPanel\",\n    value: function alignPanel() {\n      var container = this.input.parentElement;\n\n      if (this.props.appendTo) {\n        this.overlayRef.current.style.minWidth = DomHandler.getWidth(container) + 'px';\n        DomHandler.absolutePosition(this.overlayRef.current, container);\n      } else {\n        DomHandler.relativePosition(this.overlayRef.current, container);\n      }\n    }\n  }, {\n    key: \"scrollInView\",\n    value: function scrollInView() {\n      var highlightItem = DomHandler.findSingle(this.overlayRef.current, 'li.p-highlight');\n\n      if (highlightItem) {\n        var itemsWrapper = DomHandler.findSingle(this.overlayRef.current, '.p-dropdown-items-wrapper');\n        DomHandler.scrollInView(itemsWrapper, highlightItem);\n      }\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this6 = this;\n\n      if (!this.documentClickListener) {\n        this.documentClickListener = function (event) {\n          if (_this6.state.overlayVisible && _this6.isOutsideClicked(event)) {\n            _this6.hideOverlay();\n          }\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this7 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, function () {\n          if (_this7.state.overlayVisible) {\n            _this7.hideOverlay();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"bindResizeListener\",\n    value: function bindResizeListener() {\n      var _this8 = this;\n\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this8.state.overlayVisible) {\n            _this8.hideOverlay();\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    }\n  }, {\n    key: \"unbindResizeListener\",\n    value: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(event) {\n      return this.container && !(this.container.isSameNode(event.target) || this.isClearClicked(event) || this.container.contains(event.target) || this.overlayRef && this.overlayRef.current.contains(event.target));\n    }\n  }, {\n    key: \"isClearClicked\",\n    value: function isClearClicked(event) {\n      return DomHandler.hasClass(event.target, 'p-dropdown-clear-icon');\n    }\n  }, {\n    key: \"updateEditableLabel\",\n    value: function updateEditableLabel(option) {\n      if (this.input) {\n        this.input.value = option ? this.getOptionLabel(option) : this.props.value || '';\n      }\n    }\n  }, {\n    key: \"hasFilter\",\n    value: function hasFilter() {\n      return this.state.filter && this.state.filter.trim().length > 0;\n    }\n  }, {\n    key: \"getOptionLabel\",\n    value: function getOptionLabel(option) {\n      return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : option['label'] !== undefined ? option['label'] : option;\n    }\n  }, {\n    key: \"getOptionValue\",\n    value: function getOptionValue(option) {\n      return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : option['value'] !== undefined ? option['value'] : option;\n    }\n  }, {\n    key: \"getOptionKey\",\n    value: function getOptionKey(option, index) {\n      return this.props.dataKey ? ObjectUtils.resolveFieldData(option, this.props.dataKey) : \"pr_id__\".concat(this.getOptionLabel(option), \"-\").concat(index);\n    }\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity() {\n      return this.nativeSelect.checkValidity();\n    }\n  }, {\n    key: \"getVisibleOptions\",\n    value: function getVisibleOptions() {\n      if (this.props.options && this.hasFilter()) {\n        return this.filter(this.props.options);\n      }\n\n      return this.props.options;\n    }\n  }, {\n    key: \"updateInputField\",\n    value: function updateInputField() {\n      if (this.props.editable && this.input) {\n        var selectedOption = this.findOption(this.props.value);\n        var label = selectedOption ? this.getOptionLabel(selectedOption) : null;\n        var value = label || this.props.value || '';\n        this.input.value = value;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoFocus && this.focusInput) {\n        this.focusInput.focus();\n      }\n\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n\n      this.updateInputField();\n      this.nativeSelect.selectedIndex = 1;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentClickListener();\n      this.unbindResizeListener();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n\n      if (this.hideTimeout) {\n        clearTimeout(this.hideTimeout);\n        this.hideTimeout = null;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.state.overlayVisible) {\n        if (this.props.filter) {\n          this.alignPanel();\n        }\n\n        if (prevProps.value !== this.props.value) {\n          this.scrollInView();\n        }\n      }\n\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n\n      if (this.state.filter && (!this.props.options || this.props.options.length === 0)) {\n        this.setState({\n          filter: ''\n        });\n      }\n\n      this.updateInputField();\n      this.nativeSelect.selectedIndex = 1;\n    }\n  }, {\n    key: \"renderHiddenSelect\",\n    value: function renderHiddenSelect(selectedOption) {\n      var _this9 = this;\n\n      var placeHolderOption = /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 33\n        }\n      }, this.props.placeholder);\n      var option = selectedOption ? /*#__PURE__*/React.createElement(\"option\", {\n        value: selectedOption.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 39\n        }\n      }, this.getOptionLabel(selectedOption)) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-hidden-accessible p-dropdown-hidden-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        ref: function ref(el) {\n          return _this9.nativeSelect = el;\n        },\n        required: this.props.required,\n        name: this.props.name,\n        tabIndex: -1,\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 17\n        }\n      }, placeHolderOption, option));\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.container,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"renderKeyboardHelper\",\n    value: function renderKeyboardHelper() {\n      var _this10 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-hidden-accessible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: function ref(el) {\n          return _this10.focusInput = el;\n        },\n        id: this.props.inputId,\n        type: \"text\",\n        readOnly: true,\n        \"aria-haspopup\": \"listbox\",\n        onFocus: this.onInputFocus,\n        onBlur: this.onInputBlur,\n        onKeyDown: this.onInputKeyDown,\n        disabled: this.props.disabled,\n        tabIndex: this.props.tabIndex,\n        \"aria-label\": this.props.ariaLabel,\n        \"aria-labelledby\": this.props.ariaLabelledBy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 13\n        }\n      }));\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(selectedOption) {\n      var _this11 = this;\n\n      var label = selectedOption ? this.getOptionLabel(selectedOption) : null;\n\n      if (this.props.editable) {\n        var value = label || this.props.value || '';\n        return /*#__PURE__*/React.createElement(\"input\", {\n          ref: function ref(el) {\n            return _this11.input = el;\n          },\n          type: \"text\",\n          defaultValue: value,\n          className: \"p-dropdown-label p-inputtext\",\n          disabled: this.props.disabled,\n          placeholder: this.props.placeholder,\n          maxLength: this.props.maxLength,\n          onClick: this.onEditableInputClick,\n          onInput: this.onEditableInputChange,\n          onFocus: this.onEditableInputFocus,\n          onBlur: this.onInputBlur,\n          \"aria-label\": this.props.ariaLabel,\n          \"aria-labelledby\": this.props.ariaLabelledBy,\n          \"aria-haspopup\": \"listbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 20\n          }\n        });\n      } else {\n        var className = classNames('p-dropdown-label p-inputtext', {\n          'p-placeholder': label === null && this.props.placeholder,\n          'p-dropdown-label-empty': label === null && !this.props.placeholder\n        });\n        var content = this.props.valueTemplate ? ObjectUtils.getJSXElement(this.props.valueTemplate, selectedOption, this.props) : label || this.props.placeholder || 'empty';\n        return /*#__PURE__*/React.createElement(\"span\", {\n          ref: function ref(el) {\n            return _this11.input = el;\n          },\n          className: className,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 20\n          }\n        }, content);\n      }\n    }\n  }, {\n    key: \"renderClearIcon\",\n    value: function renderClearIcon() {\n      if (this.props.value != null && this.props.showClear && !this.props.disabled) {\n        return /*#__PURE__*/React.createElement(\"i\", {\n          className: \"p-dropdown-clear-icon pi pi-times\",\n          onClick: this.clear,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderDropdownIcon\",\n    value: function renderDropdownIcon() {\n      var _this12 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this12.trigger = el;\n        },\n        className: \"p-dropdown-trigger\",\n        role: \"button\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-expanded\": this.state.overlayVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-dropdown-trigger-icon pi pi-chevron-down p-clickable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems(selectedOption) {\n      var _this13 = this;\n\n      var visibleOptions = this.getVisibleOptions();\n\n      if (visibleOptions && visibleOptions.length) {\n        return visibleOptions.map(function (option, index) {\n          var optionLabel = _this13.getOptionLabel(option);\n\n          var optionKey = _this13.getOptionKey(option, index);\n\n          return /*#__PURE__*/React.createElement(DropdownItem, {\n            key: optionKey,\n            label: optionLabel,\n            option: option,\n            template: _this13.props.itemTemplate,\n            selected: selectedOption === option,\n            disabled: option.disabled,\n            onClick: _this13.onOptionClick,\n            __self: _this13,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 21\n            }\n          });\n        });\n      }\n\n      if (this.hasFilter()) {\n        var emptyFilterMessage = ObjectUtils.getJSXElement(this.props.emptyFilterMessage, this.props);\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"p-dropdown-empty-message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 17\n          }\n        }, emptyFilterMessage);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderFilter\",\n    value: function renderFilter() {\n      var _this14 = this;\n\n      if (this.props.filter) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-dropdown-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-dropdown-filter-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          ref: function ref(el) {\n            return _this14.filterInput = el;\n          },\n          type: \"text\",\n          autoComplete: \"off\",\n          className: \"p-dropdown-filter p-inputtext p-component\",\n          placeholder: this.props.filterPlaceholder,\n          onKeyDown: this.onFilterInputKeyDown,\n          onChange: this.onFilterInputChange,\n          value: this.state.filter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-dropdown-filter-icon pi pi-search\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this15 = this;\n\n      var className = classNames('p-dropdown p-component p-inputwrapper', this.props.className, {\n        'p-disabled': this.props.disabled,\n        'p-focus': this.state.focused,\n        'p-dropdown-clearable': this.props.showClear && !this.props.disabled,\n        'p-inputwrapper-filled': this.props.value,\n        'p-inputwrapper-focus': this.state.focused || this.state.overlayVisible\n      });\n      var selectedOption = this.findOption(this.props.value);\n      var hiddenSelect = this.renderHiddenSelect(selectedOption);\n      var keyboardHelper = this.renderKeyboardHelper();\n      var labelElement = this.renderLabel(selectedOption);\n      var dropdownIcon = this.renderDropdownIcon();\n      var items = this.renderItems(selectedOption);\n      var filterElement = this.renderFilter();\n      var clearIcon = this.renderClearIcon();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.id,\n        ref: function ref(el) {\n          return _this15.container = el;\n        },\n        className: className,\n        style: this.props.style,\n        onClick: this.onClick,\n        onMouseDown: this.props.onMouseDown,\n        onContextMenu: this.props.onContextMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }\n      }, keyboardHelper, hiddenSelect, labelElement, clearIcon, dropdownIcon, /*#__PURE__*/React.createElement(DropdownPanel, {\n        ref: this.overlayRef,\n        appendTo: this.props.appendTo,\n        panelStyle: this.props.panelStyle,\n        panelClassName: this.props.panelClassName,\n        scrollHeight: this.props.scrollHeight,\n        filter: filterElement,\n        onClick: this.onPanelClick,\n        in: this.state.overlayVisible,\n        onEnter: this.onOverlayEnter,\n        onEntered: this.onOverlayEntered,\n        onExit: this.onOverlayExit,\n        onExited: this.onOverlayExited,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 17\n        }\n      }, items));\n    }\n  }]);\n\n  return Dropdown;\n}(Component);\nDropdown.defaultProps = {\n  id: null,\n  name: null,\n  value: null,\n  options: null,\n  optionLabel: null,\n  optionValue: null,\n  valueTemplate: null,\n  itemTemplate: null,\n  style: null,\n  className: null,\n  scrollHeight: '200px',\n  filter: false,\n  filterBy: null,\n  filterMatchMode: 'contains',\n  filterPlaceholder: null,\n  filterLocale: undefined,\n  emptyFilterMessage: 'No results found',\n  editable: false,\n  placeholder: null,\n  required: false,\n  disabled: false,\n  appendTo: null,\n  tabIndex: null,\n  autoFocus: false,\n  filterInputAutoFocus: true,\n  resetFilterOnHide: false,\n  panelClassName: null,\n  panelStyle: null,\n  dataKey: null,\n  inputId: null,\n  showClear: false,\n  maxLength: null,\n  tooltip: null,\n  tooltipOptions: null,\n  ariaLabel: null,\n  ariaLabelledBy: null,\n  onChange: null,\n  onFocus: null,\n  onBlur: null,\n  onMouseDown: null,\n  onContextMenu: null\n};\nDropdown.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.any,\n  options: PropTypes.array,\n  optionLabel: PropTypes.string,\n  optionValue: PropTypes.string,\n  valueTemplate: PropTypes.any,\n  itemTemplate: PropTypes.any,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  scrollHeight: PropTypes.string,\n  filter: PropTypes.bool,\n  filterBy: PropTypes.string,\n  filterMatchMode: PropTypes.string,\n  filterPlaceholder: PropTypes.string,\n  filterLocale: PropTypes.string,\n  emptyFilterMessage: PropTypes.any,\n  editable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  appendTo: PropTypes.any,\n  tabIndex: PropTypes.number,\n  autoFocus: PropTypes.bool,\n  filterInputAutoFocus: PropTypes.bool,\n  resetFilterOnHide: PropTypes.bool,\n  lazy: PropTypes.bool,\n  panelClassName: PropTypes.string,\n  panelStyle: PropTypes.object,\n  dataKey: PropTypes.string,\n  inputId: PropTypes.string,\n  showClear: PropTypes.bool,\n  maxLength: PropTypes.number,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  ariaLabel: PropTypes.string,\n  ariaLabelledBy: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onContextMenu: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/dropdown/Dropdown.js"],"names":["React","Component","PropTypes","DomHandler","ObjectUtils","FilterUtils","classNames","DropdownPanel","DropdownItem","tip","UniqueComponentId","ConnectedOverlayScrollHandler","OverlayEventBus","Dropdown","props","state","filter","focused","overlayVisible","onClick","bind","onInputFocus","onInputBlur","onInputKeyDown","onEditableInputClick","onEditableInputChange","onEditableInputFocus","onOptionClick","onFilterInputChange","onFilterInputKeyDown","onPanelClick","onOverlayEnter","onOverlayEntered","onOverlayExit","onOverlayExited","clear","id","overlayRef","createRef","event","disabled","isClearClicked","focusInput","focus","hideOverlay","showOverlay","persist","setState","onFocus","onBlur","emit","originalEvent","target","container","which","onDownKey","onUpKey","preventDefault","search","options","visibleOptions","getVisibleOptions","selectedItemIndex","findOptionIndex","value","prevItem","findPrevVisibleItem","selectItem","option","altKey","nextItem","findNextVisibleItem","searchTimeout","clearTimeout","char","String","fromCharCode","keyCode","previousSearchChar","currentSearchChar","searchValue","searchIndex","newOption","searchOption","selectedOptionUpdated","setTimeout","index","searchOptionInRange","length","start","end","i","opt","label","getOptionLabel","toString","toLocaleLowerCase","filterLocale","startsWith","filterValue","trim","searchFields","filterBy","split","optionLabel","items","filterMatchMode","bindDocumentClickListener","stopPropagation","onChange","name","undefined","updateEditableLabel","currentSelectedOption","findOption","optionValue","getOptionValue","selectedOptionIndex","equals","dataKey","current","style","zIndex","generateZIndex","alignPanel","scrollInView","bindScrollListener","bindResizeListener","filterInputAutoFocus","filterInput","unbindDocumentClickListener","unbindScrollListener","unbindResizeListener","resetFilterOnHide","resetFilter","input","parentElement","appendTo","minWidth","getWidth","absolutePosition","relativePosition","highlightItem","findSingle","itemsWrapper","documentClickListener","isOutsideClicked","document","addEventListener","removeEventListener","scrollHandler","resizeListener","window","isSameNode","contains","hasClass","resolveFieldData","nativeSelect","checkValidity","hasFilter","editable","selectedOption","autoFocus","tooltip","renderTooltip","updateInputField","selectedIndex","destroy","hideTimeout","prevProps","tooltipOptions","update","content","placeHolderOption","placeholder","el","required","inputId","tabIndex","ariaLabel","ariaLabelledBy","maxLength","className","valueTemplate","getJSXElement","showClear","trigger","map","optionKey","getOptionKey","itemTemplate","emptyFilterMessage","filterPlaceholder","hiddenSelect","renderHiddenSelect","keyboardHelper","renderKeyboardHelper","labelElement","renderLabel","dropdownIcon","renderDropdownIcon","renderItems","filterElement","renderFilter","clearIcon","renderClearIcon","onMouseDown","onContextMenu","panelStyle","panelClassName","scrollHeight","defaultProps","propTypes","string","any","array","object","bool","number","lazy","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport FilterUtils from '../utils/FilterUtils';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { DropdownPanel } from './DropdownPanel';\r\nimport { DropdownItem } from './DropdownItem';\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport class Dropdown extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        name: null,\r\n        value: null,\r\n        options: null,\r\n        optionLabel: null,\r\n        optionValue: null,\r\n        valueTemplate: null,\r\n        itemTemplate: null,\r\n        style: null,\r\n        className: null,\r\n        scrollHeight: '200px',\r\n        filter: false,\r\n        filterBy: null,\r\n        filterMatchMode: 'contains',\r\n        filterPlaceholder: null,\r\n        filterLocale: undefined,\r\n        emptyFilterMessage: 'No results found',\r\n        editable: false,\r\n        placeholder: null,\r\n        required: false,\r\n        disabled: false,\r\n        appendTo: null,\r\n        tabIndex: null,\r\n        autoFocus: false,\r\n        filterInputAutoFocus: true,\r\n        resetFilterOnHide: false,\r\n        panelClassName: null,\r\n        panelStyle: null,\r\n        dataKey: null,\r\n        inputId: null,\r\n        showClear: false,\r\n        maxLength: null,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        ariaLabel: null,\r\n        ariaLabelledBy: null,\r\n        onChange: null,\r\n        onFocus: null,\r\n        onBlur: null,\r\n        onMouseDown: null,\r\n        onContextMenu: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        value: PropTypes.any,\r\n        options: PropTypes.array,\r\n        optionLabel: PropTypes.string,\r\n        optionValue: PropTypes.string,\r\n        valueTemplate: PropTypes.any,\r\n        itemTemplate: PropTypes.any,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        scrollHeight: PropTypes.string,\r\n        filter: PropTypes.bool,\r\n        filterBy: PropTypes.string,\r\n        filterMatchMode: PropTypes.string,\r\n        filterPlaceholder: PropTypes.string,\r\n        filterLocale: PropTypes.string,\r\n        emptyFilterMessage: PropTypes.any,\r\n        editable: PropTypes.bool,\r\n        placeholder: PropTypes.string,\r\n        required: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        appendTo: PropTypes.any,\r\n        tabIndex: PropTypes.number,\r\n        autoFocus: PropTypes.bool,\r\n        filterInputAutoFocus: PropTypes.bool,\r\n        resetFilterOnHide: PropTypes.bool,\r\n        lazy: PropTypes.bool,\r\n        panelClassName: PropTypes.string,\r\n        panelStyle: PropTypes.object,\r\n        dataKey: PropTypes.string,\r\n        inputId: PropTypes.string,\r\n        showClear: PropTypes.bool,\r\n        maxLength: PropTypes.number,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        ariaLabel: PropTypes.string,\r\n        ariaLabelledBy: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func,\r\n        onMouseDown: PropTypes.func,\r\n        onContextMenu: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: '',\r\n            focused: false,\r\n            overlayVisible: false\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onInputFocus = this.onInputFocus.bind(this);\r\n        this.onInputBlur = this.onInputBlur.bind(this);\r\n        this.onInputKeyDown = this.onInputKeyDown.bind(this);\r\n        this.onEditableInputClick = this.onEditableInputClick.bind(this);\r\n        this.onEditableInputChange = this.onEditableInputChange.bind(this);\r\n        this.onEditableInputFocus = this.onEditableInputFocus.bind(this);\r\n        this.onOptionClick = this.onOptionClick.bind(this);\r\n        this.onFilterInputChange = this.onFilterInputChange.bind(this);\r\n        this.onFilterInputKeyDown = this.onFilterInputKeyDown.bind(this);\r\n        this.onPanelClick = this.onPanelClick.bind(this);\r\n        this.onOverlayEnter = this.onOverlayEnter.bind(this);\r\n        this.onOverlayEntered = this.onOverlayEntered.bind(this);\r\n        this.onOverlayExit = this.onOverlayExit.bind(this);\r\n        this.onOverlayExited = this.onOverlayExited.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.overlayRef = React.createRef();\r\n    }\r\n\r\n    onClick(event) {\r\n        if (this.props.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isClearClicked(event)) {\r\n            this.focusInput.focus();\r\n\r\n            if (this.state.overlayVisible) {\r\n                this.hideOverlay();\r\n            }\r\n            else {\r\n                this.showOverlay();\r\n            }\r\n        }\r\n    }\r\n\r\n    onInputFocus(event) {\r\n        event.persist();\r\n        this.setState({ focused: true }, () => {\r\n            if (this.props.onFocus) {\r\n                this.props.onFocus(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    onInputBlur(event) {\r\n        event.persist();\r\n        this.setState({ focused: false }, () => {\r\n            if (this.props.onBlur) {\r\n                this.props.onBlur(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    onPanelClick(event) {\r\n        OverlayEventBus.emit('overlay-click', {\r\n            originalEvent: event,\r\n            target: this.container\r\n        });\r\n    }\r\n\r\n    onInputKeyDown(event) {\r\n        switch (event.which) {\r\n            //down\r\n            case 40:\r\n                this.onDownKey(event);\r\n                break;\r\n\r\n            //up\r\n            case 38:\r\n                this.onUpKey(event);\r\n                break;\r\n\r\n            //space\r\n            case 32:\r\n                if (!this.state.overlayVisible) {\r\n                    this.showOverlay();\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n\r\n            //enter\r\n            case 13:\r\n                this.hideOverlay();\r\n                event.preventDefault();\r\n                break;\r\n\r\n            //escape and tab\r\n            case 27:\r\n            case 9:\r\n                this.hideOverlay();\r\n                break;\r\n\r\n            default:\r\n                this.search(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onFilterInputKeyDown(event) {\r\n        switch (event.which) {\r\n            //down\r\n            case 40:\r\n                this.onDownKey(event);\r\n                break;\r\n\r\n            //up\r\n            case 38:\r\n                this.onUpKey(event);\r\n                break;\r\n\r\n            //enter and escape\r\n            case 13:\r\n            case 27:\r\n                this.hideOverlay();\r\n                event.preventDefault();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onUpKey(event) {\r\n        if (this.props.options) {\r\n            let visibleOptions = this.getVisibleOptions();\r\n            let selectedItemIndex = this.findOptionIndex(this.props.value, visibleOptions);\r\n            let prevItem = this.findPrevVisibleItem(selectedItemIndex, visibleOptions);\r\n\r\n            if (prevItem) {\r\n                this.selectItem({\r\n                    originalEvent: event,\r\n                    option: prevItem\r\n                });\r\n            }\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDownKey(event) {\r\n        if (this.props.options) {\r\n            if (!this.state.overlayVisible && event.altKey) {\r\n                this.showOverlay();\r\n            }\r\n            else {\r\n                let visibleOptions = this.getVisibleOptions();\r\n                let selectedItemIndex = this.findOptionIndex(this.props.value, visibleOptions);\r\n                let nextItem = this.findNextVisibleItem(selectedItemIndex, visibleOptions);\r\n\r\n                if (nextItem) {\r\n                    this.selectItem({\r\n                        originalEvent: event,\r\n                        option: nextItem\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    search(event) {\r\n        if (this.searchTimeout) {\r\n            clearTimeout(this.searchTimeout);\r\n        }\r\n\r\n        const char = String.fromCharCode(event.keyCode);\r\n        this.previousSearchChar = this.currentSearchChar;\r\n        this.currentSearchChar = char;\r\n\r\n        if (this.previousSearchChar === this.currentSearchChar)\r\n            this.searchValue = this.currentSearchChar;\r\n        else\r\n            this.searchValue = this.searchValue ? this.searchValue + char : char;\r\n\r\n        let searchIndex = this.props.value ? this.findOptionIndex(this.props.value, this.props.options) : -1;\r\n        let newOption = this.searchOption(++searchIndex);\r\n\r\n        if (newOption) {\r\n            this.selectItem({\r\n                originalEvent: event,\r\n                option: newOption\r\n            });\r\n            this.selectedOptionUpdated = true;\r\n        }\r\n\r\n        this.searchTimeout = setTimeout(() => {\r\n            this.searchValue = null;\r\n        }, 250);\r\n    }\r\n\r\n    searchOption(index) {\r\n        let option;\r\n\r\n        if (this.searchValue) {\r\n            option = this.searchOptionInRange(index, this.props.options.length);\r\n\r\n            if (!option) {\r\n                option = this.searchOptionInRange(0, index);\r\n            }\r\n        }\r\n\r\n        return option;\r\n    }\r\n\r\n    searchOptionInRange(start, end) {\r\n        for (let i = start; i < end; i++) {\r\n            let opt = this.props.options[i];\r\n            let label = this.getOptionLabel(opt).toString().toLocaleLowerCase(this.props.filterLocale)\r\n            if (label.startsWith(this.searchValue.toLocaleLowerCase(this.props.filterLocale))) {\r\n                return opt;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    filter(options) {\r\n        let filterValue = this.state.filter.trim().toLocaleLowerCase(this.props.filterLocale);\r\n        let searchFields = this.props.filterBy ? this.props.filterBy.split(',') : [this.props.optionLabel || 'label'];\r\n        let items = FilterUtils.filter(options, searchFields, filterValue, this.props.filterMatchMode, this.props.filterLocale);\r\n\r\n        return (items && items.length) ? items : null;\r\n    }\r\n\r\n    findNextVisibleItem(index, options) {\r\n        let i = index + 1;\r\n        if (i === options.length) {\r\n            return null;\r\n        }\r\n\r\n        let option = options[i];\r\n        if (option.disabled)\r\n            return this.findNextVisibleItem(i);\r\n        else\r\n            return option;\r\n    }\r\n\r\n    findPrevVisibleItem(index, options) {\r\n        let i = index - 1;\r\n        if (i < 0) {\r\n            return null;\r\n        }\r\n\r\n        let option = options[i];\r\n        if (option.disabled)\r\n            return this.findPrevVisibleItem(i);\r\n        else\r\n            return option;\r\n    }\r\n\r\n    onEditableInputClick(event) {\r\n        this.bindDocumentClickListener();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onEditableInputChange(event) {\r\n        this.props.onChange({\r\n            originalEvent: event.originalEvent,\r\n            value: event.target.value,\r\n            stopPropagation: () => { },\r\n            preventDefault: () => { },\r\n            target: {\r\n                name: this.props.name,\r\n                id: this.id,\r\n                value: event.target.value,\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditableInputFocus(event) {\r\n        event.persist();\r\n        this.setState({ focused: true }, () => {\r\n            this.hideOverlay();\r\n\r\n            if (this.props.onFocus) {\r\n                this.props.onFocus(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    onOptionClick(event) {\r\n        const option = event.option;\r\n\r\n        if (!option.disabled) {\r\n            this.selectItem(event);\r\n            this.focusInput.focus();\r\n        }\r\n\r\n        this.hideOverlay();\r\n    }\r\n\r\n    onFilterInputChange(event) {\r\n        this.setState({ filter: event.target.value });\r\n    }\r\n\r\n    resetFilter() {\r\n        this.setState({ filter: '' });\r\n    }\r\n\r\n    clear(event) {\r\n        this.props.onChange({\r\n            originalEvent: event,\r\n            value: undefined,\r\n            stopPropagation: () => { },\r\n            preventDefault: () => { },\r\n            target: {\r\n                name: this.props.name,\r\n                id: this.id,\r\n                value: undefined\r\n            }\r\n        });\r\n\r\n        this.updateEditableLabel();\r\n    }\r\n\r\n    selectItem(event) {\r\n        let currentSelectedOption = this.findOption(this.props.value);\r\n\r\n        if (currentSelectedOption !== event.option) {\r\n            this.updateEditableLabel(event.option);\r\n            const optionValue = this.getOptionValue(event.option);\r\n\r\n            this.props.onChange({\r\n                originalEvent: event.originalEvent,\r\n                value: optionValue,\r\n                stopPropagation: () => { },\r\n                preventDefault: () => { },\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.id,\r\n                    value: optionValue\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    findOptionIndex(value, options) {\r\n        let selectedOptionIndex = -1;\r\n        if (options) {\r\n            for (let i = 0; i < options.length; i++) {\r\n                let optionValue = this.getOptionValue(options[i]);\r\n                if ((value === null && optionValue == null) || ObjectUtils.equals(value, optionValue, this.props.dataKey)) {\r\n                    selectedOptionIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return selectedOptionIndex;\r\n    }\r\n\r\n    findOption(value) {\r\n        let index = this.findOptionIndex(value, this.props.options);\r\n        return (index !== -1) ? this.props.options[index] : null;\r\n    }\r\n\r\n    showOverlay() {\r\n        this.setState({ overlayVisible: true });\r\n    }\r\n\r\n    hideOverlay() {\r\n        this.setState({ overlayVisible: false });\r\n    }\r\n\r\n    onOverlayEnter() {\r\n        this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\r\n        this.alignPanel();\r\n    }\r\n\r\n    onOverlayEntered() {\r\n        this.scrollInView();\r\n        this.bindDocumentClickListener();\r\n        this.bindScrollListener();\r\n        this.bindResizeListener();\r\n\r\n        if (this.props.filter && this.props.filterInputAutoFocus) {\r\n            this.filterInput.focus();\r\n        }\r\n    }\r\n\r\n    onOverlayExit() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindScrollListener();\r\n        this.unbindResizeListener();\r\n    }\r\n\r\n    onOverlayExited() {\r\n        if (this.props.filter && this.props.resetFilterOnHide) {\r\n            this.resetFilter();\r\n        }\r\n    }\r\n\r\n    alignPanel() {\r\n        const container = this.input.parentElement;\r\n        if (this.props.appendTo) {\r\n            this.overlayRef.current.style.minWidth = DomHandler.getWidth(container) + 'px';\r\n            DomHandler.absolutePosition(this.overlayRef.current, container);\r\n        }\r\n        else {\r\n            DomHandler.relativePosition(this.overlayRef.current, container);\r\n        }\r\n    }\r\n\r\n    scrollInView() {\r\n        let highlightItem = DomHandler.findSingle(this.overlayRef.current, 'li.p-highlight');\r\n        if (highlightItem) {\r\n            let itemsWrapper = DomHandler.findSingle(this.overlayRef.current, '.p-dropdown-items-wrapper');\r\n            DomHandler.scrollInView(itemsWrapper, highlightItem);\r\n        }\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = (event) => {\r\n                if (this.state.overlayVisible && this.isOutsideClicked(event)) {\r\n                    this.hideOverlay();\r\n                }\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hideOverlay();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    bindResizeListener() {\r\n        if (!this.resizeListener) {\r\n            this.resizeListener = () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hideOverlay();\r\n                }\r\n            };\r\n            window.addEventListener('resize', this.resizeListener);\r\n        }\r\n    }\r\n\r\n    unbindResizeListener() {\r\n        if (this.resizeListener) {\r\n            window.removeEventListener('resize', this.resizeListener);\r\n            this.resizeListener = null;\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(event) {\r\n        return this.container && !(this.container.isSameNode(event.target) || this.isClearClicked(event) || this.container.contains(event.target)\r\n            || (this.overlayRef && this.overlayRef.current.contains(event.target)));\r\n    }\r\n\r\n    isClearClicked(event) {\r\n        return DomHandler.hasClass(event.target, 'p-dropdown-clear-icon')\r\n    }\r\n\r\n    updateEditableLabel(option) {\r\n        if (this.input) {\r\n            this.input.value = (option ? this.getOptionLabel(option) : this.props.value || '');\r\n        }\r\n    }\r\n\r\n    hasFilter() {\r\n        return this.state.filter && this.state.filter.trim().length > 0;\r\n    }\r\n\r\n    getOptionLabel(option) {\r\n        return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : (option['label'] !== undefined ? option['label'] : option);\r\n    }\r\n\r\n    getOptionValue(option) {\r\n        return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : (option['value'] !== undefined ? option['value'] : option);\r\n    }\r\n\r\n    getOptionKey(option, index) {\r\n        return this.props.dataKey ? ObjectUtils.resolveFieldData(option, this.props.dataKey) : `pr_id__${this.getOptionLabel(option)}-${index}`;\r\n    }\r\n\r\n    checkValidity() {\r\n        return this.nativeSelect.checkValidity();\r\n    }\r\n\r\n    getVisibleOptions() {\r\n        if (this.props.options && this.hasFilter()) {\r\n            return this.filter(this.props.options);\r\n        }\r\n\r\n        return this.props.options;\r\n    }\r\n\r\n    updateInputField() {\r\n        if (this.props.editable && this.input) {\r\n            let selectedOption = this.findOption(this.props.value);\r\n            const label = selectedOption ? this.getOptionLabel(selectedOption) : null;\r\n            const value = label || this.props.value || '';\r\n            this.input.value = value;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.autoFocus && this.focusInput) {\r\n            this.focusInput.focus();\r\n        }\r\n\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n\r\n        this.updateInputField();\r\n        this.nativeSelect.selectedIndex = 1;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindResizeListener();\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n\r\n        if (this.hideTimeout) {\r\n            clearTimeout(this.hideTimeout);\r\n            this.hideTimeout = null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.state.overlayVisible) {\r\n            if (this.props.filter) {\r\n                this.alignPanel();\r\n            }\r\n\r\n            if (prevProps.value !== this.props.value) {\r\n                this.scrollInView();\r\n            }\r\n        }\r\n\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n\r\n        if (this.state.filter && (!this.props.options || this.props.options.length === 0)) {\r\n            this.setState({ filter: '' });\r\n        }\r\n\r\n        this.updateInputField();\r\n        this.nativeSelect.selectedIndex = 1;\r\n    }\r\n\r\n    renderHiddenSelect(selectedOption) {\r\n        let placeHolderOption = <option value=\"\">{this.props.placeholder}</option>;\r\n        let option = selectedOption ? <option value={selectedOption.value}>{this.getOptionLabel(selectedOption)}</option> : null;\r\n\r\n        return (\r\n            <div className=\"p-hidden-accessible p-dropdown-hidden-select\">\r\n                <select ref={(el) => this.nativeSelect = el} required={this.props.required} name={this.props.name} tabIndex={-1} aria-hidden=\"true\">\r\n                    {placeHolderOption}\r\n                    {option}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.container,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    renderKeyboardHelper() {\r\n        return <div className=\"p-hidden-accessible\">\r\n            <input ref={(el) => this.focusInput = el} id={this.props.inputId} type=\"text\" readOnly aria-haspopup=\"listbox\"\r\n                onFocus={this.onInputFocus} onBlur={this.onInputBlur} onKeyDown={this.onInputKeyDown}\r\n                disabled={this.props.disabled} tabIndex={this.props.tabIndex} aria-label={this.props.ariaLabel} aria-labelledby={this.props.ariaLabelledBy} />\r\n        </div>;\r\n    }\r\n\r\n    renderLabel(selectedOption) {\r\n        const label = selectedOption ? this.getOptionLabel(selectedOption) : null;\r\n\r\n        if (this.props.editable) {\r\n            let value = label || this.props.value || '';\r\n\r\n            return <input ref={(el) => this.input = el} type=\"text\" defaultValue={value} className=\"p-dropdown-label p-inputtext\" disabled={this.props.disabled}\r\n                placeholder={this.props.placeholder} maxLength={this.props.maxLength} onClick={this.onEditableInputClick} onInput={this.onEditableInputChange}\r\n                onFocus={this.onEditableInputFocus} onBlur={this.onInputBlur} aria-label={this.props.ariaLabel} aria-labelledby={this.props.ariaLabelledBy}\r\n                aria-haspopup=\"listbox\" />;\r\n        }\r\n        else {\r\n            let className = classNames('p-dropdown-label p-inputtext', {\r\n                'p-placeholder': label === null && this.props.placeholder,\r\n                'p-dropdown-label-empty': label === null && !this.props.placeholder\r\n            });\r\n\r\n            let content = this.props.valueTemplate ? ObjectUtils.getJSXElement(this.props.valueTemplate, selectedOption, this.props) : (label || this.props.placeholder || 'empty');\r\n\r\n            return <span ref={(el) => this.input = el} className={className}>{content}</span>;\r\n        }\r\n    }\r\n\r\n    renderClearIcon() {\r\n        if (this.props.value != null && this.props.showClear && !this.props.disabled) {\r\n            return (\r\n                <i className=\"p-dropdown-clear-icon pi pi-times\" onClick={this.clear}></i>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderDropdownIcon() {\r\n        return (\r\n            <div ref={(el) => this.trigger = el} className=\"p-dropdown-trigger\" role=\"button\" aria-haspopup=\"listbox\" aria-expanded={this.state.overlayVisible}>\r\n                <span className=\"p-dropdown-trigger-icon pi pi-chevron-down p-clickable\"></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderItems(selectedOption) {\r\n        let visibleOptions = this.getVisibleOptions();\r\n\r\n        if (visibleOptions && visibleOptions.length) {\r\n            return visibleOptions.map((option, index) => {\r\n                let optionLabel = this.getOptionLabel(option);\r\n                let optionKey = this.getOptionKey(option, index);\r\n\r\n                return (\r\n                    <DropdownItem key={optionKey} label={optionLabel} option={option} template={this.props.itemTemplate} selected={selectedOption === option} disabled={option.disabled} onClick={this.onOptionClick} />\r\n                );\r\n            });\r\n        }\r\n\r\n        if (this.hasFilter()) {\r\n            const emptyFilterMessage = ObjectUtils.getJSXElement(this.props.emptyFilterMessage, this.props);\r\n            return (\r\n                <li className=\"p-dropdown-empty-message\">\r\n                    {emptyFilterMessage}\r\n                </li>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderFilter() {\r\n        if (this.props.filter) {\r\n            return (\r\n                <div className=\"p-dropdown-header\">\r\n                    <div className=\"p-dropdown-filter-container\">\r\n                        <input ref={(el) => this.filterInput = el} type=\"text\" autoComplete=\"off\" className=\"p-dropdown-filter p-inputtext p-component\" placeholder={this.props.filterPlaceholder}\r\n                            onKeyDown={this.onFilterInputKeyDown} onChange={this.onFilterInputChange} value={this.state.filter} />\r\n                        <span className=\"p-dropdown-filter-icon pi pi-search\"></span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-dropdown p-component p-inputwrapper', this.props.className, {\r\n            'p-disabled': this.props.disabled,\r\n            'p-focus': this.state.focused,\r\n            'p-dropdown-clearable': this.props.showClear && !this.props.disabled,\r\n            'p-inputwrapper-filled': this.props.value,\r\n            'p-inputwrapper-focus': this.state.focused || this.state.overlayVisible\r\n        });\r\n        let selectedOption = this.findOption(this.props.value);\r\n\r\n        let hiddenSelect = this.renderHiddenSelect(selectedOption);\r\n        let keyboardHelper = this.renderKeyboardHelper();\r\n        let labelElement = this.renderLabel(selectedOption);\r\n        let dropdownIcon = this.renderDropdownIcon();\r\n        let items = this.renderItems(selectedOption);\r\n        let filterElement = this.renderFilter();\r\n        let clearIcon = this.renderClearIcon();\r\n\r\n        return (\r\n            <div id={this.id} ref={(el) => this.container = el} className={className} style={this.props.style} onClick={this.onClick}\r\n                onMouseDown={this.props.onMouseDown} onContextMenu={this.props.onContextMenu}>\r\n                {keyboardHelper}\r\n                {hiddenSelect}\r\n                {labelElement}\r\n                {clearIcon}\r\n                {dropdownIcon}\r\n                <DropdownPanel ref={this.overlayRef} appendTo={this.props.appendTo} panelStyle={this.props.panelStyle} panelClassName={this.props.panelClassName}\r\n                    scrollHeight={this.props.scrollHeight} filter={filterElement} onClick={this.onPanelClick}\r\n                    in={this.state.overlayVisible} onEnter={this.onOverlayEnter} onEntered={this.onOverlayEntered} onExit={this.onOverlayExit} onExited={this.onOverlayExited}>\r\n                    {items}\r\n                </DropdownPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}