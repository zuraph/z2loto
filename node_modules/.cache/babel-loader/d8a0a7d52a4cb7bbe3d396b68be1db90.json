{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\keyfilter\\\\KeyFilterDoc.js\";\nimport React, { Component } from 'react';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var KeyFilterDoc = /*#__PURE__*/function (_Component) {\n  _inherits(KeyFilterDoc, _Component);\n\n  var _super = _createSuper(KeyFilterDoc);\n\n  function KeyFilterDoc(props) {\n    var _this;\n\n    _classCallCheck(this, KeyFilterDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, {Component} from 'react';\\nimport { InputText } from 'primereact/inputtext';\\n\\nexport class KeyFilterDemo extends Component {\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <div className=\\\"p-grid p-fluid\\\">\\n                        <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                            <label htmlFor=\\\"integer\\\">Integers</label>\\n                            <InputText id=\\\"integer\\\" keyfilter=\\\"int\\\" />\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                            <label htmlFor=\\\"numbers\\\">Numbers</label>\\n                            <InputText id=\\\"numbers\\\" keyfilter=\\\"num\\\" />\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                            <label htmlFor=\\\"money\\\">Hex</label>\\n                            <InputText id=\\\"money\\\" keyfilter=\\\"money\\\" />\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"integer\\\">Integers</label>\\n                            <InputText id=\\\"hex\\\" keyfilter=\\\"hex\\\" />\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                            <label htmlFor=\\\"alpha\\\">Alphabetic</label>\\n                            <InputText id=\\\"alpha\\\" keyfilter=\\\"alpha\\\"/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"alphanum\\\">Alphanumberic</label>\\n                            <InputText id=\\\"alphanum\\\" keyfilter=\\\"alphanum\\\" />\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                            <label htmlFor=\\\"block\\\">Block {`< > * !`}</label>\\n                            <InputText id=\\\"block\\\" keyfilter={/^[^<>*!]+$/}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                            <label htmlFor=\\\"spaceblock\\\">Block space key</label>\\n                            <InputText id=\\\"spaceblock\\\" keyfilter={/[^\\\\s]/} />\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React from 'react';\\nimport { InputText } from 'primereact/inputtext';\\n\\nconst KeyFilterDemo = () => {\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <div className=\\\"p-grid p-fluid\\\">\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"integer\\\">Integers</label>\\n                        <InputText id=\\\"integer\\\" keyfilter=\\\"int\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"numbers\\\">Numbers</label>\\n                        <InputText id=\\\"numbers\\\" keyfilter=\\\"num\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"money\\\">Hex</label>\\n                        <InputText id=\\\"money\\\" keyfilter=\\\"money\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                    <label htmlFor=\\\"integer\\\">Integers</label>\\n                        <InputText id=\\\"hex\\\" keyfilter=\\\"hex\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"alpha\\\">Alphabetic</label>\\n                        <InputText id=\\\"alpha\\\" keyfilter=\\\"alpha\\\"/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                    <label htmlFor=\\\"alphanum\\\">Alphanumberic</label>\\n                        <InputText id=\\\"alphanum\\\" keyfilter=\\\"alphanum\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"block\\\">Block {`< > * !`}</label>\\n                        <InputText id=\\\"block\\\" keyfilter={/^[^<>*!]+$/}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"spaceblock\\\">Block space key</label>\\n                        <InputText id=\\\"spaceblock\\\" keyfilter={/[^\\\\s]/} />\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React from 'react';\\nimport { InputText } from 'primereact/inputtext';\\n\\nconst KeyFilterDemo = () => {\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <div className=\\\"p-grid p-fluid\\\">\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"integer\\\">Integers</label>\\n                        <InputText id=\\\"integer\\\" keyfilter=\\\"int\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"numbers\\\">Numbers</label>\\n                        <InputText id=\\\"numbers\\\" keyfilter=\\\"num\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"money\\\">Hex</label>\\n                        <InputText id=\\\"money\\\" keyfilter=\\\"money\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                    <label htmlFor=\\\"integer\\\">Integers</label>\\n                        <InputText id=\\\"hex\\\" keyfilter=\\\"hex\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"alpha\\\">Alphabetic</label>\\n                        <InputText id=\\\"alpha\\\" keyfilter=\\\"alpha\\\"/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                    <label htmlFor=\\\"alphanum\\\">Alphanumberic</label>\\n                        <InputText id=\\\"alphanum\\\" keyfilter=\\\"alphanum\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"block\\\">Block {`< > * !`}</label>\\n                        <InputText id=\\\"block\\\" keyfilter={/^[^<>*!]+$/}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-3\\\">\\n                        <label htmlFor=\\\"spaceblock\\\">Block space key</label>\\n                        <InputText id=\\\"spaceblock\\\" keyfilter={/[^\\\\s]/} />\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(KeyFilterDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 1\n        }\n      }, \"\\nimport { InputText } from 'primereact/inputtext';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, \"KeyFilter property is integrated in input components such as InputText using the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 109\n        }\n      }, \"keyfilter\"), \" property. The value of the filter can either a built-in regular expression or a custom one. Following input only accepts integers.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 1\n        }\n      }, \"\\n<InputText keyfilter=\\\"int\\\" />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }\n      }, \"Built-in Filters\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, \"Commonly used cases have their own built-in shortcuts.\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, \"pint: Positive integers\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }\n      }, \"int: Integers\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }\n      }, \"pnum: Positive numbers\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 29\n        }\n      }, \"num: Numbers\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }\n      }, \"hex: Hexadecimal\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      }, \"email: Email\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }\n      }, \"alpha: Alphabetic\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }\n      }, \"alphanum: Alphanumeric\")), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, \"Custom Filter\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, \"A custom filter is enabled by binding a regular expression, an example that blocks special characters would be;\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 1\n        }\n      }, \"\\n<InputText keyfilter={/^[^#<>*!]+$/}/>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }, \"None.\")), useLiveEditorTabs({\n        name: 'KeyFilterDemo',\n        sources: this.sources\n      })));\n    }\n  }]);\n\n  return KeyFilterDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/keyfilter/KeyFilterDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","KeyFilterDoc","props","sources","tabName","content","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kCAAlC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAEI,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,OAAL,GAAe;AACX,eAAS;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OADE;AAsDX,eAAS;AACLD,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OAtDE;AAyGX,YAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,OAAO;AAFL;AAzGK,KAAf;AAHe;AAgKlB;;AAlKL;AAAA;AAAA,WAoKI,iCAAwB;AACpB,aAAO,KAAP;AACH;AAtKL;AAAA;AAAA,WAwKI,kBAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFoB,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GAAoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAApF,wIATJ,eAYpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAZoB,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAlBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAnBJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCARJ,CApBJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA/BJ,eAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HAhCJ,eAiCpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAjCoB,eAuCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvCJ,eAwCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxCJ,CADJ,EA6CQL,iBAAiB,CAAC;AAAEM,QAAAA,IAAI,EAAE,eAAR;AAAyBH,QAAAA,OAAO,EAAE,KAAKA;AAAvC,OAAD,CA7CzB,CADJ,CADJ;AAoDH;AA7NL;;AAAA;AAAA,EAAkCP,SAAlC","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\r\n\r\nexport class KeyFilterDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, {Component} from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nexport class KeyFilterDemo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"p-grid p-fluid\">\r\n                        <div className=\"p-field p-col-12 p-md-3\">\r\n                            <label htmlFor=\"integer\">Integers</label>\r\n                            <InputText id=\"integer\" keyfilter=\"int\" />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-3\">\r\n                            <label htmlFor=\"numbers\">Numbers</label>\r\n                            <InputText id=\"numbers\" keyfilter=\"num\" />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-3\">\r\n                            <label htmlFor=\"money\">Hex</label>\r\n                            <InputText id=\"money\" keyfilter=\"money\" />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"integer\">Integers</label>\r\n                            <InputText id=\"hex\" keyfilter=\"hex\" />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-3\">\r\n                            <label htmlFor=\"alpha\">Alphabetic</label>\r\n                            <InputText id=\"alpha\" keyfilter=\"alpha\"/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"alphanum\">Alphanumberic</label>\r\n                            <InputText id=\"alphanum\" keyfilter=\"alphanum\" />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-3\">\r\n                            <label htmlFor=\"block\">Block {\\`< > * !\\`}</label>\r\n                            <InputText id=\"block\" keyfilter={/^[^<>*!]+$/}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-3\">\r\n                            <label htmlFor=\"spaceblock\">Block space key</label>\r\n                            <InputText id=\"spaceblock\" keyfilter={/[^\\\\s]/} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nconst KeyFilterDemo = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"p-grid p-fluid\">\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"integer\">Integers</label>\r\n                        <InputText id=\"integer\" keyfilter=\"int\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"numbers\">Numbers</label>\r\n                        <InputText id=\"numbers\" keyfilter=\"num\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"money\">Hex</label>\r\n                        <InputText id=\"money\" keyfilter=\"money\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                    <label htmlFor=\"integer\">Integers</label>\r\n                        <InputText id=\"hex\" keyfilter=\"hex\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"alpha\">Alphabetic</label>\r\n                        <InputText id=\"alpha\" keyfilter=\"alpha\"/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                    <label htmlFor=\"alphanum\">Alphanumberic</label>\r\n                        <InputText id=\"alphanum\" keyfilter=\"alphanum\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"block\">Block {\\`< > * !\\`}</label>\r\n                        <InputText id=\"block\" keyfilter={/^[^<>*!]+$/}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"spaceblock\">Block space key</label>\r\n                        <InputText id=\"spaceblock\" keyfilter={/[^\\\\s]/} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nconst KeyFilterDemo = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"p-grid p-fluid\">\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"integer\">Integers</label>\r\n                        <InputText id=\"integer\" keyfilter=\"int\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"numbers\">Numbers</label>\r\n                        <InputText id=\"numbers\" keyfilter=\"num\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"money\">Hex</label>\r\n                        <InputText id=\"money\" keyfilter=\"money\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                    <label htmlFor=\"integer\">Integers</label>\r\n                        <InputText id=\"hex\" keyfilter=\"hex\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"alpha\">Alphabetic</label>\r\n                        <InputText id=\"alpha\" keyfilter=\"alpha\"/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                    <label htmlFor=\"alphanum\">Alphanumberic</label>\r\n                        <InputText id=\"alphanum\" keyfilter=\"alphanum\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"block\">Block {\\`< > * !\\`}</label>\r\n                        <InputText id=\"block\" keyfilter={/^[^<>*!]+$/}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"spaceblock\">Block space key</label>\r\n                        <InputText id=\"spaceblock\" keyfilter={/[^\\\\s]/} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { InputText } from 'primereact/inputtext';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>KeyFilter property is integrated in input components such as InputText using the <i>keyfilter</i> property. The value of the filter\r\n                            can either a built-in regular expression or a custom one. Following input only accepts integers.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<InputText keyfilter=\"int\" />\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Built-in Filters</h5>\r\n                        <p>Commonly used cases have their own built-in shortcuts.</p>\r\n                        <ul>\r\n                            <li>pint: Positive integers</li>\r\n                            <li>int: Integers</li>\r\n                            <li>pnum: Positive numbers</li>\r\n                            <li>num: Numbers</li>\r\n                            <li>hex: Hexadecimal</li>\r\n                            <li>email: Email</li>\r\n                            <li>alpha: Alphabetic</li>\r\n                            <li>alphanum: Alphanumeric</li>\r\n                        </ul>\r\n\r\n                        <h5>Custom Filter</h5>\r\n                        <p>A custom filter is enabled by binding a regular expression, an example that blocks special characters would be;</p>\r\n<CodeHighlight>\r\n{`\r\n<InputText keyfilter={/^[^#<>*!]+$/}/>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'KeyFilterDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}