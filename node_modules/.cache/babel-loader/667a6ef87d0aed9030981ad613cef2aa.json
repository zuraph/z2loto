{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\views\\\\transferProviders\\\\components\\\\providersTable.js\";\n\nimport { Column } from \"../../../components/column/Column\";\nimport { DataTable } from \"../../../components/datatable/DataTable\";\nimport React, { useEffect, useState } from \"react\";\nimport { Actions } from \"../../../core\";\nimport { ProgressBar } from \"../../../components/progressbar/ProgressBar\";\nimport classNames from \"classnames\";\nexport var ProvidersTable = function ProvidersTable(_ref) {\n  var id = _ref.id,\n      onSelect = _ref.onSelect;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loader = _useState6[0],\n      setLoader = _useState6[1];\n\n  useEffect(function () {\n    if (id) {\n      loadData(id);\n      setSelected(null);\n    }\n  }, [id]);\n  useEffect(function () {\n    if (selected) {\n      onSelect(selected.id);\n    }\n  }, [selected]);\n\n  var loadData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoader(true);\n              _context.next = 3;\n              return Actions.Providers.GetProviders(id);\n\n            case 3:\n              response = _context.sent;\n              setLoader(false);\n              setData(response.status ? response.data.data : []);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadData(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loader && /*#__PURE__*/React.createElement(ProgressBar, {\n    style: {\n      height: '6px'\n    },\n    mode: \"indeterminate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    selection: selected,\n    onSelectionChange: function onSelectionChange(e) {\n      return setSelected(e.value);\n    },\n    selectionMode: \"single\",\n    dataKey: \"id\",\n    scrollable: true,\n    value: data,\n    className: \"p-datatable-gridlines\",\n    rowClassName: function rowClassName(data) {\n      return {\n        'bg-red': data.disabled === 1\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    field: \"id\",\n    header: \"ID\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"name\",\n    header: \"Name\",\n    filter: true,\n    filterPlaceholder: \"Search by name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"disabled\",\n    header: \"On/Off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/views/transferProviders/components/providersTable.js"],"names":["Column","DataTable","React","useEffect","useState","Actions","ProgressBar","classNames","ProvidersTable","id","onSelect","data","setData","selected","setSelected","loader","setLoader","loadData","Providers","GetProviders","response","status","height","e","value","disabled"],"mappings":"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","sourcesContent":["import {Column} from \"../../../components/column/Column\";\r\nimport {DataTable} from \"../../../components/datatable/DataTable\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Actions} from \"../../../core\";\r\nimport {ProgressBar} from \"../../../components/progressbar/ProgressBar\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const ProvidersTable = ({id,onSelect}) =>{\r\n    const [data,setData]=useState(null)\r\n    const [selected,setSelected]=useState(null)\r\n\r\n    const [loader,setLoader]=useState(false)\r\n    useEffect(()=>{\r\n        if(id){\r\n            loadData(id)\r\n            setSelected(null)\r\n        }\r\n    },[id])\r\n    useEffect(()=>{\r\n        if(selected){\r\n            onSelect(selected.id)\r\n        }\r\n    },[selected])\r\n\r\n    const loadData = async (id) => {\r\n        setLoader(true)\r\n        const response = await Actions.Providers.GetProviders(id);\r\n        setLoader(false)\r\n        setData(response.status?response.data.data:[])\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {loader && <ProgressBar style={{ height: '6px' }}mode=\"indeterminate\" />}\r\n            <DataTable\r\n                selection={selected} onSelectionChange={e => setSelected(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                scrollable value={data}  className=\"p-datatable-gridlines\" rowClassName={data => {\r\n                 return {\r\n                    'bg-red': data.disabled === 1\r\n                }\r\n            }}>\r\n                <Column field=\"id\" header=\"ID\" />\r\n                <Column field=\"name\" header=\"Name\" filter  filterPlaceholder=\"Search by name\"/>\r\n                <Column field=\"disabled\" header=\"On/Off\"/>\r\n            </DataTable>\r\n        </>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}