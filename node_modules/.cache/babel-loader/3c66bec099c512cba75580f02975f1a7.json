{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\treetable\\\\TreeTableScrollDemo.js\";\nimport React, { Component } from 'react';\nimport { TreeTable } from '../../components/treetable/TreeTable';\nimport { Column } from '../../components/column/Column';\nimport { NodeService } from '../service/NodeService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var TreeTableScrollDemo = /*#__PURE__*/function (_Component) {\n  _inherits(TreeTableScrollDemo, _Component);\n\n  var _super = _createSuper(TreeTableScrollDemo);\n\n  function TreeTableScrollDemo(props) {\n    var _this;\n\n    _classCallCheck(this, TreeTableScrollDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      nodes: []\n    };\n    _this.nodeservice = new NodeService();\n    return _this;\n  }\n\n  _createClass(TreeTableScrollDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.nodeservice.getTreeTableNodes().then(function (data) {\n        return _this2.setState({\n          nodes: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"treeTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, \"TreeTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 39\n        }\n      }, \"Scroll\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }, \"Scrolling data is available horizontally, vertically or both with optional support for frozen columns.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, \"Vertical\"), /*#__PURE__*/React.createElement(TreeTable, {\n        value: this.state.nodes,\n        scrollable: true,\n        scrollHeight: \"200px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        expander: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, \"Horizontal\"), /*#__PURE__*/React.createElement(TreeTable, {\n        value: this.state.nodes,\n        scrollable: true,\n        style: {\n          width: '600px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        expander: true,\n        style: {\n          width: '350px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        style: {\n          width: '350px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        style: {\n          width: '350px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, \"Horizontal and Vertical\"), /*#__PURE__*/React.createElement(TreeTable, {\n        value: this.state.nodes,\n        scrollable: true,\n        style: {\n          width: '600px'\n        },\n        scrollHeight: \"200px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        expander: true,\n        style: {\n          width: '350px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        style: {\n          width: '350px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        style: {\n          width: '350px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"Frozen Columns\"), /*#__PURE__*/React.createElement(TreeTable, {\n        value: this.state.nodes,\n        scrollable: true,\n        frozenWidth: \"200px\",\n        scrollHeight: \"250px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        expander: true,\n        frozen: true,\n        style: {\n          width: '250px',\n          height: '57px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        style: {\n          width: '250px',\n          height: '57px'\n        },\n        columnKey: \"size_0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        style: {\n          width: '250px',\n          height: '57px'\n        },\n        columnKey: \"type_0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        style: {\n          width: '250px',\n          height: '57px'\n        },\n        columnKey: \"size_1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        style: {\n          width: '250px',\n          height: '57px'\n        },\n        columnKey: \"type_1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        style: {\n          width: '250px',\n          height: '57px'\n        },\n        columnKey: \"size_2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        style: {\n          width: '250px',\n          height: '57px'\n        },\n        columnKey: \"type_2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(TreeTableScrollDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return TreeTableScrollDemo;\n}(Component);\n\nvar TreeTableScrollDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(TreeTableScrollDemoDoc, _Component2);\n\n  var _super2 = _createSuper(TreeTableScrollDemoDoc);\n\n  function TreeTableScrollDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, TreeTableScrollDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport class TreeTableScrollDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes: []\\n        };\\n        this.nodeservice = new NodeService();\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Vertical</h5>\\n                    <TreeTable value={this.state.nodes} scrollable scrollHeight=\\\"200px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal</h5>\\n                    <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal and Vertical</h5>\\n                    <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }} scrollHeight=\\\"200px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Frozen Columns</h5>\\n                    <TreeTable value={this.state.nodes} scrollable frozenWidth=\\\"200px\\\" scrollHeight=\\\"250px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_0\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_0\\\"></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_1\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_1\\\"></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_2\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_2\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableScrollDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Vertical</h5>\\n                <TreeTable value={nodes} scrollable scrollHeight=\\\"200px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Horizontal</h5>\\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Horizontal and Vertical</h5>\\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }} scrollHeight=\\\"200px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Frozen Columns</h5>\\n                <TreeTable value={nodes} scrollable frozenWidth=\\\"200px\\\" scrollHeight=\\\"250px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_0\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_0\\\"></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_1\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_1\\\"></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_2\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_2\\\"></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableScrollDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Vertical</h5>\\n                <TreeTable value={nodes} scrollable scrollHeight=\\\"200px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Horizontal</h5>\\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Horizontal and Vertical</h5>\\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }} scrollHeight=\\\"200px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '350px' }}></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '350px' }}></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Frozen Columns</h5>\\n                <TreeTable value={nodes} scrollable frozenWidth=\\\"200px\\\" scrollHeight=\\\"250px\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_0\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_0\\\"></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_1\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_1\\\"></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"size_2\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '250px', height: '57px' }} columnKey=\\\"type_2\\\"></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(TreeTableScrollDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'TreeTableScrollDemo',\n        sources: this.sources,\n        service: 'NodeService',\n        data: 'treetablenodes'\n      })));\n    }\n  }]);\n\n  return TreeTableScrollDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/treetable/TreeTableScrollDemo.js"],"names":["React","Component","TreeTable","Column","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableScrollDemo","props","state","nodes","nodeservice","getTreeTableNodes","then","data","setState","width","height","TreeTableScrollDemoDoc","sources","tabName","content","name","service"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,WAAaC,mBAAb;AAAA;;AAAA;;AAEI,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,UAAKC,WAAL,GAAmB,IAAIR,WAAJ,EAAnB;AALe;AAMlB;;AARL;AAAA;AAAA,WAUI,6BAAoB;AAAA;;AAChB,WAAKQ,WAAL,CAAiBC,iBAAjB,GAAqCC,IAArC,CAA0C,UAAAC,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEI;AAAT,SAAd,CAAJ;AAAA,OAA9C;AACH;AAZL;AAAA;AAAA,WAcI,kBAAS;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,aAAa,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAd,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAFJ,CADJ,CADJ,eAQI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAA7B;AAAoC,QAAA,UAAU,MAA9C;AAA+C,QAAA,YAAY,EAAC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,QAAQ,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,CADJ,eAUI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAA7B;AAAoC,QAAA,UAAU,MAA9C;AAA+C,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,QAAQ,MAA3C;AAA4C,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,CAVJ,eAmBI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAA7B;AAAoC,QAAA,UAAU,MAA9C;AAA+C,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT,SAAtD;AAA0E,QAAA,YAAY,EAAC,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,QAAQ,MAA3C;AAA4C,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,CAnBJ,eA4BI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAA7B;AAAoC,QAAA,UAAU,MAA9C;AAA+C,QAAA,WAAW,EAAC,OAA3D;AAAmE,QAAA,YAAY,EAAC,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,QAAQ,MAA3C;AAA4C,QAAA,MAAM,MAAlD;AAAmD,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAA1C;AAA8E,QAAA,SAAS,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAA1C;AAA8E,QAAA,SAAS,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAA1C;AAA8E,QAAA,SAAS,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAA1C;AAA8E,QAAA,SAAS,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAMI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAA1C;AAA8E,QAAA,SAAS,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,eAOI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAA1C;AAA8E,QAAA,SAAS,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAFJ,CA5BJ,CARJ,eAkDI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlDJ,CADJ;AAsDH;AArEL;;AAAA;AAAA,EAAyCjB,SAAzC;;IAwEMkB,sB;;;;;AAEF,kCAAYV,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gCAAMA,KAAN;AAEA,WAAKW,OAAL,GAAe;AACX,eAAS;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OADE;AAuEX,eAAS;AACLD,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OAvEE;AAqIX,YAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,OAAO;AAFL;AArIK,KAAf;AAHe;AAuMlB;;;;WAED,iCAAwB;AACpB,aAAO,KAAP;AACH;;;WAED,kBAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQhB,iBAAiB,CAAC;AAAEiB,QAAAA,IAAI,EAAE,qBAAR;AAA+BH,QAAAA,OAAO,EAAE,KAAKA,OAA7C;AAAsDI,QAAAA,OAAO,EAAE,aAA/D;AAA8ET,QAAAA,IAAI,EAAE;AAApF,OAAD,CAFzB,CADJ,CADJ;AASH;;;;EAzNgCd,S","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class TreeTableScrollDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Scroll</span></h1>\r\n                        <p>Scrolling data is available horizontally, vertically or both with optional support for frozen columns.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Vertical</h5>\r\n                        <TreeTable value={this.state.nodes} scrollable scrollHeight=\"200px\">\r\n                            <Column field=\"name\" header=\"Name\" expander></Column>\r\n                            <Column field=\"size\" header=\"Size\"></Column>\r\n                            <Column field=\"type\" header=\"Type\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Horizontal</h5>\r\n                        <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }}>\r\n                            <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Horizontal and Vertical</h5>\r\n                        <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }} scrollHeight=\"200px\">\r\n                            <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Frozen Columns</h5>\r\n                        <TreeTable value={this.state.nodes} scrollable frozenWidth=\"200px\" scrollHeight=\"250px\">\r\n                            <Column field=\"name\" header=\"Name\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_0\"></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_0\"></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_1\"></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_1\"></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_2\"></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_2\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableScrollDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TreeTableScrollDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport class TreeTableScrollDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Vertical</h5>\r\n                    <TreeTable value={this.state.nodes} scrollable scrollHeight=\"200px\">\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal</h5>\r\n                    <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }}>\r\n                        <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal and Vertical</h5>\r\n                    <TreeTable value={this.state.nodes} scrollable style={{ width: '600px' }} scrollHeight=\"200px\">\r\n                        <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Frozen Columns</h5>\r\n                    <TreeTable value={this.state.nodes} scrollable frozenWidth=\"200px\" scrollHeight=\"250px\">\r\n                        <Column field=\"name\" header=\"Name\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_0\"></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_0\"></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_1\"></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_1\"></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_2\"></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_2\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableScrollDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Vertical</h5>\r\n                <TreeTable value={nodes} scrollable scrollHeight=\"200px\">\r\n                    <Column field=\"name\" header=\"Name\" expander></Column>\r\n                    <Column field=\"size\" header=\"Size\"></Column>\r\n                    <Column field=\"type\" header=\"Type\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Horizontal</h5>\r\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }}>\r\n                    <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Horizontal and Vertical</h5>\r\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }} scrollHeight=\"200px\">\r\n                    <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Frozen Columns</h5>\r\n                <TreeTable value={nodes} scrollable frozenWidth=\"200px\" scrollHeight=\"250px\">\r\n                    <Column field=\"name\" header=\"Name\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_0\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_0\"></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_1\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_1\"></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_2\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_2\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableScrollDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Vertical</h5>\r\n                <TreeTable value={nodes} scrollable scrollHeight=\"200px\">\r\n                    <Column field=\"name\" header=\"Name\" expander></Column>\r\n                    <Column field=\"size\" header=\"Size\"></Column>\r\n                    <Column field=\"type\" header=\"Type\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Horizontal</h5>\r\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }}>\r\n                    <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Horizontal and Vertical</h5>\r\n                <TreeTable value={nodes} scrollable style={{ width: '600px' }} scrollHeight=\"200px\">\r\n                    <Column field=\"name\" header=\"Name\" expander style={{ width: '350px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '350px' }}></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '350px' }}></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Frozen Columns</h5>\r\n                <TreeTable value={nodes} scrollable frozenWidth=\"200px\" scrollHeight=\"250px\">\r\n                    <Column field=\"name\" header=\"Name\" expander frozen style={{ width: '250px', height: '57px' }}></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_0\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_0\"></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_1\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_1\"></Column>\r\n                    <Column field=\"size\" header=\"Size\" style={{ width: '250px', height: '57px' }} columnKey=\"size_2\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" style={{ width: '250px', height: '57px' }} columnKey=\"type_2\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableScrollDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}