{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{classNames}from'../utils/ClassNames';import{tip}from'../tooltip/Tooltip';import{Ripple}from'../ripple/Ripple';export var ToggleButton=/*#__PURE__*/function(_Component){_inherits(ToggleButton,_Component);var _super=_createSuper(ToggleButton);function ToggleButton(props){var _this;_classCallCheck(this,ToggleButton);_this=_super.call(this,props);_this.toggle=_this.toggle.bind(_assertThisInitialized(_this));_this.onKeyDown=_this.onKeyDown.bind(_assertThisInitialized(_this));return _this;}_createClass(ToggleButton,[{key:\"toggle\",value:function toggle(e){if(!this.props.disabled&&this.props.onChange){this.props.onChange({originalEvent:e,value:!this.props.checked,stopPropagation:function stopPropagation(){},preventDefault:function preventDefault(){},target:{name:this.props.name,id:this.props.id,value:!this.props.checked}});}}},{key:\"onKeyDown\",value:function onKeyDown(event){if(event.key==='Enter'){this.toggle(event);event.preventDefault();}}},{key:\"hasLabel\",value:function hasLabel(){return this.props.onLabel&&this.props.onLabel.length>0&&this.props.offLabel&&this.props.offLabel.length>0;}},{key:\"hasIcon\",value:function hasIcon(){return this.props.onIcon&&this.props.onIcon.length>0&&this.props.offIcon&&this.props.offIcon.length>0;}},{key:\"getLabel\",value:function getLabel(){return this.hasLabel()?this.props.checked?this.props.onLabel:this.props.offLabel:'&nbsp;';}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.tooltip){this.renderTooltip();}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.tooltip!==this.props.tooltip||prevProps.tooltipOptions!==this.props.tooltipOptions){if(this.tooltip)this.tooltip.update(_objectSpread({content:this.props.tooltip},this.props.tooltipOptions||{}));else this.renderTooltip();}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.tooltip){this.tooltip.destroy();this.tooltip=null;}}},{key:\"renderTooltip\",value:function renderTooltip(){this.tooltip=tip({target:this.container,content:this.props.tooltip,options:this.props.tooltipOptions});}},{key:\"render\",value:function render(){var _this2=this;var className=classNames('p-button p-togglebutton p-component',{'p-button-icon-only':this.hasIcon()&&!this.hasLabel(),'p-highlight':this.props.checked,'p-disabled':this.props.disabled},this.props.className),iconClassName=null;var hasIcon=this.hasIcon();var label=this.getLabel();if(hasIcon){iconClassName=classNames('p-button-icon p-c',{'p-button-icon-left':this.props.iconPos==='left'&&label,'p-button-icon-right':this.props.iconPos==='right'&&label},this.props.checked?this.props.onIcon:this.props.offIcon);}return/*#__PURE__*/React.createElement(\"div\",{ref:function ref(el){return _this2.container=el;},id:this.props.id,className:className,style:this.props.style,onClick:this.toggle,onFocus:this.props.onFocus,onBlur:this.props.onBlur,onKeyDown:this.onKeyDown,tabIndex:!this.props.disabled&&this.props.tabIndex,\"aria-labelledby\":this.props.ariaLabelledBy},hasIcon&&/*#__PURE__*/React.createElement(\"span\",{className:iconClassName}),/*#__PURE__*/React.createElement(\"span\",{className:\"p-button-label\"},label),/*#__PURE__*/React.createElement(Ripple,null));}}]);return ToggleButton;}(Component);ToggleButton.defaultProps={id:null,onIcon:null,offIcon:null,onLabel:'Yes',offLabel:'No',iconPos:'left',style:null,className:null,checked:false,tabIndex:0,tooltip:null,tooltipOptions:null,ariaLabelledBy:null,onChange:null,onFocus:null,onBlur:null};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/togglebutton/ToggleButton.js"],"names":["React","Component","classNames","tip","Ripple","ToggleButton","props","toggle","bind","onKeyDown","e","disabled","onChange","originalEvent","value","checked","stopPropagation","preventDefault","target","name","id","event","key","onLabel","length","offLabel","onIcon","offIcon","hasLabel","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","container","options","className","hasIcon","iconClassName","label","getLabel","iconPos","el","style","onFocus","onBlur","tabIndex","ariaLabelledBy","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport { Ripple } from '../ripple/Ripple';\r\n\r\nexport class ToggleButton extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        onIcon: null,\r\n        offIcon: null,\r\n        onLabel: 'Yes',\r\n        offLabel: 'No',\r\n        iconPos: 'left',\r\n        style: null,\r\n        className: null,\r\n        checked: false,\r\n        tabIndex: 0,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        ariaLabelledBy: null,\r\n        onChange: null,\r\n        onFocus: null,\r\n        onBlur: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        onIcon: PropTypes.string,\r\n        offIcon: PropTypes.string,\r\n        onLabel: PropTypes.string,\r\n        offLabel: PropTypes.string,\r\n        iconPos: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        checked: PropTypes.bool,\r\n        tabIndex: PropTypes.number,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        ariaLabelledBy: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    toggle(e) {\r\n        if (!this.props.disabled && this.props.onChange) {\r\n            this.props.onChange({\r\n                originalEvent: e,\r\n                value: !this.props.checked,\r\n                stopPropagation : () =>{},\r\n                preventDefault : () =>{},\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.props.id,\r\n                    value: !this.props.checked,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (event.key === 'Enter') {\r\n            this.toggle(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    hasLabel() {\r\n        return this.props.onLabel && this.props.onLabel.length > 0 && this.props.offLabel && this.props.offLabel.length > 0;\r\n    }\r\n\r\n    hasIcon() {\r\n        return this.props.onIcon && this.props.onIcon.length > 0 && this.props.offIcon && this.props.offIcon.length > 0;\r\n    }\r\n\r\n    getLabel() {\r\n        return this.hasLabel() ? (this.props.checked ? this.props.onLabel : this.props.offLabel): '&nbsp;';\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.container,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-button p-togglebutton p-component', {\r\n            'p-button-icon-only': this.hasIcon() && !this.hasLabel(),\r\n            'p-highlight': this.props.checked,\r\n            'p-disabled': this.props.disabled,\r\n        }, this.props.className),\r\n        iconClassName = null;\r\n\r\n        const hasIcon = this.hasIcon();\r\n        const label = this.getLabel();\r\n\r\n        if (hasIcon) {\r\n            iconClassName = classNames('p-button-icon p-c', {\r\n                'p-button-icon-left': this.props.iconPos === 'left' && label,\r\n                'p-button-icon-right': this.props.iconPos === 'right' && label\r\n            }, this.props.checked ? this.props.onIcon : this.props.offIcon);\r\n        }\r\n\r\n        return (\r\n            <div ref={(el) => this.container = el} id={this.props.id} className={className} style={this.props.style}\r\n                onClick={this.toggle} onFocus={this.props.onFocus} onBlur={this.props.onBlur} onKeyDown={this.onKeyDown}\r\n                tabIndex={!this.props.disabled && this.props.tabIndex} aria-labelledby={this.props.ariaLabelledBy}>\r\n\r\n                {hasIcon && <span className={iconClassName}></span>}\r\n                <span className=\"p-button-label\">{label}</span>\r\n                <Ripple />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}