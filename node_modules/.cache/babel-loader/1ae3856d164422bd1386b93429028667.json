{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'../../components/datatable/DataTable';import{Column}from'../../components/column/Column';import ProductService from'../service/ProductService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var DataTableDynamicDemo=/*#__PURE__*/function(_Component){_inherits(DataTableDynamicDemo,_Component);var _super=_createSuper(DataTableDynamicDemo);function DataTableDynamicDemo(props){var _this;_classCallCheck(this,DataTableDynamicDemo);_this=_super.call(this,props);_this.state={products:[]};_this.columns=[{field:'code',header:'Code'},{field:'name',header:'Name'},{field:'category',header:'Category'},{field:'quantity',header:'Quantity'}];_this.productService=new ProductService();return _this;}_createClass(DataTableDynamicDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.productService.getProductsSmall().then(function(data){return _this2.setState({products:data});});}},{key:\"render\",value:function render(){var dynamicColumns=this.columns.map(function(col,i){return/*#__PURE__*/React.createElement(Column,{key:col.field,field:col.field,header:col.header});});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"dataTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DataTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Dynamic Columns\")),/*#__PURE__*/React.createElement(\"p\",null,\"Columns can be defined dynamically.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(DataTable,{value:this.state.products},dynamicColumns))),/*#__PURE__*/React.createElement(DataTableDynamicDemoDoc,null));}}]);return DataTableDynamicDemo;}(Component);export var DataTableDynamicDemoDoc=/*#__PURE__*/function(_Component2){_inherits(DataTableDynamicDemoDoc,_Component2);var _super2=_createSuper(DataTableDynamicDemoDoc);function DataTableDynamicDemoDoc(props){var _this3;_classCallCheck(this,DataTableDynamicDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nexport class DataTableDynamicDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: []\\n        };\\n\\n        this.columns = [\\n            {field: 'code', header: 'Code'},\\n            {field: 'name', header: 'Name'},\\n            {field: 'category', header: 'Category'},\\n            {field: 'quantity', header: 'Quantity'}\\n        ];\\n\\n        this.productService = new ProductService();\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    render() {\\n        const dynamicColumns = this.columns.map((col,i) => {\\n            return <Column key={col.field} field={col.field} header={col.header} />;\\n        });\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <DataTable value={this.state.products}>\\n                        {dynamicColumns}\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableDynamicDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const columns = [\\n        {field: 'code', header: 'Code'},\\n        {field: 'name', header: 'Name'},\\n        {field: 'category', header: 'Category'},\\n        {field: 'quantity', header: 'Quantity'}\\n    ];\\n\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const dynamicColumns = columns.map((col,i) => {\\n        return <Column key={col.field} field={col.field} header={col.header} />;\\n    });\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <DataTable value={products}>\\n                    {dynamicColumns}\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableDynamicDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const columns = [\\n        {field: 'code', header: 'Code'},\\n        {field: 'name', header: 'Name'},\\n        {field: 'category', header: 'Category'},\\n        {field: 'quantity', header: 'Quantity'}\\n    ];\\n\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const dynamicColumns = columns.map((col,i) => {\\n        return <Column key={col.field} field={col.field} header={col.header} />;\\n    });\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <DataTable value={products}>\\n                    {dynamicColumns}\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this3;}_createClass(DataTableDynamicDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DataTableDynamicDemo',sources:this.sources,service:'ProductService',data:'products-small'})));}}]);return DataTableDynamicDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/datatable/DataTableDynamicDemo.js"],"names":["React","Component","DataTable","Column","ProductService","TabView","useLiveEditorTabs","AppInlineHeader","DataTableDynamicDemo","props","state","products","columns","field","header","productService","getProductsSmall","then","data","setState","dynamicColumns","map","col","i","DataTableDynamicDemoDoc","sources","tabName","content","name","service"],"mappings":"wsBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,sCAA1B,CACA,OAASC,MAAT,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,OAASC,OAAT,KAAwB,kCAAxB,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CACA,OAASC,eAAT,KAAgC,uBAAhC,CAEA,UAAaC,CAAAA,oBAAb,4HAEI,8BAAYC,KAAZ,CAAmB,sDACf,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,EADD,CAAb,CAIA,MAAKC,OAAL,CAAe,CACX,CAACC,KAAK,CAAE,MAAR,CAAgBC,MAAM,CAAE,MAAxB,CADW,CAEX,CAACD,KAAK,CAAE,MAAR,CAAgBC,MAAM,CAAE,MAAxB,CAFW,CAGX,CAACD,KAAK,CAAE,UAAR,CAAoBC,MAAM,CAAE,UAA5B,CAHW,CAIX,CAACD,KAAK,CAAE,UAAR,CAAoBC,MAAM,CAAE,UAA5B,CAJW,CAAf,CAOA,MAAKC,cAAL,CAAsB,GAAIX,CAAAA,cAAJ,EAAtB,CAde,aAelB,CAjBL,kEAmBI,4BAAoB,iBAChB,KAAKW,cAAL,CAAoBC,gBAApB,GAAuCC,IAAvC,CAA4C,SAAAC,IAAI,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAAER,QAAQ,CAAEO,IAAZ,CAAd,CAAJ,EAAhD,EACH,CArBL,sBAuBI,iBAAS,CACL,GAAME,CAAAA,cAAc,CAAG,KAAKR,OAAL,CAAaS,GAAb,CAAiB,SAACC,GAAD,CAAKC,CAAL,CAAW,CAC/C,mBAAO,oBAAC,MAAD,EAAQ,GAAG,CAAED,GAAG,CAACT,KAAjB,CAAwB,KAAK,CAAES,GAAG,CAACT,KAAnC,CAA0C,MAAM,CAAES,GAAG,CAACR,MAAtD,EAAP,CACH,CAFsB,CAAvB,CAIA,mBACI,4CACI,2BAAK,SAAS,CAAC,8BAAf,eACI,oBAAC,eAAD,EAAiB,aAAa,CAAC,WAA/B,eACI,wDAAc,kDAAd,CADJ,cAEI,mEAFJ,CADJ,CADJ,cAQI,2BAAK,SAAS,CAAC,gCAAf,eACI,2BAAK,SAAS,CAAC,MAAf,eACI,oBAAC,SAAD,EAAW,KAAK,CAAE,KAAKJ,KAAL,CAAWC,QAA7B,EACKS,cADL,CADJ,CADJ,CARJ,cAgBI,oBAAC,uBAAD,MAhBJ,CADJ,CAoBH,CAhDL,kCAA0CnB,SAA1C,EAmDA,UAAauB,CAAAA,uBAAb,qIAEI,iCAAYf,KAAZ,CAAmB,0DACf,yBAAMA,KAAN,EAEA,OAAKgB,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,swCAFF,CADE,CAkDX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,qmCAFF,CAlDE,CAyFX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,qmCAFL,CAzFK,CAAf,CAHe,cAoIlB,CAtIL,yEAwII,gCAAwB,CACpB,MAAO,MAAP,CACH,CA1IL,sBA4II,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,MAEQrB,iBAAiB,CAAC,CAAEsB,IAAI,CAAE,sBAAR,CAAgCH,OAAO,CAAE,KAAKA,OAA9C,CAAuDI,OAAO,CAAE,gBAAhE,CAAkFX,IAAI,CAAE,gBAAxF,CAAD,CAFzB,CADJ,CADJ,CASH,CAtJL,qCAA6CjB,SAA7C","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableDynamicDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.columns = [\r\n            {field: 'code', header: 'Code'},\r\n            {field: 'name', header: 'Name'},\r\n            {field: 'category', header: 'Category'},\r\n            {field: 'quantity', header: 'Quantity'}\r\n        ];\r\n\r\n        this.productService = new ProductService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    render() {\r\n        const dynamicColumns = this.columns.map((col,i) => {\r\n            return <Column key={col.field} field={col.field} header={col.header} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Dynamic Columns</span></h1>\r\n                        <p>Columns can be defined dynamically.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <DataTable value={this.state.products}>\r\n                            {dynamicColumns}\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableDynamicDemoDoc></DataTableDynamicDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableDynamicDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class DataTableDynamicDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.columns = [\r\n            {field: 'code', header: 'Code'},\r\n            {field: 'name', header: 'Name'},\r\n            {field: 'category', header: 'Category'},\r\n            {field: 'quantity', header: 'Quantity'}\r\n        ];\r\n\r\n        this.productService = new ProductService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    render() {\r\n        const dynamicColumns = this.columns.map((col,i) => {\r\n            return <Column key={col.field} field={col.field} header={col.header} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={this.state.products}>\r\n                        {dynamicColumns}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableDynamicDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const columns = [\r\n        {field: 'code', header: 'Code'},\r\n        {field: 'name', header: 'Name'},\r\n        {field: 'category', header: 'Category'},\r\n        {field: 'quantity', header: 'Quantity'}\r\n    ];\r\n\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const dynamicColumns = columns.map((col,i) => {\r\n        return <Column key={col.field} field={col.field} header={col.header} />;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable value={products}>\r\n                    {dynamicColumns}\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableDynamicDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const columns = [\r\n        {field: 'code', header: 'Code'},\r\n        {field: 'name', header: 'Name'},\r\n        {field: 'category', header: 'Category'},\r\n        {field: 'quantity', header: 'Quantity'}\r\n    ];\r\n\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const dynamicColumns = columns.map((col,i) => {\r\n        return <Column key={col.field} field={col.field} header={col.header} />;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable value={products}>\r\n                    {dynamicColumns}\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableDynamicDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}