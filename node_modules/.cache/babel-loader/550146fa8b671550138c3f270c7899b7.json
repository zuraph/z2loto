{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\datatable\\\\DataTableLazyDemo.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from '../../components/datatable/DataTable';\nimport { Column } from '../../components/column/Column';\nimport { TabView } from '../../components/tabview/TabView';\nimport { MultiSelect } from '../../components/multiselect/MultiSelect';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport { CustomerService } from '../service/CustomerService';\nexport var DataTableLazyDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableLazyDemo, _Component);\n\n  var _super = _createSuper(DataTableLazyDemo);\n\n  function DataTableLazyDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableLazyDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loading: false,\n      totalRecords: 0,\n      customers: null,\n      selectedRepresentative: null,\n      lazyParams: {\n        first: 0,\n        rows: 10,\n        page: 1\n      }\n    };\n    _this.representatives = [{\n      name: \"Amy Elsner\",\n      image: 'amyelsner.png'\n    }, {\n      name: \"Anna Fali\",\n      image: 'annafali.png'\n    }, {\n      name: \"Asiya Javayant\",\n      image: 'asiyajavayant.png'\n    }, {\n      name: \"Bernardo Dominic\",\n      image: 'bernardodominic.png'\n    }, {\n      name: \"Elwin Sharvill\",\n      image: 'elwinsharvill.png'\n    }, {\n      name: \"Ioni Bowcher\",\n      image: 'ionibowcher.png'\n    }, {\n      name: \"Ivan Magalhaes\",\n      image: 'ivanmagalhaes.png'\n    }, {\n      name: \"Onyama Limba\",\n      image: 'onyamalimba.png'\n    }, {\n      name: \"Stephen Shaw\",\n      image: 'stephenshaw.png'\n    }, {\n      name: \"XuXue Feng\",\n      image: 'xuxuefeng.png'\n    }];\n    _this.loadLazyData = _this.loadLazyData.bind(_assertThisInitialized(_this));\n    _this.onPage = _this.onPage.bind(_assertThisInitialized(_this));\n    _this.onSort = _this.onSort.bind(_assertThisInitialized(_this));\n    _this.onFilter = _this.onFilter.bind(_assertThisInitialized(_this));\n    _this.onRepresentativesChange = _this.onRepresentativesChange.bind(_assertThisInitialized(_this));\n    _this.customerService = new CustomerService();\n    _this.loadLazyTimeout = null;\n    return _this;\n  }\n\n  _createClass(DataTableLazyDemo, [{\n    key: \"loadLazyData\",\n    value: function loadLazyData() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n\n      if (this.loadLazyTimeout) {\n        clearTimeout(this.loadLazyTimeout);\n      } //imitate delay of a backend call\n\n\n      this.loadLazyTimeout = setTimeout(function () {\n        _this2.customerService.getCustomers({\n          lazyEvent: JSON.stringify(_this2.state.lazyParams)\n        }).then(function (data) {\n          _this2.setState({\n            totalRecords: data.totalRecords,\n            customers: data.customers,\n            loading: false\n          });\n        });\n      }, Math.random() * 1000 + 250);\n    }\n  }, {\n    key: \"onPage\",\n    value: function onPage(event) {\n      var lazyParams = _objectSpread(_objectSpread({}, this.state.lazyParams), event);\n\n      this.setState({\n        lazyParams: lazyParams\n      }, this.loadLazyData);\n    }\n  }, {\n    key: \"onSort\",\n    value: function onSort(event) {\n      var lazyParams = _objectSpread(_objectSpread({}, this.state.lazyParams), event);\n\n      this.setState({\n        lazyParams: lazyParams\n      }, this.loadLazyData);\n    }\n  }, {\n    key: \"onFilter\",\n    value: function onFilter(event) {\n      var lazyParams = _objectSpread(_objectSpread({}, this.state.lazyParams), event);\n\n      lazyParams['first'] = 0;\n      this.setState({\n        lazyParams: lazyParams\n      }, this.loadLazyData);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        lazyParams: {\n          first: 0,\n          rows: 10,\n          page: 1\n        }\n      }, this.loadLazyData);\n    }\n  }, {\n    key: \"representativeBodyTemplate\",\n    value: function representativeBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: rowData.representative.name,\n        src: \"showcase/demo/images/avatar/\".concat(rowData.representative.image),\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        width: 32,\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"image-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, rowData.representative.name));\n    }\n  }, {\n    key: \"representativesItemTemplate\",\n    value: function representativesItemTemplate(option) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-multiselect-representative-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: option.name,\n        src: \"showcase/demo/images/avatar/\".concat(option.image),\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        width: 32,\n        style: {\n          verticalAlign: 'middle'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"image-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, option.name));\n    }\n  }, {\n    key: \"onRepresentativesChange\",\n    value: function onRepresentativesChange(e) {\n      this.dt.filter(e.value, 'representative.name', 'in');\n      this.setState({\n        selectedRepresentative: e.value\n      });\n    }\n  }, {\n    key: \"countryBodyTemplate\",\n    value: function countryBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"flag\",\n        src: \"showcase/demo/images/flag_placeholder.png\",\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        className: \"flag flag-\".concat(rowData.country.code),\n        width: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"image-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, rowData.country.name));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var representativeFilter = /*#__PURE__*/React.createElement(MultiSelect, {\n        value: this.state.selectedRepresentative,\n        options: this.representatives,\n        filter: true,\n        itemTemplate: this.representativesItemTemplate,\n        onChange: this.onRepresentativesChange,\n        optionLabel: \"name\",\n        optionValue: \"name\",\n        placeholder: \"All\",\n        className: \"p-column-filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 38\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, \"DataTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 39\n        }\n      }, \"Lazy\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, \"Lazy mode is handy to deal with large datasets, instead of loading the entire data, small chunks of data is loaded by invoking corresponding callbacks everytime paging, sorting and filtering happens. Sample belows imitates lazy paging by using an in memory list. It is also important to assign the logical number of rows to totalRecords by doing a projection query for paginator configuration so that paginator displays the UI assuming there are actually records of totalRecords size although in reality they aren't as in lazy mode, only the records that are displayed on the current page exist.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        ref: function ref(el) {\n          return _this3.dt = el;\n        },\n        value: this.state.customers,\n        lazy: true,\n        paginator: true,\n        first: this.state.lazyParams.first,\n        rows: 10,\n        totalRecords: this.state.totalRecords,\n        onPage: this.onPage,\n        onSort: this.onSort,\n        sortField: this.state.lazyParams.sortField,\n        sortOrder: this.state.lazyParams.sortOrder,\n        onFilter: this.onFilter,\n        filters: this.state.lazyParams.filters,\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        sortable: true,\n        filter: true,\n        filterPlaceholder: \"Search by name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"country.name\",\n        sortable: true,\n        header: \"Country\",\n        filterField: \"country.name\",\n        body: this.countryBodyTemplate,\n        filter: true,\n        filterPlaceholder: \"Search by country\",\n        filterMatchMode: \"contains\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"company\",\n        sortable: true,\n        filter: true,\n        header: \"Company\",\n        filterPlaceholder: \"Search by company\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"representative.name\",\n        header: \"Representative\",\n        body: this.representativeBodyTemplate,\n        filter: true,\n        filterElement: representativeFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(DataTableLazyDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataTableLazyDemo;\n}(Component);\nexport var DataTableLazyDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataTableLazyDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataTableLazyDemoDoc);\n\n  function DataTableLazyDemoDoc(props) {\n    var _this4;\n\n    _classCallCheck(this, DataTableLazyDemoDoc);\n\n    _this4 = _super2.call(this, props);\n    _this4.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport { CustomerService } from '../service/CustomerService';\\n\\nexport class DataTableLazyDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            loading: false,\\n            totalRecords: 0,\\n            customers: null,\\n            selectedRepresentative: null,\\n            lazyParams: {\\n                first: 0,\\n                rows: 10,\\n                page: 1\\n            }\\n        };\\n\\n        this.representatives = [\\n            { name: \\\"Amy Elsner\\\", image: 'amyelsner.png' },\\n            { name: \\\"Anna Fali\\\", image: 'annafali.png' },\\n            { name: \\\"Asiya Javayant\\\", image: 'asiyajavayant.png' },\\n            { name: \\\"Bernardo Dominic\\\", image: 'bernardodominic.png' },\\n            { name: \\\"Elwin Sharvill\\\", image: 'elwinsharvill.png' },\\n            { name: \\\"Ioni Bowcher\\\", image: 'ionibowcher.png' },\\n            { name: \\\"Ivan Magalhaes\\\", image: 'ivanmagalhaes.png' },\\n            { name: \\\"Onyama Limba\\\", image: 'onyamalimba.png' },\\n            { name: \\\"Stephen Shaw\\\", image: 'stephenshaw.png' },\\n            { name: \\\"XuXue Feng\\\", image: 'xuxuefeng.png' }\\n        ];\\n\\n        this.loadLazyData = this.loadLazyData.bind(this);\\n        this.onPage = this.onPage.bind(this);\\n        this.onSort = this.onSort.bind(this);\\n        this.onFilter = this.onFilter.bind(this);\\n        this.onRepresentativesChange = this.onRepresentativesChange.bind(this);\\n\\n        this.customerService = new CustomerService();\\n        this.loadLazyTimeout = null;\\n    }\\n\\n    loadLazyData() {\\n        this.setState({ loading: true });\\n\\n        if (this.loadLazyTimeout) {\\n            clearTimeout(this.loadLazyTimeout);\\n        }\\n\\n        //imitate delay of a backend call\\n        this.loadLazyTimeout = setTimeout(() => {\\n            this.customerService.getCustomers({lazyEvent: JSON.stringify(this.state.lazyParams)}).then(data => {\\n                this.setState({\\n                    totalRecords: data.totalRecords,\\n                    customers: data.customers,\\n                    loading: false\\n                });\\n            });\\n        }, Math.random() * 1000 + 250);\\n    }\\n\\n    onPage(event) {\\n        let lazyParams = { ...this.state.lazyParams, ...event };\\n        this.setState({ lazyParams }, this.loadLazyData);\\n    }\\n\\n    onSort(event) {\\n        let lazyParams = { ...this.state.lazyParams, ...event };\\n        this.setState({ lazyParams }, this.loadLazyData);\\n    }\\n\\n    onFilter(event) {\\n        let lazyParams = { ...this.state.lazyParams, ...event };\\n        lazyParams['first'] = 0;\\n        this.setState({ lazyParams }, this.loadLazyData);\\n    }\\n\\n    componentDidMount() {\\n        this.loadLazyData()\\n    }\\n\\n    representativeBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    representativesItemTemplate(option) {\\n        return (\\n            <div className=\\\"p-multiselect-representative-option\\\">\\n                <img alt={option.name} src={`showcase/demo/images/avatar/${option.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{option.name}</span>\\n            </div>\\n        );\\n    }\\n\\n    onRepresentativesChange(e) {\\n        this.dt.filter(e.value, 'representative.name', 'in');\\n        this.setState({ selectedRepresentative: e.value });\\n    }\\n\\n    countryBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <img alt=\\\"flag\\\" src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width={30} />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    render() {\\n        const representativeFilter = <MultiSelect value={this.state.selectedRepresentative} options={this.representatives} filter itemTemplate={this.representativesItemTemplate} onChange={this.onRepresentativesChange} optionLabel=\\\"name\\\" optionValue=\\\"name\\\" placeholder=\\\"All\\\" className=\\\"p-column-filter\\\" />;\\n\\n        return (\\n            <div>\\n                <div className=\\\"content-section implementation\\\">\\n                    <div className=\\\"card\\\">\\n                        <DataTable ref={(el) => this.dt = el} value={this.state.customers} lazy\\n                            paginator first={this.state.lazyParams.first} rows={10} totalRecords={this.state.totalRecords} onPage={this.onPage}\\n                            onSort={this.onSort} sortField={this.state.lazyParams.sortField} sortOrder={this.state.lazyParams.sortOrder}\\n                            onFilter={this.onFilter} filters={this.state.lazyParams.filters} loading={this.state.loading}>\\n                            <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\" />\\n                            <Column field=\\\"country.name\\\" sortable header=\\\"Country\\\" filterField=\\\"country.name\\\" body={this.countryBodyTemplate} filter filterPlaceholder=\\\"Search by country\\\" filterMatchMode=\\\"contains\\\" />\\n                            <Column field=\\\"company\\\" sortable filter header=\\\"Company\\\" filterPlaceholder=\\\"Search by company\\\" />\\n                            <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={this.representativeBodyTemplate} filter filterElement={representativeFilter} />\\n                        </DataTable>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport { CustomerService } from '../service/CustomerService';\\n\\nexport const DataTableLazyDemo = () => {\\n\\n    const [loading, setLoading] = useState(false);\\n    const [totalRecords, setTotalRecords] = useState(0);\\n    const [customers, setCustomers] = useState(null);\\n    const [selectedRepresentative, setSelectedRepresentative] = useState(null);\\n    const [lazyParams, setLazyParams] = useState({\\n        first: 0,\\n        rows: 10,\\n        page: 1,\\n    });\\n\\n    const dt = useRef(null);\\n\\n    const representatives = [\\n        { name: \\\"Amy Elsner\\\", image: 'amyelsner.png' },\\n        { name: \\\"Anna Fali\\\", image: 'annafali.png' },\\n        { name: \\\"Asiya Javayant\\\", image: 'asiyajavayant.png' },\\n        { name: \\\"Bernardo Dominic\\\", image: 'bernardodominic.png' },\\n        { name: \\\"Elwin Sharvill\\\", image: 'elwinsharvill.png' },\\n        { name: \\\"Ioni Bowcher\\\", image: 'ionibowcher.png' },\\n        { name: \\\"Ivan Magalhaes\\\", image: 'ivanmagalhaes.png' },\\n        { name: \\\"Onyama Limba\\\", image: 'onyamalimba.png' },\\n        { name: \\\"Stephen Shaw\\\", image: 'stephenshaw.png' },\\n        { name: \\\"XuXue Feng\\\", image: 'xuxuefeng.png' }\\n    ];\\n\\n    const customerService = new CustomerService();\\n\\n    let loadLazyTimeout = null;\\n\\n    useEffect(() => {\\n        loadLazyData();\\n    },[lazyParams]) // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const loadLazyData = () => {\\n        setLoading(true);\\n\\n        if (loadLazyTimeout) {\\n            clearTimeout(loadLazyTimeout);\\n        }\\n\\n        //imitate delay of a backend call\\n        loadLazyTimeout = setTimeout(() => {\\n            customerService.getCustomers({lazyEvent: JSON.stringify(lazyParams)}).then(data => {\\n                setTotalRecords(data.totalRecords);\\n                setCustomers(data.customers);\\n                setLoading(false);\\n            });\\n        }, Math.random() * 1000 + 250);\\n    }\\n\\n    const onPage = (event) => {\\n        let _lazyParams = { ...lazyParams, ...event };\\n        setLazyParams(_lazyParams);\\n    }\\n\\n    const onSort = (event) => {\\n        let _lazyParams = { ...lazyParams, ...event };\\n        setLazyParams(_lazyParams);\\n    }\\n\\n    const onFilter = (event) => {\\n        let _lazyParams = { ...lazyParams, ...event };\\n        _lazyParams['first'] = 0;\\n        setLazyParams(_lazyParams);\\n    }\\n\\n    const representativeBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const representativesItemTemplate = (option) => {\\n        return (\\n            <div className=\\\"p-multiselect-representative-option\\\">\\n                <img alt={option.name} src={`showcase/demo/images/avatar/${option.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{option.name}</span>\\n            </div>\\n        );\\n    }\\n\\n    const onRepresentativesChange = (e) => {\\n        dt.current.filter(e.value, 'representative.name', 'in');\\n        setSelectedRepresentative(e.value);\\n    }\\n\\n    const countryBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt=\\\"flag\\\" src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width={30} />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const representativeFilter = <MultiSelect value={selectedRepresentative} options={representatives} filter itemTemplate={representativesItemTemplate} onChange={onRepresentativesChange} optionLabel=\\\"name\\\" optionValue=\\\"name\\\" placeholder=\\\"All\\\" className=\\\"p-column-filter\\\" />;\\n\\n    return (\\n        <div>\\n            <div className=\\\"content-section implementation\\\">\\n                <div className=\\\"card\\\">\\n                    <DataTable ref={dt} value={customers} lazy\\n                        paginator first={lazyParams.first} rows={10} totalRecords={totalRecords} onPage={onPage}\\n                        onSort={onSort} sortField={lazyParams.sortField} sortOrder={lazyParams.sortOrder}\\n                        onFilter={onFilter} filters={lazyParams.filters} loading={loading}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\" />\\n                        <Column field=\\\"country.name\\\" sortable header=\\\"Country\\\" filterField=\\\"country.name\\\" body={countryBodyTemplate} filter filterPlaceholder=\\\"Search by country\\\" filterMatchMode=\\\"contains\\\" />\\n                        <Column field=\\\"company\\\" sortable filter header=\\\"Company\\\" filterPlaceholder=\\\"Search by company\\\" />\\n                        <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={representativeBodyTemplate} filter filterElement={representativeFilter} />\\n                    </DataTable>\\n                </div>\\n            </div>\\n        </div>\\n    );\\n\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport { CustomerService } from '../service/CustomerService';\\n\\nexport const DataTableLazyDemo = () => {\\n\\n    const [loading, setLoading] = useState(false);\\n    const [totalRecords, setTotalRecords] = useState(0);\\n    const [customers, setCustomers] = useState(null);\\n    const [selectedRepresentative, setSelectedRepresentative] = useState(null);\\n    const [lazyParams, setLazyParams] = useState({\\n        first: 0,\\n        rows: 10,\\n        page: 1,\\n    });\\n\\n    const dt = useRef(null);\\n\\n    const representatives = [\\n        { name: \\\"Amy Elsner\\\", image: 'amyelsner.png' },\\n        { name: \\\"Anna Fali\\\", image: 'annafali.png' },\\n        { name: \\\"Asiya Javayant\\\", image: 'asiyajavayant.png' },\\n        { name: \\\"Bernardo Dominic\\\", image: 'bernardodominic.png' },\\n        { name: \\\"Elwin Sharvill\\\", image: 'elwinsharvill.png' },\\n        { name: \\\"Ioni Bowcher\\\", image: 'ionibowcher.png' },\\n        { name: \\\"Ivan Magalhaes\\\", image: 'ivanmagalhaes.png' },\\n        { name: \\\"Onyama Limba\\\", image: 'onyamalimba.png' },\\n        { name: \\\"Stephen Shaw\\\", image: 'stephenshaw.png' },\\n        { name: \\\"XuXue Feng\\\", image: 'xuxuefeng.png' }\\n    ];\\n    \\n    const customerService = new CustomerService();\\n\\n    let loadLazyTimeout = null;\\n\\n    const loadLazyData = () => {\\n        setLoading(true);\\n\\n        if (loadLazyTimeout) {\\n            clearTimeout(loadLazyTimeout);\\n        }\\n\\n        //imitate delay of a backend call\\n        loadLazyTimeout = setTimeout(() => {\\n            customerService.getCustomers({lazyEvent: JSON.stringify(lazyParams)}).then(data => {\\n                setTotalRecords(data.totalRecords);\\n                setCustomers(data.customers);\\n                setLoading(false);\\n            });\\n        }, Math.random() * 1000 + 250);\\n    }\\n\\n    useEffect(() => {\\n        loadLazyData();\\n    },[lazyParams]) // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onPage = (event) => {\\n        let _lazyParams = { ...lazyParams, ...event };\\n        setLazyParams(_lazyParams);\\n    }\\n\\n    const onSort = (event) => {\\n        let _lazyParams = { ...lazyParams, ...event };\\n        setLazyParams(_lazyParams);\\n    }\\n\\n    const onFilter = (event) => {\\n        let _lazyParams = { ...lazyParams, ...event };\\n        _lazyParams['first'] = 0;\\n        setLazyParams(_lazyParams);\\n    }\\n\\n    const representativeBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{rowData.representative.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const representativesItemTemplate = (option) => {\\n        return (\\n            <div className=\\\"p-multiselect-representative-option\\\">\\n                <img alt={option.name} src={`showcase/demo/images/avatar/${option.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\\n                <span className=\\\"image-text\\\">{option.name}</span>\\n            </div>\\n        );\\n    }\\n\\n    const onRepresentativesChange = (e) => {\\n        dt.current.filter(e.value, 'representative.name', 'in');\\n        setSelectedRepresentative(e.value);\\n    }\\n\\n    const countryBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <img alt=\\\"flag\\\" src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width={30} />\\n                <span className=\\\"image-text\\\">{rowData.country.name}</span>\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const representativeFilter = <MultiSelect value={selectedRepresentative} options={representatives} filter itemTemplate={representativesItemTemplate} onChange={onRepresentativesChange} optionLabel=\\\"name\\\" optionValue=\\\"name\\\" placeholder=\\\"All\\\" className=\\\"p-column-filter\\\" />;\\n\\n    return (\\n        <div>\\n            <div className=\\\"content-section implementation\\\">\\n                <div className=\\\"card\\\">\\n                    <DataTable ref={dt} value={customers} lazy\\n                        paginator first={lazyParams.first} rows={10} totalRecords={totalRecords} onPage={onPage}\\n                        onSort={onSort} sortField={lazyParams.sortField} sortOrder={lazyParams.sortOrder}\\n                        onFilter={onFilter} filters={lazyParams.filters} loading={loading}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable filter filterPlaceholder=\\\"Search by name\\\" />\\n                        <Column field=\\\"country.name\\\" sortable header=\\\"Country\\\" filterField=\\\"country.name\\\" body={countryBodyTemplate} filter filterPlaceholder=\\\"Search by country\\\" filterMatchMode=\\\"contains\\\" />\\n                        <Column field=\\\"company\\\" sortable filter header=\\\"Company\\\" filterPlaceholder=\\\"Search by company\\\" />\\n                        <Column field=\\\"representative.name\\\" header=\\\"Representative\\\" body={representativeBodyTemplate} filter filterElement={representativeFilter} />\\n                    </DataTable>\\n                </div>\\n            </div>\\n        </div>\\n    );\\n\\n}\\n                \"\n      }\n    };\n    return _this4;\n  }\n\n  _createClass(DataTableLazyDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataTableLazyDemo',\n        sources: this.sources,\n        service: 'CustomerService'\n      })));\n    }\n  }]);\n\n  return DataTableLazyDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/datatable/DataTableLazyDemo.js"],"names":["React","Component","DataTable","Column","TabView","MultiSelect","useLiveEditorTabs","AppInlineHeader","CustomerService","DataTableLazyDemo","props","state","loading","totalRecords","customers","selectedRepresentative","lazyParams","first","rows","page","representatives","name","image","loadLazyData","bind","onPage","onSort","onFilter","onRepresentativesChange","customerService","loadLazyTimeout","setState","clearTimeout","setTimeout","getCustomers","lazyEvent","JSON","stringify","then","data","Math","random","event","rowData","representative","e","target","src","verticalAlign","option","dt","filter","value","country","code","representativeFilter","representativesItemTemplate","el","sortField","sortOrder","filters","countryBodyTemplate","representativeBodyTemplate","DataTableLazyDemoDoc","sources","tabName","content","service"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAEA,WAAaC,iBAAb;AAAA;;AAAA;;AAEI,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,YAAY,EAAE,CAFL;AAGTC,MAAAA,SAAS,EAAE,IAHF;AAITC,MAAAA,sBAAsB,EAAE,IAJf;AAKTC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,CADC;AAERC,QAAAA,IAAI,EAAE,EAFE;AAGRC,QAAAA,IAAI,EAAE;AAHE;AALH,KAAb;AAYA,UAAKC,eAAL,GAAuB,CACnB;AAAEC,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KADmB,EAEnB;AAAED,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAFmB,EAGnB;AAAED,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAHmB,EAInB;AAAED,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KAJmB,EAKnB;AAAED,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KALmB,EAMnB;AAAED,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KANmB,EAOnB;AAAED,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAPmB,EAQnB;AAAED,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KARmB,EASnB;AAAED,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KATmB,EAUnB;AAAED,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAVmB,CAAvB;AAaA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AACA,UAAKE,MAAL,GAAc,MAAKA,MAAL,CAAYF,IAAZ,+BAAd;AACA,UAAKG,QAAL,GAAgB,MAAKA,QAAL,CAAcH,IAAd,+BAAhB;AACA,UAAKI,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BJ,IAA7B,+BAA/B;AAEA,UAAKK,eAAL,GAAuB,IAAIrB,eAAJ,EAAvB;AACA,UAAKsB,eAAL,GAAuB,IAAvB;AAnCe;AAoClB;;AAtCL;AAAA;AAAA,WAwCI,wBAAe;AAAA;;AACX,WAAKC,QAAL,CAAc;AAAEnB,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAI,KAAKkB,eAAT,EAA0B;AACtBE,QAAAA,YAAY,CAAC,KAAKF,eAAN,CAAZ;AACH,OALU,CAOX;;;AACA,WAAKA,eAAL,GAAuBG,UAAU,CAAC,YAAM;AACpC,QAAA,MAAI,CAACJ,eAAL,CAAqBK,YAArB,CAAkC;AAACC,UAAAA,SAAS,EAAEC,IAAI,CAACC,SAAL,CAAe,MAAI,CAAC1B,KAAL,CAAWK,UAA1B;AAAZ,SAAlC,EAAsFsB,IAAtF,CAA2F,UAAAC,IAAI,EAAI;AAC/F,UAAA,MAAI,CAACR,QAAL,CAAc;AACVlB,YAAAA,YAAY,EAAE0B,IAAI,CAAC1B,YADT;AAEVC,YAAAA,SAAS,EAAEyB,IAAI,CAACzB,SAFN;AAGVF,YAAAA,OAAO,EAAE;AAHC,WAAd;AAKH,SAND;AAOH,OARgC,EAQ9B4B,IAAI,CAACC,MAAL,KAAgB,IAAhB,GAAuB,GARO,CAAjC;AASH;AAzDL;AAAA;AAAA,WA2DI,gBAAOC,KAAP,EAAc;AACV,UAAI1B,UAAU,mCAAQ,KAAKL,KAAL,CAAWK,UAAnB,GAAkC0B,KAAlC,CAAd;;AACA,WAAKX,QAAL,CAAc;AAAEf,QAAAA,UAAU,EAAVA;AAAF,OAAd,EAA8B,KAAKO,YAAnC;AACH;AA9DL;AAAA;AAAA,WAgEI,gBAAOmB,KAAP,EAAc;AACV,UAAI1B,UAAU,mCAAQ,KAAKL,KAAL,CAAWK,UAAnB,GAAkC0B,KAAlC,CAAd;;AACA,WAAKX,QAAL,CAAc;AAAEf,QAAAA,UAAU,EAAVA;AAAF,OAAd,EAA8B,KAAKO,YAAnC;AACH;AAnEL;AAAA;AAAA,WAqEI,kBAASmB,KAAT,EAAgB;AACZ,UAAI1B,UAAU,mCAAQ,KAAKL,KAAL,CAAWK,UAAnB,GAAkC0B,KAAlC,CAAd;;AACA1B,MAAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,CAAtB;AACA,WAAKe,QAAL,CAAc;AAAEf,QAAAA,UAAU,EAAVA;AAAF,OAAd,EAA8B,KAAKO,YAAnC;AACH;AAzEL;AAAA;AAAA,WA2EI,6BAAoB;AAChB,WAAKQ,QAAL,CAAc;AACVf,QAAAA,UAAU,EAAE;AACRC,UAAAA,KAAK,EAAE,CADC;AAERC,UAAAA,IAAI,EAAE,EAFE;AAGRC,UAAAA,IAAI,EAAE;AAHE;AADF,OAAd,EAMG,KAAKI,YANR;AAOH;AAnFL;AAAA;AAAA,WAqFI,oCAA2BoB,OAA3B,EAAoC;AAChC,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACC,cAAR,CAAuBvB,IAAjC;AAAuC,QAAA,GAAG,wCAAiCsB,OAAO,CAACC,cAAR,CAAuBtB,KAAxD,CAA1C;AAA2G,QAAA,OAAO,EAAE,iBAACuB,CAAD;AAAA,iBAAOA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAe,uEAAtB;AAAA,SAApH;AAAmN,QAAA,KAAK,EAAE,EAA1N;AAA8N,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAArO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BL,OAAO,CAACC,cAAR,CAAuBvB,IAArD,CAFJ,CADJ;AAMH;AA5FL;AAAA;AAAA,WA8FI,qCAA4B4B,MAA5B,EAAoC;AAChC,0BACI;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAEA,MAAM,CAAC5B,IAAjB;AAAuB,QAAA,GAAG,wCAAiC4B,MAAM,CAAC3B,KAAxC,CAA1B;AAA2E,QAAA,OAAO,EAAE,iBAACuB,CAAD;AAAA,iBAAOA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAe,uEAAtB;AAAA,SAApF;AAAmL,QAAA,KAAK,EAAE,EAA1L;AAA8L,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAArM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BC,MAAM,CAAC5B,IAArC,CAFJ,CADJ;AAMH;AArGL;AAAA;AAAA,WAuGI,iCAAwBwB,CAAxB,EAA2B;AACvB,WAAKK,EAAL,CAAQC,MAAR,CAAeN,CAAC,CAACO,KAAjB,EAAwB,qBAAxB,EAA+C,IAA/C;AACA,WAAKrB,QAAL,CAAc;AAAEhB,QAAAA,sBAAsB,EAAE8B,CAAC,CAACO;AAA5B,OAAd;AACH;AA1GL;AAAA;AAAA,WA4GI,6BAAoBT,OAApB,EAA6B;AACzB,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAC,MAAT;AAAgB,QAAA,GAAG,EAAC,2CAApB;AAAgE,QAAA,OAAO,EAAE,iBAACE,CAAD;AAAA,iBAAOA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAe,uEAAtB;AAAA,SAAzE;AAAwK,QAAA,SAAS,sBAAeJ,OAAO,CAACU,OAAR,CAAgBC,IAA/B,CAAjL;AAAwN,QAAA,KAAK,EAAE,EAA/N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BX,OAAO,CAACU,OAAR,CAAgBhC,IAA9C,CAFJ,CADJ;AAMH;AAnHL;AAAA;AAAA,WAqHI,kBAAS;AAAA;;AACL,UAAMkC,oBAAoB,gBAAG,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWI,sBAA/B;AAAuD,QAAA,OAAO,EAAE,KAAKK,eAArE;AAAsF,QAAA,MAAM,MAA5F;AAA6F,QAAA,YAAY,EAAE,KAAKoC,2BAAhH;AAA6I,QAAA,QAAQ,EAAE,KAAK5B,uBAA5J;AAAqL,QAAA,WAAW,EAAC,MAAjM;AAAwM,QAAA,WAAW,EAAC,MAApN;AAA2N,QAAA,WAAW,EAAC,KAAvO;AAA6O,QAAA,SAAS,EAAC,iBAAvP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B;AAEA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,aAAa,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+lBAFJ,CADJ,CADJ,eAUI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAE,aAAC6B,EAAD;AAAA,iBAAQ,MAAI,CAACP,EAAL,GAAUO,EAAlB;AAAA,SAAhB;AAAsC,QAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWG,SAAxD;AAAmE,QAAA,IAAI,MAAvE;AACI,QAAA,SAAS,MADb;AACc,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWK,UAAX,CAAsBC,KAD3C;AACkD,QAAA,IAAI,EAAE,EADxD;AAC4D,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWE,YADrF;AACmG,QAAA,MAAM,EAAE,KAAKY,MADhH;AAEI,QAAA,MAAM,EAAE,KAAKC,MAFjB;AAEyB,QAAA,SAAS,EAAE,KAAKf,KAAL,CAAWK,UAAX,CAAsB0C,SAF1D;AAEqE,QAAA,SAAS,EAAE,KAAK/C,KAAL,CAAWK,UAAX,CAAsB2C,SAFtG;AAGI,QAAA,QAAQ,EAAE,KAAKhC,QAHnB;AAG6B,QAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWK,UAAX,CAAsB4C,OAH5D;AAGqE,QAAA,OAAO,EAAE,KAAKjD,KAAL,CAAWC,OAHzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,QAAQ,MAA3C;AAA4C,QAAA,MAAM,MAAlD;AAAmD,QAAA,iBAAiB,EAAC,gBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,QAAQ,MAArC;AAAsC,QAAA,MAAM,EAAC,SAA7C;AAAuD,QAAA,WAAW,EAAC,cAAnE;AAAkF,QAAA,IAAI,EAAE,KAAKiD,mBAA7F;AAAkH,QAAA,MAAM,MAAxH;AAAyH,QAAA,iBAAiB,EAAC,mBAA3I;AAA+J,QAAA,eAAe,EAAC,UAA/K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAMI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,QAAQ,MAAhC;AAAiC,QAAA,MAAM,MAAvC;AAAwC,QAAA,MAAM,EAAC,SAA/C;AAAyD,QAAA,iBAAiB,EAAC,mBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,eAOI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,qBAAd;AAAoC,QAAA,MAAM,EAAC,gBAA3C;AAA4D,QAAA,IAAI,EAAE,KAAKC,0BAAvE;AAAmG,QAAA,MAAM,MAAzG;AAA0G,QAAA,aAAa,EAAEP,oBAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ,CADJ,CAVJ,eAwBI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBJ,CADJ;AA4BH;AApJL;;AAAA;AAAA,EAAuCtD,SAAvC;AAuJA,WAAa8D,oBAAb;AAAA;;AAAA;;AAEI,gCAAYrD,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gCAAMA,KAAN;AAEA,WAAKsD,OAAL,GAAe;AACX,eAAS;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OADE;AAiJX,eAAS;AACLD,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OAjJE;AAqRX,YAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,OAAO;AAFL;AArRK,KAAf;AAHe;AA6ZlB;;AA/ZL;AAAA;AAAA,WAiaI,iCAAwB;AACpB,aAAO,KAAP;AACH;AAnaL;AAAA;AAAA,WAqaI,kBAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ5D,iBAAiB,CAAC;AAAEe,QAAAA,IAAI,EAAE,mBAAR;AAA6B2C,QAAAA,OAAO,EAAE,KAAKA,OAA3C;AAAoDG,QAAAA,OAAO,EAAE;AAA7D,OAAD,CAFzB,CADJ,CADJ;AASH;AA/aL;;AAAA;AAAA,EAA0ClE,SAA1C","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { MultiSelect } from '../../components/multiselect/MultiSelect';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport { CustomerService } from '../service/CustomerService';\r\n\r\nexport class DataTableLazyDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            totalRecords: 0,\r\n            customers: null,\r\n            selectedRepresentative: null,\r\n            lazyParams: {\r\n                first: 0,\r\n                rows: 10,\r\n                page: 1\r\n            }\r\n        };\r\n\r\n        this.representatives = [\r\n            { name: \"Amy Elsner\", image: 'amyelsner.png' },\r\n            { name: \"Anna Fali\", image: 'annafali.png' },\r\n            { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\r\n            { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\r\n            { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\r\n            { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\r\n            { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\r\n            { name: \"Onyama Limba\", image: 'onyamalimba.png' },\r\n            { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\r\n            { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\r\n        ];\r\n\r\n        this.loadLazyData = this.loadLazyData.bind(this);\r\n        this.onPage = this.onPage.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onRepresentativesChange = this.onRepresentativesChange.bind(this);\r\n\r\n        this.customerService = new CustomerService();\r\n        this.loadLazyTimeout = null;\r\n    }\r\n\r\n    loadLazyData() {\r\n        this.setState({ loading: true });\r\n\r\n        if (this.loadLazyTimeout) {\r\n            clearTimeout(this.loadLazyTimeout);\r\n        }\r\n\r\n        //imitate delay of a backend call\r\n        this.loadLazyTimeout = setTimeout(() => {\r\n            this.customerService.getCustomers({lazyEvent: JSON.stringify(this.state.lazyParams)}).then(data => {\r\n                this.setState({\r\n                    totalRecords: data.totalRecords,\r\n                    customers: data.customers,\r\n                    loading: false\r\n                });\r\n            });\r\n        }, Math.random() * 1000 + 250);\r\n    }\r\n\r\n    onPage(event) {\r\n        let lazyParams = { ...this.state.lazyParams, ...event };\r\n        this.setState({ lazyParams }, this.loadLazyData);\r\n    }\r\n\r\n    onSort(event) {\r\n        let lazyParams = { ...this.state.lazyParams, ...event };\r\n        this.setState({ lazyParams }, this.loadLazyData);\r\n    }\r\n\r\n    onFilter(event) {\r\n        let lazyParams = { ...this.state.lazyParams, ...event };\r\n        lazyParams['first'] = 0;\r\n        this.setState({ lazyParams }, this.loadLazyData);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            lazyParams: {\r\n                first: 0,\r\n                rows: 10,\r\n                page: 1\r\n            }\r\n        }, this.loadLazyData);\r\n    }\r\n\r\n    representativeBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={`showcase/demo/images/avatar/${rowData.representative.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    representativesItemTemplate(option) {\r\n        return (\r\n            <div className=\"p-multiselect-representative-option\">\r\n                <img alt={option.name} src={`showcase/demo/images/avatar/${option.image}`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{option.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onRepresentativesChange(e) {\r\n        this.dt.filter(e.value, 'representative.name', 'in');\r\n        this.setState({ selectedRepresentative: e.value });\r\n    }\r\n\r\n    countryBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt=\"flag\" src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${rowData.country.code}`} width={30} />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const representativeFilter = <MultiSelect value={this.state.selectedRepresentative} options={this.representatives} filter itemTemplate={this.representativesItemTemplate} onChange={this.onRepresentativesChange} optionLabel=\"name\" optionValue=\"name\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Lazy</span></h1>\r\n                        <p>Lazy mode is handy to deal with large datasets, instead of loading the entire data, small chunks of data is loaded by invoking corresponding callbacks everytime paging, sorting and filtering happens. Sample belows imitates\r\n                        lazy paging by using an in memory list. It is also important to assign the logical number of rows to totalRecords by doing a projection query for paginator configuration so that paginator displays the UI assuming\r\n                            there are actually records of totalRecords size although in reality they aren't as in lazy mode, only the records that are displayed on the current page exist.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <DataTable ref={(el) => this.dt = el} value={this.state.customers} lazy\r\n                            paginator first={this.state.lazyParams.first} rows={10} totalRecords={this.state.totalRecords} onPage={this.onPage}\r\n                            onSort={this.onSort} sortField={this.state.lazyParams.sortField} sortOrder={this.state.lazyParams.sortOrder}\r\n                            onFilter={this.onFilter} filters={this.state.lazyParams.filters} loading={this.state.loading}>\r\n                            <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\" />\r\n                            <Column field=\"country.name\" sortable header=\"Country\" filterField=\"country.name\" body={this.countryBodyTemplate} filter filterPlaceholder=\"Search by country\" filterMatchMode=\"contains\" />\r\n                            <Column field=\"company\" sortable filter header=\"Company\" filterPlaceholder=\"Search by company\" />\r\n                            <Column field=\"representative.name\" header=\"Representative\" body={this.representativeBodyTemplate} filter filterElement={representativeFilter} />\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableLazyDemoDoc></DataTableLazyDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableLazyDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { CustomerService } from '../service/CustomerService';\r\n\r\nexport class DataTableLazyDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            totalRecords: 0,\r\n            customers: null,\r\n            selectedRepresentative: null,\r\n            lazyParams: {\r\n                first: 0,\r\n                rows: 10,\r\n                page: 1\r\n            }\r\n        };\r\n\r\n        this.representatives = [\r\n            { name: \"Amy Elsner\", image: 'amyelsner.png' },\r\n            { name: \"Anna Fali\", image: 'annafali.png' },\r\n            { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\r\n            { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\r\n            { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\r\n            { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\r\n            { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\r\n            { name: \"Onyama Limba\", image: 'onyamalimba.png' },\r\n            { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\r\n            { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\r\n        ];\r\n\r\n        this.loadLazyData = this.loadLazyData.bind(this);\r\n        this.onPage = this.onPage.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onRepresentativesChange = this.onRepresentativesChange.bind(this);\r\n\r\n        this.customerService = new CustomerService();\r\n        this.loadLazyTimeout = null;\r\n    }\r\n\r\n    loadLazyData() {\r\n        this.setState({ loading: true });\r\n\r\n        if (this.loadLazyTimeout) {\r\n            clearTimeout(this.loadLazyTimeout);\r\n        }\r\n\r\n        //imitate delay of a backend call\r\n        this.loadLazyTimeout = setTimeout(() => {\r\n            this.customerService.getCustomers({lazyEvent: JSON.stringify(this.state.lazyParams)}).then(data => {\r\n                this.setState({\r\n                    totalRecords: data.totalRecords,\r\n                    customers: data.customers,\r\n                    loading: false\r\n                });\r\n            });\r\n        }, Math.random() * 1000 + 250);\r\n    }\r\n\r\n    onPage(event) {\r\n        let lazyParams = { ...this.state.lazyParams, ...event };\r\n        this.setState({ lazyParams }, this.loadLazyData);\r\n    }\r\n\r\n    onSort(event) {\r\n        let lazyParams = { ...this.state.lazyParams, ...event };\r\n        this.setState({ lazyParams }, this.loadLazyData);\r\n    }\r\n\r\n    onFilter(event) {\r\n        let lazyParams = { ...this.state.lazyParams, ...event };\r\n        lazyParams['first'] = 0;\r\n        this.setState({ lazyParams }, this.loadLazyData);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadLazyData()\r\n    }\r\n\r\n    representativeBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    representativesItemTemplate(option) {\r\n        return (\r\n            <div className=\"p-multiselect-representative-option\">\r\n                <img alt={option.name} src={\\`showcase/demo/images/avatar/\\${option.image}\\`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{option.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onRepresentativesChange(e) {\r\n        this.dt.filter(e.value, 'representative.name', 'in');\r\n        this.setState({ selectedRepresentative: e.value });\r\n    }\r\n\r\n    countryBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt=\"flag\" src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width={30} />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const representativeFilter = <MultiSelect value={this.state.selectedRepresentative} options={this.representatives} filter itemTemplate={this.representativesItemTemplate} onChange={this.onRepresentativesChange} optionLabel=\"name\" optionValue=\"name\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <DataTable ref={(el) => this.dt = el} value={this.state.customers} lazy\r\n                            paginator first={this.state.lazyParams.first} rows={10} totalRecords={this.state.totalRecords} onPage={this.onPage}\r\n                            onSort={this.onSort} sortField={this.state.lazyParams.sortField} sortOrder={this.state.lazyParams.sortOrder}\r\n                            onFilter={this.onFilter} filters={this.state.lazyParams.filters} loading={this.state.loading}>\r\n                            <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\" />\r\n                            <Column field=\"country.name\" sortable header=\"Country\" filterField=\"country.name\" body={this.countryBodyTemplate} filter filterPlaceholder=\"Search by country\" filterMatchMode=\"contains\" />\r\n                            <Column field=\"company\" sortable filter header=\"Company\" filterPlaceholder=\"Search by company\" />\r\n                            <Column field=\"representative.name\" header=\"Representative\" body={this.representativeBodyTemplate} filter filterElement={representativeFilter} />\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { CustomerService } from '../service/CustomerService';\r\n\r\nexport const DataTableLazyDemo = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [customers, setCustomers] = useState(null);\r\n    const [selectedRepresentative, setSelectedRepresentative] = useState(null);\r\n    const [lazyParams, setLazyParams] = useState({\r\n        first: 0,\r\n        rows: 10,\r\n        page: 1,\r\n    });\r\n\r\n    const dt = useRef(null);\r\n\r\n    const representatives = [\r\n        { name: \"Amy Elsner\", image: 'amyelsner.png' },\r\n        { name: \"Anna Fali\", image: 'annafali.png' },\r\n        { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\r\n        { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\r\n        { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\r\n        { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\r\n        { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\r\n        { name: \"Onyama Limba\", image: 'onyamalimba.png' },\r\n        { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\r\n        { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\r\n    ];\r\n\r\n    const customerService = new CustomerService();\r\n\r\n    let loadLazyTimeout = null;\r\n\r\n    useEffect(() => {\r\n        loadLazyData();\r\n    },[lazyParams]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const loadLazyData = () => {\r\n        setLoading(true);\r\n\r\n        if (loadLazyTimeout) {\r\n            clearTimeout(loadLazyTimeout);\r\n        }\r\n\r\n        //imitate delay of a backend call\r\n        loadLazyTimeout = setTimeout(() => {\r\n            customerService.getCustomers({lazyEvent: JSON.stringify(lazyParams)}).then(data => {\r\n                setTotalRecords(data.totalRecords);\r\n                setCustomers(data.customers);\r\n                setLoading(false);\r\n            });\r\n        }, Math.random() * 1000 + 250);\r\n    }\r\n\r\n    const onPage = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onSort = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onFilter = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        _lazyParams['first'] = 0;\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const representativeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const representativesItemTemplate = (option) => {\r\n        return (\r\n            <div className=\"p-multiselect-representative-option\">\r\n                <img alt={option.name} src={\\`showcase/demo/images/avatar/\\${option.image}\\`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{option.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const onRepresentativesChange = (e) => {\r\n        dt.current.filter(e.value, 'representative.name', 'in');\r\n        setSelectedRepresentative(e.value);\r\n    }\r\n\r\n    const countryBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt=\"flag\" src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width={30} />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const representativeFilter = <MultiSelect value={selectedRepresentative} options={representatives} filter itemTemplate={representativesItemTemplate} onChange={onRepresentativesChange} optionLabel=\"name\" optionValue=\"name\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-section implementation\">\r\n                <div className=\"card\">\r\n                    <DataTable ref={dt} value={customers} lazy\r\n                        paginator first={lazyParams.first} rows={10} totalRecords={totalRecords} onPage={onPage}\r\n                        onSort={onSort} sortField={lazyParams.sortField} sortOrder={lazyParams.sortOrder}\r\n                        onFilter={onFilter} filters={lazyParams.filters} loading={loading}>\r\n                        <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\" />\r\n                        <Column field=\"country.name\" sortable header=\"Country\" filterField=\"country.name\" body={countryBodyTemplate} filter filterPlaceholder=\"Search by country\" filterMatchMode=\"contains\" />\r\n                        <Column field=\"company\" sortable filter header=\"Company\" filterPlaceholder=\"Search by company\" />\r\n                        <Column field=\"representative.name\" header=\"Representative\" body={representativeBodyTemplate} filter filterElement={representativeFilter} />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { CustomerService } from '../service/CustomerService';\r\n\r\nexport const DataTableLazyDemo = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [customers, setCustomers] = useState(null);\r\n    const [selectedRepresentative, setSelectedRepresentative] = useState(null);\r\n    const [lazyParams, setLazyParams] = useState({\r\n        first: 0,\r\n        rows: 10,\r\n        page: 1,\r\n    });\r\n\r\n    const dt = useRef(null);\r\n\r\n    const representatives = [\r\n        { name: \"Amy Elsner\", image: 'amyelsner.png' },\r\n        { name: \"Anna Fali\", image: 'annafali.png' },\r\n        { name: \"Asiya Javayant\", image: 'asiyajavayant.png' },\r\n        { name: \"Bernardo Dominic\", image: 'bernardodominic.png' },\r\n        { name: \"Elwin Sharvill\", image: 'elwinsharvill.png' },\r\n        { name: \"Ioni Bowcher\", image: 'ionibowcher.png' },\r\n        { name: \"Ivan Magalhaes\", image: 'ivanmagalhaes.png' },\r\n        { name: \"Onyama Limba\", image: 'onyamalimba.png' },\r\n        { name: \"Stephen Shaw\", image: 'stephenshaw.png' },\r\n        { name: \"XuXue Feng\", image: 'xuxuefeng.png' }\r\n    ];\r\n    \r\n    const customerService = new CustomerService();\r\n\r\n    let loadLazyTimeout = null;\r\n\r\n    const loadLazyData = () => {\r\n        setLoading(true);\r\n\r\n        if (loadLazyTimeout) {\r\n            clearTimeout(loadLazyTimeout);\r\n        }\r\n\r\n        //imitate delay of a backend call\r\n        loadLazyTimeout = setTimeout(() => {\r\n            customerService.getCustomers({lazyEvent: JSON.stringify(lazyParams)}).then(data => {\r\n                setTotalRecords(data.totalRecords);\r\n                setCustomers(data.customers);\r\n                setLoading(false);\r\n            });\r\n        }, Math.random() * 1000 + 250);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadLazyData();\r\n    },[lazyParams]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onPage = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onSort = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const onFilter = (event) => {\r\n        let _lazyParams = { ...lazyParams, ...event };\r\n        _lazyParams['first'] = 0;\r\n        setLazyParams(_lazyParams);\r\n    }\r\n\r\n    const representativeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt={rowData.representative.name} src={\\`showcase/demo/images/avatar/\\${rowData.representative.image}\\`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{rowData.representative.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const representativesItemTemplate = (option) => {\r\n        return (\r\n            <div className=\"p-multiselect-representative-option\">\r\n                <img alt={option.name} src={\\`showcase/demo/images/avatar/\\${option.image}\\`} onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} width={32} style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"image-text\">{option.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const onRepresentativesChange = (e) => {\r\n        dt.current.filter(e.value, 'representative.name', 'in');\r\n        setSelectedRepresentative(e.value);\r\n    }\r\n\r\n    const countryBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <img alt=\"flag\" src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${rowData.country.code}\\`} width={30} />\r\n                <span className=\"image-text\">{rowData.country.name}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const representativeFilter = <MultiSelect value={selectedRepresentative} options={representatives} filter itemTemplate={representativesItemTemplate} onChange={onRepresentativesChange} optionLabel=\"name\" optionValue=\"name\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-section implementation\">\r\n                <div className=\"card\">\r\n                    <DataTable ref={dt} value={customers} lazy\r\n                        paginator first={lazyParams.first} rows={10} totalRecords={totalRecords} onPage={onPage}\r\n                        onSort={onSort} sortField={lazyParams.sortField} sortOrder={lazyParams.sortOrder}\r\n                        onFilter={onFilter} filters={lazyParams.filters} loading={loading}>\r\n                        <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by name\" />\r\n                        <Column field=\"country.name\" sortable header=\"Country\" filterField=\"country.name\" body={countryBodyTemplate} filter filterPlaceholder=\"Search by country\" filterMatchMode=\"contains\" />\r\n                        <Column field=\"company\" sortable filter header=\"Company\" filterPlaceholder=\"Search by company\" />\r\n                        <Column field=\"representative.name\" header=\"Representative\" body={representativeBodyTemplate} filter filterElement={representativeFilter} />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableLazyDemo', sources: this.sources, service: 'CustomerService' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}