{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\chart\\\\BarChartDemo.js\";\nimport React, { Component } from 'react';\nimport { TabView } from '../../components/tabview/TabView';\nimport { Chart } from '../../components/chart/Chart';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport AppContentContext from '../../AppContentContext';\nexport var BarChartDemo = /*#__PURE__*/function (_Component) {\n  _inherits(BarChartDemo, _Component);\n\n  var _super = _createSuper(BarChartDemo);\n\n  function BarChartDemo(props) {\n    var _this;\n\n    _classCallCheck(this, BarChartDemo);\n\n    _this = _super.call(this, props);\n    _this.basicData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: '#42A5F5',\n        data: [65, 59, 80, 81, 56, 55, 40]\n      }, {\n        label: 'My Second dataset',\n        backgroundColor: '#FFA726',\n        data: [28, 48, 40, 19, 86, 27, 90]\n      }]\n    };\n    _this.multiAxisData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'Dataset 1',\n        backgroundColor: ['#EC407A', '#AB47BC', '#42A5F5', '#7E57C2', '#66BB6A', '#FFCA28', '#26A69A'],\n        yAxisID: 'y-axis-1',\n        data: [65, 59, 80, 81, 56, 55, 10]\n      }, {\n        label: 'Dataset 2',\n        backgroundColor: '#78909C',\n        yAxisID: 'y-axis-2',\n        data: [28, 48, 40, 19, 86, 27, 90]\n      }]\n    };\n    _this.stackedData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        type: 'bar',\n        label: 'Dataset 1',\n        backgroundColor: '#42A5F5',\n        data: [50, 25, 12, 48, 90, 76, 42]\n      }, {\n        type: 'bar',\n        label: 'Dataset 2',\n        backgroundColor: '#66BB6A',\n        data: [21, 84, 24, 75, 37, 65, 34]\n      }, {\n        type: 'bar',\n        label: 'Dataset 3',\n        backgroundColor: '#FFA726',\n        data: [41, 52, 24, 74, 23, 21, 32]\n      }]\n    };\n    _this.options = {\n      'light': _this.getLightTheme(),\n      'dark': _this.getDarkTheme()\n    };\n    return _this;\n  }\n\n  _createClass(BarChartDemo, [{\n    key: \"getLightTheme\",\n    value: function getLightTheme() {\n      var basicOptions = {\n        legend: {\n          labels: {\n            fontColor: '#495057'\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#495057'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontColor: '#495057'\n            }\n          }]\n        }\n      };\n      var stackedOptions = {\n        tooltips: {\n          mode: 'index',\n          intersect: false\n        },\n        responsive: true,\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              fontColor: '#495057'\n            },\n            gridLines: {\n              color: '#ebedef'\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              fontColor: '#495057'\n            },\n            gridLines: {\n              color: '#ebedef'\n            }\n          }]\n        },\n        legend: {\n          labels: {\n            fontColor: '#495057'\n          }\n        }\n      };\n      var multiAxisOptions = {\n        responsive: true,\n        tooltips: {\n          mode: 'index',\n          intersect: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#495057'\n            },\n            gridLines: {\n              color: '#ebedef'\n            }\n          }],\n          yAxes: [{\n            type: 'linear',\n            display: true,\n            position: 'left',\n            id: 'y-axis-1',\n            ticks: {\n              min: 0,\n              max: 100,\n              fontColor: '#495057'\n            },\n            gridLines: {\n              color: '#ebedef'\n            }\n          }, {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            id: 'y-axis-2',\n            gridLines: {\n              drawOnChartArea: false,\n              color: '#ebedef'\n            },\n            ticks: {\n              min: 0,\n              max: 100,\n              fontColor: '#495057'\n            }\n          }]\n        },\n        legend: {\n          labels: {\n            fontColor: '#495057'\n          }\n        }\n      };\n      return {\n        basicOptions: basicOptions,\n        stackedOptions: stackedOptions,\n        multiAxisOptions: multiAxisOptions\n      };\n    }\n  }, {\n    key: \"getDarkTheme\",\n    value: function getDarkTheme() {\n      var basicOptions = {\n        legend: {\n          labels: {\n            fontColor: '#ebedef'\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }]\n        }\n      };\n      var stackedOptions = {\n        tooltips: {\n          mode: 'index',\n          intersect: false\n        },\n        responsive: true,\n        scales: {\n          xAxes: [{\n            stacked: true,\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }],\n          yAxes: [{\n            stacked: true,\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }]\n        },\n        legend: {\n          labels: {\n            fontColor: '#ebedef'\n          }\n        }\n      };\n      var multiAxisOptions = {\n        responsive: true,\n        tooltips: {\n          mode: 'index',\n          intersect: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }],\n          yAxes: [{\n            type: 'linear',\n            display: true,\n            position: 'left',\n            id: 'y-axis-1',\n            ticks: {\n              min: 0,\n              max: 100,\n              fontColor: '#ebedef'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.2)'\n            }\n          }, {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            id: 'y-axis-2',\n            gridLines: {\n              drawOnChartArea: false,\n              color: 'rgba(255,255,255,0.2)'\n            },\n            ticks: {\n              min: 0,\n              max: 100,\n              fontColor: '#ebedef'\n            }\n          }]\n        },\n        legend: {\n          labels: {\n            fontColor: '#ebedef'\n          }\n        }\n      };\n      return {\n        basicOptions: basicOptions,\n        stackedOptions: stackedOptions,\n        multiAxisOptions: multiAxisOptions\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }\n      }, \"BarChart\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }, \"A bar chart or bar graph is a chart that presents grouped data with rectangular bars with lengths proportional to the values that they represent.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppContentContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, function (context) {\n        var _this2$options$ = _this2.options[\"\".concat(context.darkTheme ? 'dark' : 'light')],\n            basicOptions = _this2$options$.basicOptions,\n            multiAxisOptions = _this2$options$.multiAxisOptions,\n            stackedOptions = _this2$options$.stackedOptions;\n\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 45\n          }\n        }, \"Vertical\"), /*#__PURE__*/React.createElement(Chart, {\n          type: \"bar\",\n          data: _this2.basicData,\n          options: basicOptions,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 45\n          }\n        }, \"Horizontal\"), /*#__PURE__*/React.createElement(Chart, {\n          type: \"horizontalBar\",\n          data: _this2.basicData,\n          options: basicOptions,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 45\n          }\n        }, \"Multi Axis\"), /*#__PURE__*/React.createElement(Chart, {\n          type: \"bar\",\n          data: _this2.multiAxisData,\n          options: multiAxisOptions,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 45\n          }\n        }, \"Stacked\"), /*#__PURE__*/React.createElement(Chart, {\n          type: \"bar\",\n          data: _this2.stackedData,\n          options: stackedOptions,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 45\n          }\n        })));\n      })), /*#__PURE__*/React.createElement(BarChartDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return BarChartDemo;\n}(Component);\nexport var BarChartDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(BarChartDemoDoc, _Component2);\n\n  var _super2 = _createSuper(BarChartDemoDoc);\n\n  function BarChartDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, BarChartDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class BarChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.basicData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                {\\n                    label: 'My First dataset',\\n                    backgroundColor: '#42A5F5',\\n                    data: [65, 59, 80, 81, 56, 55, 40]\\n                },\\n                {\\n                    label: 'My Second dataset',\\n                    backgroundColor: '#FFA726',\\n                    data: [28, 48, 40, 19, 86, 27, 90]\\n                }\\n            ]\\n        };\\n\\n        this.multiAxisData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [{\\n                label: 'Dataset 1',\\n                backgroundColor: [\\n                    '#EC407A',\\n                    '#AB47BC',\\n                    '#42A5F5',\\n                    '#7E57C2',\\n                    '#66BB6A',\\n                    '#FFCA28',\\n                    '#26A69A'\\n                ],\\n                yAxisID: 'y-axis-1',\\n                data: [65, 59, 80, 81, 56, 55, 10]\\n            }, {\\n                label: 'Dataset 2',\\n                backgroundColor: '#78909C',\\n                yAxisID: 'y-axis-2',\\n                data: [28, 48, 40, 19, 86, 27, 90]\\n            }]\\n        };\\n\\n        this.stackedData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [{\\n                type: 'bar',\\n                label: 'Dataset 1',\\n                backgroundColor: '#42A5F5',\\n                data: [\\n                    50,\\n                    25,\\n                    12,\\n                    48,\\n                    90,\\n                    76,\\n                    42\\n                ]\\n            }, {\\n                type: 'bar',\\n                label: 'Dataset 2',\\n                backgroundColor: '#66BB6A',\\n                data: [\\n                    21,\\n                    84,\\n                    24,\\n                    75,\\n                    37,\\n                    65,\\n                    34\\n                ]\\n            }, {\\n                type: 'bar',\\n                label: 'Dataset 3',\\n                backgroundColor: '#FFA726',\\n                data: [\\n                    41,\\n                    52,\\n                    24,\\n                    74,\\n                    23,\\n                    21,\\n                    32\\n                ]\\n            }]\\n        };\\n\\n        this.options = this.getLightTheme();\\n    }\\n\\n    getLightTheme() {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let stackedOptions = {\\n            tooltips: {\\n                mode: 'index',\\n                intersect: false\\n            },\\n            responsive: true,\\n            scales: {\\n                xAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            tooltips: {\\n                mode: 'index',\\n                intersect: true\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                },\\n                {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    },\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            stackedOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    render() {\\n        const { basicOptions, multiAxisOptions, stackedOptions } = this.options;\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Vertical</h5>\\n                    <Chart type=\\\"bar\\\" data={this.basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal</h5>\\n                    <Chart type=\\\"horizontalBar\\\" data={this.basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multi Axis</h5>\\n                    <Chart type=\\\"bar\\\" data={this.multiAxisData} options={multiAxisOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Stacked</h5>\\n                    <Chart type=\\\"bar\\\" data={this.stackedData} options={stackedOptions} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst BarChartDemo = () => {\\n    const basicData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'My First dataset',\\n                backgroundColor: '#42A5F5',\\n                data: [65, 59, 80, 81, 56, 55, 40]\\n            },\\n            {\\n                label: 'My Second dataset',\\n                backgroundColor: '#FFA726',\\n                data: [28, 48, 40, 19, 86, 27, 90]\\n            }\\n        ]\\n    };\\n\\n    const multiAxisData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            label: 'Dataset 1',\\n            backgroundColor: [\\n                '#EC407A',\\n                '#AB47BC',\\n                '#42A5F5',\\n                '#7E57C2',\\n                '#66BB6A',\\n                '#FFCA28',\\n                '#26A69A'\\n            ],\\n            yAxisID: 'y-axis-1',\\n            data: [65, 59, 80, 81, 56, 55, 10]\\n        }, {\\n            label: 'Dataset 2',\\n            backgroundColor: '#78909C',\\n            yAxisID: 'y-axis-2',\\n            data: [28, 48, 40, 19, 86, 27, 90]\\n        }]\\n    };\\n\\n    const stackedData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            type: 'bar',\\n            label: 'Dataset 1',\\n            backgroundColor: '#42A5F5',\\n            data: [\\n                50,\\n                25,\\n                12,\\n                48,\\n                90,\\n                76,\\n                42\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 2',\\n            backgroundColor: '#66BB6A',\\n            data: [\\n                21,\\n                84,\\n                24,\\n                75,\\n                37,\\n                65,\\n                34\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 3',\\n            backgroundColor: '#FFA726',\\n            data: [\\n                41,\\n                52,\\n                24,\\n                74,\\n                23,\\n                21,\\n                32\\n            ]\\n        }]\\n    };\\n\\n    const getLightTheme = () => {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let stackedOptions = {\\n            tooltips: {\\n                mode: 'index',\\n                intersect: false\\n            },\\n            responsive: true,\\n            scales: {\\n                xAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            tooltips: {\\n                mode: 'index',\\n                intersect: true\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                },\\n                {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    },\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            stackedOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Vertical</h5>\\n                    <Chart type=\\\"bar\\\" data={basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal</h5>\\n                    <Chart type=\\\"horizontalBar\\\" data={basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multi Axis</h5>\\n                    <Chart type=\\\"bar\\\" data={multiAxisData} options={multiAxisOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Stacked</h5>\\n                    <Chart type=\\\"bar\\\" data={stackedData} options={stackedOptions} />\\n                </div>\\n            </div>\\n        )\\n    }\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst BarChartDemo = () => {\\n    const basicData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'My First dataset',\\n                backgroundColor: '#42A5F5',\\n                data: [65, 59, 80, 81, 56, 55, 40]\\n            },\\n            {\\n                label: 'My Second dataset',\\n                backgroundColor: '#FFA726',\\n                data: [28, 48, 40, 19, 86, 27, 90]\\n            }\\n        ]\\n    };\\n\\n    const multiAxisData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            label: 'Dataset 1',\\n            backgroundColor: [\\n                '#EC407A',\\n                '#AB47BC',\\n                '#42A5F5',\\n                '#7E57C2',\\n                '#66BB6A',\\n                '#FFCA28',\\n                '#26A69A'\\n            ],\\n            yAxisID: 'y-axis-1',\\n            data: [65, 59, 80, 81, 56, 55, 10]\\n        }, {\\n            label: 'Dataset 2',\\n            backgroundColor: '#78909C',\\n            yAxisID: 'y-axis-2',\\n            data: [28, 48, 40, 19, 86, 27, 90]\\n        }]\\n    };\\n\\n    const stackedData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            type: 'bar',\\n            label: 'Dataset 1',\\n            backgroundColor: '#42A5F5',\\n            data: [\\n                50,\\n                25,\\n                12,\\n                48,\\n                90,\\n                76,\\n                42\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 2',\\n            backgroundColor: '#66BB6A',\\n            data: [\\n                21,\\n                84,\\n                24,\\n                75,\\n                37,\\n                65,\\n                34\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 3',\\n            backgroundColor: '#FFA726',\\n            data: [\\n                41,\\n                52,\\n                24,\\n                74,\\n                23,\\n                21,\\n                32\\n            ]\\n        }]\\n    };\\n\\n    const getLightTheme = () => {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let stackedOptions = {\\n            tooltips: {\\n                mode: 'index',\\n                intersect: false\\n            },\\n            responsive: true,\\n            scales: {\\n                xAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            tooltips: {\\n                mode: 'index',\\n                intersect: true\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                },\\n                {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    },\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            stackedOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Vertical</h5>\\n                    <Chart type=\\\"bar\\\" data={basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal</h5>\\n                    <Chart type=\\\"horizontalBar\\\" data={basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multi Axis</h5>\\n                    <Chart type=\\\"bar\\\" data={multiAxisData} options={multiAxisOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Stacked</h5>\\n                    <Chart type=\\\"bar\\\" data={stackedData} options={stackedOptions} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(BarChartDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'BarChartDemo',\n        sources: this.sources,\n        dependencies: {\n          'chart.js': '2.7.3'\n        }\n      })));\n    }\n  }]);\n\n  return BarChartDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/chart/BarChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","BarChartDemo","props","basicData","labels","datasets","label","backgroundColor","data","multiAxisData","yAxisID","stackedData","type","options","getLightTheme","getDarkTheme","basicOptions","legend","fontColor","scales","xAxes","ticks","yAxes","stackedOptions","tooltips","mode","intersect","responsive","stacked","gridLines","color","multiAxisOptions","display","position","id","min","max","drawOnChartArea","context","darkTheme","BarChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AAEA,WAAaC,YAAb;AAAA;;AAAA;;AAEI,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,SAAL,GAAiB;AACbC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADK;AAEbC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,kBADX;AAEIC,QAAAA,eAAe,EAAE,SAFrB;AAGIC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAHV,OADM,EAMN;AACIF,QAAAA,KAAK,EAAE,mBADX;AAEIC,QAAAA,eAAe,EAAE,SAFrB;AAGIC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAHV,OANM;AAFG,KAAjB;AAgBA,UAAKC,aAAL,GAAqB;AACjBL,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADS;AAEjBC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,WADA;AAEPC,QAAAA,eAAe,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,CAFV;AAWPG,QAAAA,OAAO,EAAE,UAXF;AAYPF,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAZC,OAAD,EAaP;AACCF,QAAAA,KAAK,EAAE,WADR;AAECC,QAAAA,eAAe,EAAE,SAFlB;AAGCG,QAAAA,OAAO,EAAE,UAHV;AAICF,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAJP,OAbO;AAFO,KAArB;AAuBA,UAAKG,WAAL,GAAmB;AACfP,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADO;AAEfC,MAAAA,QAAQ,EAAE,CAAC;AACPO,QAAAA,IAAI,EAAE,KADC;AAEPN,QAAAA,KAAK,EAAE,WAFA;AAGPC,QAAAA,eAAe,EAAE,SAHV;AAIPC,QAAAA,IAAI,EAAE,CACF,EADE,EAEF,EAFE,EAGF,EAHE,EAIF,EAJE,EAKF,EALE,EAMF,EANE,EAOF,EAPE;AAJC,OAAD,EAaP;AACCI,QAAAA,IAAI,EAAE,KADP;AAECN,QAAAA,KAAK,EAAE,WAFR;AAGCC,QAAAA,eAAe,EAAE,SAHlB;AAICC,QAAAA,IAAI,EAAE,CACF,EADE,EAEF,EAFE,EAGF,EAHE,EAIF,EAJE,EAKF,EALE,EAMF,EANE,EAOF,EAPE;AAJP,OAbO,EA0BP;AACCI,QAAAA,IAAI,EAAE,KADP;AAECN,QAAAA,KAAK,EAAE,WAFR;AAGCC,QAAAA,eAAe,EAAE,SAHlB;AAICC,QAAAA,IAAI,EAAE,CACF,EADE,EAEF,EAFE,EAGF,EAHE,EAIF,EAJE,EAKF,EALE,EAMF,EANE,EAOF,EAPE;AAJP,OA1BO;AAFK,KAAnB;AA4CA,UAAKK,OAAL,GAAe;AACX,eAAS,MAAKC,aAAL,EADE;AAEX,cAAQ,MAAKC,YAAL;AAFG,KAAf;AAtFe;AA0FlB;;AA5FL;AAAA;AAAA,WA8FI,yBAAgB;AACZ,UAAIC,YAAY,GAAG;AACfC,QAAAA,MAAM,EAAE;AACJb,UAAAA,MAAM,EAAE;AACJc,YAAAA,SAAS,EAAE;AADP;AADJ,SADO;AAMfC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR;AADH,WAAD,CADH;AAMJI,UAAAA,KAAK,EAAE,CAAC;AACJD,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR;AADH,WAAD;AANH;AANO,OAAnB;AAoBA,UAAIK,cAAc,GAAG;AACjBC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,SAAS,EAAE;AAFL,SADO;AAKjBC,QAAAA,UAAU,EAAE,IALK;AAMjBR,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJQ,YAAAA,OAAO,EAAE,IADL;AAEJP,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR,aAFH;AAKJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AALP,WAAD,CADH;AAUJR,UAAAA,KAAK,EAAE,CAAC;AACJM,YAAAA,OAAO,EAAE,IADL;AAEJP,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR,aAFH;AAKJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AALP,WAAD;AAVH,SANS;AA0BjBb,QAAAA,MAAM,EAAE;AACJb,UAAAA,MAAM,EAAE;AACJc,YAAAA,SAAS,EAAE;AADP;AADJ;AA1BS,OAArB;AAiCA,UAAIa,gBAAgB,GAAG;AACnBJ,QAAAA,UAAU,EAAE,IADO;AAEnBH,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,SAAS,EAAE;AAFL,SAFS;AAMnBP,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR,aADH;AAIJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AAJP,WAAD,CADH;AASJR,UAAAA,KAAK,EAAE,CAAC;AACJV,YAAAA,IAAI,EAAE,QADF;AAEJoB,YAAAA,OAAO,EAAE,IAFL;AAGJC,YAAAA,QAAQ,EAAE,MAHN;AAIJC,YAAAA,EAAE,EAAE,UAJA;AAKJb,YAAAA,KAAK,EAAE;AACHc,cAAAA,GAAG,EAAE,CADF;AAEHC,cAAAA,GAAG,EAAE,GAFF;AAGHlB,cAAAA,SAAS,EAAE;AAHR,aALH;AAUJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AAVP,WAAD,EAcP;AACIlB,YAAAA,IAAI,EAAE,QADV;AAEIoB,YAAAA,OAAO,EAAE,IAFb;AAGIC,YAAAA,QAAQ,EAAE,OAHd;AAIIC,YAAAA,EAAE,EAAE,UAJR;AAKIL,YAAAA,SAAS,EAAE;AACPQ,cAAAA,eAAe,EAAE,KADV;AAEPP,cAAAA,KAAK,EAAE;AAFA,aALf;AASIT,YAAAA,KAAK,EAAE;AACHc,cAAAA,GAAG,EAAE,CADF;AAEHC,cAAAA,GAAG,EAAE,GAFF;AAGHlB,cAAAA,SAAS,EAAE;AAHR;AATX,WAdO;AATH,SANW;AA6CnBD,QAAAA,MAAM,EAAE;AACJb,UAAAA,MAAM,EAAE;AACJc,YAAAA,SAAS,EAAE;AADP;AADJ;AA7CW,OAAvB;AAoDA,aAAO;AACHF,QAAAA,YAAY,EAAZA,YADG;AAEHO,QAAAA,cAAc,EAAdA,cAFG;AAGHQ,QAAAA,gBAAgB,EAAhBA;AAHG,OAAP;AAKH;AA7ML;AAAA;AAAA,WA+MI,wBAAe;AACX,UAAIf,YAAY,GAAG;AACfC,QAAAA,MAAM,EAAE;AACJb,UAAAA,MAAM,EAAE;AACJc,YAAAA,SAAS,EAAE;AADP;AADJ,SADO;AAMfC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR,aADH;AAIJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AAJP,WAAD,CADH;AASJR,UAAAA,KAAK,EAAE,CAAC;AACJD,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR,aADH;AAIJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AAJP,WAAD;AATH;AANO,OAAnB;AA0BA,UAAIP,cAAc,GAAG;AACjBC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,SAAS,EAAE;AAFL,SADO;AAKjBC,QAAAA,UAAU,EAAE,IALK;AAMjBR,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJQ,YAAAA,OAAO,EAAE,IADL;AAEJP,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR,aAFH;AAKJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AALP,WAAD,CADH;AAUJR,UAAAA,KAAK,EAAE,CAAC;AACJM,YAAAA,OAAO,EAAE,IADL;AAEJP,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR,aAFH;AAKJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AALP,WAAD;AAVH,SANS;AA0BjBb,QAAAA,MAAM,EAAE;AACJb,UAAAA,MAAM,EAAE;AACJc,YAAAA,SAAS,EAAE;AADP;AADJ;AA1BS,OAArB;AAiCA,UAAIa,gBAAgB,GAAG;AACnBJ,QAAAA,UAAU,EAAE,IADO;AAEnBH,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,SAAS,EAAE;AAFL,SAFS;AAMnBP,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AACHH,cAAAA,SAAS,EAAE;AADR,aADH;AAIJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AAJP,WAAD,CADH;AASJR,UAAAA,KAAK,EAAE,CAAC;AACJV,YAAAA,IAAI,EAAE,QADF;AAEJoB,YAAAA,OAAO,EAAE,IAFL;AAGJC,YAAAA,QAAQ,EAAE,MAHN;AAIJC,YAAAA,EAAE,EAAE,UAJA;AAKJb,YAAAA,KAAK,EAAE;AACHc,cAAAA,GAAG,EAAE,CADF;AAEHC,cAAAA,GAAG,EAAE,GAFF;AAGHlB,cAAAA,SAAS,EAAE;AAHR,aALH;AAUJW,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA;AAVP,WAAD,EAcP;AACIlB,YAAAA,IAAI,EAAE,QADV;AAEIoB,YAAAA,OAAO,EAAE,IAFb;AAGIC,YAAAA,QAAQ,EAAE,OAHd;AAIIC,YAAAA,EAAE,EAAE,UAJR;AAKIL,YAAAA,SAAS,EAAE;AACPQ,cAAAA,eAAe,EAAE,KADV;AAEPP,cAAAA,KAAK,EAAE;AAFA,aALf;AASIT,YAAAA,KAAK,EAAE;AACHc,cAAAA,GAAG,EAAE,CADF;AAEHC,cAAAA,GAAG,EAAE,GAFF;AAGHlB,cAAAA,SAAS,EAAE;AAHR;AATX,WAdO;AATH,SANW;AA6CnBD,QAAAA,MAAM,EAAE;AACJb,UAAAA,MAAM,EAAE;AACJc,YAAAA,SAAS,EAAE;AADP;AADJ;AA7CW,OAAvB;AAoDA,aAAO;AACHF,QAAAA,YAAY,EAAZA,YADG;AAEHO,QAAAA,cAAc,EAAdA,cAFG;AAGHQ,QAAAA,gBAAgB,EAAhBA;AAHG,OAAP;AAKH;AApUL;AAAA;AAAA,WAsUI,kBAAS;AAAA;;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,aAAa,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6JAFJ,CADJ,CADJ,eAQI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,iBAAD,CAAmB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,UAAAO,OAAO,EAAI;AACP,8BAA2D,MAAI,CAACzB,OAAL,WAAgByB,OAAO,CAACC,SAAR,GAAoB,MAApB,GAA6B,OAA7C,EAA3D;AAAA,YAAQvB,YAAR,mBAAQA,YAAR;AAAA,YAAsBe,gBAAtB,mBAAsBA,gBAAtB;AAAA,YAAwCR,cAAxC,mBAAwCA,cAAxC;;AAEA,4BACI,uDACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,KAAZ;AAAkB,UAAA,IAAI,EAAE,MAAI,CAACpB,SAA7B;AAAwC,UAAA,OAAO,EAAEa,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,eAMI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,IAAI,EAAE,MAAI,CAACb,SAAvC;AAAkD,UAAA,OAAO,EAAEa,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CANJ,eAWI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,KAAZ;AAAkB,UAAA,IAAI,EAAE,MAAI,CAACP,aAA7B;AAA4C,UAAA,OAAO,EAAEsB,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CAXJ,eAgBI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,KAAZ;AAAkB,UAAA,IAAI,EAAE,MAAI,CAACpB,WAA7B;AAA0C,UAAA,OAAO,EAAEY,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CAhBJ,CADJ;AAuBH,OA5BT,CADJ,CARJ,eA0CI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1CJ,CADJ;AA8CH;AArXL;;AAAA;AAAA,EAAkC5B,SAAlC;AAwXA,WAAa6C,eAAb;AAAA;;AAAA;;AAEI,2BAAYtC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gCAAMA,KAAN;AAEA,WAAKuC,OAAL,GAAe;AACX,eAAS;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OADE;AAiPX,eAAS;AACLD,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OAjPE;AAwdX,YAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,OAAO;AAFL;AAxdK,KAAf;AAHe;AAosBlB;;AAtsBL;AAAA;AAAA,WAwsBI,iCAAwB;AACpB,aAAO,KAAP;AACH;AA1sBL;AAAA;AAAA,WA4sBI,kBAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ7C,iBAAiB,CAAC;AAAE8C,QAAAA,IAAI,EAAE,cAAR;AAAwBH,QAAAA,OAAO,EAAE,KAAKA,OAAtC;AAA+CI,QAAAA,YAAY,EAAE;AAAE,sBAAY;AAAd;AAA7D,OAAD,CAFzB,CADJ,CADJ;AASH;AAttBL;;AAAA;AAAA,EAAqClD,SAArC","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class BarChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.basicData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: '#42A5F5',\r\n                    data: [65, 59, 80, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: '#FFA726',\r\n                    data: [28, 48, 40, 19, 86, 27, 90]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.multiAxisData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                label: 'Dataset 1',\r\n                backgroundColor: [\r\n                    '#EC407A',\r\n                    '#AB47BC',\r\n                    '#42A5F5',\r\n                    '#7E57C2',\r\n                    '#66BB6A',\r\n                    '#FFCA28',\r\n                    '#26A69A'\r\n                ],\r\n                yAxisID: 'y-axis-1',\r\n                data: [65, 59, 80, 81, 56, 55, 10]\r\n            }, {\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#78909C',\r\n                yAxisID: 'y-axis-2',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }]\r\n        };\r\n\r\n        this.stackedData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                type: 'bar',\r\n                label: 'Dataset 1',\r\n                backgroundColor: '#42A5F5',\r\n                data: [\r\n                    50,\r\n                    25,\r\n                    12,\r\n                    48,\r\n                    90,\r\n                    76,\r\n                    42\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#66BB6A',\r\n                data: [\r\n                    21,\r\n                    84,\r\n                    24,\r\n                    75,\r\n                    37,\r\n                    65,\r\n                    34\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 3',\r\n                backgroundColor: '#FFA726',\r\n                data: [\r\n                    41,\r\n                    52,\r\n                    24,\r\n                    74,\r\n                    23,\r\n                    21,\r\n                    32\r\n                ]\r\n            }]\r\n        };\r\n\r\n        this.options = {\r\n            'light': this.getLightTheme(),\r\n            'dark': this.getDarkTheme()\r\n        };\r\n    }\r\n\r\n    getLightTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    getDarkTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>BarChart</h1>\r\n                        <p>A bar chart or bar graph is a chart that presents grouped data with rectangular bars with lengths proportional to the values that they represent.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <AppContentContext.Consumer>\r\n                        {\r\n                            context => {\r\n                                const { basicOptions, multiAxisOptions, stackedOptions } = this.options[`${context.darkTheme ? 'dark' : 'light'}`];\r\n\r\n                                return (\r\n                                    <>\r\n                                        <div className=\"card\">\r\n                                            <h5>Vertical</h5>\r\n                                            <Chart type=\"bar\" data={this.basicData} options={basicOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Horizontal</h5>\r\n                                            <Chart type=\"horizontalBar\" data={this.basicData} options={basicOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Multi Axis</h5>\r\n                                            <Chart type=\"bar\" data={this.multiAxisData} options={multiAxisOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Stacked</h5>\r\n                                            <Chart type=\"bar\" data={this.stackedData} options={stackedOptions} />\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        }\r\n                    </AppContentContext.Consumer>\r\n                </div>\r\n\r\n                <BarChartDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class BarChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class BarChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.basicData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: '#42A5F5',\r\n                    data: [65, 59, 80, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: '#FFA726',\r\n                    data: [28, 48, 40, 19, 86, 27, 90]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.multiAxisData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                label: 'Dataset 1',\r\n                backgroundColor: [\r\n                    '#EC407A',\r\n                    '#AB47BC',\r\n                    '#42A5F5',\r\n                    '#7E57C2',\r\n                    '#66BB6A',\r\n                    '#FFCA28',\r\n                    '#26A69A'\r\n                ],\r\n                yAxisID: 'y-axis-1',\r\n                data: [65, 59, 80, 81, 56, 55, 10]\r\n            }, {\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#78909C',\r\n                yAxisID: 'y-axis-2',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }]\r\n        };\r\n\r\n        this.stackedData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                type: 'bar',\r\n                label: 'Dataset 1',\r\n                backgroundColor: '#42A5F5',\r\n                data: [\r\n                    50,\r\n                    25,\r\n                    12,\r\n                    48,\r\n                    90,\r\n                    76,\r\n                    42\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#66BB6A',\r\n                data: [\r\n                    21,\r\n                    84,\r\n                    24,\r\n                    75,\r\n                    37,\r\n                    65,\r\n                    34\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 3',\r\n                backgroundColor: '#FFA726',\r\n                data: [\r\n                    41,\r\n                    52,\r\n                    24,\r\n                    74,\r\n                    23,\r\n                    21,\r\n                    32\r\n                ]\r\n            }]\r\n        };\r\n\r\n        this.options = this.getLightTheme();\r\n    }\r\n\r\n    getLightTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { basicOptions, multiAxisOptions, stackedOptions } = this.options;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Vertical</h5>\r\n                    <Chart type=\"bar\" data={this.basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal</h5>\r\n                    <Chart type=\"horizontalBar\" data={this.basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multi Axis</h5>\r\n                    <Chart type=\"bar\" data={this.multiAxisData} options={multiAxisOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Stacked</h5>\r\n                    <Chart type=\"bar\" data={this.stackedData} options={stackedOptions} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst BarChartDemo = () => {\r\n    const basicData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                backgroundColor: '#42A5F5',\r\n                data: [65, 59, 80, 81, 56, 55, 40]\r\n            },\r\n            {\r\n                label: 'My Second dataset',\r\n                backgroundColor: '#FFA726',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }\r\n        ]\r\n    };\r\n\r\n    const multiAxisData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            label: 'Dataset 1',\r\n            backgroundColor: [\r\n                '#EC407A',\r\n                '#AB47BC',\r\n                '#42A5F5',\r\n                '#7E57C2',\r\n                '#66BB6A',\r\n                '#FFCA28',\r\n                '#26A69A'\r\n            ],\r\n            yAxisID: 'y-axis-1',\r\n            data: [65, 59, 80, 81, 56, 55, 10]\r\n        }, {\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#78909C',\r\n            yAxisID: 'y-axis-2',\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n        }]\r\n    };\r\n\r\n    const stackedData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            type: 'bar',\r\n            label: 'Dataset 1',\r\n            backgroundColor: '#42A5F5',\r\n            data: [\r\n                50,\r\n                25,\r\n                12,\r\n                48,\r\n                90,\r\n                76,\r\n                42\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#66BB6A',\r\n            data: [\r\n                21,\r\n                84,\r\n                24,\r\n                75,\r\n                37,\r\n                65,\r\n                34\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 3',\r\n            backgroundColor: '#FFA726',\r\n            data: [\r\n                41,\r\n                52,\r\n                24,\r\n                74,\r\n                23,\r\n                21,\r\n                32\r\n            ]\r\n        }]\r\n    };\r\n\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Vertical</h5>\r\n                    <Chart type=\"bar\" data={basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal</h5>\r\n                    <Chart type=\"horizontalBar\" data={basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multi Axis</h5>\r\n                    <Chart type=\"bar\" data={multiAxisData} options={multiAxisOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Stacked</h5>\r\n                    <Chart type=\"bar\" data={stackedData} options={stackedOptions} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst BarChartDemo = () => {\r\n    const basicData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                backgroundColor: '#42A5F5',\r\n                data: [65, 59, 80, 81, 56, 55, 40]\r\n            },\r\n            {\r\n                label: 'My Second dataset',\r\n                backgroundColor: '#FFA726',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }\r\n        ]\r\n    };\r\n\r\n    const multiAxisData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            label: 'Dataset 1',\r\n            backgroundColor: [\r\n                '#EC407A',\r\n                '#AB47BC',\r\n                '#42A5F5',\r\n                '#7E57C2',\r\n                '#66BB6A',\r\n                '#FFCA28',\r\n                '#26A69A'\r\n            ],\r\n            yAxisID: 'y-axis-1',\r\n            data: [65, 59, 80, 81, 56, 55, 10]\r\n        }, {\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#78909C',\r\n            yAxisID: 'y-axis-2',\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n        }]\r\n    };\r\n\r\n    const stackedData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            type: 'bar',\r\n            label: 'Dataset 1',\r\n            backgroundColor: '#42A5F5',\r\n            data: [\r\n                50,\r\n                25,\r\n                12,\r\n                48,\r\n                90,\r\n                76,\r\n                42\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#66BB6A',\r\n            data: [\r\n                21,\r\n                84,\r\n                24,\r\n                75,\r\n                37,\r\n                65,\r\n                34\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 3',\r\n            backgroundColor: '#FFA726',\r\n            data: [\r\n                41,\r\n                52,\r\n                24,\r\n                74,\r\n                23,\r\n                21,\r\n                32\r\n            ]\r\n        }]\r\n    };\r\n\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Vertical</h5>\r\n                    <Chart type=\"bar\" data={basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal</h5>\r\n                    <Chart type=\"horizontalBar\" data={basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multi Axis</h5>\r\n                    <Chart type=\"bar\" data={multiAxisData} options={multiAxisOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Stacked</h5>\r\n                    <Chart type=\"bar\" data={stackedData} options={stackedOptions} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'BarChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}