{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\tree\\\\TreeDoc.js\";\nimport React, { Component } from 'react';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var TreeDoc = /*#__PURE__*/function (_Component) {\n  _inherits(TreeDoc, _Component);\n\n  var _super = _createSuper(TreeDoc);\n\n  function TreeDoc(props) {\n    var _this;\n\n    _classCallCheck(this, TreeDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Tree } from 'primereact/tree';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport class TreeDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes: null,\\n            expandedKeys: {}\\n        };\\n\\n        this.nodeService = new NodeService();\\n        this.expandAll = this.expandAll.bind(this);\\n        this.collapseAll = this.collapseAll.bind(this);\\n        this.expandNode = this.expandNode.bind(this);\\n    }\\n\\n    expandAll() {\\n        let expandedKeys = {};\\n        for (let node of this.state.nodes) {\\n            this.expandNode(node, expandedKeys);\\n        }\\n\\n        this.setState({ expandedKeys });\\n    }\\n\\n    collapseAll() {\\n        this.setState({ expandedKeys: {} });\\n    }\\n\\n    expandNode(node, expandedKeys) {\\n        if (node.children && node.children.length) {\\n            expandedKeys[node.key] = true;\\n\\n            for (let child of node.children) {\\n                this.expandNode(child, expandedKeys);\\n            }\\n        }\\n    }\\n\\n    componentDidMount() {\\n        this.nodeService.getTreeNodes().then(data => this.setState({ nodes: data }));\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <Tree value={this.state.nodes} />\\n\\n                    <h5>Programmatic Control</h5>\\n                    <div className=\\\"p-mb-4\\\">\\n                        <Button type=\\\"button\\\" icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={this.expandAll} className=\\\"p-mr-2\\\" />\\n                        <Button type=\\\"button\\\" icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={this.collapseAll} />\\n                    </div>\\n                    <Tree value={this.state.nodes} expandedKeys={this.state.expandedKeys}\\n                        onToggle={e => this.setState({ expandedKeys: e.value })} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { Tree } from 'primereact/tree';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeDemo = () => {\\n    const [nodes, setNodes] = useState(null);\\n    const [expandedKeys, setExpandedKeys] = useState({});\\n    const nodeService = new NodeService();\\n\\n    const expandAll = () => {\\n        let _expandedKeys = {};\\n        for (let node of nodes) {\\n            expandNode(node, _expandedKeys);\\n        }\\n\\n        setExpandedKeys(_expandedKeys);\\n    }\\n\\n    const collapseAll = () => {\\n        setExpandedKeys({});\\n    }\\n\\n    const expandNode = (node, _expandedKeys) => {\\n        if (node.children && node.children.length) {\\n            _expandedKeys[node.key] = true;\\n\\n            for (let child of node.children) {\\n                expandNode(child, _expandedKeys);\\n            }\\n        }\\n    }\\n\\n    useEffect(() => {\\n        nodeService.getTreeNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Tree value={nodes} />\\n\\n                <h5>Programmatic Control</h5>\\n                <div className=\\\"p-mb-4\\\">\\n                    <Button type=\\\"button\\\" icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={expandAll} className=\\\"p-mr-2\\\" />\\n                    <Button type=\\\"button\\\" icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={collapseAll} />\\n                </div>\\n                <Tree value={nodes} expandedKeys={expandedKeys}\\n                    onToggle={e => setExpandedKeys(e.value)} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { Tree } from 'primereact/tree';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeDemo = () => {\\n    const [nodes, setNodes] = useState(null);\\n    const [expandedKeys, setExpandedKeys] = useState({});\\n    const nodeService = new NodeService();\\n\\n    const expandAll = () => {\\n        let _expandedKeys = {};\\n        for (let node of nodes) {\\n            expandNode(node, _expandedKeys);\\n        }\\n\\n        setExpandedKeys(_expandedKeys);\\n    }\\n\\n    const collapseAll = () => {\\n        setExpandedKeys({});\\n    }\\n\\n    const expandNode = (node, _expandedKeys) => {\\n        if (node.children && node.children.length) {\\n            _expandedKeys[node.key] = true;\\n\\n            for (let child of node.children) {\\n                expandNode(child, _expandedKeys);\\n            }\\n        }\\n    }\\n\\n    useEffect(() => {\\n        nodeService.getTreeNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Tree value={nodes} />\\n\\n                <h5>Programmatic Control</h5>\\n                <div className=\\\"p-mb-4\\\">\\n                    <Button type=\\\"button\\\" icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={expandAll} className=\\\"p-mr-2\\\" />\\n                    <Button type=\\\"button\\\" icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={collapseAll} />\\n                </div>\\n                <Tree value={nodes} expandedKeys={expandedKeys}\\n                    onToggle={e => setExpandedKeys(e.value)} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(TreeDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 1\n        }\n      }, \"\\nimport { Tree } from 'primereact/tree';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, \"Tree component requires an array of TreeNode objects as its \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 88\n        }\n      }, \"value\"), \".\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, \"TreeNode API\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 41\n        }\n      }, \"key\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 41\n        }\n      }, \"Unique key of the node.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 41\n        }\n      }, \"label\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 41\n        }\n      }, \"Label of the node.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 41\n        }\n      }, \"data\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 41\n        }\n      }, \"Data represented by the node.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 41\n        }\n      }, \"icon\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 41\n        }\n      }, \"Icon of the node to display next to content.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 41\n        }\n      }, \"children\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 41\n        }\n      }, \"TreeNode[]\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 41\n        }\n      }, \"An array of treenodes as children.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 41\n        }\n      }, \"Inline style of the node.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 41\n        }\n      }, \"Style class of the node.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 41\n        }\n      }, \"draggable\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 41\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 41\n        }\n      }, \"Whether the node is draggable when dragdrop is enabled.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 41\n        }\n      }, \"droppable\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 41\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 41\n        }\n      }, \"Whether the node is droppable when dragdrop is enabled.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 41\n        }\n      }, \"selectable\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 41\n        }\n      }, \"Whether the node is selectable when selection mode is enabled.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 41\n        }\n      }, \"leaf\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 41\n        }\n      }, \"Specifies if the node has children. Used in lazy loading.\"))))), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 1\n        }\n      }, \"\\n<Tree value={data} />\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 1\n        }\n      }, \"\\nconst data: [\\n    {\\n        \\\"key\\\": \\\"0\\\",\\n        \\\"label\\\": \\\"Documents\\\",\\n        \\\"data\\\": \\\"Documents Folder\\\",\\n        \\\"icon\\\": \\\"pi pi-fw pi-inbox\\\",\\n        \\\"children\\\": [{\\n            \\\"key\\\": \\\"0-0\\\",\\n            \\\"label\\\": \\\"Work\\\",\\n            \\\"data\\\": \\\"Work Folder\\\",\\n            \\\"icon\\\": \\\"pi pi-fw pi-cog\\\",\\n            \\\"children\\\": [{ \\\"key\\\": \\\"0-0-0\\\", \\\"label\\\": \\\"Expenses.doc\\\", \\\"icon\\\": \\\"pi pi-fw pi-file\\\", \\\"data\\\": \\\"Expenses Document\\\" }, { \\\"key\\\": \\\"0-0-1\\\", \\\"label\\\": \\\"Resume.doc\\\", \\\"icon\\\": \\\"pi pi-fw pi-file\\\", \\\"data\\\": \\\"Resume Document\\\" }]\\n        },\\n        {\\n            \\\"key\\\": \\\"0-1\\\",\\n            \\\"label\\\": \\\"Home\\\",\\n            \\\"data\\\": \\\"Home Folder\\\",\\n            \\\"icon\\\": \\\"pi pi-fw pi-home\\\",\\n            \\\"children\\\": [{ \\\"key\\\": \\\"0-1-0\\\", \\\"label\\\": \\\"Invoices.txt\\\", \\\"icon\\\": \\\"pi pi-fw pi-file\\\", \\\"data\\\": \\\"Invoices for this month\\\" }]\\n        }]\\n    },\\n    {\\n        \\\"key\\\": \\\"1\\\",\\n        \\\"label\\\": \\\"Events\\\",\\n        \\\"data\\\": \\\"Events Folder\\\",\\n        \\\"icon\\\": \\\"pi pi-fw pi-calendar\\\",\\n        \\\"children\\\": [\\n            { \\\"key\\\": \\\"1-0\\\", \\\"label\\\": \\\"Meeting\\\", \\\"icon\\\": \\\"pi pi-fw pi-calendar-plus\\\", \\\"data\\\": \\\"Meeting\\\" },\\n            { \\\"key\\\": \\\"1-1\\\", \\\"label\\\": \\\"Product Launch\\\", \\\"icon\\\": \\\"pi pi-fw pi-calendar-plus\\\", \\\"data\\\": \\\"Product Launch\\\" },\\n            { \\\"key\\\": \\\"1-2\\\", \\\"label\\\": \\\"Report Review\\\", \\\"icon\\\": \\\"pi pi-fw pi-calendar-plus\\\", \\\"data\\\": \\\"Report Review\\\" }]\\n    },\\n    {\\n        \\\"key\\\": \\\"2\\\",\\n        \\\"label\\\": \\\"Movies\\\",\\n        \\\"data\\\": \\\"Movies Folder\\\",\\n        \\\"icon\\\": \\\"pi pi-fw pi-star\\\",\\n        \\\"children\\\": [{\\n            \\\"key\\\": \\\"2-0\\\",\\n            \\\"icon\\\": \\\"pi pi-fw pi-star\\\",\\n            \\\"label\\\": \\\"Al Pacino\\\",\\n            \\\"data\\\": \\\"Pacino Movies\\\",\\n            \\\"children\\\": [{ \\\"key\\\": \\\"2-0-0\\\", \\\"label\\\": \\\"Scarface\\\", \\\"icon\\\": \\\"pi pi-fw pi-video\\\", \\\"data\\\": \\\"Scarface Movie\\\" }, { \\\"key\\\": \\\"2-0-1\\\", \\\"label\\\": \\\"Serpico\\\", \\\"icon\\\": \\\"pi pi-fw pi-video\\\", \\\"data\\\": \\\"Serpico Movie\\\" }]\\n        },\\n        {\\n            \\\"key\\\": \\\"2-1\\\",\\n            \\\"label\\\": \\\"Robert De Niro\\\",\\n            \\\"icon\\\": \\\"pi pi-fw pi-star\\\",\\n            \\\"data\\\": \\\"De Niro Movies\\\",\\n            \\\"children\\\": [{ \\\"key\\\": \\\"2-1-0\\\", \\\"label\\\": \\\"Goodfellas\\\", \\\"icon\\\": \\\"pi pi-fw pi-video\\\", \\\"data\\\": \\\"Goodfellas Movie\\\" }, { \\\"key\\\": \\\"2-1-1\\\", \\\"label\\\": \\\"Untouchables\\\", \\\"icon\\\": \\\"pi pi-fw pi-video\\\", \\\"data\\\": \\\"Untouchables Movie\\\" }]\\n        }]\\n    }\\n]\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 25\n        }\n      }, \"Controlled vs Uncontrolled\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }\n      }, \"Tree expansion state is managed in two ways, in uncontrolled mode only initial expanded state of a node can be defined using \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 153\n        }\n      }, \"expandedKeys\"), \" property whereas in controlled mode \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 209\n        }\n      }, \"expandedKeys\"), \"property along with \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 49\n        }\n      }, \"onToggle\"), \" properties are used for full control over the state. If you need to expand or collapse the state of nodes programmatically then controlled mode should be used. Example below demonstrates both cases;\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 1\n        }\n      }, \"\\nimport React, { Component } from 'react';\\nimport { Tree } from 'primereact/tree';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport const TreeDemo = () => {\\n\\n    const [nodes, setNodes] = useState(null);\\n    const [expandedKeys, setExpandedKeys] = useState({});\\n\\n    useEffect(() => {\\n        nodeService = new NodeService();\\n        nodeService.getTreeNodes().then(data => setNodes(data));\\n    }, [])\\n\\n    const toggleMovies = () => {\\n        let expandedKeys = {...expandedKeys};\\n        if (expandedKeys['2'])\\n            delete expandedKeys['2'];\\n        else\\n            expandedKeys['2'] = true;\\n\\n        setExpandedKeys(expandedKeys);\\n    }\\n\\n    return (\\n        <div>\\n            <h3 className=\\\"first\\\">Uncontrolled</h5>\\n            <Tree value={nodes} />\\n\\n            <h5>Controlled</h5>\\n            <Button onClick={toggleMovies} label=\\\"Toggle Movies\\\" />\\n            <Tree value={nodes} expandedKeys={expandedKeys}\\n                onToggle={e => setExpandedKeys(e.value)} style={{marginTop: '.5em'}} />\\n        </div>\\n    )\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 25\n        }\n      }, \"Selection\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }\n      }, \"Tree supports single, multiple and checkbox selection modes. Define \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 96\n        }\n      }, \"selectionMode\"), \", \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 118\n        }\n      }, \"selectionKeys\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 143\n        }\n      }, \"onSelectionChange\"), \" properties to control the selection. In single mode, selectionKeys should be a single value whereas in multiple or checkbox modes an array is required. By default in multiple selection mode, metaKey is necessary to add to existing selections however this can be configured with \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 217\n        }\n      }, \"metaKeySelection\"), \" property. Note that in touch enabled devices, Tree does not require metaKey.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 1\n        }\n      }, \"\\nimport React, {Component} from 'react';\\nimport {Tree} from 'primereact/tree';\\nimport {NodeService} from '../service/NodeService';\\n\\nexport const TreeSelectionDemo = () => {\\n\\n    const [nodes, setNodes] = useState(null);\\n    const [selectedNodeKey] = useState(null);\\n    const [selectedNodeKeys1] = useState(null);\\n    const [selectedNodeKeys2] = useState(null);\\n    const [selectedNodeKeys3] = useState(null);\\n\\n    useEffect(() => {\\n        nodeService = new NodeService();\\n        nodeService.getTreeNodes().then(data => setNodes(data));\\n    }, [])\\n\\n    return (\\n        <div>\\n            <h5>Single Selection</h5>\\n            <Tree value={nodes} selectionMode=\\\"single\\\" selectionKeys={selectedNodeKey} onSelectionChange={e => setSelectedNodeKey(e.value)} />\\n\\n            <h5>Multiple Selection with MetaKey</h5>\\n            <Tree value={nodes} selectionMode=\\\"multiple\\\" selectionKeys={selectedNodeKeys1} onSelectionChange={e => setSelectedNodeKeys1(e.value)} />\\n\\n            <h5>Multiple Selection without MetaKey</h5>\\n            <Tree value={nodes} selectionMode=\\\"multiple\\\" metaKeySelection={false} selectionKeys={selectedNodeKeys2} onSelectionChange={e => setSelectedNodeKeys2(e.value)} />\\n\\n            <h5>Checkbox Selection</h5>\\n            <Tree value={nodes} selectionMode=\\\"checkbox\\\" selectionKeys={selectedNodeKeys3} onSelectionChange={e => setSelectedNodeKeys3(e.value)} />\\n        </div>\\n    )\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }\n      }, \"Lazy\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }\n      }, \"Lazy loading is implemented using the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 66\n        }\n      }, \"onExpand\"), \" event by adding children to the expanded node. \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 129\n        }\n      }, \"leaf\"), \" property should be enabled to indicate the node has children but not yet loaded. Here is a in-memory demo that loads generated nodes on expand event to imitate a remote call with a timeout. Notice the usage of \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 117\n        }\n      }, \"loading\"), \" property as well to give users a feedback about the loading process.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 1\n        }\n      }, \"\\nimport React, {Component} from 'react';\\nimport {Tree} from 'primereact/tree';\\nimport {NodeService} from '../service/NodeService';\\n\\nexport const TreeLazyDemo = () => {\\n\\n    const [nodes, setNodes] = useState(null);\\n    const [loading, setLoading] = useState(true);\\n\\n    useEffect(() => {\\n        nodeService = new NodeService();\\n        setTimeout(() => {\\n            nodeService.getTreeNodes().then(data => {\\n                setNodes(data);\\n                setLoading(false);\\n            });\\n        }, 2000);\\n    }, [])\\n\\n    const loadOnExpand = (event) => {\\n        if (!event.node.children) {\\n            setLoading(true)\\n\\n            setTimeout(() => {\\n                let node = {...event.node};\\n                node.children = [];\\n\\n                for (let i = 0; i < 3; i++) {\\n                    node.children.push({\\n                        key: node.key + '-' + i,\\n                        label: 'Lazy ' + node.label + '-' + i\\n                    });\\n                }\\n\\n                let value = [...nodes];\\n                value[parseInt(event.node.key, 10)] = node;\\n                setNodes(value);\\n                setLoading(false);\\n            }, 500);\\n        }\\n    }\\n\\n    return (\\n        <Tree value={nodes} onExpand={loadOnExpand} loading={loading} />\\n    )\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 25\n        }\n      }, \"Templating\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 28\n        }\n      }, \"label\"), \" property of a node is used to display as the content by default. Templating is supported as well with the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 147\n        }\n      }, \"nodeTemplate\"), \" callback that gets the node instance and returns JSX. Example below is a sample tree based navigation of React docs.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 1\n        }\n      }, \"\\nimport React, { Component } from 'react';\\nimport { Tree } from 'primereact/tree';\\n\\nexport const TreeTemplatingDemo = () => {\\n\\n    const [nodes, setNodes] = useState(createNavigation());\\n\\n    const createNavigation = () => {\\n        return [\\n            {\\n                label: 'Insallation',\\n                children: [\\n                    {label: 'Getting Started', url:'https://reactjs.org/docs/getting-started.html'},\\n                    {label: 'Add React', url: 'https://reactjs.org/docs/add-react-to-a-website.html'},\\n                    {label: 'Create an App', url:'https://reactjs.org/docs/create-a-new-react-app.html'},\\n                    {label: 'CDN Links', url: 'https://reactjs.org/docs/cdn-links.html'}\\n                ]\\n            },\\n            {\\n                label: 'Main Concepts',\\n                children: [\\n                    {label: 'Hello World', url: 'https://reactjs.org/docs/hello-world.html'},\\n                    {label: 'Introducing JSX', url: 'https://reactjs.org/docs/introducing-jsx.html'},\\n                    {label: 'Rendering Elements', url: 'https://reactjs.org/docs/rendering-elements.html'},\\n                    {label: 'Components and Props', url: 'https://reactjs.org/docs/components-and-props.html'},\\n                    {label: 'State and LifeCycle', url: 'https://reactjs.org/docs/state-and-lifecycle.html'},\\n                    {label: 'Handling Events', url: 'https://reactjs.org/docs/handling-events.html'}\\n                ]\\n            }\\n        ];\\n    }\\n\\n    const nodeTemplate = (node) => {\\n        if (node.url) {\\n            return (\\n                <a href={node.url}>{node.label}</a>\\n            )\\n        }\\n        else {\\n            return (\\n                <b>{node.label}</b>\\n            )\\n        }\\n    }\\n\\n    return (\\n        <Tree value={nodes} nodeTemplate={nodeTemplate} />\\n    )\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 25\n        }\n      }, \"DragDrop\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 25\n        }\n      }, \"Tree nodes can be reordered using dragdrop by setting \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 82\n        }\n      }, \"dragdropScope\"), \" property to a unique variable and updating the new value at \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 163\n        }\n      }, \"onDragDrop\"), \" callback. The value of the dragdropScope must be unique to provide intervention from other draggable elements on the page.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 1\n        }\n      }, \"\\nimport React, {Component} from 'react';\\nimport {Tree} from 'primereact/tree';\\nimport {NodeService} from '../service/NodeService';\\n\\nexport const TreeDragDropDemo = () => {\\n\\n    const [nodes, setNodes] = useState(null);\\n\\n    useEffect(() => {\\n        nodeService = new NodeService();\\n        nodeService.getTreeNodes().then(data => setNodes(data));\\n    }, [])\\n\\n    return (\\n        <div>\\n            <Tree value={nodes} dragdropScope=\\\"demo\\\" onDragDrop={event => setNodes(event.value)} />\\n        </div>\\n    )\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 25\n        }\n      }, \"Filtering\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 25\n        }\n      }, \"Filtering is enabled by setting the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 64\n        }\n      }, \"filter\"), \" property to true, by default label property of a node is used to compare against the value in the text field, in order to customize which field(s) should be used during search define \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 142\n        }\n      }, \"filterBy\"), \" property.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 25\n        }\n      }, \"In addition \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 40\n        }\n      }, \"filterMode\"), \" specifies the filtering strategy. In \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 95\n        }\n      }, \"lenient\"), \" mode when the query matches a node, children of the node are not searched further as all descendants of the node are included. On the other hand, in \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }\n      }, \"strict\"), \" mode when the query matches a node, filtering continues on all descendants.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 1\n        }\n      }, \"\\n<Tree value={nodes} filter />\\n\\n<Tree value={nodes} filter filterBy=\\\"data.name,data.age\\\" />\\n\\n<Tree value={nodes} filter filterMode=\\\"strict\\\" />\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 25\n        }\n      }, \"ContextMenu\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 25\n        }\n      }, \"One or more ContextMenu instances can be attached to nodes. Similar to selection, separate \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 119\n        }\n      }, \"contextMenuSelectionKey\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 154\n        }\n      }, \"onContextMenuSelectionChange\"), \" properties are necesary to manage the selected node with right click. In addition, a context menu can either be displayed at \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 81\n        }\n      }, \"onContextMenu\"), \" event. Since this event also passes the node instance, you may choose to display a different context menu for a particular node.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 1\n        }\n      }, \"\\nimport React, { Component } from 'react';\\nimport {Tree} from 'primereact/tree'\\nimport {ContextMenu} from 'primereact/contextmenu';\\nimport {Toast} from 'primereact/toast';\\nimport {NodeService} from '../service/NodeService';\\n\\nexport const TreeContextMenuDemo = () => {\\n\\n    const [nodes, setNodes] = useState(null);\\n    const [expandedKeys, setExpandedKeys] = useState({});\\n    const [selectedNodeKey, setSelectedNodeKey] = useState(null);\\n    const toast = useRef(null);\\n    const cm = useRef(null);\\n    const menu = [\\n        {\\n            label: 'View Key',\\n            icon: 'pi pi-search',\\n            command: () => {\\n                toast.current.show({severity: 'success', summary: 'Node Key', detail: selectedNodeKey});\\n            }\\n        },\\n        {\\n            label: 'Toggle',\\n            icon: 'pi pi-cog',\\n            command: () => {\\n                let expandedKeys = {...expandedKeys};\\n                if (expandedKeys[selectedNodeKey])\\n                    delete expandedKeys[selectedNodeKey];\\n                else\\n                    expandedKeys[selectedNodeKey] = true;\\n                setExpandedKeys(expandedKeys);\\n            }\\n        }\\n    ];\\n\\n    useEffect(() => {\\n        nodeService = new NodeService();\\n        nodeService.getTreeNodes().then(data => setNodes(data));\\n    }, [])\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n\\n            <ContextMenu model={menu} ref={cm} />\\n\\n            <Tree value={nodes} expandedKeys={expandedKeys} onToggle={e => setExpandedkeys(e.value)}\\n                onContextMenuSelectionChange={event => setSelectedNodeKey(event.value)}\\n                onContextMenu={event => cm.current.show(event.originalEvent)} />\\n        </div>\\n    )\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 41\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 41\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 41\n        }\n      }, \"value\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 41\n        }\n      }, \"array\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 41\n        }\n      }, \"An array of treenodes.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 41\n        }\n      }, \"selectionMode\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 41\n        }\n      }, \"Defines the selection mode, valid values \\\"single\\\", \\\"multiple\\\", and \\\"checkbox\\\".\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 41\n        }\n      }, \"selectionKeys\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 41\n        }\n      }, \"A single or an array of keys to control the selection state.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 41\n        }\n      }, \"contextMenuSelectionKey\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 41\n        }\n      }, \"A single key to control the selection with the context menu.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 41\n        }\n      }, \"expandedKeys\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 41\n        }\n      }, \"array\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 41\n        }\n      }, \"An array of keys to represent the state of the tree expansion state in controlled mode.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 41\n        }\n      }, \"object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 41\n        }\n      }, \"Inline style of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 41\n        }\n      }, \"Style class of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 41\n        }\n      }, \"contentStyle\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 41\n        }\n      }, \"object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 41\n        }\n      }, \"Inline style of the tree content.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 41\n        }\n      }, \"contentClassName\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 41\n        }\n      }, \"Style class of the tree content.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 41\n        }\n      }, \"metaKeySelection\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 41\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 41\n        }\n      }, \"Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 41\n        }\n      }, \"propagateSelectionUp\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 41\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 41\n        }\n      }, \"Whether checkbox selections propagate to ancestor nodes.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 41\n        }\n      }, \"propagateSelectionDown\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 41\n        }\n      }, \"true\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 41\n        }\n      }, \"Whether checkbox selections propagate to descendant nodes.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 41\n        }\n      }, \"loading\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 41\n        }\n      }, \"Whether to display loading indicator.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 41\n        }\n      }, \"loadingIcon\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 41\n        }\n      }, \"pi pi-spin\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 41\n        }\n      }, \"Icon to display when tree is loading.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 41\n        }\n      }, \"dragdropScope\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 41\n        }\n      }, \"Unique key to enable dragdrop functionality.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 41\n        }\n      }, \"ariaLabel\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 41\n        }\n      }, \"Used to define a string that labels the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 41\n        }\n      }, \"ariaLabelledBy\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 41\n        }\n      }, \"Contains the element IDs of labels.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 41\n        }\n      }, \"nodeTemplate\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 41\n        }\n      }, \"function\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 41\n        }\n      }, \"Function that gets a TreeNode instance and returns the content for it.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 41\n        }\n      }, \"filter\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 41\n        }\n      }, \"When specified, displays an input field to filter the items.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 41\n        }\n      }, \"filterBy\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 41\n        }\n      }, \"label\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 41\n        }\n      }, \"When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 41\n        }\n      }, \"filterMode\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 41\n        }\n      }, \"lenient\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 41\n        }\n      }, \"Mode for filtering valid values are \\\"lenient\\\" and \\\"strict\\\". Default is lenient.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 41\n        }\n      }, \"filterPlaceholder\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 41\n        }\n      }, \"Placeholder text to show when filter input is empty.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 41\n        }\n      }, \"filterLocale\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 41\n        }\n      }, \"undefined\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 41\n        }\n      }, \"Locale to use in filtering. The default locale is the host environment's current locale.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 41\n        }\n      }, \"disabled\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 41\n        }\n      }, \"When present, it specifies that the component should be disabled.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 25\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 41\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 41\n        }\n      }, \"onSelect\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 80\n        }\n      }), \"event.node: Selected node instance.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is selected.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 41\n        }\n      }, \"onUnselect\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 80\n        }\n      }), \"event.node: Unselected node instance.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is unselected.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 41\n        }\n      }, \"onExpand\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 80\n        }\n      }), \"event.node: Expanded node instance.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is expanded.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 41\n        }\n      }, \"onCollapse\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 80\n        }\n      }), \"event.node: Collapsed node instance.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is collapsed.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 41\n        }\n      }, \"onSelectionChange\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 80\n        }\n      }), \"event.value: Selected node key(s).\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when selection changes.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 41\n        }\n      }, \"onContextMenuSelectionChange\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 80\n        }\n      }), \"event.value: Selected node key.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when selection changes with a context menu.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 41\n        }\n      }, \"onToggle\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 80\n        }\n      }), \"event.node: Toggled node instance.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is toggled.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 41\n        }\n      }, \"onDragDrop\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 80\n        }\n      }), \"event.value: New value after the dragdrop.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is selected.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 41\n        }\n      }, \"onContextMenu\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 80\n        }\n      }), \"event.node: Selected node instance.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is selected with a context menu.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 25\n        }\n      }, \"Following is the list of structural style classes\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 41\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 41\n        }\n      }, \"p-tree\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 41\n        }\n      }, \"Main container element\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 41\n        }\n      }, \"p-tree-horizontal\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 41\n        }\n      }, \"Main container element in horizontal mode\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 41\n        }\n      }, \"p-tree-container\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 41\n        }\n      }, \"Container of nodes\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 41\n        }\n      }, \"p-treenode\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 41\n        }\n      }, \"A treenode element\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 41\n        }\n      }, \"p-treenode-content\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 41\n        }\n      }, \"Content of a treenode\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 41\n        }\n      }, \"p-treenode-toggler\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 41\n        }\n      }, \"Toggle element\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 41\n        }\n      }, \"p-treenode-toggler-icon\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 41\n        }\n      }, \"Toggle icon\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 41\n        }\n      }, \"p-treenode-icon\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 41\n        }\n      }, \"Icon of a treenode\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 41\n        }\n      }, \"p-treenode-label\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 41\n        }\n      }, \"Label of a treenode\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 41\n        }\n      }, \"p-treenode-children\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 41\n        }\n      }, \"Container element for node children\")))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 29\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 29\n        }\n      }, \"None.\"))), useLiveEditorTabs({\n        name: 'TreeDemo',\n        sources: this.sources,\n        service: 'NodeService',\n        data: 'treenodes'\n      })));\n    }\n  }]);\n\n  return TreeDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/tree/TreeDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","TreeDoc","props","sources","tabName","content","name","service","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kCAAlC;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AAEA,WAAaC,OAAb;AAAA;;AAAA;;AAEI,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,OAAL,GAAe;AACX,eAAS;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OADE;AAwEX,eAAS;AACLD,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OAxEE;AAmIX,YAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,OAAO;AAFL;AAnIK,KAAf;AAHe;AAkMlB;;AApML;AAAA;AAAA,WAsMI,iCAAwB;AACpB,aAAO,KAAP;AACH;AAxML;AAAA;AAAA,WA0MI,kBAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFoB,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA/D,MATJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXJ,eAYI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJJ,CAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJJ,CAbJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAJJ,CAnBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAJJ,CAzBJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJJ,CA/BJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,CArCJ,eA2CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAJJ,CA3CJ,eAiDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAJJ,CAjDJ,eAuDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAJJ,CAvDJ,eA6DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAJJ,CA7DJ,CATJ,CADJ,CAZJ,eA6FpB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCA7FoB,eAmGpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,shFAnGoB,eA4JI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCA5JJ,eA6JI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJAAgI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAhI,wDAAwL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAxL,uCACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADxB,4MA7JJ,eAiKpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0nCAjKoB,eA2MI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA3MJ,eA4MI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAvE,qBAA6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA7F,wBAAsH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAtH,0SACgM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADhM,kFA5MJ,eA+MpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,o7CA/MoB,eAqPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArPJ,eAsPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAzC,mEAAwG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxG,sOAC4F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAD5F,0EAtPJ,eAwPpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2zCAxPoB,eA2SI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3SJ,eA4SI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,8HAA0H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA1H,0HA5SJ,eA8SpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,43DA9SoB,eAoWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApWJ,eAqWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAzD,gFAA0I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1I,gIArWJ,eAuWpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,giBAvWoB,eA+XI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA/XJ,eAgYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAvC,2MACqH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADrH,eAhYJ,eAmYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAf,yDAAsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAtE,yKACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,iFAnYJ,eAsYpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qKAtYoB,eAgZI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhZJ,eAiZI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAA8F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA9F,wBAAiI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAjI,iJACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADxD,sIAjZJ,eAoZpB,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wvDApZoB,eA6cI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7cJ,eA8cI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJJ,CAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAJJ,CAbJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAJJ,CAnBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAJJ,CAzBJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAJJ,CA/BJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAJJ,CArCJ,eA2CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJJ,CA3CJ,eAiDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJJ,CAjDJ,eAuDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAJJ,CAvDJ,eA6DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6QAJJ,CA7DJ,eAoEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAJJ,CApEJ,eA0EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAJJ,CA1EJ,eAgFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAJJ,CAhFJ,eAsFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAJJ,CAtFJ,eA4FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAJJ,CA5FJ,eAkGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAJJ,CAlGJ,eAwGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAJJ,CAxGJ,eA8GI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAJJ,CA9GJ,eAoHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAJJ,CApHJ,eA0HI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAJJ,CA1HJ,eAgII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAJJ,CAhIJ,eAsII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAJJ,CAtIJ,eA4II;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAJJ,CA5IJ,eAkJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAJJ,CAlJJ,CATJ,CADJ,CA9cJ,eAonBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApnBJ,eAqnBI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,wCAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAJJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,0CAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAJJ,CAPJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,wCAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAJJ,CAbJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,yCAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAJJ,CAnBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,uCAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAJJ,CAzBJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,oCAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAJJ,CA/BJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,uCAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAJJ,CArCJ,eA2CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,+CAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAJJ,CA3CJ,eAiDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,wCAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAJJ,CAjDJ,CARJ,CADJ,CArnBJ,eAyrBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzrBJ,eA0rBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DA1rBJ,eA2rBI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFJ,CALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CATJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CAbJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,CAjBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CArBJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CAzBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,CA7BJ,eAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,CAjCJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFJ,CArCJ,CAPJ,CADJ,eAoDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApDJ,eAqDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArDJ,CA3rBJ,CADJ,EAuvBQL,iBAAiB,CAAC;AAAEM,QAAAA,IAAI,EAAE,UAAR;AAAoBH,QAAAA,OAAO,EAAE,KAAKA,OAAlC;AAA2CI,QAAAA,OAAO,EAAE,aAApD;AAAmEC,QAAAA,IAAI,EAAE;AAAzE,OAAD,CAvvBzB,CADJ,CADJ;AA8vBH;AAz8BL;;AAAA;AAAA,EAA6BZ,SAA7B","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class TreeDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Tree } from 'primereact/tree';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport class TreeDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: null,\r\n            expandedKeys: {}\r\n        };\r\n\r\n        this.nodeService = new NodeService();\r\n        this.expandAll = this.expandAll.bind(this);\r\n        this.collapseAll = this.collapseAll.bind(this);\r\n        this.expandNode = this.expandNode.bind(this);\r\n    }\r\n\r\n    expandAll() {\r\n        let expandedKeys = {};\r\n        for (let node of this.state.nodes) {\r\n            this.expandNode(node, expandedKeys);\r\n        }\r\n\r\n        this.setState({ expandedKeys });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.setState({ expandedKeys: {} });\r\n    }\r\n\r\n    expandNode(node, expandedKeys) {\r\n        if (node.children && node.children.length) {\r\n            expandedKeys[node.key] = true;\r\n\r\n            for (let child of node.children) {\r\n                this.expandNode(child, expandedKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeService.getTreeNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <Tree value={this.state.nodes} />\r\n\r\n                    <h5>Programmatic Control</h5>\r\n                    <div className=\"p-mb-4\">\r\n                        <Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" onClick={this.expandAll} className=\"p-mr-2\" />\r\n                        <Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" onClick={this.collapseAll} />\r\n                    </div>\r\n                    <Tree value={this.state.nodes} expandedKeys={this.state.expandedKeys}\r\n                        onToggle={e => this.setState({ expandedKeys: e.value })} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Tree } from 'primereact/tree';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeDemo = () => {\r\n    const [nodes, setNodes] = useState(null);\r\n    const [expandedKeys, setExpandedKeys] = useState({});\r\n    const nodeService = new NodeService();\r\n\r\n    const expandAll = () => {\r\n        let _expandedKeys = {};\r\n        for (let node of nodes) {\r\n            expandNode(node, _expandedKeys);\r\n        }\r\n\r\n        setExpandedKeys(_expandedKeys);\r\n    }\r\n\r\n    const collapseAll = () => {\r\n        setExpandedKeys({});\r\n    }\r\n\r\n    const expandNode = (node, _expandedKeys) => {\r\n        if (node.children && node.children.length) {\r\n            _expandedKeys[node.key] = true;\r\n\r\n            for (let child of node.children) {\r\n                expandNode(child, _expandedKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        nodeService.getTreeNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Tree value={nodes} />\r\n\r\n                <h5>Programmatic Control</h5>\r\n                <div className=\"p-mb-4\">\r\n                    <Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" onClick={expandAll} className=\"p-mr-2\" />\r\n                    <Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" onClick={collapseAll} />\r\n                </div>\r\n                <Tree value={nodes} expandedKeys={expandedKeys}\r\n                    onToggle={e => setExpandedKeys(e.value)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Tree } from 'primereact/tree';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeDemo = () => {\r\n    const [nodes, setNodes] = useState(null);\r\n    const [expandedKeys, setExpandedKeys] = useState({});\r\n    const nodeService = new NodeService();\r\n\r\n    const expandAll = () => {\r\n        let _expandedKeys = {};\r\n        for (let node of nodes) {\r\n            expandNode(node, _expandedKeys);\r\n        }\r\n\r\n        setExpandedKeys(_expandedKeys);\r\n    }\r\n\r\n    const collapseAll = () => {\r\n        setExpandedKeys({});\r\n    }\r\n\r\n    const expandNode = (node, _expandedKeys) => {\r\n        if (node.children && node.children.length) {\r\n            _expandedKeys[node.key] = true;\r\n\r\n            for (let child of node.children) {\r\n                expandNode(child, _expandedKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        nodeService.getTreeNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Tree value={nodes} />\r\n\r\n                <h5>Programmatic Control</h5>\r\n                <div className=\"p-mb-4\">\r\n                    <Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" onClick={expandAll} className=\"p-mr-2\" />\r\n                    <Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" onClick={collapseAll} />\r\n                </div>\r\n                <Tree value={nodes} expandedKeys={expandedKeys}\r\n                    onToggle={e => setExpandedKeys(e.value)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Tree } from 'primereact/tree';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Tree component requires an array of TreeNode objects as its <i>value</i>.</p>\r\n\r\n                        <h5>TreeNode API</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>key</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique key of the node.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>label</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Label of the node.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>data</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Data represented by the node.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>icon</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Icon of the node to display next to content.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>children</td>\r\n                                        <td>TreeNode[]</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of treenodes as children.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the node.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the node.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>draggable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether the node is draggable when dragdrop is enabled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>droppable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether the node is droppable when dragdrop is enabled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>selectable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>null</td>\r\n                                        <td>Whether the node is selectable when selection mode is enabled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>leaf</td>\r\n                                        <td>boolean</td>\r\n                                        <td>null</td>\r\n                                        <td>Specifies if the node has children. Used in lazy loading.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Tree value={data} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst data: [\r\n    {\r\n        \"key\": \"0\",\r\n        \"label\": \"Documents\",\r\n        \"data\": \"Documents Folder\",\r\n        \"icon\": \"pi pi-fw pi-inbox\",\r\n        \"children\": [{\r\n            \"key\": \"0-0\",\r\n            \"label\": \"Work\",\r\n            \"data\": \"Work Folder\",\r\n            \"icon\": \"pi pi-fw pi-cog\",\r\n            \"children\": [{ \"key\": \"0-0-0\", \"label\": \"Expenses.doc\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Expenses Document\" }, { \"key\": \"0-0-1\", \"label\": \"Resume.doc\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Resume Document\" }]\r\n        },\r\n        {\r\n            \"key\": \"0-1\",\r\n            \"label\": \"Home\",\r\n            \"data\": \"Home Folder\",\r\n            \"icon\": \"pi pi-fw pi-home\",\r\n            \"children\": [{ \"key\": \"0-1-0\", \"label\": \"Invoices.txt\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Invoices for this month\" }]\r\n        }]\r\n    },\r\n    {\r\n        \"key\": \"1\",\r\n        \"label\": \"Events\",\r\n        \"data\": \"Events Folder\",\r\n        \"icon\": \"pi pi-fw pi-calendar\",\r\n        \"children\": [\r\n            { \"key\": \"1-0\", \"label\": \"Meeting\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Meeting\" },\r\n            { \"key\": \"1-1\", \"label\": \"Product Launch\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Product Launch\" },\r\n            { \"key\": \"1-2\", \"label\": \"Report Review\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Report Review\" }]\r\n    },\r\n    {\r\n        \"key\": \"2\",\r\n        \"label\": \"Movies\",\r\n        \"data\": \"Movies Folder\",\r\n        \"icon\": \"pi pi-fw pi-star\",\r\n        \"children\": [{\r\n            \"key\": \"2-0\",\r\n            \"icon\": \"pi pi-fw pi-star\",\r\n            \"label\": \"Al Pacino\",\r\n            \"data\": \"Pacino Movies\",\r\n            \"children\": [{ \"key\": \"2-0-0\", \"label\": \"Scarface\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Scarface Movie\" }, { \"key\": \"2-0-1\", \"label\": \"Serpico\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Serpico Movie\" }]\r\n        },\r\n        {\r\n            \"key\": \"2-1\",\r\n            \"label\": \"Robert De Niro\",\r\n            \"icon\": \"pi pi-fw pi-star\",\r\n            \"data\": \"De Niro Movies\",\r\n            \"children\": [{ \"key\": \"2-1-0\", \"label\": \"Goodfellas\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Goodfellas Movie\" }, { \"key\": \"2-1-1\", \"label\": \"Untouchables\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Untouchables Movie\" }]\r\n        }]\r\n    }\r\n]\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Controlled vs Uncontrolled</h5>\r\n                        <p>Tree expansion state is managed in two ways, in uncontrolled mode only initial expanded state of a node can be defined using <i>expandedKeys</i> property whereas in controlled mode <i>expandedKeys</i>\r\n                            property along with <i>onToggle</i> properties are used for full control over the state. If you need to expand or collapse the state of nodes programmatically then controlled mode should be used. Example below demonstrates\r\n                            both cases;</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, { Component } from 'react';\r\nimport { Tree } from 'primereact/tree';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport const TreeDemo = () => {\r\n\r\n    const [nodes, setNodes] = useState(null);\r\n    const [expandedKeys, setExpandedKeys] = useState({});\r\n\r\n    useEffect(() => {\r\n        nodeService = new NodeService();\r\n        nodeService.getTreeNodes().then(data => setNodes(data));\r\n    }, [])\r\n\r\n    const toggleMovies = () => {\r\n        let expandedKeys = {...expandedKeys};\r\n        if (expandedKeys['2'])\r\n            delete expandedKeys['2'];\r\n        else\r\n            expandedKeys['2'] = true;\r\n\r\n        setExpandedKeys(expandedKeys);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"first\">Uncontrolled</h5>\r\n            <Tree value={nodes} />\r\n\r\n            <h5>Controlled</h5>\r\n            <Button onClick={toggleMovies} label=\"Toggle Movies\" />\r\n            <Tree value={nodes} expandedKeys={expandedKeys}\r\n                onToggle={e => setExpandedKeys(e.value)} style={{marginTop: '.5em'}} />\r\n        </div>\r\n    )\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Selection</h5>\r\n                        <p>Tree supports single, multiple and checkbox selection modes. Define <i>selectionMode</i>, <i>selectionKeys</i> and <i>onSelectionChange</i> properties to control the selection. In single mode, selectionKeys should\r\n            be a single value whereas in multiple or checkbox modes an array is required. By default in multiple selection mode, metaKey is necessary to add to existing selections however this can be configured with <i>metaKeySelection</i> property. Note that\r\n            in touch enabled devices, Tree does not require metaKey.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, {Component} from 'react';\r\nimport {Tree} from 'primereact/tree';\r\nimport {NodeService} from '../service/NodeService';\r\n\r\nexport const TreeSelectionDemo = () => {\r\n\r\n    const [nodes, setNodes] = useState(null);\r\n    const [selectedNodeKey] = useState(null);\r\n    const [selectedNodeKeys1] = useState(null);\r\n    const [selectedNodeKeys2] = useState(null);\r\n    const [selectedNodeKeys3] = useState(null);\r\n\r\n    useEffect(() => {\r\n        nodeService = new NodeService();\r\n        nodeService.getTreeNodes().then(data => setNodes(data));\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h5>Single Selection</h5>\r\n            <Tree value={nodes} selectionMode=\"single\" selectionKeys={selectedNodeKey} onSelectionChange={e => setSelectedNodeKey(e.value)} />\r\n\r\n            <h5>Multiple Selection with MetaKey</h5>\r\n            <Tree value={nodes} selectionMode=\"multiple\" selectionKeys={selectedNodeKeys1} onSelectionChange={e => setSelectedNodeKeys1(e.value)} />\r\n\r\n            <h5>Multiple Selection without MetaKey</h5>\r\n            <Tree value={nodes} selectionMode=\"multiple\" metaKeySelection={false} selectionKeys={selectedNodeKeys2} onSelectionChange={e => setSelectedNodeKeys2(e.value)} />\r\n\r\n            <h5>Checkbox Selection</h5>\r\n            <Tree value={nodes} selectionMode=\"checkbox\" selectionKeys={selectedNodeKeys3} onSelectionChange={e => setSelectedNodeKeys3(e.value)} />\r\n        </div>\r\n    )\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Lazy</h5>\r\n                        <p>Lazy loading is implemented using the <i>onExpand</i> event by adding children to the expanded node. <i>leaf</i> property should be enabled to indicate the node has children but not yet loaded. Here is a in-memory demo\r\n            that loads generated nodes on expand event to imitate a remote call with a timeout. Notice the usage of <i>loading</i> property as well to give users a feedback about the loading process.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, {Component} from 'react';\r\nimport {Tree} from 'primereact/tree';\r\nimport {NodeService} from '../service/NodeService';\r\n\r\nexport const TreeLazyDemo = () => {\r\n\r\n    const [nodes, setNodes] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        nodeService = new NodeService();\r\n        setTimeout(() => {\r\n            nodeService.getTreeNodes().then(data => {\r\n                setNodes(data);\r\n                setLoading(false);\r\n            });\r\n        }, 2000);\r\n    }, [])\r\n\r\n    const loadOnExpand = (event) => {\r\n        if (!event.node.children) {\r\n            setLoading(true)\r\n\r\n            setTimeout(() => {\r\n                let node = {...event.node};\r\n                node.children = [];\r\n\r\n                for (let i = 0; i < 3; i++) {\r\n                    node.children.push({\r\n                        key: node.key + '-' + i,\r\n                        label: 'Lazy ' + node.label + '-' + i\r\n                    });\r\n                }\r\n\r\n                let value = [...nodes];\r\n                value[parseInt(event.node.key, 10)] = node;\r\n                setNodes(value);\r\n                setLoading(false);\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Tree value={nodes} onExpand={loadOnExpand} loading={loading} />\r\n    )\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Templating</h5>\r\n                        <p><i>label</i> property of a node is used to display as the content by default. Templating is supported as well with the <i>nodeTemplate</i> callback that gets the node instance and returns JSX. Example\r\n            below is a sample tree based navigation of React docs.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, { Component } from 'react';\r\nimport { Tree } from 'primereact/tree';\r\n\r\nexport const TreeTemplatingDemo = () => {\r\n\r\n    const [nodes, setNodes] = useState(createNavigation());\r\n\r\n    const createNavigation = () => {\r\n        return [\r\n            {\r\n                label: 'Insallation',\r\n                children: [\r\n                    {label: 'Getting Started', url:'https://reactjs.org/docs/getting-started.html'},\r\n                    {label: 'Add React', url: 'https://reactjs.org/docs/add-react-to-a-website.html'},\r\n                    {label: 'Create an App', url:'https://reactjs.org/docs/create-a-new-react-app.html'},\r\n                    {label: 'CDN Links', url: 'https://reactjs.org/docs/cdn-links.html'}\r\n                ]\r\n            },\r\n            {\r\n                label: 'Main Concepts',\r\n                children: [\r\n                    {label: 'Hello World', url: 'https://reactjs.org/docs/hello-world.html'},\r\n                    {label: 'Introducing JSX', url: 'https://reactjs.org/docs/introducing-jsx.html'},\r\n                    {label: 'Rendering Elements', url: 'https://reactjs.org/docs/rendering-elements.html'},\r\n                    {label: 'Components and Props', url: 'https://reactjs.org/docs/components-and-props.html'},\r\n                    {label: 'State and LifeCycle', url: 'https://reactjs.org/docs/state-and-lifecycle.html'},\r\n                    {label: 'Handling Events', url: 'https://reactjs.org/docs/handling-events.html'}\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n\r\n    const nodeTemplate = (node) => {\r\n        if (node.url) {\r\n            return (\r\n                <a href={node.url}>{node.label}</a>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <b>{node.label}</b>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Tree value={nodes} nodeTemplate={nodeTemplate} />\r\n    )\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>DragDrop</h5>\r\n                        <p>Tree nodes can be reordered using dragdrop by setting <i>dragdropScope</i> property to a unique variable and updating the new value at <i>onDragDrop</i> callback. The value of the dragdropScope must be unique to provide\r\n            intervention from other draggable elements on the page.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, {Component} from 'react';\r\nimport {Tree} from 'primereact/tree';\r\nimport {NodeService} from '../service/NodeService';\r\n\r\nexport const TreeDragDropDemo = () => {\r\n\r\n    const [nodes, setNodes] = useState(null);\r\n\r\n    useEffect(() => {\r\n        nodeService = new NodeService();\r\n        nodeService.getTreeNodes().then(data => setNodes(data));\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Tree value={nodes} dragdropScope=\"demo\" onDragDrop={event => setNodes(event.value)} />\r\n        </div>\r\n    )\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Filtering</h5>\r\n                        <p>Filtering is enabled by setting the <i>filter</i> property to true, by default label property of a node\r\n            is used to compare against the value in the text field, in order to customize which field(s) should be used during search define <i>filterBy</i> property.</p>\r\n\r\n                        <p>In addition <i>filterMode</i> specifies the filtering strategy. In <b>lenient</b> mode when the query matches a node, children of the node are not searched further as all descendants of the node are included. On the other hand,\r\n                 in <b>strict</b> mode when the query matches a node, filtering continues on all descendants.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\n<Tree value={nodes} filter />\r\n\r\n<Tree value={nodes} filter filterBy=\"data.name,data.age\" />\r\n\r\n<Tree value={nodes} filter filterMode=\"strict\" />\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>ContextMenu</h5>\r\n                        <p>One or more ContextMenu instances can be attached to nodes. Similar to selection, separate <i>contextMenuSelectionKey</i> and <i>onContextMenuSelectionChange</i> properties are necesary to manage the selected node with\r\n            right click. In addition, a context menu can either be displayed at <i>onContextMenu</i> event. Since this event also passes the node instance, you may choose to display a different context menu for a particular node.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, { Component } from 'react';\r\nimport {Tree} from 'primereact/tree'\r\nimport {ContextMenu} from 'primereact/contextmenu';\r\nimport {Toast} from 'primereact/toast';\r\nimport {NodeService} from '../service/NodeService';\r\n\r\nexport const TreeContextMenuDemo = () => {\r\n\r\n    const [nodes, setNodes] = useState(null);\r\n    const [expandedKeys, setExpandedKeys] = useState({});\r\n    const [selectedNodeKey, setSelectedNodeKey] = useState(null);\r\n    const toast = useRef(null);\r\n    const cm = useRef(null);\r\n    const menu = [\r\n        {\r\n            label: 'View Key',\r\n            icon: 'pi pi-search',\r\n            command: () => {\r\n                toast.current.show({severity: 'success', summary: 'Node Key', detail: selectedNodeKey});\r\n            }\r\n        },\r\n        {\r\n            label: 'Toggle',\r\n            icon: 'pi pi-cog',\r\n            command: () => {\r\n                let expandedKeys = {...expandedKeys};\r\n                if (expandedKeys[selectedNodeKey])\r\n                    delete expandedKeys[selectedNodeKey];\r\n                else\r\n                    expandedKeys[selectedNodeKey] = true;\r\n                setExpandedKeys(expandedKeys);\r\n            }\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        nodeService = new NodeService();\r\n        nodeService.getTreeNodes().then(data => setNodes(data));\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n\r\n            <ContextMenu model={menu} ref={cm} />\r\n\r\n            <Tree value={nodes} expandedKeys={expandedKeys} onToggle={e => setExpandedkeys(e.value)}\r\n                onContextMenuSelectionChange={event => setSelectedNodeKey(event.value)}\r\n                onContextMenu={event => cm.current.show(event.originalEvent)} />\r\n        </div>\r\n    )\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>value</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of treenodes.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>selectionMode</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Defines the selection mode, valid values \"single\", \"multiple\", and \"checkbox\".</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>selectionKeys</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>A single or an array of keys to control the selection state.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>contextMenuSelectionKey</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>A single key to control the selection with the context menu.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>expandedKeys</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of keys to represent the state of the tree expansion state in controlled mode.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>contentStyle</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the tree content.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>contentClassName</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the tree content.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>metaKeySelection</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item\r\n                                can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>propagateSelectionUp</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether checkbox selections propagate to ancestor nodes.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>propagateSelectionDown</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether checkbox selections propagate to descendant nodes.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>loading</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Whether to display loading indicator.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>loadingIcon</td>\r\n                                        <td>string</td>\r\n                                        <td>pi pi-spin</td>\r\n                                        <td>Icon to display when tree is loading.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>dragdropScope</td>\r\n                                        <td>string</td>\r\n                                        <td>false</td>\r\n                                        <td>Unique key to enable dragdrop functionality.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>ariaLabel</td>\r\n                                        <td>string</td>\r\n                                        <td>false</td>\r\n                                        <td>Used to define a string that labels the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>ariaLabelledBy</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Contains the element IDs of labels.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>nodeTemplate</td>\r\n                                        <td>function</td>\r\n                                        <td>false</td>\r\n                                        <td>Function that gets a TreeNode instance and returns the content for it.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filter</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When specified, displays an input field to filter the items.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterBy</td>\r\n                                        <td>string</td>\r\n                                        <td>label</td>\r\n                                        <td>When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterMode</td>\r\n                                        <td>string</td>\r\n                                        <td>lenient</td>\r\n                                        <td>Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterPlaceholder</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Placeholder text to show when filter input is empty.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>filterLocale</td>\r\n                                        <td>string</td>\r\n                                        <td>undefined</td>\r\n                                        <td>Locale to use in filtering. The default locale is the host environment's current locale.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>disabled</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the component should be disabled.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onSelect</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.node: Selected node instance.</td>\r\n                                        <td>Callback to invoke when a node is selected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onUnselect</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.node: Unselected node instance.</td>\r\n                                        <td>Callback to invoke when a node is unselected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onExpand</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.node: Expanded node instance.</td>\r\n                                        <td>Callback to invoke when a node is expanded.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onCollapse</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.node: Collapsed node instance.</td>\r\n                                        <td>Callback to invoke when a node is collapsed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onSelectionChange</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.value: Selected node key(s).</td>\r\n                                        <td>Callback to invoke when selection changes.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onContextMenuSelectionChange</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.value: Selected node key.</td>\r\n                                        <td>Callback to invoke when selection changes with a context menu.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onToggle</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.node: Toggled node instance.</td>\r\n                                        <td>Callback to invoke when a node is toggled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onDragDrop</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.value: New value after the dragdrop.</td>\r\n                                        <td>Callback to invoke when a node is selected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onContextMenu</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.node: Selected node instance.</td>\r\n                                        <td>Callback to invoke when a node is selected with a context menu.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-tree</td>\r\n                                        <td>Main container element</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-tree-horizontal</td>\r\n                                        <td>Main container element in horizontal mode</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-tree-container</td>\r\n                                        <td>Container of nodes</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-treenode</td>\r\n                                        <td>A treenode element</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-treenode-content</td>\r\n                                        <td>Content of a treenode</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-treenode-toggler</td>\r\n                                        <td>Toggle element</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-treenode-toggler-icon</td>\r\n                                        <td>Toggle icon</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-treenode-icon</td>\r\n                                        <td>Icon of a treenode</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-treenode-label</td>\r\n                                        <td>Label of a treenode</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-treenode-children</td>\r\n                                        <td>Container element for node children</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <h5>Dependencies</h5>\r\n                            <p>None.</p>\r\n                        </div>\r\n\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeDemo', sources: this.sources, service: 'NodeService', data: 'treenodes' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}