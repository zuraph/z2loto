{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classNames from'classnames';import{DataTable}from'../../components/datatable/DataTable';import{Column}from'../../components/column/Column';import ProductService from'../service/ProductService';import{TabView}from'../../components/tabview/TabView';import{Toast}from'../../components/toast/Toast';import{Button}from'../../components/button/Button';import{FileUpload}from'../../components/fileupload/FileUpload';import{Rating}from'../../components/rating/Rating';import{Toolbar}from'../../components/toolbar/Toolbar';import{InputTextarea}from'../../components/inputtextarea/InputTextarea';import{RadioButton}from'../../components/radiobutton/RadioButton';import{InputNumber}from'../../components/inputnumber/InputNumber';import{Dialog}from'../../components/dialog/Dialog';import{InputText}from'../../components/inputtext/InputText';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import'./DataTableDemo.scss';export var DataTableCrudDemo=/*#__PURE__*/function(_Component){_inherits(DataTableCrudDemo,_Component);var _super=_createSuper(DataTableCrudDemo);function DataTableCrudDemo(props){var _this;_classCallCheck(this,DataTableCrudDemo);_this=_super.call(this,props);_this.emptyProduct={id:null,name:'',image:null,description:'',category:null,price:0,quantity:0,rating:0,inventoryStatus:'INSTOCK'};_this.state={products:null,productDialog:false,deleteProductDialog:false,deleteProductsDialog:false,product:_this.emptyProduct,selectedProducts:null,submitted:false,globalFilter:null};_this.productService=new ProductService();_this.leftToolbarTemplate=_this.leftToolbarTemplate.bind(_assertThisInitialized(_this));_this.rightToolbarTemplate=_this.rightToolbarTemplate.bind(_assertThisInitialized(_this));_this.imageBodyTemplate=_this.imageBodyTemplate.bind(_assertThisInitialized(_this));_this.priceBodyTemplate=_this.priceBodyTemplate.bind(_assertThisInitialized(_this));_this.ratingBodyTemplate=_this.ratingBodyTemplate.bind(_assertThisInitialized(_this));_this.statusBodyTemplate=_this.statusBodyTemplate.bind(_assertThisInitialized(_this));_this.actionBodyTemplate=_this.actionBodyTemplate.bind(_assertThisInitialized(_this));_this.openNew=_this.openNew.bind(_assertThisInitialized(_this));_this.hideDialog=_this.hideDialog.bind(_assertThisInitialized(_this));_this.saveProduct=_this.saveProduct.bind(_assertThisInitialized(_this));_this.editProduct=_this.editProduct.bind(_assertThisInitialized(_this));_this.confirmDeleteProduct=_this.confirmDeleteProduct.bind(_assertThisInitialized(_this));_this.deleteProduct=_this.deleteProduct.bind(_assertThisInitialized(_this));_this.exportCSV=_this.exportCSV.bind(_assertThisInitialized(_this));_this.confirmDeleteSelected=_this.confirmDeleteSelected.bind(_assertThisInitialized(_this));_this.deleteSelectedProducts=_this.deleteSelectedProducts.bind(_assertThisInitialized(_this));_this.onCategoryChange=_this.onCategoryChange.bind(_assertThisInitialized(_this));_this.onInputChange=_this.onInputChange.bind(_assertThisInitialized(_this));_this.onInputNumberChange=_this.onInputNumberChange.bind(_assertThisInitialized(_this));_this.hideDeleteProductDialog=_this.hideDeleteProductDialog.bind(_assertThisInitialized(_this));_this.hideDeleteProductsDialog=_this.hideDeleteProductsDialog.bind(_assertThisInitialized(_this));return _this;}_createClass(DataTableCrudDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.productService.getProducts().then(function(data){return _this2.setState({products:data});});}},{key:\"formatCurrency\",value:function formatCurrency(value){return value.toLocaleString('en-US',{style:'currency',currency:'USD'});}},{key:\"openNew\",value:function openNew(){this.setState({product:this.emptyProduct,submitted:false,productDialog:true});}},{key:\"hideDialog\",value:function hideDialog(){this.setState({submitted:false,productDialog:false});}},{key:\"hideDeleteProductDialog\",value:function hideDeleteProductDialog(){this.setState({deleteProductDialog:false});}},{key:\"hideDeleteProductsDialog\",value:function hideDeleteProductsDialog(){this.setState({deleteProductsDialog:false});}},{key:\"saveProduct\",value:function saveProduct(){var state={submitted:true};if(this.state.product.name.trim()){var products=_toConsumableArray(this.state.products);var product=_objectSpread({},this.state.product);if(this.state.product.id){var index=this.findIndexById(this.state.product.id);products[index]=product;this.toast.show({severity:'success',summary:'Successful',detail:'Product Updated',life:3000});}else{product.id=this.createId();product.image='product-placeholder.svg';products.push(product);this.toast.show({severity:'success',summary:'Successful',detail:'Product Created',life:3000});}state=_objectSpread(_objectSpread({},state),{},{products:products,productDialog:false,product:this.emptyProduct});}this.setState(state);}},{key:\"editProduct\",value:function editProduct(product){this.setState({product:_objectSpread({},product),productDialog:true});}},{key:\"confirmDeleteProduct\",value:function confirmDeleteProduct(product){this.setState({product:product,deleteProductDialog:true});}},{key:\"deleteProduct\",value:function deleteProduct(){var _this3=this;var products=this.state.products.filter(function(val){return val.id!==_this3.state.product.id;});this.setState({products:products,deleteProductDialog:false,product:this.emptyProduct});this.toast.show({severity:'success',summary:'Successful',detail:'Product Deleted',life:3000});}},{key:\"findIndexById\",value:function findIndexById(id){var index=-1;for(var i=0;i<this.state.products.length;i++){if(this.state.products[i].id===id){index=i;break;}}return index;}},{key:\"createId\",value:function createId(){var id='';var chars='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';for(var i=0;i<5;i++){id+=chars.charAt(Math.floor(Math.random()*chars.length));}return id;}},{key:\"exportCSV\",value:function exportCSV(){this.dt.exportCSV();}},{key:\"confirmDeleteSelected\",value:function confirmDeleteSelected(){this.setState({deleteProductsDialog:true});}},{key:\"deleteSelectedProducts\",value:function deleteSelectedProducts(){var _this4=this;var products=this.state.products.filter(function(val){return!_this4.state.selectedProducts.includes(val);});this.setState({products:products,deleteProductsDialog:false,selectedProducts:null});this.toast.show({severity:'success',summary:'Successful',detail:'Products Deleted',life:3000});}},{key:\"onCategoryChange\",value:function onCategoryChange(e){var product=_objectSpread({},this.state.product);product['category']=e.value;this.setState({product:product});}},{key:\"onInputChange\",value:function onInputChange(e,name){var val=e.target&&e.target.value||'';var product=_objectSpread({},this.state.product);product[\"\".concat(name)]=val;this.setState({product:product});}},{key:\"onInputNumberChange\",value:function onInputNumberChange(e,name){var val=e.value||0;var product=_objectSpread({},this.state.product);product[\"\".concat(name)]=val;this.setState({product:product});}},{key:\"leftToolbarTemplate\",value:function leftToolbarTemplate(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{label:\"New\",icon:\"pi pi-plus\",className:\"p-button-success p-mr-2\",onClick:this.openNew}),/*#__PURE__*/React.createElement(Button,{label:\"Delete\",icon:\"pi pi-trash\",className:\"p-button-danger\",onClick:this.confirmDeleteSelected,disabled:!this.state.selectedProducts||!this.state.selectedProducts.length}));}},{key:\"rightToolbarTemplate\",value:function rightToolbarTemplate(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FileUpload,{mode:\"basic\",accept:\"image/*\",maxFileSize:1000000,label:\"Import\",chooseLabel:\"Import\",className:\"p-mr-2 p-d-inline-block\"}),/*#__PURE__*/React.createElement(Button,{label:\"Export\",icon:\"pi pi-upload\",className:\"p-button-help\",onClick:this.exportCSV}));}},{key:\"imageBodyTemplate\",value:function imageBodyTemplate(rowData){return/*#__PURE__*/React.createElement(\"img\",{src:\"showcase/demo/images/product/\".concat(rowData.image),onError:function onError(e){return e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';},alt:rowData.image,className:\"product-image\"});}},{key:\"priceBodyTemplate\",value:function priceBodyTemplate(rowData){return this.formatCurrency(rowData.price);}},{key:\"ratingBodyTemplate\",value:function ratingBodyTemplate(rowData){return/*#__PURE__*/React.createElement(Rating,{value:rowData.rating,readOnly:true,cancel:false});}},{key:\"statusBodyTemplate\",value:function statusBodyTemplate(rowData){return/*#__PURE__*/React.createElement(\"span\",{className:\"product-badge status-\".concat(rowData.inventoryStatus.toLowerCase())},rowData.inventoryStatus);}},{key:\"actionBodyTemplate\",value:function actionBodyTemplate(rowData){var _this5=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{icon:\"pi pi-pencil\",className:\"p-button-rounded p-button-success p-mr-2\",onClick:function onClick(){return _this5.editProduct(rowData);}}),/*#__PURE__*/React.createElement(Button,{icon:\"pi pi-trash\",className:\"p-button-rounded p-button-warning\",onClick:function onClick(){return _this5.confirmDeleteProduct(rowData);}}));}},{key:\"render\",value:function render(){var _this6=this;var header=/*#__PURE__*/React.createElement(\"div\",{className:\"table-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"p-m-0\"},\"Manage Products\"),/*#__PURE__*/React.createElement(\"span\",{className:\"p-input-icon-left\"},/*#__PURE__*/React.createElement(\"i\",{className:\"pi pi-search\"}),/*#__PURE__*/React.createElement(InputText,{type:\"search\",onInput:function onInput(e){return _this6.setState({globalFilter:e.target.value});},placeholder:\"Search...\"})));var productDialogFooter=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{label:\"Cancel\",icon:\"pi pi-times\",className:\"p-button-text\",onClick:this.hideDialog}),/*#__PURE__*/React.createElement(Button,{label:\"Save\",icon:\"pi pi-check\",className:\"p-button-text\",onClick:this.saveProduct}));var deleteProductDialogFooter=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{label:\"No\",icon:\"pi pi-times\",className:\"p-button-text\",onClick:this.hideDeleteProductDialog}),/*#__PURE__*/React.createElement(Button,{label:\"Yes\",icon:\"pi pi-check\",className:\"p-button-text\",onClick:this.deleteProduct}));var deleteProductsDialogFooter=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{label:\"No\",icon:\"pi pi-times\",className:\"p-button-text\",onClick:this.hideDeleteProductsDialog}),/*#__PURE__*/React.createElement(Button,{label:\"Yes\",icon:\"pi pi-check\",className:\"p-button-text\",onClick:this.deleteSelectedProducts}));return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"dataTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DataTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Crud\")),/*#__PURE__*/React.createElement(\"p\",null,\"This samples demonstrates a CRUD implementation using various PrimeReact components.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation datatable-crud-demo\"},/*#__PURE__*/React.createElement(Toast,{ref:function ref(el){return _this6.toast=el;}}),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(Toolbar,{className:\"p-mb-4\",left:this.leftToolbarTemplate,right:this.rightToolbarTemplate}),/*#__PURE__*/React.createElement(DataTable,{ref:function ref(el){return _this6.dt=el;},value:this.state.products,selection:this.state.selectedProducts,onSelectionChange:function onSelectionChange(e){return _this6.setState({selectedProducts:e.value});},dataKey:\"id\",paginator:true,rows:10,rowsPerPageOptions:[5,10,25],paginatorTemplate:\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",currentPageReportTemplate:\"Showing {first} to {last} of {totalRecords} products\",globalFilter:this.state.globalFilter,header:header},/*#__PURE__*/React.createElement(Column,{selectionMode:\"multiple\",headerStyle:{width:'3rem'}}),/*#__PURE__*/React.createElement(Column,{field:\"code\",header:\"Code\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",sortable:true}),/*#__PURE__*/React.createElement(Column,{header:\"Image\",body:this.imageBodyTemplate}),/*#__PURE__*/React.createElement(Column,{field:\"price\",header:\"Price\",body:this.priceBodyTemplate,sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"category\",header:\"Category\",sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"rating\",header:\"Reviews\",body:this.ratingBodyTemplate,sortable:true}),/*#__PURE__*/React.createElement(Column,{field:\"inventoryStatus\",header:\"Status\",body:this.statusBodyTemplate,sortable:true}),/*#__PURE__*/React.createElement(Column,{body:this.actionBodyTemplate}))),/*#__PURE__*/React.createElement(Dialog,{visible:this.state.productDialog,style:{width:'450px'},header:\"Product Details\",modal:true,className:\"p-fluid\",footer:productDialogFooter,onHide:this.hideDialog},this.state.product.image&&/*#__PURE__*/React.createElement(\"img\",{src:\"showcase/demo/images/product/\".concat(this.state.product.image),onError:function onError(e){return e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';},alt:this.state.product.image,className:\"product-image\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(InputText,{id:\"name\",value:this.state.product.name,onChange:function onChange(e){return _this6.onInputChange(e,'name');},required:true,autoFocus:true,className:classNames({'p-invalid':this.state.submitted&&!this.state.product.name})}),this.state.submitted&&!this.state.product.name&&/*#__PURE__*/React.createElement(\"small\",{className:\"p-error\"},\"Name is required.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"description\"},\"Description\"),/*#__PURE__*/React.createElement(InputTextarea,{id:\"description\",value:this.state.product.description,onChange:function onChange(e){return _this6.onInputChange(e,'description');},required:true,rows:3,cols:20})),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field\"},/*#__PURE__*/React.createElement(\"label\",{className:\"p-mb-3\"},\"Category\"),/*#__PURE__*/React.createElement(\"div\",{className:\"p-formgrid p-grid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-radiobutton p-col-6\"},/*#__PURE__*/React.createElement(RadioButton,{inputId:\"category1\",name:\"category\",value:\"Accessories\",onChange:this.onCategoryChange,checked:this.state.product.category==='Accessories'}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"category1\"},\"Accessories\")),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-radiobutton p-col-6\"},/*#__PURE__*/React.createElement(RadioButton,{inputId:\"category2\",name:\"category\",value:\"Clothing\",onChange:this.onCategoryChange,checked:this.state.product.category==='Clothing'}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"category2\"},\"Clothing\")),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-radiobutton p-col-6\"},/*#__PURE__*/React.createElement(RadioButton,{inputId:\"category3\",name:\"category\",value:\"Electronics\",onChange:this.onCategoryChange,checked:this.state.product.category==='Electronics'}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"category3\"},\"Electronics\")),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field-radiobutton p-col-6\"},/*#__PURE__*/React.createElement(RadioButton,{inputId:\"category4\",name:\"category\",value:\"Fitness\",onChange:this.onCategoryChange,checked:this.state.product.category==='Fitness'}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"category4\"},\"Fitness\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"p-formgrid p-grid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"p-field p-col\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"price\"},\"Price\"),/*#__PURE__*/React.createElement(InputNumber,{id:\"price\",value:this.state.product.price,onValueChange:function onValueChange(e){return _this6.onInputNumberChange(e,'price');},mode:\"currency\",currency:\"USD\",locale:\"en-US\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"p-field p-col\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"quantity\"},\"Quantity\"),/*#__PURE__*/React.createElement(InputNumber,{id:\"quantity\",value:this.state.product.quantity,onValueChange:function onValueChange(e){return _this6.onInputNumberChange(e,'quantity');},integeronly:true})))),/*#__PURE__*/React.createElement(Dialog,{visible:this.state.deleteProductDialog,style:{width:'450px'},header:\"Confirm\",modal:true,footer:deleteProductDialogFooter,onHide:this.hideDeleteProductDialog},/*#__PURE__*/React.createElement(\"div\",{className:\"confirmation-content\"},/*#__PURE__*/React.createElement(\"i\",{className:\"pi pi-exclamation-triangle p-mr-3\",style:{fontSize:'2rem'}}),this.state.product&&/*#__PURE__*/React.createElement(\"span\",null,\"Are you sure you want to delete \",/*#__PURE__*/React.createElement(\"b\",null,this.state.product.name),\"?\"))),/*#__PURE__*/React.createElement(Dialog,{visible:this.state.deleteProductsDialog,style:{width:'450px'},header:\"Confirm\",modal:true,footer:deleteProductsDialogFooter,onHide:this.hideDeleteProductsDialog},/*#__PURE__*/React.createElement(\"div\",{className:\"confirmation-content\"},/*#__PURE__*/React.createElement(\"i\",{className:\"pi pi-exclamation-triangle p-mr-3\",style:{fontSize:'2rem'}}),this.state.product&&/*#__PURE__*/React.createElement(\"span\",null,\"Are you sure you want to delete the selected products?\")))),/*#__PURE__*/React.createElement(DataTableCrudDoc,null));}}]);return DataTableCrudDemo;}(Component);export var DataTableCrudDoc=/*#__PURE__*/function(_Component2){_inherits(DataTableCrudDoc,_Component2);var _super2=_createSuper(DataTableCrudDoc);function DataTableCrudDoc(props){var _this7;_classCallCheck(this,DataTableCrudDoc);_this7=_super2.call(this,props);_this7.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport classNames from 'classnames';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Toast } from 'primereact/toast';\\nimport { Button } from 'primereact/button';\\nimport { FileUpload } from 'primereact/fileupload';\\nimport { Rating } from 'primereact/rating';\\nimport { Toolbar } from 'primereact/toolbar';\\nimport { InputTextarea } from 'primereact/inputtextarea';\\nimport { RadioButton } from 'primereact/radiobutton';\\nimport { InputNumber } from 'primereact/inputnumber';\\nimport { Dialog } from 'primereact/dialog';\\nimport { InputText } from 'primereact/inputtext';\\nimport './DataTableDemo.css';\\n\\nexport class DataTableCrudDemo extends Component {\\n\\n    emptyProduct = {\\n        id: null,\\n        name: '',\\n        image: null,\\n        description: '',\\n        category: null,\\n        price: 0,\\n        quantity: 0,\\n        rating: 0,\\n        inventoryStatus: 'INSTOCK'\\n    };\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: null,\\n            productDialog: false,\\n            deleteProductDialog: false,\\n            deleteProductsDialog: false,\\n            product: this.emptyProduct,\\n            selectedProducts: null,\\n            submitted: false,\\n            globalFilter: null\\n        };\\n\\n        this.productService = new ProductService();\\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\\n        this.rightToolbarTemplate = this.rightToolbarTemplate.bind(this);\\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\\n\\n        this.openNew = this.openNew.bind(this);\\n        this.hideDialog = this.hideDialog.bind(this);\\n        this.saveProduct = this.saveProduct.bind(this);\\n        this.editProduct = this.editProduct.bind(this);\\n        this.confirmDeleteProduct = this.confirmDeleteProduct.bind(this);\\n        this.deleteProduct = this.deleteProduct.bind(this);\\n        this.exportCSV = this.exportCSV.bind(this);\\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\\n        this.deleteSelectedProducts = this.deleteSelectedProducts.bind(this);\\n        this.onCategoryChange = this.onCategoryChange.bind(this);\\n        this.onInputChange = this.onInputChange.bind(this);\\n        this.onInputNumberChange = this.onInputNumberChange.bind(this);\\n        this.hideDeleteProductDialog = this.hideDeleteProductDialog.bind(this);\\n        this.hideDeleteProductsDialog = this.hideDeleteProductsDialog.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProducts().then(data => this.setState({ products: data }));\\n    }\\n\\n    formatCurrency(value) {\\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\\n    }\\n\\n    openNew() {\\n        this.setState({\\n            product: this.emptyProduct,\\n            submitted: false,\\n            productDialog: true\\n        });\\n    }\\n\\n    hideDialog() {\\n        this.setState({\\n            submitted: false,\\n            productDialog: false\\n        });\\n    }\\n\\n    hideDeleteProductDialog() {\\n        this.setState({ deleteProductDialog: false });\\n    }\\n\\n    hideDeleteProductsDialog() {\\n        this.setState({ deleteProductsDialog: false });\\n    }\\n\\n    saveProduct() {\\n        let state = { submitted: true };\\n\\n        if (this.state.product.name.trim()) {\\n            let products = [...this.state.products];\\n            let product = {...this.state.product};\\n            if (this.state.product.id) {\\n                const index = this.findIndexById(this.state.product.id);\\n\\n                products[index] = product;\\n                this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\\n            }\\n            else {\\n                product.id = this.createId();\\n                product.image = 'product-placeholder.svg';\\n                products.push(product);\\n                this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\\n            }\\n\\n            state = {\\n                ...state,\\n                products,\\n                productDialog: false,\\n                product: this.emptyProduct\\n            };\\n        }\\n\\n        this.setState(state);\\n    }\\n\\n    editProduct(product) {\\n        this.setState({\\n            product: { ...product },\\n            productDialog: true\\n        });\\n    }\\n\\n    confirmDeleteProduct(product) {\\n        this.setState({\\n            product,\\n            deleteProductDialog: true\\n        });\\n    }\\n\\n    deleteProduct() {\\n        let products = this.state.products.filter(val => val.id !== this.state.product.id);\\n        this.setState({\\n            products,\\n            deleteProductDialog: false,\\n            product: this.emptyProduct\\n        });\\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\\n    }\\n\\n    findIndexById(id) {\\n        let index = -1;\\n        for (let i = 0; i < this.state.products.length; i++) {\\n            if (this.state.products[i].id === id) {\\n                index = i;\\n                break;\\n            }\\n        }\\n\\n        return index;\\n    }\\n\\n    createId() {\\n        let id = '';\\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\\n        for (let i = 0; i < 5; i++) {\\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\\n        }\\n        return id;\\n    }\\n\\n    exportCSV() {\\n        this.dt.exportCSV();\\n    }\\n\\n    confirmDeleteSelected() {\\n        this.setState({ deleteProductsDialog: true });\\n    }\\n\\n    deleteSelectedProducts() {\\n        let products = this.state.products.filter(val => !this.state.selectedProducts.includes(val));\\n        this.setState({\\n            products,\\n            deleteProductsDialog: false,\\n            selectedProducts: null\\n        });\\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\\n    }\\n\\n    onCategoryChange(e) {\\n        let product = {...this.state.product};\\n        product['category'] = e.value;\\n        this.setState({ product });\\n    }\\n\\n    onInputChange(e, name) {\\n        const val = (e.target && e.target.value) || '';\\n        let product = {...this.state.product};\\n        product[`${name}`] = val;\\n\\n        this.setState({ product });\\n    }\\n\\n    onInputNumberChange(e, name) {\\n        const val = e.value || 0;\\n        let product = {...this.state.product};\\n        product[`${name}`] = val;\\n\\n        this.setState({ product });\\n    }\\n\\n    leftToolbarTemplate() {\\n        return (\\n            <React.Fragment>\\n                <Button label=\\\"New\\\" icon=\\\"pi pi-plus\\\" className=\\\"p-button-success p-mr-2\\\" onClick={this.openNew} />\\n                <Button label=\\\"Delete\\\" icon=\\\"pi pi-trash\\\" className=\\\"p-button-danger\\\" onClick={this.confirmDeleteSelected} disabled={!this.state.selectedProducts || !this.state.selectedProducts.length} />\\n            </React.Fragment>\\n        )\\n    }\\n\\n    rightToolbarTemplate() {\\n        return (\\n            <React.Fragment>\\n                <FileUpload mode=\\\"basic\\\" accept=\\\"image/*\\\" maxFileSize={1000000} label=\\\"Import\\\" chooseLabel=\\\"Import\\\" className=\\\"p-mr-2 p-d-inline-block\\\" />\\n                <Button label=\\\"Export\\\" icon=\\\"pi pi-upload\\\" className=\\\"p-button-help\\\" onClick={this.exportCSV} />\\n            </React.Fragment>\\n        )\\n    }\\n\\n    imageBodyTemplate(rowData) {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />\\n    }\\n\\n    priceBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.price);\\n    }\\n\\n    ratingBodyTemplate(rowData) {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    statusBodyTemplate(rowData) {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    actionBodyTemplate(rowData) {\\n        return (\\n            <React.Fragment>\\n                <Button icon=\\\"pi pi-pencil\\\" className=\\\"p-button-rounded p-button-success p-mr-2\\\" onClick={() => this.editProduct(rowData)} />\\n                <Button icon=\\\"pi pi-trash\\\" className=\\\"p-button-rounded p-button-warning\\\" onClick={() => this.confirmDeleteProduct(rowData)} />\\n            </React.Fragment>\\n        );\\n    }\\n\\n    render() {\\n        const header = (\\n            <div className=\\\"table-header\\\">\\n                <h5 className=\\\"p-m-0\\\">Manage Products</h5>\\n                <span className=\\\"p-input-icon-left\\\">\\n                    <i className=\\\"pi pi-search\\\" />\\n                    <InputText type=\\\"search\\\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\\\"Search...\\\" />\\n                </span>\\n            </div>\\n        );\\n        const productDialogFooter = (\\n            <React.Fragment>\\n                <Button label=\\\"Cancel\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={this.hideDialog} />\\n                <Button label=\\\"Save\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={this.saveProduct} />\\n            </React.Fragment>\\n        );\\n        const deleteProductDialogFooter = (\\n            <React.Fragment>\\n                <Button label=\\\"No\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={this.hideDeleteProductDialog} />\\n                <Button label=\\\"Yes\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={this.deleteProduct} />\\n            </React.Fragment>\\n        );\\n        const deleteProductsDialogFooter = (\\n            <React.Fragment>\\n                <Button label=\\\"No\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={this.hideDeleteProductsDialog} />\\n                <Button label=\\\"Yes\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={this.deleteSelectedProducts} />\\n            </React.Fragment>\\n        );\\n\\n        return (\\n            <div className=\\\"datatable-crud-demo\\\">\\n                <Toast ref={(el) => this.toast = el} />\\n\\n                <div className=\\\"card\\\">\\n                    <Toolbar className=\\\"p-mb-4\\\" left={this.leftToolbarTemplate} right={this.rightToolbarTemplate}></Toolbar>\\n\\n                    <DataTable ref={(el) => this.dt = el} value={this.state.products} selection={this.state.selectedProducts} onSelectionChange={(e) => this.setState({ selectedProducts: e.value })}\\n                        dataKey=\\\"id\\\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\\n                        paginatorTemplate=\\\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\\\"\\n                        currentPageReportTemplate=\\\"Showing {first} to {last} of {totalRecords} products\\\"\\n                        globalFilter={this.state.globalFilter}\\n                        header={header}>\\n\\n                        <Column selectionMode=\\\"multiple\\\" headerStyle={{ width: '3rem' }}></Column>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column header=\\\"Image\\\" body={this.imageBodyTemplate}></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"rating\\\" header=\\\"Reviews\\\" body={this.ratingBodyTemplate} sortable></Column>\\n                        <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" body={this.statusBodyTemplate} sortable></Column>\\n                        <Column body={this.actionBodyTemplate}></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <Dialog visible={this.state.productDialog} style={{ width: '450px' }} header=\\\"Product Details\\\" modal className=\\\"p-fluid\\\" footer={productDialogFooter} onHide={this.hideDialog}>\\n                    {this.state.product.image && <img src={`showcase/demo/images/product/${this.state.product.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={this.state.product.image} className=\\\"product-image\\\" />}\\n                    <div className=\\\"p-field\\\">\\n                        <label htmlFor=\\\"name\\\">Name</label>\\n                        <InputText id=\\\"name\\\" value={this.state.product.name} onChange={(e) => this.onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.product.name })} />\\n                        {this.state.submitted && !this.state.product.name && <small className=\\\"p-error\\\">Name is required.</small>}\\n                    </div>\\n                    <div className=\\\"p-field\\\">\\n                        <label htmlFor=\\\"description\\\">Description</label>\\n                        <InputTextarea id=\\\"description\\\" value={this.state.product.description} onChange={(e) => this.onInputChange(e, 'description')} required rows={3} cols={20} />\\n                    </div>\\n\\n                    <div className=\\\"p-field\\\">\\n                        <label className=\\\"p-mb-3\\\">Category</label>\\n                        <div className=\\\"p-formgrid p-grid\\\">\\n                            <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                                <RadioButton inputId=\\\"category1\\\" name=\\\"category\\\" value=\\\"Accessories\\\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Accessories'} />\\n                                <label htmlFor=\\\"category1\\\">Accessories</label>\\n                            </div>\\n                            <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                                <RadioButton inputId=\\\"category2\\\" name=\\\"category\\\" value=\\\"Clothing\\\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Clothing'} />\\n                                <label htmlFor=\\\"category2\\\">Clothing</label>\\n                            </div>\\n                            <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                                <RadioButton inputId=\\\"category3\\\" name=\\\"category\\\" value=\\\"Electronics\\\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Electronics'} />\\n                                <label htmlFor=\\\"category3\\\">Electronics</label>\\n                            </div>\\n                            <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                                <RadioButton inputId=\\\"category4\\\" name=\\\"category\\\" value=\\\"Fitness\\\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Fitness'} />\\n                                <label htmlFor=\\\"category4\\\">Fitness</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div className=\\\"p-formgrid p-grid\\\">\\n                        <div className=\\\"p-field p-col\\\">\\n                            <label htmlFor=\\\"price\\\">Price</label>\\n                            <InputNumber id=\\\"price\\\" value={this.state.product.price} onValueChange={(e) => this.onInputNumberChange(e, 'price')} mode=\\\"currency\\\" currency=\\\"USD\\\" locale=\\\"en-US\\\" />\\n                        </div>\\n                        <div className=\\\"p-field p-col\\\">\\n                            <label htmlFor=\\\"quantity\\\">Quantity</label>\\n                            <InputNumber id=\\\"quantity\\\" value={this.state.product.quantity} onValueChange={(e) => this.onInputNumberChange(e, 'quantity')} integeronly />\\n                        </div>\\n                    </div>\\n                </Dialog>\\n\\n                <Dialog visible={this.state.deleteProductDialog} style={{ width: '450px' }} header=\\\"Confirm\\\" modal footer={deleteProductDialogFooter} onHide={this.hideDeleteProductDialog}>\\n                    <div className=\\\"confirmation-content\\\">\\n                        <i className=\\\"pi pi-exclamation-triangle p-mr-3\\\" style={{ fontSize: '2rem'}} />\\n                        {this.state.product && <span>Are you sure you want to delete <b>{this.state.product.name}</b>?</span>}\\n                    </div>\\n                </Dialog>\\n\\n                <Dialog visible={this.state.deleteProductsDialog} style={{ width: '450px' }} header=\\\"Confirm\\\" modal footer={deleteProductsDialogFooter} onHide={this.hideDeleteProductsDialog}>\\n                    <div className=\\\"confirmation-content\\\">\\n                        <i className=\\\"pi pi-exclamation-triangle p-mr-3\\\" style={{ fontSize: '2rem'}} />\\n                        {this.state.product && <span>Are you sure you want to delete the selected products?</span>}\\n                    </div>\\n                </Dialog>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport classNames from 'classnames';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Toast } from 'primereact/toast';\\nimport { Button } from 'primereact/button';\\nimport { FileUpload } from 'primereact/fileupload';\\nimport { Rating } from 'primereact/rating';\\nimport { Toolbar } from 'primereact/toolbar';\\nimport { InputTextarea } from 'primereact/inputtextarea';\\nimport { RadioButton } from 'primereact/radiobutton';\\nimport { InputNumber } from 'primereact/inputnumber';\\nimport { Dialog } from 'primereact/dialog';\\nimport { InputText } from 'primereact/inputtext';\\nimport './DataTableDemo.css';\\n\\nconst DataTableCrudDemo = () => {\\n\\n    let emptyProduct = {\\n        id: null,\\n        name: '',\\n        image: null,\\n        description: '',\\n        category: null,\\n        price: 0,\\n        quantity: 0,\\n        rating: 0,\\n        inventoryStatus: 'INSTOCK'\\n    };\\n\\n    const [products, setProducts] = useState(null);\\n    const [productDialog, setProductDialog] = useState(false);\\n    const [deleteProductDialog, setDeleteProductDialog] = useState(false);\\n    const [deleteProductsDialog, setDeleteProductsDialog] = useState(false);\\n    const [product, setProduct] = useState(emptyProduct);\\n    const [selectedProducts, setSelectedProducts] = useState(null);\\n    const [submitted, setSubmitted] = useState(false);\\n    const [globalFilter, setGlobalFilter] = useState(null);\\n    const toast = useRef(null);\\n    const dt = useRef(null);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProducts().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\\n    }\\n\\n    const openNew = () => {\\n        setProduct(emptyProduct);\\n        setSubmitted(false);\\n        setProductDialog(true);\\n    }\\n\\n    const hideDialog = () => {\\n        setSubmitted(false);\\n        setProductDialog(false);\\n    }\\n\\n    const hideDeleteProductDialog = () => {\\n        setDeleteProductDialog(false);\\n    }\\n\\n    const hideDeleteProductsDialog = () => {\\n        setDeleteProductsDialog(false);\\n    }\\n\\n    const saveProduct = () => {\\n        setSubmitted(true);\\n\\n        if (product.name.trim()) {\\n            let _products = [...products];\\n            let _product = {...product};\\n            if (product.id) {\\n                const index = findIndexById(product.id);\\n\\n                _products[index] = _product;\\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\\n            }\\n            else {\\n                _product.id = createId();\\n                _product.image = 'product-placeholder.svg';\\n                _products.push(_product);\\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\\n            }\\n\\n            setProducts(_products);\\n            setProductDialog(false);\\n            setProduct(emptyProduct);\\n        }\\n    }\\n\\n    const editProduct = (product) => {\\n        setProduct({...product});\\n        setProductDialog(true);\\n    }\\n\\n    const confirmDeleteProduct = (product) => {\\n        setProduct(product);\\n        setDeleteProductDialog(true);\\n    }\\n\\n    const deleteProduct = () => {\\n        let _products = products.filter(val => val.id !== product.id);\\n        setProduct(_products);\\n        setDeleteProductDialog(false);\\n        setProduct(emptyProduct);\\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\\n    }\\n\\n    const findIndexById = (id) => {\\n        let index = -1;\\n        for (let i = 0; i < products.length; i++) {\\n            if (products[i].id === id) {\\n                index = i;\\n                break;\\n            }\\n        }\\n\\n        return index;\\n    }\\n\\n    const createId = () => {\\n        let id = '';\\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\\n        for (let i = 0; i < 5; i++) {\\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\\n        }\\n        return id;\\n    }\\n\\n    const exportCSV = () => {\\n        dt.current.exportCSV();\\n    }\\n\\n    const confirmDeleteSelected = () => {\\n        setDeleteProductsDialog(true);\\n    }\\n\\n    const deleteSelectedProducts = () => {\\n        let _products = products.filter(val => !selectedProducts.includes(val));\\n        setProducts(_products);\\n        setDeleteProductsDialog(false);\\n        setSelectedProducts(null);\\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\\n    }\\n\\n    const onCategoryChange = (e) => {\\n        let _product = {...product};\\n        _product['category'] = e.value;\\n        setProduct(_product);\\n    }\\n\\n    const onInputChange = (e, name) => {\\n        const val = (e.target && e.target.value) || '';\\n        let _product = {...product};\\n        _product[`${name}`] = val;\\n\\n        setProduct(_product);\\n    }\\n\\n    const onInputNumberChange = (e, name) => {\\n        const val = e.value || 0;\\n        let _product = {...product};\\n        _product[`${name}`] = val;\\n\\n        setProduct(_product);\\n    }\\n\\n    const leftToolbarTemplate = () => {\\n        return (\\n            <React.Fragment>\\n                <Button label=\\\"New\\\" icon=\\\"pi pi-plus\\\" className=\\\"p-button-success p-mr-2\\\" onClick={openNew} />\\n                <Button label=\\\"Delete\\\" icon=\\\"pi pi-trash\\\" className=\\\"p-button-danger\\\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !selectedProducts.length} />\\n            </React.Fragment>\\n        )\\n    }\\n\\n    const rightToolbarTemplate = () => {\\n        return (\\n            <React.Fragment>\\n                <FileUpload mode=\\\"basic\\\" accept=\\\"image/*\\\" maxFileSize={1000000} label=\\\"Import\\\" chooseLabel=\\\"Import\\\" className=\\\"p-mr-2 p-d-inline-block\\\" />\\n                <Button label=\\\"Export\\\" icon=\\\"pi pi-upload\\\" className=\\\"p-button-help\\\" onClick={exportCSV} />\\n            </React.Fragment>\\n        )\\n    }\\n\\n    const imageBodyTemplate = (rowData) => {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    const ratingBodyTemplate = (rowData) => {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    const actionBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <Button icon=\\\"pi pi-pencil\\\" className=\\\"p-button-rounded p-button-success p-mr-2\\\" onClick={() => editProduct(rowData)} />\\n                <Button icon=\\\"pi pi-trash\\\" className=\\\"p-button-rounded p-button-warning\\\" onClick={() => confirmDeleteProduct(rowData)} />\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const header = (\\n        <div className=\\\"table-header\\\">\\n            <h5 className=\\\"p-m-0\\\">Manage Products</h5>\\n            <span className=\\\"p-input-icon-left\\\">\\n                <i className=\\\"pi pi-search\\\" />\\n                <InputText type=\\\"search\\\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\\\"Search...\\\" />\\n            </span>\\n        </div>\\n    );\\n    const productDialogFooter = (\\n        <React.Fragment>\\n            <Button label=\\\"Cancel\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={hideDialog} />\\n            <Button label=\\\"Save\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={saveProduct} />\\n        </React.Fragment>\\n    );\\n    const deleteProductDialogFooter = (\\n        <React.Fragment>\\n            <Button label=\\\"No\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={hideDeleteProductDialog} />\\n            <Button label=\\\"Yes\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={deleteProduct} />\\n        </React.Fragment>\\n    );\\n    const deleteProductsDialogFooter = (\\n        <React.Fragment>\\n            <Button label=\\\"No\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={hideDeleteProductsDialog} />\\n            <Button label=\\\"Yes\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={deleteSelectedProducts} />\\n        </React.Fragment>\\n    );\\n\\n    return (\\n        <div className=\\\"datatable-crud-demo\\\">\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <Toolbar className=\\\"p-mb-4\\\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\\n\\n                <DataTable ref={dt} value={products} selection={selectedProducts} onSelectionChange={(e) => setSelectedProducts(e.value)}\\n                    dataKey=\\\"id\\\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\\n                    paginatorTemplate=\\\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\\\"\\n                    currentPageReportTemplate=\\\"Showing {first} to {last} of {totalRecords} products\\\"\\n                    globalFilter={globalFilter}\\n                    header={header}>\\n\\n                    <Column selectionMode=\\\"multiple\\\" headerStyle={{ width: '3rem' }}></Column>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column header=\\\"Image\\\" body={imageBodyTemplate}></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"rating\\\" header=\\\"Reviews\\\" body={ratingBodyTemplate} sortable></Column>\\n                    <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" body={statusBodyTemplate} sortable></Column>\\n                    <Column body={actionBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n\\n            <Dialog visible={productDialog} style={{ width: '450px' }} header=\\\"Product Details\\\" modal className=\\\"p-fluid\\\" footer={productDialogFooter} onHide={hideDialog}>\\n                {product.image && <img src={`showcase/demo/images/product/${product.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={product.image} className=\\\"product-image\\\" />}\\n                <div className=\\\"p-field\\\">\\n                    <label htmlFor=\\\"name\\\">Name</label>\\n                    <InputText id=\\\"name\\\" value={product.name} onChange={(e) => onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': submitted && !product.name })} />\\n                    {submitted && !product.name && <small className=\\\"p-error\\\">Name is required.</small>}\\n                </div>\\n                <div className=\\\"p-field\\\">\\n                    <label htmlFor=\\\"description\\\">Description</label>\\n                    <InputTextarea id=\\\"description\\\" value={product.description} onChange={(e) => onInputChange(e, 'description')} required rows={3} cols={20} />\\n                </div>\\n\\n                <div className=\\\"p-field\\\">\\n                    <label className=\\\"p-mb-3\\\">Category</label>\\n                    <div className=\\\"p-formgrid p-grid\\\">\\n                        <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                            <RadioButton inputId=\\\"category1\\\" name=\\\"category\\\" value=\\\"Accessories\\\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\\n                            <label htmlFor=\\\"category1\\\">Accessories</label>\\n                        </div>\\n                        <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                            <RadioButton inputId=\\\"category2\\\" name=\\\"category\\\" value=\\\"Clothing\\\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\\n                            <label htmlFor=\\\"category2\\\">Clothing</label>\\n                        </div>\\n                        <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                            <RadioButton inputId=\\\"category3\\\" name=\\\"category\\\" value=\\\"Electronics\\\" onChange={onCategoryChange} checked={product.category === 'Electronics'} />\\n                            <label htmlFor=\\\"category3\\\">Electronics</label>\\n                        </div>\\n                        <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                            <RadioButton inputId=\\\"category4\\\" name=\\\"category\\\" value=\\\"Fitness\\\" onChange={onCategoryChange} checked={product.category === 'Fitness'} />\\n                            <label htmlFor=\\\"category4\\\">Fitness</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div className=\\\"p-formgrid p-grid\\\">\\n                    <div className=\\\"p-field p-col\\\">\\n                        <label htmlFor=\\\"price\\\">Price</label>\\n                        <InputNumber id=\\\"price\\\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\\\"currency\\\" currency=\\\"USD\\\" locale=\\\"en-US\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col\\\">\\n                        <label htmlFor=\\\"quantity\\\">Quantity</label>\\n                        <InputNumber id=\\\"quantity\\\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} integeronly />\\n                    </div>\\n                </div>\\n            </Dialog>\\n\\n            <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\\\"Confirm\\\" modal footer={deleteProductDialogFooter} onHide={hideDeleteProductDialog}>\\n                <div className=\\\"confirmation-content\\\">\\n                    <i className=\\\"pi pi-exclamation-triangle p-mr-3\\\" style={{ fontSize: '2rem'}} />\\n                    {product && <span>Are you sure you want to delete <b>{product.name}</b>?</span>}\\n                </div>\\n            </Dialog>\\n\\n            <Dialog visible={deleteProductsDialog} style={{ width: '450px' }} header=\\\"Confirm\\\" modal footer={deleteProductsDialogFooter} onHide={hideDeleteProductsDialog}>\\n                <div className=\\\"confirmation-content\\\">\\n                    <i className=\\\"pi pi-exclamation-triangle p-mr-3\\\" style={{ fontSize: '2rem'}} />\\n                    {product && <span>Are you sure you want to delete the selected products?</span>}\\n                </div>\\n            </Dialog>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport classNames from 'classnames';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Toast } from 'primereact/toast';\\nimport { Button } from 'primereact/button';\\nimport { FileUpload } from 'primereact/fileupload';\\nimport { Rating } from 'primereact/rating';\\nimport { Toolbar } from 'primereact/toolbar';\\nimport { InputTextarea } from 'primereact/inputtextarea';\\nimport { RadioButton } from 'primereact/radiobutton';\\nimport { InputNumber } from 'primereact/inputnumber';\\nimport { Dialog } from 'primereact/dialog';\\nimport { InputText } from 'primereact/inputtext';\\nimport './DataTableDemo.css';\\n\\nconst DataTableCrudDemo = () => {\\n\\n    let emptyProduct = {\\n        id: null,\\n        name: '',\\n        image: null,\\n        description: '',\\n        category: null,\\n        price: 0,\\n        quantity: 0,\\n        rating: 0,\\n        inventoryStatus: 'INSTOCK'\\n    };\\n\\n    const [products, setProducts] = useState(null);\\n    const [productDialog, setProductDialog] = useState(false);\\n    const [deleteProductDialog, setDeleteProductDialog] = useState(false);\\n    const [deleteProductsDialog, setDeleteProductsDialog] = useState(false);\\n    const [product, setProduct] = useState(emptyProduct);\\n    const [selectedProducts, setSelectedProducts] = useState(null);\\n    const [submitted, setSubmitted] = useState(false);\\n    const [globalFilter, setGlobalFilter] = useState(null);\\n    const toast = useRef(null);\\n    const dt = useRef(null);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProducts().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\\n    }\\n\\n    const openNew = () => {\\n        setProduct(emptyProduct);\\n        setSubmitted(false);\\n        setProductDialog(true);\\n    }\\n\\n    const hideDialog = () => {\\n        setSubmitted(false);\\n        setProductDialog(false);\\n    }\\n\\n    const hideDeleteProductDialog = () => {\\n        setDeleteProductDialog(false);\\n    }\\n\\n    const hideDeleteProductsDialog = () => {\\n        setDeleteProductsDialog(false);\\n    }\\n\\n    const saveProduct = () => {\\n        setSubmitted(true);\\n\\n        if (product.name.trim()) {\\n            let _products = [...products];\\n            let _product = {...product};\\n            if (product.id) {\\n                const index = findIndexById(product.id);\\n\\n                _products[index] = _product;\\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\\n            }\\n            else {\\n                _product.id = createId();\\n                _product.image = 'product-placeholder.svg';\\n                _products.push(_product);\\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\\n            }\\n\\n            setProducts(_products);\\n            setProductDialog(false);\\n            setProduct(emptyProduct);\\n        }\\n    }\\n\\n    const editProduct = (product) => {\\n        setProduct({...product});\\n        setProductDialog(true);\\n    }\\n\\n    const confirmDeleteProduct = (product) => {\\n        setProduct(product);\\n        setDeleteProductDialog(true);\\n    }\\n\\n    const deleteProduct = () => {\\n        let _products = products.filter(val => val.id !== product.id);\\n        setProduct(_products);\\n        setDeleteProductDialog(false);\\n        setProduct(emptyProduct);\\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\\n    }\\n\\n    const findIndexById = (id) => {\\n        let index = -1;\\n        for (let i = 0; i < products.length; i++) {\\n            if (products[i].id === id) {\\n                index = i;\\n                break;\\n            }\\n        }\\n\\n        return index;\\n    }\\n\\n    const createId = () => {\\n        let id = '';\\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\\n        for (let i = 0; i < 5; i++) {\\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\\n        }\\n        return id;\\n    }\\n\\n    const exportCSV = () => {\\n        dt.current.exportCSV();\\n    }\\n\\n    const confirmDeleteSelected = () => {\\n        setDeleteProductsDialog(true);\\n    }\\n\\n    const deleteSelectedProducts = () => {\\n        let _products = products.filter(val => !selectedProducts.includes(val));\\n        setProducts(_products);\\n        setDeleteProductsDialog(false);\\n        setSelectedProducts(null);\\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\\n    }\\n\\n    const onCategoryChange = (e) => {\\n        let _product = {...product};\\n        _product['category'] = e.value;\\n        setProduct(_product);\\n    }\\n\\n    const onInputChange = (e, name) => {\\n        const val = (e.target && e.target.value) || '';\\n        let _product = {...product};\\n        _product[`${name}`] = val;\\n\\n        setProduct(_product);\\n    }\\n\\n    const onInputNumberChange = (e, name) => {\\n        const val = e.value || 0;\\n        let _product = {...product};\\n        _product[`${name}`] = val;\\n\\n        setProduct(_product);\\n    }\\n\\n    const leftToolbarTemplate = () => {\\n        return (\\n            <React.Fragment>\\n                <Button label=\\\"New\\\" icon=\\\"pi pi-plus\\\" className=\\\"p-button-success p-mr-2\\\" onClick={openNew} />\\n                <Button label=\\\"Delete\\\" icon=\\\"pi pi-trash\\\" className=\\\"p-button-danger\\\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !selectedProducts.length} />\\n            </React.Fragment>\\n        )\\n    }\\n\\n    const rightToolbarTemplate = () => {\\n        return (\\n            <React.Fragment>\\n                <FileUpload mode=\\\"basic\\\" accept=\\\"image/*\\\" maxFileSize={1000000} label=\\\"Import\\\" chooseLabel=\\\"Import\\\" className=\\\"p-mr-2 p-d-inline-block\\\" />\\n                <Button label=\\\"Export\\\" icon=\\\"pi pi-upload\\\" className=\\\"p-button-help\\\" onClick={exportCSV} />\\n            </React.Fragment>\\n        )\\n    }\\n\\n    const imageBodyTemplate = (rowData) => {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    const ratingBodyTemplate = (rowData) => {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    const actionBodyTemplate = (rowData) => {\\n        return (\\n            <React.Fragment>\\n                <Button icon=\\\"pi pi-pencil\\\" className=\\\"p-button-rounded p-button-success p-mr-2\\\" onClick={() => editProduct(rowData)} />\\n                <Button icon=\\\"pi pi-trash\\\" className=\\\"p-button-rounded p-button-warning\\\" onClick={() => confirmDeleteProduct(rowData)} />\\n            </React.Fragment>\\n        );\\n    }\\n\\n    const header = (\\n        <div className=\\\"table-header\\\">\\n            <h5 className=\\\"p-m-0\\\">Manage Products</h5>\\n            <span className=\\\"p-input-icon-left\\\">\\n                <i className=\\\"pi pi-search\\\" />\\n                <InputText type=\\\"search\\\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\\\"Search...\\\" />\\n            </span>\\n        </div>\\n    );\\n    const productDialogFooter = (\\n        <React.Fragment>\\n            <Button label=\\\"Cancel\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={hideDialog} />\\n            <Button label=\\\"Save\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={saveProduct} />\\n        </React.Fragment>\\n    );\\n    const deleteProductDialogFooter = (\\n        <React.Fragment>\\n            <Button label=\\\"No\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={hideDeleteProductDialog} />\\n            <Button label=\\\"Yes\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={deleteProduct} />\\n        </React.Fragment>\\n    );\\n    const deleteProductsDialogFooter = (\\n        <React.Fragment>\\n            <Button label=\\\"No\\\" icon=\\\"pi pi-times\\\" className=\\\"p-button-text\\\" onClick={hideDeleteProductsDialog} />\\n            <Button label=\\\"Yes\\\" icon=\\\"pi pi-check\\\" className=\\\"p-button-text\\\" onClick={deleteSelectedProducts} />\\n        </React.Fragment>\\n    );\\n\\n    return (\\n        <div className=\\\"datatable-crud-demo\\\">\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <Toolbar className=\\\"p-mb-4\\\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\\n\\n                <DataTable ref={dt} value={products} selection={selectedProducts} onSelectionChange={(e) => setSelectedProducts(e.value)}\\n                    dataKey=\\\"id\\\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\\n                    paginatorTemplate=\\\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\\\"\\n                    currentPageReportTemplate=\\\"Showing {first} to {last} of {totalRecords} products\\\"\\n                    globalFilter={globalFilter}\\n                    header={header}>\\n\\n                    <Column selectionMode=\\\"multiple\\\" headerStyle={{ width: '3rem' }}></Column>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column header=\\\"Image\\\" body={imageBodyTemplate}></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"rating\\\" header=\\\"Reviews\\\" body={ratingBodyTemplate} sortable></Column>\\n                    <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" body={statusBodyTemplate} sortable></Column>\\n                    <Column body={actionBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n\\n            <Dialog visible={productDialog} style={{ width: '450px' }} header=\\\"Product Details\\\" modal className=\\\"p-fluid\\\" footer={productDialogFooter} onHide={hideDialog}>\\n                {product.image && <img src={`showcase/demo/images/product/${product.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={product.image} className=\\\"product-image\\\" />}\\n                <div className=\\\"p-field\\\">\\n                    <label htmlFor=\\\"name\\\">Name</label>\\n                    <InputText id=\\\"name\\\" value={product.name} onChange={(e) => onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': submitted && !product.name })} />\\n                    {submitted && !product.name && <small className=\\\"p-error\\\">Name is required.</small>}\\n                </div>\\n                <div className=\\\"p-field\\\">\\n                    <label htmlFor=\\\"description\\\">Description</label>\\n                    <InputTextarea id=\\\"description\\\" value={product.description} onChange={(e) => onInputChange(e, 'description')} required rows={3} cols={20} />\\n                </div>\\n\\n                <div className=\\\"p-field\\\">\\n                    <label className=\\\"p-mb-3\\\">Category</label>\\n                    <div className=\\\"p-formgrid p-grid\\\">\\n                        <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                            <RadioButton inputId=\\\"category1\\\" name=\\\"category\\\" value=\\\"Accessories\\\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\\n                            <label htmlFor=\\\"category1\\\">Accessories</label>\\n                        </div>\\n                        <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                            <RadioButton inputId=\\\"category2\\\" name=\\\"category\\\" value=\\\"Clothing\\\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\\n                            <label htmlFor=\\\"category2\\\">Clothing</label>\\n                        </div>\\n                        <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                            <RadioButton inputId=\\\"category3\\\" name=\\\"category\\\" value=\\\"Electronics\\\" onChange={onCategoryChange} checked={product.category === 'Electronics'} />\\n                            <label htmlFor=\\\"category3\\\">Electronics</label>\\n                        </div>\\n                        <div className=\\\"p-field-radiobutton p-col-6\\\">\\n                            <RadioButton inputId=\\\"category4\\\" name=\\\"category\\\" value=\\\"Fitness\\\" onChange={onCategoryChange} checked={product.category === 'Fitness'} />\\n                            <label htmlFor=\\\"category4\\\">Fitness</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div className=\\\"p-formgrid p-grid\\\">\\n                    <div className=\\\"p-field p-col\\\">\\n                        <label htmlFor=\\\"price\\\">Price</label>\\n                        <InputNumber id=\\\"price\\\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\\\"currency\\\" currency=\\\"USD\\\" locale=\\\"en-US\\\" />\\n                    </div>\\n                    <div className=\\\"p-field p-col\\\">\\n                        <label htmlFor=\\\"quantity\\\">Quantity</label>\\n                        <InputNumber id=\\\"quantity\\\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} integeronly />\\n                    </div>\\n                </div>\\n            </Dialog>\\n\\n            <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\\\"Confirm\\\" modal footer={deleteProductDialogFooter} onHide={hideDeleteProductDialog}>\\n                <div className=\\\"confirmation-content\\\">\\n                    <i className=\\\"pi pi-exclamation-triangle p-mr-3\\\" style={{ fontSize: '2rem'}} />\\n                    {product && <span>Are you sure you want to delete <b>{product.name}</b>?</span>}\\n                </div>\\n            </Dialog>\\n\\n            <Dialog visible={deleteProductsDialog} style={{ width: '450px' }} header=\\\"Confirm\\\" modal footer={deleteProductsDialogFooter} onHide={hideDeleteProductsDialog}>\\n                <div className=\\\"confirmation-content\\\">\\n                    <i className=\\\"pi pi-exclamation-triangle p-mr-3\\\" style={{ fontSize: '2rem'}} />\\n                    {product && <span>Are you sure you want to delete the selected products?</span>}\\n                </div>\\n            </Dialog>\\n        </div>\\n    );\\n}\\n                \"}};_this7.extFiles={'src/demo/DataTableDemo.css':{content:\"\\n.datatable-crud-demo .table-header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n}\\n\\n.datatable-crud-demo .product-image {\\n    width: 100px;\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n}\\n\\n.datatable-crud-demo .p-dialog .product-image {\\n    width: 150px;\\n    margin: 0 auto 2rem auto;\\n    display: block;\\n}\\n\\n.datatable-crud-demo .confirmation-content {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n                \"}};return _this7;}_createClass(DataTableCrudDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DataTableCrudDemo',sources:this.sources,service:'ProductService',data:'products',extFiles:this.extFiles})));}}]);return DataTableCrudDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datatable/DataTableCrudDemo.js"],"names":["React","Component","classNames","DataTable","Column","ProductService","TabView","Toast","Button","FileUpload","Rating","Toolbar","InputTextarea","RadioButton","InputNumber","Dialog","InputText","useLiveEditorTabs","AppInlineHeader","DataTableCrudDemo","props","emptyProduct","id","name","image","description","category","price","quantity","rating","inventoryStatus","state","products","productDialog","deleteProductDialog","deleteProductsDialog","product","selectedProducts","submitted","globalFilter","productService","leftToolbarTemplate","bind","rightToolbarTemplate","imageBodyTemplate","priceBodyTemplate","ratingBodyTemplate","statusBodyTemplate","actionBodyTemplate","openNew","hideDialog","saveProduct","editProduct","confirmDeleteProduct","deleteProduct","exportCSV","confirmDeleteSelected","deleteSelectedProducts","onCategoryChange","onInputChange","onInputNumberChange","hideDeleteProductDialog","hideDeleteProductsDialog","getProducts","then","data","setState","value","toLocaleString","style","currency","trim","index","findIndexById","toast","show","severity","summary","detail","life","createId","push","filter","val","i","length","chars","charAt","Math","floor","random","dt","includes","e","target","rowData","src","formatCurrency","toLowerCase","header","productDialogFooter","deleteProductDialogFooter","deleteProductsDialogFooter","el","width","fontSize","DataTableCrudDoc","sources","tabName","content","extFiles","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport { Button } from '../../components/button/Button';\r\nimport { FileUpload } from '../../components/fileupload/FileUpload';\r\nimport { Rating } from '../../components/rating/Rating';\r\nimport { Toolbar } from '../../components/toolbar/Toolbar';\r\nimport { InputTextarea } from '../../components/inputtextarea/InputTextarea';\r\nimport { RadioButton } from '../../components/radiobutton/RadioButton';\r\nimport { InputNumber } from '../../components/inputnumber/InputNumber';\r\nimport { Dialog } from '../../components/dialog/Dialog';\r\nimport { InputText } from '../../components/inputtext/InputText';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './DataTableDemo.scss';\r\n\r\nexport class DataTableCrudDemo extends Component {\r\n\r\n    emptyProduct = {\r\n        id: null,\r\n        name: '',\r\n        image: null,\r\n        description: '',\r\n        category: null,\r\n        price: 0,\r\n        quantity: 0,\r\n        rating: 0,\r\n        inventoryStatus: 'INSTOCK'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: null,\r\n            productDialog: false,\r\n            deleteProductDialog: false,\r\n            deleteProductsDialog: false,\r\n            product: this.emptyProduct,\r\n            selectedProducts: null,\r\n            submitted: false,\r\n            globalFilter: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n        this.rightToolbarTemplate = this.rightToolbarTemplate.bind(this);\r\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveProduct = this.saveProduct.bind(this);\r\n        this.editProduct = this.editProduct.bind(this);\r\n        this.confirmDeleteProduct = this.confirmDeleteProduct.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n        this.exportCSV = this.exportCSV.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedProducts = this.deleteSelectedProducts.bind(this);\r\n        this.onCategoryChange = this.onCategoryChange.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onInputNumberChange = this.onInputNumberChange.bind(this);\r\n        this.hideDeleteProductDialog = this.hideDeleteProductDialog.bind(this);\r\n        this.hideDeleteProductsDialog = this.hideDeleteProductsDialog.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProducts().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n    }\r\n\r\n    openNew() {\r\n        this.setState({\r\n            product: this.emptyProduct,\r\n            submitted: false,\r\n            productDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            productDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteProductDialog() {\r\n        this.setState({ deleteProductDialog: false });\r\n    }\r\n\r\n    hideDeleteProductsDialog() {\r\n        this.setState({ deleteProductsDialog: false });\r\n    }\r\n\r\n    saveProduct() {\r\n        let state = { submitted: true };\r\n\r\n        if (this.state.product.name.trim()) {\r\n            let products = [...this.state.products];\r\n            let product = {...this.state.product};\r\n            if (this.state.product.id) {\r\n                const index = this.findIndexById(this.state.product.id);\r\n\r\n                products[index] = product;\r\n                this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\r\n            }\r\n            else {\r\n                product.id = this.createId();\r\n                product.image = 'product-placeholder.svg';\r\n                products.push(product);\r\n                this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\r\n            }\r\n\r\n            state = {\r\n                ...state,\r\n                products,\r\n                productDialog: false,\r\n                product: this.emptyProduct\r\n            };\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    editProduct(product) {\r\n        this.setState({\r\n            product: { ...product },\r\n            productDialog: true\r\n        });\r\n    }\r\n\r\n    confirmDeleteProduct(product) {\r\n        this.setState({\r\n            product,\r\n            deleteProductDialog: true\r\n        });\r\n    }\r\n\r\n    deleteProduct() {\r\n        let products = this.state.products.filter(val => val.id !== this.state.product.id);\r\n        this.setState({\r\n            products,\r\n            deleteProductDialog: false,\r\n            product: this.emptyProduct\r\n        });\r\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\r\n    }\r\n\r\n    findIndexById(id) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.state.products.length; i++) {\r\n            if (this.state.products[i].id === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    createId() {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    exportCSV() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteProductsDialog: true });\r\n    }\r\n\r\n    deleteSelectedProducts() {\r\n        let products = this.state.products.filter(val => !this.state.selectedProducts.includes(val));\r\n        this.setState({\r\n            products,\r\n            deleteProductsDialog: false,\r\n            selectedProducts: null\r\n        });\r\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\r\n    }\r\n\r\n    onCategoryChange(e) {\r\n        let product = {...this.state.product};\r\n        product['category'] = e.value;\r\n        this.setState({ product });\r\n    }\r\n\r\n    onInputChange(e, name) {\r\n        const val = (e.target && e.target.value) || '';\r\n        let product = {...this.state.product};\r\n        product[`${name}`] = val;\r\n\r\n        this.setState({ product });\r\n    }\r\n\r\n    onInputNumberChange(e, name) {\r\n        const val = e.value || 0;\r\n        let product = {...this.state.product};\r\n        product[`${name}`] = val;\r\n\r\n        this.setState({ product });\r\n    }\r\n\r\n    leftToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={this.confirmDeleteSelected} disabled={!this.state.selectedProducts || !this.state.selectedProducts.length} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    rightToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" />\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    imageBodyTemplate(rowData) {\r\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    ratingBodyTemplate(rowData) {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => this.editProduct(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteProduct(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header\">\r\n                <h5 className=\"p-m-0\">Manage Products</h5>\r\n                <span className=\"p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Search...\" />\r\n                </span>\r\n            </div>\r\n        );\r\n        const productDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveProduct} />\r\n            </React.Fragment>\r\n        );\r\n        const deleteProductDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteProductDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteProduct} />\r\n            </React.Fragment>\r\n        );\r\n        const deleteProductsDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteProductsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedProducts} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Crud</span></h1>\r\n                        <p>This samples demonstrates a CRUD implementation using various PrimeReact components.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation datatable-crud-demo\">\r\n                    <Toast ref={(el) => this.toast = el} />\r\n\r\n                    <div className=\"card\">\r\n                        <Toolbar className=\"p-mb-4\" left={this.leftToolbarTemplate} right={this.rightToolbarTemplate}></Toolbar>\r\n\r\n                        <DataTable ref={(el) => this.dt = el} value={this.state.products} selection={this.state.selectedProducts} onSelectionChange={(e) => this.setState({ selectedProducts: e.value })}\r\n                            dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n                            globalFilter={this.state.globalFilter}\r\n                            header={header}>\r\n\r\n                            <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column header=\"Image\" body={this.imageBodyTemplate}></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"rating\" header=\"Reviews\" body={this.ratingBodyTemplate} sortable></Column>\r\n                            <Column field=\"inventoryStatus\" header=\"Status\" body={this.statusBodyTemplate} sortable></Column>\r\n                            <Column body={this.actionBodyTemplate}></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <Dialog visible={this.state.productDialog} style={{ width: '450px' }} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={this.hideDialog}>\r\n                        {this.state.product.image && <img src={`showcase/demo/images/product/${this.state.product.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={this.state.product.image} className=\"product-image\" />}\r\n                        <div className=\"p-field\">\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <InputText id=\"name\" value={this.state.product.name} onChange={(e) => this.onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.product.name })} />\r\n                            {this.state.submitted && !this.state.product.name && <small className=\"p-error\">Name is required.</small>}\r\n                        </div>\r\n                        <div className=\"p-field\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <InputTextarea id=\"description\" value={this.state.product.description} onChange={(e) => this.onInputChange(e, 'description')} required rows={3} cols={20} />\r\n                        </div>\r\n\r\n                        <div className=\"p-field\">\r\n                            <label className=\"p-mb-3\">Category</label>\r\n                            <div className=\"p-formgrid p-grid\">\r\n                                <div className=\"p-field-radiobutton p-col-6\">\r\n                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Accessories\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Accessories'} />\r\n                                    <label htmlFor=\"category1\">Accessories</label>\r\n                                </div>\r\n                                <div className=\"p-field-radiobutton p-col-6\">\r\n                                    <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Clothing'} />\r\n                                    <label htmlFor=\"category2\">Clothing</label>\r\n                                </div>\r\n                                <div className=\"p-field-radiobutton p-col-6\">\r\n                                    <RadioButton inputId=\"category3\" name=\"category\" value=\"Electronics\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Electronics'} />\r\n                                    <label htmlFor=\"category3\">Electronics</label>\r\n                                </div>\r\n                                <div className=\"p-field-radiobutton p-col-6\">\r\n                                    <RadioButton inputId=\"category4\" name=\"category\" value=\"Fitness\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Fitness'} />\r\n                                    <label htmlFor=\"category4\">Fitness</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col\">\r\n                                <label htmlFor=\"price\">Price</label>\r\n                                <InputNumber id=\"price\" value={this.state.product.price} onValueChange={(e) => this.onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\r\n                            </div>\r\n                            <div className=\"p-field p-col\">\r\n                                <label htmlFor=\"quantity\">Quantity</label>\r\n                                <InputNumber id=\"quantity\" value={this.state.product.quantity} onValueChange={(e) => this.onInputNumberChange(e, 'quantity')} integeronly />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteProductDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={this.hideDeleteProductDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.product && <span>Are you sure you want to delete <b>{this.state.product.name}</b>?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteProductsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={this.hideDeleteProductsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.product && <span>Are you sure you want to delete the selected products?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n\r\n                <DataTableCrudDoc />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableCrudDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport './DataTableDemo.css';\r\n\r\nexport class DataTableCrudDemo extends Component {\r\n\r\n    emptyProduct = {\r\n        id: null,\r\n        name: '',\r\n        image: null,\r\n        description: '',\r\n        category: null,\r\n        price: 0,\r\n        quantity: 0,\r\n        rating: 0,\r\n        inventoryStatus: 'INSTOCK'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: null,\r\n            productDialog: false,\r\n            deleteProductDialog: false,\r\n            deleteProductsDialog: false,\r\n            product: this.emptyProduct,\r\n            selectedProducts: null,\r\n            submitted: false,\r\n            globalFilter: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n        this.rightToolbarTemplate = this.rightToolbarTemplate.bind(this);\r\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveProduct = this.saveProduct.bind(this);\r\n        this.editProduct = this.editProduct.bind(this);\r\n        this.confirmDeleteProduct = this.confirmDeleteProduct.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n        this.exportCSV = this.exportCSV.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedProducts = this.deleteSelectedProducts.bind(this);\r\n        this.onCategoryChange = this.onCategoryChange.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onInputNumberChange = this.onInputNumberChange.bind(this);\r\n        this.hideDeleteProductDialog = this.hideDeleteProductDialog.bind(this);\r\n        this.hideDeleteProductsDialog = this.hideDeleteProductsDialog.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProducts().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n    }\r\n\r\n    openNew() {\r\n        this.setState({\r\n            product: this.emptyProduct,\r\n            submitted: false,\r\n            productDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            productDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteProductDialog() {\r\n        this.setState({ deleteProductDialog: false });\r\n    }\r\n\r\n    hideDeleteProductsDialog() {\r\n        this.setState({ deleteProductsDialog: false });\r\n    }\r\n\r\n    saveProduct() {\r\n        let state = { submitted: true };\r\n\r\n        if (this.state.product.name.trim()) {\r\n            let products = [...this.state.products];\r\n            let product = {...this.state.product};\r\n            if (this.state.product.id) {\r\n                const index = this.findIndexById(this.state.product.id);\r\n\r\n                products[index] = product;\r\n                this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\r\n            }\r\n            else {\r\n                product.id = this.createId();\r\n                product.image = 'product-placeholder.svg';\r\n                products.push(product);\r\n                this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\r\n            }\r\n\r\n            state = {\r\n                ...state,\r\n                products,\r\n                productDialog: false,\r\n                product: this.emptyProduct\r\n            };\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    editProduct(product) {\r\n        this.setState({\r\n            product: { ...product },\r\n            productDialog: true\r\n        });\r\n    }\r\n\r\n    confirmDeleteProduct(product) {\r\n        this.setState({\r\n            product,\r\n            deleteProductDialog: true\r\n        });\r\n    }\r\n\r\n    deleteProduct() {\r\n        let products = this.state.products.filter(val => val.id !== this.state.product.id);\r\n        this.setState({\r\n            products,\r\n            deleteProductDialog: false,\r\n            product: this.emptyProduct\r\n        });\r\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\r\n    }\r\n\r\n    findIndexById(id) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.state.products.length; i++) {\r\n            if (this.state.products[i].id === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    createId() {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    exportCSV() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteProductsDialog: true });\r\n    }\r\n\r\n    deleteSelectedProducts() {\r\n        let products = this.state.products.filter(val => !this.state.selectedProducts.includes(val));\r\n        this.setState({\r\n            products,\r\n            deleteProductsDialog: false,\r\n            selectedProducts: null\r\n        });\r\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\r\n    }\r\n\r\n    onCategoryChange(e) {\r\n        let product = {...this.state.product};\r\n        product['category'] = e.value;\r\n        this.setState({ product });\r\n    }\r\n\r\n    onInputChange(e, name) {\r\n        const val = (e.target && e.target.value) || '';\r\n        let product = {...this.state.product};\r\n        product[\\`\\${name}\\`] = val;\r\n\r\n        this.setState({ product });\r\n    }\r\n\r\n    onInputNumberChange(e, name) {\r\n        const val = e.value || 0;\r\n        let product = {...this.state.product};\r\n        product[\\`\\${name}\\`] = val;\r\n\r\n        this.setState({ product });\r\n    }\r\n\r\n    leftToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={this.confirmDeleteSelected} disabled={!this.state.selectedProducts || !this.state.selectedProducts.length} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    rightToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" />\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    imageBodyTemplate(rowData) {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    ratingBodyTemplate(rowData) {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => this.editProduct(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteProduct(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header\">\r\n                <h5 className=\"p-m-0\">Manage Products</h5>\r\n                <span className=\"p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Search...\" />\r\n                </span>\r\n            </div>\r\n        );\r\n        const productDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveProduct} />\r\n            </React.Fragment>\r\n        );\r\n        const deleteProductDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteProductDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteProduct} />\r\n            </React.Fragment>\r\n        );\r\n        const deleteProductsDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteProductsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedProducts} />\r\n            </React.Fragment>\r\n        );\r\n\r\n        return (\r\n            <div className=\"datatable-crud-demo\">\r\n                <Toast ref={(el) => this.toast = el} />\r\n\r\n                <div className=\"card\">\r\n                    <Toolbar className=\"p-mb-4\" left={this.leftToolbarTemplate} right={this.rightToolbarTemplate}></Toolbar>\r\n\r\n                    <DataTable ref={(el) => this.dt = el} value={this.state.products} selection={this.state.selectedProducts} onSelectionChange={(e) => this.setState({ selectedProducts: e.value })}\r\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n                        globalFilter={this.state.globalFilter}\r\n                        header={header}>\r\n\r\n                        <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column header=\"Image\" body={this.imageBodyTemplate}></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"rating\" header=\"Reviews\" body={this.ratingBodyTemplate} sortable></Column>\r\n                        <Column field=\"inventoryStatus\" header=\"Status\" body={this.statusBodyTemplate} sortable></Column>\r\n                        <Column body={this.actionBodyTemplate}></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <Dialog visible={this.state.productDialog} style={{ width: '450px' }} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={this.hideDialog}>\r\n                    {this.state.product.image && <img src={\\`showcase/demo/images/product/\\${this.state.product.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={this.state.product.image} className=\"product-image\" />}\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <InputText id=\"name\" value={this.state.product.name} onChange={(e) => this.onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.product.name })} />\r\n                        {this.state.submitted && !this.state.product.name && <small className=\"p-error\">Name is required.</small>}\r\n                    </div>\r\n                    <div className=\"p-field\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <InputTextarea id=\"description\" value={this.state.product.description} onChange={(e) => this.onInputChange(e, 'description')} required rows={3} cols={20} />\r\n                    </div>\r\n\r\n                    <div className=\"p-field\">\r\n                        <label className=\"p-mb-3\">Category</label>\r\n                        <div className=\"p-formgrid p-grid\">\r\n                            <div className=\"p-field-radiobutton p-col-6\">\r\n                                <RadioButton inputId=\"category1\" name=\"category\" value=\"Accessories\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Accessories'} />\r\n                                <label htmlFor=\"category1\">Accessories</label>\r\n                            </div>\r\n                            <div className=\"p-field-radiobutton p-col-6\">\r\n                                <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Clothing'} />\r\n                                <label htmlFor=\"category2\">Clothing</label>\r\n                            </div>\r\n                            <div className=\"p-field-radiobutton p-col-6\">\r\n                                <RadioButton inputId=\"category3\" name=\"category\" value=\"Electronics\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Electronics'} />\r\n                                <label htmlFor=\"category3\">Electronics</label>\r\n                            </div>\r\n                            <div className=\"p-field-radiobutton p-col-6\">\r\n                                <RadioButton inputId=\"category4\" name=\"category\" value=\"Fitness\" onChange={this.onCategoryChange} checked={this.state.product.category === 'Fitness'} />\r\n                                <label htmlFor=\"category4\">Fitness</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col\">\r\n                            <label htmlFor=\"price\">Price</label>\r\n                            <InputNumber id=\"price\" value={this.state.product.price} onValueChange={(e) => this.onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\r\n                        </div>\r\n                        <div className=\"p-field p-col\">\r\n                            <label htmlFor=\"quantity\">Quantity</label>\r\n                            <InputNumber id=\"quantity\" value={this.state.product.quantity} onValueChange={(e) => this.onInputNumberChange(e, 'quantity')} integeronly />\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog visible={this.state.deleteProductDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={this.hideDeleteProductDialog}>\r\n                    <div className=\"confirmation-content\">\r\n                        <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                        {this.state.product && <span>Are you sure you want to delete <b>{this.state.product.name}</b>?</span>}\r\n                    </div>\r\n                </Dialog>\r\n\r\n                <Dialog visible={this.state.deleteProductsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={this.hideDeleteProductsDialog}>\r\n                    <div className=\"confirmation-content\">\r\n                        <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                        {this.state.product && <span>Are you sure you want to delete the selected products?</span>}\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableCrudDemo = () => {\r\n\r\n    let emptyProduct = {\r\n        id: null,\r\n        name: '',\r\n        image: null,\r\n        description: '',\r\n        category: null,\r\n        price: 0,\r\n        quantity: 0,\r\n        rating: 0,\r\n        inventoryStatus: 'INSTOCK'\r\n    };\r\n\r\n    const [products, setProducts] = useState(null);\r\n    const [productDialog, setProductDialog] = useState(false);\r\n    const [deleteProductDialog, setDeleteProductDialog] = useState(false);\r\n    const [deleteProductsDialog, setDeleteProductsDialog] = useState(false);\r\n    const [product, setProduct] = useState(emptyProduct);\r\n    const [selectedProducts, setSelectedProducts] = useState(null);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const toast = useRef(null);\r\n    const dt = useRef(null);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProducts().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n    }\r\n\r\n    const openNew = () => {\r\n        setProduct(emptyProduct);\r\n        setSubmitted(false);\r\n        setProductDialog(true);\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setProductDialog(false);\r\n    }\r\n\r\n    const hideDeleteProductDialog = () => {\r\n        setDeleteProductDialog(false);\r\n    }\r\n\r\n    const hideDeleteProductsDialog = () => {\r\n        setDeleteProductsDialog(false);\r\n    }\r\n\r\n    const saveProduct = () => {\r\n        setSubmitted(true);\r\n\r\n        if (product.name.trim()) {\r\n            let _products = [...products];\r\n            let _product = {...product};\r\n            if (product.id) {\r\n                const index = findIndexById(product.id);\r\n\r\n                _products[index] = _product;\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\r\n            }\r\n            else {\r\n                _product.id = createId();\r\n                _product.image = 'product-placeholder.svg';\r\n                _products.push(_product);\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\r\n            }\r\n\r\n            setProducts(_products);\r\n            setProductDialog(false);\r\n            setProduct(emptyProduct);\r\n        }\r\n    }\r\n\r\n    const editProduct = (product) => {\r\n        setProduct({...product});\r\n        setProductDialog(true);\r\n    }\r\n\r\n    const confirmDeleteProduct = (product) => {\r\n        setProduct(product);\r\n        setDeleteProductDialog(true);\r\n    }\r\n\r\n    const deleteProduct = () => {\r\n        let _products = products.filter(val => val.id !== product.id);\r\n        setProduct(_products);\r\n        setDeleteProductDialog(false);\r\n        setProduct(emptyProduct);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (products[i].id === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const createId = () => {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    const exportCSV = () => {\r\n        dt.current.exportCSV();\r\n    }\r\n\r\n    const confirmDeleteSelected = () => {\r\n        setDeleteProductsDialog(true);\r\n    }\r\n\r\n    const deleteSelectedProducts = () => {\r\n        let _products = products.filter(val => !selectedProducts.includes(val));\r\n        setProducts(_products);\r\n        setDeleteProductsDialog(false);\r\n        setSelectedProducts(null);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n        let _product = {...product};\r\n        _product['category'] = e.value;\r\n        setProduct(_product);\r\n    }\r\n\r\n    const onInputChange = (e, name) => {\r\n        const val = (e.target && e.target.value) || '';\r\n        let _product = {...product};\r\n        _product[\\`\\${name}\\`] = val;\r\n\r\n        setProduct(_product);\r\n    }\r\n\r\n    const onInputNumberChange = (e, name) => {\r\n        const val = e.value || 0;\r\n        let _product = {...product};\r\n        _product[\\`\\${name}\\`] = val;\r\n\r\n        setProduct(_product);\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n                <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !selectedProducts.length} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const rightToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" />\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={exportCSV} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const imageBodyTemplate = (rowData) => {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    const ratingBodyTemplate = (rowData) => {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editProduct(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => confirmDeleteProduct(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n            <h5 className=\"p-m-0\">Manage Products</h5>\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\r\n            </span>\r\n        </div>\r\n    );\r\n    const productDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveProduct} />\r\n        </React.Fragment>\r\n    );\r\n    const deleteProductDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteProduct} />\r\n        </React.Fragment>\r\n    );\r\n    const deleteProductsDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductsDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteSelectedProducts} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-crud-demo\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\r\n\r\n                <DataTable ref={dt} value={products} selection={selectedProducts} onSelectionChange={(e) => setSelectedProducts(e.value)}\r\n                    dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n                    globalFilter={globalFilter}\r\n                    header={header}>\r\n\r\n                    <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column header=\"Image\" body={imageBodyTemplate}></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"rating\" header=\"Reviews\" body={ratingBodyTemplate} sortable></Column>\r\n                    <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable></Column>\r\n                    <Column body={actionBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\r\n                {product.image && <img src={\\`showcase/demo/images/product/\\${product.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={product.image} className=\"product-image\" />}\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <InputText id=\"name\" value={product.name} onChange={(e) => onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': submitted && !product.name })} />\r\n                    {submitted && !product.name && <small className=\"p-error\">Name is required.</small>}\r\n                </div>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <InputTextarea id=\"description\" value={product.description} onChange={(e) => onInputChange(e, 'description')} required rows={3} cols={20} />\r\n                </div>\r\n\r\n                <div className=\"p-field\">\r\n                    <label className=\"p-mb-3\">Category</label>\r\n                    <div className=\"p-formgrid p-grid\">\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category1\" name=\"category\" value=\"Accessories\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\r\n                            <label htmlFor=\"category1\">Accessories</label>\r\n                        </div>\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\r\n                            <label htmlFor=\"category2\">Clothing</label>\r\n                        </div>\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category3\" name=\"category\" value=\"Electronics\" onChange={onCategoryChange} checked={product.category === 'Electronics'} />\r\n                            <label htmlFor=\"category3\">Electronics</label>\r\n                        </div>\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category4\" name=\"category\" value=\"Fitness\" onChange={onCategoryChange} checked={product.category === 'Fitness'} />\r\n                            <label htmlFor=\"category4\">Fitness</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"quantity\">Quantity</label>\r\n                        <InputNumber id=\"quantity\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} integeronly />\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={hideDeleteProductDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {product && <span>Are you sure you want to delete <b>{product.name}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteProductsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={hideDeleteProductsDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {product && <span>Are you sure you want to delete the selected products?</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableCrudDemo = () => {\r\n\r\n    let emptyProduct = {\r\n        id: null,\r\n        name: '',\r\n        image: null,\r\n        description: '',\r\n        category: null,\r\n        price: 0,\r\n        quantity: 0,\r\n        rating: 0,\r\n        inventoryStatus: 'INSTOCK'\r\n    };\r\n\r\n    const [products, setProducts] = useState(null);\r\n    const [productDialog, setProductDialog] = useState(false);\r\n    const [deleteProductDialog, setDeleteProductDialog] = useState(false);\r\n    const [deleteProductsDialog, setDeleteProductsDialog] = useState(false);\r\n    const [product, setProduct] = useState(emptyProduct);\r\n    const [selectedProducts, setSelectedProducts] = useState(null);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const toast = useRef(null);\r\n    const dt = useRef(null);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProducts().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n    }\r\n\r\n    const openNew = () => {\r\n        setProduct(emptyProduct);\r\n        setSubmitted(false);\r\n        setProductDialog(true);\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setProductDialog(false);\r\n    }\r\n\r\n    const hideDeleteProductDialog = () => {\r\n        setDeleteProductDialog(false);\r\n    }\r\n\r\n    const hideDeleteProductsDialog = () => {\r\n        setDeleteProductsDialog(false);\r\n    }\r\n\r\n    const saveProduct = () => {\r\n        setSubmitted(true);\r\n\r\n        if (product.name.trim()) {\r\n            let _products = [...products];\r\n            let _product = {...product};\r\n            if (product.id) {\r\n                const index = findIndexById(product.id);\r\n\r\n                _products[index] = _product;\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\r\n            }\r\n            else {\r\n                _product.id = createId();\r\n                _product.image = 'product-placeholder.svg';\r\n                _products.push(_product);\r\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\r\n            }\r\n\r\n            setProducts(_products);\r\n            setProductDialog(false);\r\n            setProduct(emptyProduct);\r\n        }\r\n    }\r\n\r\n    const editProduct = (product) => {\r\n        setProduct({...product});\r\n        setProductDialog(true);\r\n    }\r\n\r\n    const confirmDeleteProduct = (product) => {\r\n        setProduct(product);\r\n        setDeleteProductDialog(true);\r\n    }\r\n\r\n    const deleteProduct = () => {\r\n        let _products = products.filter(val => val.id !== product.id);\r\n        setProduct(_products);\r\n        setDeleteProductDialog(false);\r\n        setProduct(emptyProduct);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (products[i].id === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const createId = () => {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    const exportCSV = () => {\r\n        dt.current.exportCSV();\r\n    }\r\n\r\n    const confirmDeleteSelected = () => {\r\n        setDeleteProductsDialog(true);\r\n    }\r\n\r\n    const deleteSelectedProducts = () => {\r\n        let _products = products.filter(val => !selectedProducts.includes(val));\r\n        setProducts(_products);\r\n        setDeleteProductsDialog(false);\r\n        setSelectedProducts(null);\r\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\r\n    }\r\n\r\n    const onCategoryChange = (e) => {\r\n        let _product = {...product};\r\n        _product['category'] = e.value;\r\n        setProduct(_product);\r\n    }\r\n\r\n    const onInputChange = (e, name) => {\r\n        const val = (e.target && e.target.value) || '';\r\n        let _product = {...product};\r\n        _product[\\`\\${name}\\`] = val;\r\n\r\n        setProduct(_product);\r\n    }\r\n\r\n    const onInputNumberChange = (e, name) => {\r\n        const val = e.value || 0;\r\n        let _product = {...product};\r\n        _product[\\`\\${name}\\`] = val;\r\n\r\n        setProduct(_product);\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n                <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !selectedProducts.length} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const rightToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" />\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={exportCSV} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const imageBodyTemplate = (rowData) => {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    const ratingBodyTemplate = (rowData) => {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editProduct(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => confirmDeleteProduct(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n            <h5 className=\"p-m-0\">Manage Products</h5>\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\r\n            </span>\r\n        </div>\r\n    );\r\n    const productDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveProduct} />\r\n        </React.Fragment>\r\n    );\r\n    const deleteProductDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteProduct} />\r\n        </React.Fragment>\r\n    );\r\n    const deleteProductsDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductsDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteSelectedProducts} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-crud-demo\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\r\n\r\n                <DataTable ref={dt} value={products} selection={selectedProducts} onSelectionChange={(e) => setSelectedProducts(e.value)}\r\n                    dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n                    globalFilter={globalFilter}\r\n                    header={header}>\r\n\r\n                    <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column header=\"Image\" body={imageBodyTemplate}></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"rating\" header=\"Reviews\" body={ratingBodyTemplate} sortable></Column>\r\n                    <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable></Column>\r\n                    <Column body={actionBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\r\n                {product.image && <img src={\\`showcase/demo/images/product/\\${product.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={product.image} className=\"product-image\" />}\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <InputText id=\"name\" value={product.name} onChange={(e) => onInputChange(e, 'name')} required autoFocus className={classNames({ 'p-invalid': submitted && !product.name })} />\r\n                    {submitted && !product.name && <small className=\"p-error\">Name is required.</small>}\r\n                </div>\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <InputTextarea id=\"description\" value={product.description} onChange={(e) => onInputChange(e, 'description')} required rows={3} cols={20} />\r\n                </div>\r\n\r\n                <div className=\"p-field\">\r\n                    <label className=\"p-mb-3\">Category</label>\r\n                    <div className=\"p-formgrid p-grid\">\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category1\" name=\"category\" value=\"Accessories\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\r\n                            <label htmlFor=\"category1\">Accessories</label>\r\n                        </div>\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\r\n                            <label htmlFor=\"category2\">Clothing</label>\r\n                        </div>\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category3\" name=\"category\" value=\"Electronics\" onChange={onCategoryChange} checked={product.category === 'Electronics'} />\r\n                            <label htmlFor=\"category3\">Electronics</label>\r\n                        </div>\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category4\" name=\"category\" value=\"Fitness\" onChange={onCategoryChange} checked={product.category === 'Fitness'} />\r\n                            <label htmlFor=\"category4\">Fitness</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\r\n                    </div>\r\n                    <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"quantity\">Quantity</label>\r\n                        <InputNumber id=\"quantity\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} integeronly />\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={hideDeleteProductDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {product && <span>Are you sure you want to delete <b>{product.name}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteProductsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={hideDeleteProductsDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {product && <span>Are you sure you want to delete the selected products?</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'src/demo/DataTableDemo.css': {\r\n                content: `\r\n.datatable-crud-demo .table-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.datatable-crud-demo .product-image {\r\n    width: 100px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n.datatable-crud-demo .p-dialog .product-image {\r\n    width: 150px;\r\n    margin: 0 auto 2rem auto;\r\n    display: block;\r\n}\r\n\r\n.datatable-crud-demo .confirmation-content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableCrudDemo', sources: this.sources, service: 'ProductService', data: 'products', extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}