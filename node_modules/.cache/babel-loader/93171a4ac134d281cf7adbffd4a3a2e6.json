{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\splitbutton\\\\SplitButtonPanel.js\",\n    _this = this;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { classNames } from '../utils/ClassNames';\nimport { CSSTransition } from 'react-transition-group';\n\nvar SplitButtonPanelComponent = /*#__PURE__*/function (_Component) {\n  _inherits(SplitButtonPanelComponent, _Component);\n\n  var _super = _createSuper(SplitButtonPanelComponent);\n\n  function SplitButtonPanelComponent() {\n    _classCallCheck(this, SplitButtonPanelComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SplitButtonPanelComponent, [{\n    key: \"renderElement\",\n    value: function renderElement() {\n      var className = classNames('p-menu p-menu-overlay p-component', this.props.menuClassName);\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.props.forwardRef,\n        classNames: \"p-connected-overlay\",\n        in: this.props.in,\n        timeout: {\n          enter: 120,\n          exit: 100\n        },\n        unmountOnExit: true,\n        onEnter: this.props.onEnter,\n        onEntered: this.props.onEntered,\n        onExit: this.props.onExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.props.forwardRef,\n        className: className,\n        style: this.props.menuStyle,\n        id: this.props.id,\n        onClick: this.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"p-menu-list p-reset\",\n        role: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, this.props.children)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderElement();\n\n      if (this.props.appendTo) {\n        return ReactDOM.createPortal(element, this.props.appendTo);\n      } else {\n        return element;\n      }\n    }\n  }]);\n\n  return SplitButtonPanelComponent;\n}(Component);\n\nSplitButtonPanelComponent.defaultProps = {\n  appendTo: null,\n  menuStyle: null,\n  menuClassName: null,\n  id: null,\n  onClick: null\n};\nSplitButtonPanelComponent.propTypes = {\n  appendTo: PropTypes.object,\n  menustyle: PropTypes.object,\n  menuClassName: PropTypes.string,\n  id: PropTypes.any,\n  onClick: PropTypes.func\n};\nexport var SplitButtonPanel = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SplitButtonPanelComponent, Object.assign({\n    forwardRef: ref\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 66\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/splitbutton/SplitButtonPanel.js"],"names":["React","Component","PropTypes","ReactDOM","classNames","CSSTransition","SplitButtonPanelComponent","className","props","menuClassName","forwardRef","in","enter","exit","onEnter","onEntered","onExit","menuStyle","id","onClick","children","element","renderElement","appendTo","createPortal","defaultProps","propTypes","object","menustyle","string","any","func","SplitButtonPanel","ref"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAEMC,yB;;;;;;;;;;;;;WAkBF,yBAAgB;AACZ,UAAIC,SAAS,GAAGH,UAAU,CAAC,mCAAD,EAAsC,KAAKI,KAAL,CAAWC,aAAjD,CAA1B;AAEA,0BACI,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,UAAnC;AAA+C,QAAA,UAAU,EAAC,qBAA1D;AAAgF,QAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,EAA/F;AAAmG,QAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,IAAI,EAAE;AAApB,SAA5G;AACI,QAAA,aAAa,MADjB;AACkB,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OADtC;AAC+C,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,SADrE;AACgF,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MADnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAK,QAAA,GAAG,EAAE,KAAKR,KAAL,CAAWE,UAArB;AAAiC,QAAA,SAAS,EAAEH,SAA5C;AAAuD,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWS,SAAzE;AAAoF,QAAA,EAAE,EAAE,KAAKT,KAAL,CAAWU,EAAnG;AAAuG,QAAA,OAAO,EAAE,KAAKC,OAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKX,KAAL,CAAWY,QADhB,CADJ,CAFJ,CADJ;AAUH;;;WAED,kBAAS;AACL,UAAIC,OAAO,GAAG,KAAKC,aAAL,EAAd;;AAEA,UAAI,KAAKd,KAAL,CAAWe,QAAf,EAAyB;AACrB,eAAOpB,QAAQ,CAACqB,YAAT,CAAsBH,OAAtB,EAA+B,KAAKb,KAAL,CAAWe,QAA1C,CAAP;AACH,OAFD,MAGK;AACD,eAAOF,OAAP;AACH;AACJ;;;;EA1CmCpB,S;;AAAlCK,yB,CAEKmB,Y,GAAe;AAClBF,EAAAA,QAAQ,EAAE,IADQ;AAElBN,EAAAA,SAAS,EAAE,IAFO;AAGlBR,EAAAA,aAAa,EAAE,IAHG;AAIlBS,EAAAA,EAAE,EAAE,IAJc;AAKlBC,EAAAA,OAAO,EAAE;AALS,C;AAFpBb,yB,CAUKoB,S,GAAY;AACfH,EAAAA,QAAQ,EAAErB,SAAS,CAACyB,MADL;AAEfC,EAAAA,SAAS,EAAE1B,SAAS,CAACyB,MAFN;AAGflB,EAAAA,aAAa,EAAEP,SAAS,CAAC2B,MAHV;AAIfX,EAAAA,EAAE,EAAEhB,SAAS,CAAC4B,GAJC;AAKfX,EAAAA,OAAO,EAAEjB,SAAS,CAAC6B;AALJ,C;AAmCvB,OAAO,IAAMC,gBAAgB,GAAGhC,KAAK,CAACU,UAAN,CAAiB,UAACF,KAAD,EAAQyB,GAAR;AAAA,sBAAgB,oBAAC,yBAAD;AAA2B,IAAA,UAAU,EAAEA;AAAvC,KAAgDzB,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;AAAA,CAAjB,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass SplitButtonPanelComponent extends Component {\r\n\r\n    static defaultProps = {\r\n        appendTo: null,\r\n        menuStyle: null,\r\n        menuClassName: null,\r\n        id: null,\r\n        onClick: null\r\n    };\r\n\r\n    static propTypes = {\r\n        appendTo: PropTypes.object,\r\n        menustyle: PropTypes.object,\r\n        menuClassName: PropTypes.string,\r\n        id: PropTypes.any,\r\n        onClick: PropTypes.func\r\n    };\r\n\r\n    renderElement() {\r\n        let className = classNames('p-menu p-menu-overlay p-component', this.props.menuClassName);\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.props.forwardRef} classNames=\"p-connected-overlay\" in={this.props.in} timeout={{ enter: 120, exit: 100 }}\r\n                unmountOnExit onEnter={this.props.onEnter} onEntered={this.props.onEntered} onExit={this.props.onExit}>\r\n                <div ref={this.props.forwardRef} className={className} style={this.props.menuStyle} id={this.props.id} onClick={this.onClick}>\r\n                    <ul className=\"p-menu-list p-reset\" role=\"menu\">\r\n                        {this.props.children}\r\n                    </ul>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let element = this.renderElement();\r\n\r\n        if (this.props.appendTo) {\r\n            return ReactDOM.createPortal(element, this.props.appendTo);\r\n        }\r\n        else {\r\n            return element;\r\n        }\r\n    }\r\n}\r\n\r\nexport const SplitButtonPanel = React.forwardRef((props, ref) => <SplitButtonPanelComponent forwardRef={ref} {...props} />);\r\n"]},"metadata":{},"sourceType":"module"}