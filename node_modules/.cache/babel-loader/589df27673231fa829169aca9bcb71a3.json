{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\datatable\\\\DataTableSortDemo.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from '../../components/datatable/DataTable';\nimport { Column } from '../../components/column/Column';\nimport ProductService from '../service/ProductService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var DataTableSortDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableSortDemo, _Component);\n\n  var _super = _createSuper(DataTableSortDemo);\n\n  function DataTableSortDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableSortDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      products: []\n    };\n    _this.productService = new ProductService();\n    _this.priceBodyTemplate = _this.priceBodyTemplate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataTableSortDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.productService.getProductsSmall().then(function (data) {\n        return _this2.setState({\n          products: data\n        });\n      });\n    }\n  }, {\n    key: \"formatCurrency\",\n    value: function formatCurrency(value) {\n      return value.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      });\n    }\n  }, {\n    key: \"priceBodyTemplate\",\n    value: function priceBodyTemplate(rowData) {\n      return this.formatCurrency(rowData.price);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, \"DataTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 39\n        }\n      }, \"Sort\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, \"Enabling sortable property on a column is enough to make a column sortable. Multiple column sorting is enabled using sortMode property and used with metaKey.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, \"Single Column\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"price\",\n        header: \"Price\",\n        body: this.priceBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"Multiple Columns\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"Use metakey to add a column to the sort selection.\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        sortMode: \"multiple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"price\",\n        header: \"Price\",\n        body: this.priceBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, \"Presort\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        sortField: \"category\",\n        sortOrder: -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"price\",\n        header: \"Price\",\n        body: this.priceBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, \"Removable Sort\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        removableSort: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"price\",\n        header: \"Price\",\n        body: this.priceBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(DataTableSortDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataTableSortDemo;\n}(Component);\nexport var DataTableSortDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataTableSortDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataTableSortDemoDoc);\n\n  function DataTableSortDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, DataTableSortDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nexport class DataTableSortDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: []\\n        };\\n\\n        this.productService = new ProductService();\\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    formatCurrency(value) {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    priceBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.price);\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Single Column</h5>\\n                    <DataTable value={this.state.products}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multiple Columns</h5>\\n                    <p>Use metakey to add a column to the sort selection.</p>\\n                    <DataTable value={this.state.products} sortMode=\\\"multiple\\\">\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Presort</h5>\\n                    <DataTable value={this.state.products} sortField=\\\"category\\\" sortOrder={-1}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Removable Sort</h5>\\n                    <DataTable value={this.state.products} removableSort>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" body={this.priceBodyTemplate} sortable></Column>\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableSortDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Column</h5>\\n                <DataTable value={products}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple Columns</h5>\\n                <p>Use metakey to add a column to the sort selection.</p>\\n                <DataTable value={products} sortMode=\\\"multiple\\\">\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Presort</h5>\\n                <DataTable value={products} sortField=\\\"category\\\" sortOrder={-1}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Removable Sort</h5>\\n                <DataTable value={products} removableSort>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nconst DataTableSortDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Column</h5>\\n                <DataTable value={products}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple Columns</h5>\\n                <p>Use metakey to add a column to the sort selection.</p>\\n                <DataTable value={products} sortMode=\\\"multiple\\\">\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Presort</h5>\\n                <DataTable value={products} sortField=\\\"category\\\" sortOrder={-1}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Removable Sort</h5>\\n                <DataTable value={products} removableSort>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" sortable></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\" sortable></Column>\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" body={priceBodyTemplate} sortable></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(DataTableSortDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataTableSortDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products-small'\n      })));\n    }\n  }]);\n\n  return DataTableSortDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/datatable/DataTableSortDemo.js"],"names":["React","Component","DataTable","Column","ProductService","TabView","useLiveEditorTabs","AppInlineHeader","DataTableSortDemo","props","state","products","productService","priceBodyTemplate","bind","getProductsSmall","then","data","setState","value","toLocaleString","style","currency","rowData","formatCurrency","price","DataTableSortDemoDoc","sources","tabName","content","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableSortDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Sort</span></h1>\r\n                        <p>Enabling sortable property on a column is enough to make a column sortable. Multiple column sorting is enabled using sortMode property and\r\n                            used with metaKey.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Single Column</h5>\r\n                        <DataTable value={this.state.products}>\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Multiple Columns</h5>\r\n                        <p>Use metakey to add a column to the sort selection.</p>\r\n                        <DataTable value={this.state.products} sortMode=\"multiple\">\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Presort</h5>\r\n                        <DataTable value={this.state.products} sortField=\"category\" sortOrder={-1}>\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Removable Sort</h5>\r\n                        <DataTable value={this.state.products} removableSort>\r\n                            <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                            <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableSortDemoDoc></DataTableSortDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableSortDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class DataTableSortDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Single Column</h5>\r\n                    <DataTable value={this.state.products}>\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multiple Columns</h5>\r\n                    <p>Use metakey to add a column to the sort selection.</p>\r\n                    <DataTable value={this.state.products} sortMode=\"multiple\">\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Presort</h5>\r\n                    <DataTable value={this.state.products} sortField=\"category\" sortOrder={-1}>\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Removable Sort</h5>\r\n                    <DataTable value={this.state.products} removableSort>\r\n                        <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                        <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                        <Column field=\"price\" header=\"Price\" body={this.priceBodyTemplate} sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableSortDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Column</h5>\r\n                <DataTable value={products}>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple Columns</h5>\r\n                <p>Use metakey to add a column to the sort selection.</p>\r\n                <DataTable value={products} sortMode=\"multiple\">\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Presort</h5>\r\n                <DataTable value={products} sortField=\"category\" sortOrder={-1}>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Removable Sort</h5>\r\n                <DataTable value={products} removableSort>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst DataTableSortDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Column</h5>\r\n                <DataTable value={products}>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple Columns</h5>\r\n                <p>Use metakey to add a column to the sort selection.</p>\r\n                <DataTable value={products} sortMode=\"multiple\">\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Presort</h5>\r\n                <DataTable value={products} sortField=\"category\" sortOrder={-1}>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Removable Sort</h5>\r\n                <DataTable value={products} removableSort>\r\n                    <Column field=\"code\" header=\"Code\" sortable></Column>\r\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\" sortable></Column>\r\n                    <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableSortDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}