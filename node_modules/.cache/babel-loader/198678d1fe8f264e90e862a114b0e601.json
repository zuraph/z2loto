{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var StepsDoc=/*#__PURE__*/function(_Component){_inherits(StepsDoc,_Component);var _super=_createSuper(StepsDoc);function StepsDoc(props){var _this;_classCallCheck(this,StepsDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Steps } from 'primereact/steps';\\nimport { Toast } from 'primereact/toast';\\nimport './StepsDemo.css';\\n\\nexport class StepsDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            activeIndex: 1\\n        };\\n\\n        this.items = [\\n            {\\n                label: 'Personal',\\n                command: (event) => {\\n                    this.toast.show({ severity: 'info', summary: 'First Step', detail: event.item.label });\\n                }\\n            },\\n            {\\n                label: 'Seat',\\n                command: (event) => {\\n                    this.toast.show({ severity: 'info', summary: 'Seat Selection', detail: event.item.label });\\n                }\\n            },\\n            {\\n                label: 'Payment',\\n                command: (event) => {\\n                    this.toast.show({ severity: 'info', summary: 'Pay with CC', detail: event.item.label });\\n                }\\n            },\\n            {\\n                label: 'Confirmation',\\n                command: (event) => {\\n                    this.toast.show({ severity: 'info', summary: 'Last Step', detail: event.item.label });\\n                }\\n            }\\n        ];\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"steps-demo\\\">\\n                <Toast ref={(el) => { this.toast = el }}></Toast>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <Steps model={this.items} />\\n\\n                    <h5>Interactive</h5>\\n                    <Steps model={this.items} activeIndex={this.state.activeIndex} onSelect={(e) => this.setState({ activeIndex: e.index })} readOnly={false} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useRef } from 'react';\\nimport { Steps } from 'primereact/steps';\\nimport { Toast } from 'primereact/toast';\\nimport './StepsDemo.css';\\n\\nconst StepsDemo = () => {\\n    const [activeIndex, setActiveIndex] = useState(1);\\n    const toast = useRef(null);\\n    const items = [\\n        {\\n            label: 'Personal',\\n            command: (event) => {\\n                toast.current.show({ severity: 'info', summary: 'First Step', detail: event.item.label });\\n            }\\n        },\\n        {\\n            label: 'Seat',\\n            command: (event) => {\\n                toast.current.show({ severity: 'info', summary: 'Seat Selection', detail: event.item.label });\\n            }\\n        },\\n        {\\n            label: 'Payment',\\n            command: (event) => {\\n                toast.current.show({ severity: 'info', summary: 'Pay with CC', detail: event.item.label });\\n            }\\n        },\\n        {\\n            label: 'Confirmation',\\n            command: (event) => {\\n                toast.current.show({ severity: 'info', summary: 'Last Step', detail: event.item.label });\\n            }\\n        }\\n    ];\\n\\n    return (\\n        <div className=\\\"steps-demo\\\">\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Steps model={items} />\\n\\n                <h5>Interactive</h5>\\n                <Steps model={items} activeIndex={activeIndex} onSelect={(e) => setActiveIndex(e.index)} readOnly={false} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useRef } from 'react';\\nimport { Steps } from 'primereact/steps';\\nimport { Toast } from 'primereact/toast';\\nimport './StepsDemo.css';\\n\\nconst StepsDemo = () => {\\n    const [activeIndex, setActiveIndex] = useState(1);\\n    const toast = useRef(null);\\n    const items = [\\n        {\\n            label: 'Personal',\\n            command: (event) => {\\n                toast.current.show({ severity: 'info', summary: 'First Step', detail: event.item.label });\\n            }\\n        },\\n        {\\n            label: 'Seat',\\n            command: (event) => {\\n                toast.current.show({ severity: 'info', summary: 'Seat Selection', detail: event.item.label });\\n            }\\n        },\\n        {\\n            label: 'Payment',\\n            command: (event) => {\\n                toast.current.show({ severity: 'info', summary: 'Pay with CC', detail: event.item.label });\\n            }\\n        },\\n        {\\n            label: 'Confirmation',\\n            command: (event) => {\\n                toast.current.show({ severity: 'info', summary: 'Last Step', detail: event.item.label });\\n            }\\n        }\\n    ];\\n\\n    return (\\n        <div className=\\\"steps-demo\\\">\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <Steps model={items} />\\n\\n                <h5>Interactive</h5>\\n                <Steps model={items} activeIndex={activeIndex} onSelect={(e) => setActiveIndex(e.index)} readOnly={false} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};_this.extFiles={'src/demo/StepsDemo.css':{content:\"\\n@media screen and (max-width: 640px) {\\n    .steps-demo .p-steps {\\n        height: 350px;\\n    }\\n    .steps-demo .p-steps > ul {\\n        flex-direction: column;\\n        height: 100%;\\n    }\\n    .steps-demo .p-steps > ul .p-steps-item {\\n        flex-direction: column-reverse;\\n        align-items: flex-start;\\n        justify-content: center;\\n    }\\n    .steps-demo .p-steps > ul .p-steps-item:before {\\n        position: static;\\n        left: auto;\\n        top: auto;\\n        margin-top: 0;\\n        border-left: 1px solid var(--surface-d);\\n        border-top: 0 none;\\n        width: auto;\\n        height: 100%;\\n        margin-left: 1rem;\\n    }\\n    .steps-demo .p-steps > ul .p-steps-item .p-menuitem-link {\\n        flex-direction: row;\\n        overflow: visible;\\n    }\\n    .steps-demo .p-steps > ul .p-steps-item .p-menuitem-link .p-steps-title {\\n        margin: 0 .5rem 0;\\n    }\\n    .steps-demo .p-steps > ul .p-steps-item:last-child {\\n        flex-grow: 0;\\n    }\\n    .steps-demo .p-steps > ul .p-steps-item:last-child .p-menuitem-link {\\n        padding: 0;\\n    }\\n    .steps-demo .p-steps > ul .p-steps-item:last-child:before {\\n        display: none;\\n    }\\n}\\n                \"}};return _this;}_createClass(StepsDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport {Steps} from 'primereact/steps';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"MenuItem API\"),/*#__PURE__*/React.createElement(\"p\",null,\"Steps uses the common menu item api to define its items, visit \",/*#__PURE__*/React.createElement(Link,{to:\"/menumodel\"},\" MenuModel \"),\" for details.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"TabMenu requires a collection of menuitems as its model.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst items = [\\n    {label: 'Personal'},\\n    {label: 'Seat'},\\n    {label: 'Payment'},\\n    {label: 'Confirmation'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Steps model={items} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"interactive\"),/*#__PURE__*/React.createElement(\"p\",null,\"Items are readOnly by default, if you'd like to make them interactive then disable readonly, use command handlers of menuitem to respond to selection events and define activeIndex property along with the onSelect event to use it as a controlled component.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Steps model={interactiveItems} activeIndex={activeIndex} onSelect={(e) => setActiveIndex(e.index)} readOnly={false} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst interactiveItems = [\\n    {\\n        label: 'Personal',\\n        command: (event) => {\\n            toast.current.show({severity:'info', summary:'First Step', detail: event.item.label});\\n        }\\n    },\\n    {\\n        label: 'Seat',\\n        command: (event) => {\\n            toast.current.show({severity:'info', summary:'Seat Selection', detail: event.item.label});\\n        }\\n    },\\n    {\\n        label: 'Payment',\\n        command: (event) => {\\n            toast.current.show({severity:'info', summary:'Pay with CC', detail: event.item.label});\\n        }\\n    },\\n    {\\n        label: 'Confirmation',\\n        command: (event) => {\\n            toast.current.show({severity:'info', summary:'Last Step', detail: event.item.label});\\n        }\\n    }\\n];\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"model\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"An array of menuitems.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"activeIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"0\"),/*#__PURE__*/React.createElement(\"td\",null,\"Index of the active item.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"readOnly\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether the items are clickable or not.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the component.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onSelect\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Browser event\",/*#__PURE__*/React.createElement(\"br\",null),\"event.item: Selected item instance\",/*#__PURE__*/React.createElement(\"br\",null),\"event.index: Index of selected item instance\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the new step is selected.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-steps\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-steps-item\"),/*#__PURE__*/React.createElement(\"td\",null,\"Menuitem element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-steps-number\"),/*#__PURE__*/React.createElement(\"td\",null,\"Number of menuitem.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-steps-title\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of menuitem.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'StepsDemo',sources:this.sources,extFiles:this.extFiles})));}}]);return StepsDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/steps/StepsDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","StepsDoc","props","sources","tabName","content","extFiles","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class StepsDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Steps } from 'primereact/steps';\r\nimport { Toast } from 'primereact/toast';\r\nimport './StepsDemo.css';\r\n\r\nexport class StepsDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: 1\r\n        };\r\n\r\n        this.items = [\r\n            {\r\n                label: 'Personal',\r\n                command: (event) => {\r\n                    this.toast.show({ severity: 'info', summary: 'First Step', detail: event.item.label });\r\n                }\r\n            },\r\n            {\r\n                label: 'Seat',\r\n                command: (event) => {\r\n                    this.toast.show({ severity: 'info', summary: 'Seat Selection', detail: event.item.label });\r\n                }\r\n            },\r\n            {\r\n                label: 'Payment',\r\n                command: (event) => {\r\n                    this.toast.show({ severity: 'info', summary: 'Pay with CC', detail: event.item.label });\r\n                }\r\n            },\r\n            {\r\n                label: 'Confirmation',\r\n                command: (event) => {\r\n                    this.toast.show({ severity: 'info', summary: 'Last Step', detail: event.item.label });\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"steps-demo\">\r\n                <Toast ref={(el) => { this.toast = el }}></Toast>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <Steps model={this.items} />\r\n\r\n                    <h5>Interactive</h5>\r\n                    <Steps model={this.items} activeIndex={this.state.activeIndex} onSelect={(e) => this.setState({ activeIndex: e.index })} readOnly={false} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useRef } from 'react';\r\nimport { Steps } from 'primereact/steps';\r\nimport { Toast } from 'primereact/toast';\r\nimport './StepsDemo.css';\r\n\r\nconst StepsDemo = () => {\r\n    const [activeIndex, setActiveIndex] = useState(1);\r\n    const toast = useRef(null);\r\n    const items = [\r\n        {\r\n            label: 'Personal',\r\n            command: (event) => {\r\n                toast.current.show({ severity: 'info', summary: 'First Step', detail: event.item.label });\r\n            }\r\n        },\r\n        {\r\n            label: 'Seat',\r\n            command: (event) => {\r\n                toast.current.show({ severity: 'info', summary: 'Seat Selection', detail: event.item.label });\r\n            }\r\n        },\r\n        {\r\n            label: 'Payment',\r\n            command: (event) => {\r\n                toast.current.show({ severity: 'info', summary: 'Pay with CC', detail: event.item.label });\r\n            }\r\n        },\r\n        {\r\n            label: 'Confirmation',\r\n            command: (event) => {\r\n                toast.current.show({ severity: 'info', summary: 'Last Step', detail: event.item.label });\r\n            }\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"steps-demo\">\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Steps model={items} />\r\n\r\n                <h5>Interactive</h5>\r\n                <Steps model={items} activeIndex={activeIndex} onSelect={(e) => setActiveIndex(e.index)} readOnly={false} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useRef } from 'react';\r\nimport { Steps } from 'primereact/steps';\r\nimport { Toast } from 'primereact/toast';\r\nimport './StepsDemo.css';\r\n\r\nconst StepsDemo = () => {\r\n    const [activeIndex, setActiveIndex] = useState(1);\r\n    const toast = useRef(null);\r\n    const items = [\r\n        {\r\n            label: 'Personal',\r\n            command: (event) => {\r\n                toast.current.show({ severity: 'info', summary: 'First Step', detail: event.item.label });\r\n            }\r\n        },\r\n        {\r\n            label: 'Seat',\r\n            command: (event) => {\r\n                toast.current.show({ severity: 'info', summary: 'Seat Selection', detail: event.item.label });\r\n            }\r\n        },\r\n        {\r\n            label: 'Payment',\r\n            command: (event) => {\r\n                toast.current.show({ severity: 'info', summary: 'Pay with CC', detail: event.item.label });\r\n            }\r\n        },\r\n        {\r\n            label: 'Confirmation',\r\n            command: (event) => {\r\n                toast.current.show({ severity: 'info', summary: 'Last Step', detail: event.item.label });\r\n            }\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"steps-demo\">\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <Steps model={items} />\r\n\r\n                <h5>Interactive</h5>\r\n                <Steps model={items} activeIndex={activeIndex} onSelect={(e) => setActiveIndex(e.index)} readOnly={false} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/StepsDemo.css': {\r\n                content: `\r\n@media screen and (max-width: 640px) {\r\n    .steps-demo .p-steps {\r\n        height: 350px;\r\n    }\r\n    .steps-demo .p-steps > ul {\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n    .steps-demo .p-steps > ul .p-steps-item {\r\n        flex-direction: column-reverse;\r\n        align-items: flex-start;\r\n        justify-content: center;\r\n    }\r\n    .steps-demo .p-steps > ul .p-steps-item:before {\r\n        position: static;\r\n        left: auto;\r\n        top: auto;\r\n        margin-top: 0;\r\n        border-left: 1px solid var(--surface-d);\r\n        border-top: 0 none;\r\n        width: auto;\r\n        height: 100%;\r\n        margin-left: 1rem;\r\n    }\r\n    .steps-demo .p-steps > ul .p-steps-item .p-menuitem-link {\r\n        flex-direction: row;\r\n        overflow: visible;\r\n    }\r\n    .steps-demo .p-steps > ul .p-steps-item .p-menuitem-link .p-steps-title {\r\n        margin: 0 .5rem 0;\r\n    }\r\n    .steps-demo .p-steps > ul .p-steps-item:last-child {\r\n        flex-grow: 0;\r\n    }\r\n    .steps-demo .p-steps > ul .p-steps-item:last-child .p-menuitem-link {\r\n        padding: 0;\r\n    }\r\n    .steps-demo .p-steps > ul .p-steps-item:last-child:before {\r\n        display: none;\r\n    }\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport {Steps} from 'primereact/steps';\r\n`}\r\n</CodeHighlight>\r\n                        <h5>MenuItem API</h5>\r\n                        <p>Steps uses the common menu item api to define its items, visit <Link to=\"/menumodel\"> MenuModel </Link> for details.</p>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>TabMenu requires a collection of menuitems as its model.</p>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst items = [\r\n    {label: 'Personal'},\r\n    {label: 'Seat'},\r\n    {label: 'Payment'},\r\n    {label: 'Confirmation'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Steps model={items} />\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>interactive</h5>\r\n                        <p>Items are readOnly by default, if you'd like to make them interactive then disable readonly, use command handlers of menuitem to respond to selection events and define activeIndex property along with the\r\n                            onSelect event to use it as a controlled component.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Steps model={interactiveItems} activeIndex={activeIndex} onSelect={(e) => setActiveIndex(e.index)} readOnly={false} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst interactiveItems = [\r\n    {\r\n        label: 'Personal',\r\n        command: (event) => {\r\n            toast.current.show({severity:'info', summary:'First Step', detail: event.item.label});\r\n        }\r\n    },\r\n    {\r\n        label: 'Seat',\r\n        command: (event) => {\r\n            toast.current.show({severity:'info', summary:'Seat Selection', detail: event.item.label});\r\n        }\r\n    },\r\n    {\r\n        label: 'Payment',\r\n        command: (event) => {\r\n            toast.current.show({severity:'info', summary:'Pay with CC', detail: event.item.label});\r\n        }\r\n    },\r\n    {\r\n        label: 'Confirmation',\r\n        command: (event) => {\r\n            toast.current.show({severity:'info', summary:'Last Step', detail: event.item.label});\r\n        }\r\n    }\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>model</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of menuitems.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>activeIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>0</td>\r\n                                        <td>Index of the active item.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>readOnly</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether the items are clickable or not.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the component.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onSelect</td>\r\n                                        <td>event.originalEvent: Browser event<br />\r\n                                        event.item: Selected item instance<br />\r\n                                        event.index: Index of selected item instance</td>\r\n                                        <td>Callback to invoke when the new step is selected.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-steps</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-steps-item</td>\r\n                                        <td>Menuitem element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-steps-number</td>\r\n                                        <td>Number of menuitem.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-steps-title</td>\r\n                                        <td>Label of menuitem.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'StepsDemo', sources: this.sources, extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}