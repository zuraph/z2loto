{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TreeTable}from'../../components/treetable/TreeTable';import{Column}from'../../components/column/Column';import{NodeService}from'../service/NodeService';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var TreeTableColResizeDemo=/*#__PURE__*/function(_Component){_inherits(TreeTableColResizeDemo,_Component);var _super=_createSuper(TreeTableColResizeDemo);function TreeTableColResizeDemo(props){var _this;_classCallCheck(this,TreeTableColResizeDemo);_this=_super.call(this,props);_this.state={nodes:[]};_this.nodeservice=new NodeService();return _this;}_createClass(TreeTableColResizeDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.nodeservice.getTreeTableNodes().then(function(data){return _this2.setState({nodes:data});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"treeTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"TreeTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Column Resize\")),/*#__PURE__*/React.createElement(\"p\",null,\"Columns can be resized using drag drop by setting the resizableColumns to true. There are two resize modes; \\\"fit\\\" and \\\"expand\\\". Fit is the default one and the overall table width does not change when a column is resized whereas in \\\"expand\\\" mode, table width also changes along with the column width.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Fit Mode\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,resizableColumns:true,columnResizeMode:\"fit\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Expand Mode\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,resizableColumns:true,columnResizeMode:\"expand\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Scrollable\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,resizableColumns:true,scrollable:true,scrollHeight:\"200px\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\"}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Scrollable with Variable Width\"),/*#__PURE__*/React.createElement(TreeTable,{value:this.state.nodes,resizableColumns:true,scrollable:true,scrollHeight:\"200px\"},/*#__PURE__*/React.createElement(Column,{field:\"name\",header:\"Name\",expander:true,style:{width:'50%'}}),/*#__PURE__*/React.createElement(Column,{field:\"size\",header:\"Size\",style:{width:'30%'}}),/*#__PURE__*/React.createElement(Column,{field:\"type\",header:\"Type\",style:{width:'20%'}})))),/*#__PURE__*/React.createElement(TreeTableColResizeDemoDoc,null));}}]);return TreeTableColResizeDemo;}(Component);var TreeTableColResizeDemoDoc=/*#__PURE__*/function(_Component2){_inherits(TreeTableColResizeDemoDoc,_Component2);var _super2=_createSuper(TreeTableColResizeDemoDoc);function TreeTableColResizeDemoDoc(props){var _this3;_classCallCheck(this,TreeTableColResizeDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport class TreeTableColResizeDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes: []\\n        };\\n        this.nodeservice = new NodeService();\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Fit Mode</h5>\\n                    <TreeTable value={this.state.nodes} resizableColumns columnResizeMode=\\\"fit\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Expand Mode</h5>\\n                    <TreeTable value={this.state.nodes} resizableColumns columnResizeMode=\\\"expand\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Scrollable</h5>\\n                    <TreeTable value={this.state.nodes} resizableColumns scrollable scrollHeight=\\\"200px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Scrollable with Variable Width</h5>\\n                    <TreeTable value={this.state.nodes} resizableColumns scrollable scrollHeight=\\\"200px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '50%' }}></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '30%' }}></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '20%' }}></Column>\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableColResizeDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Fit Mode</h5>\\n                    <TreeTable value={nodes} resizableColumns columnResizeMode=\\\"fit\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Expand Mode</h5>\\n                    <TreeTable value={nodes} resizableColumns columnResizeMode=\\\"expand\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Scrollable</h5>\\n                    <TreeTable value={nodes} resizableColumns scrollable scrollHeight=\\\"200px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Scrollable with Variable Width</h5>\\n                    <TreeTable value={nodes} resizableColumns scrollable scrollHeight=\\\"200px\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{ width: '50%' }}></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" style={{ width: '30%' }}></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" style={{ width: '20%' }}></Column>\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableColResizeDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <h3>Fit Mode</h3>\\n            <TreeTable value={nodes} resizableColumns columnResizeMode=\\\"fit\\\">\\n                <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n            </TreeTable>\\n\\n            <h3>Expand Mode</h3>\\n            <TreeTable value={nodes} resizableColumns columnResizeMode=\\\"expand\\\">\\n                <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n            </TreeTable>\\n\\n            <h3>Scrollable</h3>\\n            <TreeTable value={nodes} resizableColumns scrollable scrollHeight=\\\"200px\\\">\\n                <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n            </TreeTable>\\n\\n            <h3>Scrollable with Variable Width</h3>\\n            <TreeTable value={nodes} resizableColumns scrollable scrollHeight=\\\"200px\\\">\\n                <Column field=\\\"name\\\" header=\\\"Name\\\" expander style={{width:'50%'}}></Column>\\n                <Column field=\\\"size\\\" header=\\\"Size\\\" style={{width:'30%'}}></Column>\\n                <Column field=\\\"type\\\" header=\\\"Type\\\" style={{width:'20%'}}></Column>\\n            </TreeTable>\\n        </div>\\n    )\\n}\\n                \"}};return _this3;}_createClass(TreeTableColResizeDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'TreeTableColResizeDemo',sources:this.sources,service:'NodeService',data:'treetablenodes'})));}}]);return TreeTableColResizeDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/treetable/TreeTableColResizeDemo.js"],"names":["React","Component","TreeTable","Column","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableColResizeDemo","props","state","nodes","nodeservice","getTreeTableNodes","then","data","setState","width","TreeTableColResizeDemoDoc","sources","tabName","content","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class TreeTableColResizeDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Column Resize</span></h1>\r\n                        <p>Columns can be resized using drag drop by setting the resizableColumns to true. There are two resize modes; \"fit\" and \"expand\".\r\n                            Fit is the default one and the overall table width does not change when a column is resized whereas in \"expand\" mode, table width also changes along with the column width.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Fit Mode</h5>\r\n                        <TreeTable value={this.state.nodes} resizableColumns columnResizeMode=\"fit\">\r\n                            <Column field=\"name\" header=\"Name\" expander></Column>\r\n                            <Column field=\"size\" header=\"Size\"></Column>\r\n                            <Column field=\"type\" header=\"Type\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Expand Mode</h5>\r\n                        <TreeTable value={this.state.nodes} resizableColumns columnResizeMode=\"expand\">\r\n                            <Column field=\"name\" header=\"Name\" expander></Column>\r\n                            <Column field=\"size\" header=\"Size\"></Column>\r\n                            <Column field=\"type\" header=\"Type\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Scrollable</h5>\r\n                        <TreeTable value={this.state.nodes} resizableColumns scrollable scrollHeight=\"200px\">\r\n                            <Column field=\"name\" header=\"Name\" expander></Column>\r\n                            <Column field=\"size\" header=\"Size\"></Column>\r\n                            <Column field=\"type\" header=\"Type\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Scrollable with Variable Width</h5>\r\n                        <TreeTable value={this.state.nodes} resizableColumns scrollable scrollHeight=\"200px\">\r\n                            <Column field=\"name\" header=\"Name\" expander style={{ width: '50%' }}></Column>\r\n                            <Column field=\"size\" header=\"Size\" style={{ width: '30%' }}></Column>\r\n                            <Column field=\"type\" header=\"Type\" style={{ width: '20%' }}></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableColResizeDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TreeTableColResizeDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport class TreeTableColResizeDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Fit Mode</h5>\r\n                    <TreeTable value={this.state.nodes} resizableColumns columnResizeMode=\"fit\">\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Expand Mode</h5>\r\n                    <TreeTable value={this.state.nodes} resizableColumns columnResizeMode=\"expand\">\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Scrollable</h5>\r\n                    <TreeTable value={this.state.nodes} resizableColumns scrollable scrollHeight=\"200px\">\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Scrollable with Variable Width</h5>\r\n                    <TreeTable value={this.state.nodes} resizableColumns scrollable scrollHeight=\"200px\">\r\n                        <Column field=\"name\" header=\"Name\" expander style={{ width: '50%' }}></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '30%' }}></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '20%' }}></Column>\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableColResizeDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Fit Mode</h5>\r\n                    <TreeTable value={nodes} resizableColumns columnResizeMode=\"fit\">\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Expand Mode</h5>\r\n                    <TreeTable value={nodes} resizableColumns columnResizeMode=\"expand\">\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Scrollable</h5>\r\n                    <TreeTable value={nodes} resizableColumns scrollable scrollHeight=\"200px\">\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Scrollable with Variable Width</h5>\r\n                    <TreeTable value={nodes} resizableColumns scrollable scrollHeight=\"200px\">\r\n                        <Column field=\"name\" header=\"Name\" expander style={{ width: '50%' }}></Column>\r\n                        <Column field=\"size\" header=\"Size\" style={{ width: '30%' }}></Column>\r\n                        <Column field=\"type\" header=\"Type\" style={{ width: '20%' }}></Column>\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableColResizeDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <h3>Fit Mode</h3>\r\n            <TreeTable value={nodes} resizableColumns columnResizeMode=\"fit\">\r\n                <Column field=\"name\" header=\"Name\" expander></Column>\r\n                <Column field=\"size\" header=\"Size\"></Column>\r\n                <Column field=\"type\" header=\"Type\"></Column>\r\n            </TreeTable>\r\n\r\n            <h3>Expand Mode</h3>\r\n            <TreeTable value={nodes} resizableColumns columnResizeMode=\"expand\">\r\n                <Column field=\"name\" header=\"Name\" expander></Column>\r\n                <Column field=\"size\" header=\"Size\"></Column>\r\n                <Column field=\"type\" header=\"Type\"></Column>\r\n            </TreeTable>\r\n\r\n            <h3>Scrollable</h3>\r\n            <TreeTable value={nodes} resizableColumns scrollable scrollHeight=\"200px\">\r\n                <Column field=\"name\" header=\"Name\" expander></Column>\r\n                <Column field=\"size\" header=\"Size\"></Column>\r\n                <Column field=\"type\" header=\"Type\"></Column>\r\n            </TreeTable>\r\n\r\n            <h3>Scrollable with Variable Width</h3>\r\n            <TreeTable value={nodes} resizableColumns scrollable scrollHeight=\"200px\">\r\n                <Column field=\"name\" header=\"Name\" expander style={{width:'50%'}}></Column>\r\n                <Column field=\"size\" header=\"Size\" style={{width:'30%'}}></Column>\r\n                <Column field=\"type\" header=\"Type\" style={{width:'20%'}}></Column>\r\n            </TreeTable>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableColResizeDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}