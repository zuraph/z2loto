{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\dataview\\\\DataViewLazyDemo.js\";\nimport React, { Component } from 'react';\nimport { DataView, DataViewLayoutOptions } from '../../components/dataview/DataView';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport ProductService from '../service/ProductService';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport { Rating } from '../../components/rating/Rating';\nimport { Button } from '../../components/button/Button';\nimport './DataViewDemo.scss';\nexport var DataViewLazyDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataViewLazyDemo, _Component);\n\n  var _super = _createSuper(DataViewLazyDemo);\n\n  function DataViewLazyDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataViewLazyDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      products: null,\n      layout: 'grid',\n      loading: true,\n      first: 0,\n      totalRecords: 0\n    };\n    _this.rows = 6;\n    _this.productService = new ProductService();\n    _this.itemTemplate = _this.itemTemplate.bind(_assertThisInitialized(_this));\n    _this.onPage = _this.onPage.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataViewLazyDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.productService.getProducts().then(function (data) {\n          _this2.datasource = data;\n\n          _this2.setState({\n            totalRecords: data.length,\n            products: _this2.datasource.slice(0, _this2.rows),\n            loading: false\n          });\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"onPage\",\n    value: function onPage(event) {\n      var _this3 = this;\n\n      this.setState({\n        loading: true\n      }); //imitate delay of a backend call\n\n      setTimeout(function () {\n        var startIndex = event.first;\n        var endIndex = event.first + _this3.rows;\n\n        _this3.setState({\n          first: startIndex,\n          products: _this3.datasource.slice(startIndex, endIndex),\n          loading: false\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"renderListItem\",\n    value: function renderListItem(data) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-list-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"showcase/demo/images/product/\".concat(data.image),\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        alt: data.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-list-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, data.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, data.description), /*#__PURE__*/React.createElement(Rating, {\n        value: data.rating,\n        readOnly: true,\n        cancel: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-tag product-category-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 76\n        }\n      }, data.category)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-list-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \"$\", data.price), /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-shopping-cart\",\n        label: \"Add to Cart\",\n        disabled: data.inventoryStatus === 'OUTOFSTOCK',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-badge status-\".concat(data.inventoryStatus.toLowerCase()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, data.inventoryStatus))));\n    }\n  }, {\n    key: \"renderGridItem\",\n    value: function renderGridItem(data) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-grid-item card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-grid-item-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-tag product-category-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, data.category)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-badge status-\".concat(data.inventoryStatus.toLowerCase()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, data.inventoryStatus)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-grid-item-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"showcase/demo/images/product/\".concat(data.image),\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        alt: data.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, data.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, data.description), /*#__PURE__*/React.createElement(Rating, {\n        value: data.rating,\n        readOnly: true,\n        cancel: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-grid-item-bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, \"$\", data.price), /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-shopping-cart\",\n        label: \"Add to Cart\",\n        disabled: data.inventoryStatus === 'OUTOFSTOCK',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }, {\n    key: \"itemTemplate\",\n    value: function itemTemplate(product, layout) {\n      if (!product) {\n        return;\n      }\n\n      if (layout === 'list') return this.renderListItem(product);else if (layout === 'grid') return this.renderGridItem(product);\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this4 = this;\n\n      var onOptionChange = function onOptionChange(e) {\n        _this4.setState({\n          loading: true\n        }, function () {\n          setTimeout(function () {\n            _this4.setState({\n              loading: false,\n              layout: e.value\n            });\n          }, 1000);\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DataViewLayoutOptions, {\n        layout: this.state.layout,\n        onChange: onOptionChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var header = this.renderHeader();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataView\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, \"DataView \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 38\n        }\n      }, \"Lazy\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, \"Lazy mode is handy to deal with large datasets, instead of loading the entire data, small chunks of data is loaded by invoking corresponding callbacks everytime paging, sorting and filtering happens. Sample belows imitates lazy paging by using an in memory list. It is also important to assign the logical number of rows to totalRecords by doing a projection query for paginator configuration so that paginator displays the UI assuming there are actually records of totalRecords size although in reality they aren't as in lazy mode, only the records that are displayed on the current page exist.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation dataview-demo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DataView, {\n        value: this.state.products,\n        layout: this.state.layout,\n        header: header,\n        itemTemplate: this.itemTemplate,\n        lazy: true,\n        paginator: true,\n        paginatorPosition: 'both',\n        rows: this.rows,\n        totalRecords: this.state.totalRecords,\n        first: this.state.first,\n        onPage: this.onPage,\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(DataViewLazyDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataViewLazyDemo;\n}(Component);\nexport var DataViewLazyDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataViewLazyDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataViewLazyDemoDoc);\n\n  function DataViewLazyDemoDoc(props) {\n    var _this5;\n\n    _classCallCheck(this, DataViewLazyDemoDoc);\n\n    _this5 = _super2.call(this, props);\n    _this5.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport './DataViewDemo.css';\\n\\nexport class DataViewLazyDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            products: null,\\n            layout: 'grid',\\n            loading: true,\\n            first: 0,\\n            totalRecords: 0\\n        };\\n        this.rows = 6;\\n\\n        this.productService = new ProductService();\\n        this.itemTemplate = this.itemTemplate.bind(this);\\n        this.onPage = this.onPage.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        setTimeout(() => {\\n            this.productService.getProducts().then(data => {\\n                this.datasource = data;\\n                this.setState({\\n                    totalRecords: data.length,\\n                    products: this.datasource.slice(0, this.rows),\\n                    loading: false\\n                });\\n            });\\n        }, 1000);\\n    }\\n\\n    onPage(event) {\\n        this.setState({\\n            loading: true\\n        });\\n\\n        //imitate delay of a backend call\\n        setTimeout(() => {\\n            const startIndex = event.first;\\n            const endIndex = event.first + this.rows;\\n\\n            this.setState({\\n                first: startIndex,\\n                products: this.datasource.slice(startIndex, endIndex),\\n                loading: false\\n            });\\n        }, 1000);\\n    }\\n\\n    renderListItem(data) {\\n        return (\\n            <div className=\\\"p-col-12\\\">\\n                <div className=\\\"product-list-item\\\">\\n                    <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                    <div className=\\\"product-list-detail\\\">\\n                        <div className=\\\"product-name\\\">{data.name}</div>\\n                        <div className=\\\"product-description\\\">{data.description}</div>\\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                        <i className=\\\"pi pi-tag product-category-icon\\\"></i><span className=\\\"product-category\\\">{data.category}</span>\\n                    </div>\\n                    <div className=\\\"product-list-action\\\">\\n                        <span className=\\\"product-price\\\">${data.price}</span>\\n                        <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    renderGridItem(data) {\\n        return (\\n            <div className=\\\"p-col-12 p-md-4\\\">\\n                <div className=\\\"product-grid-item card\\\">\\n                    <div className=\\\"product-grid-item-top\\\">\\n                        <div>\\n                            <i className=\\\"pi pi-tag product-category-icon\\\"></i>\\n                            <span className=\\\"product-category\\\">{data.category}</span>\\n                        </div>\\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                    </div>\\n                    <div className=\\\"product-grid-item-content\\\">\\n                    <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                        <div className=\\\"product-name\\\">{data.name}</div>\\n                        <div className=\\\"product-description\\\">{data.description}</div>\\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                    </div>\\n                    <div className=\\\"product-grid-item-bottom\\\">\\n                        <span className=\\\"product-price\\\">${data.price}</span>\\n                        <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    itemTemplate(product, layout) {\\n        if (!product) {\\n            return;\\n        }\\n\\n        if (layout === 'list')\\n            return this.renderListItem(product);\\n        else if (layout === 'grid')\\n            return this.renderGridItem(product);\\n    }\\n\\n    renderHeader() {\\n        let onOptionChange = (e) => {\\n            this.setState({ loading: true }, () => {\\n                setTimeout(() => {\\n                    this.setState({\\n                        loading: false,\\n                        layout: e.value\\n                    });\\n                }, 1000);\\n            });\\n        };\\n\\n        return (\\n            <div style={{ textAlign: 'left' }}>\\n                <DataViewLayoutOptions layout={this.state.layout} onChange={onOptionChange} />\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        const header = this.renderHeader();\\n\\n        return (\\n            <div className=\\\"dataview-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <DataView value={this.state.products} layout={this.state.layout} header={header}\\n                            itemTemplate={this.itemTemplate} lazy paginator paginatorPosition={'both'} rows={this.rows}\\n                            totalRecords={this.state.totalRecords} first={this.state.first} onPage={this.onPage} loading={this.state.loading} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport './DataViewDemo.css';\\n\\nconst DataViewLazyDemo = () => {\\n    const [products, setProducts] = useState(null);\\n    const [layout, setLayout] = useState('grid');\\n    const [loading, setLoading] = useState(true);\\n    const [first, setFirst] = useState(0);\\n    const [totalRecords, setTotalRecords] = useState(0);\\n    const rows = useRef(6);\\n    const datasource = useRef(null);\\n    const isMounted = useRef(false);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        if (isMounted.current) {\\n            setTimeout(() => {\\n                setLoading(false);\\n                setLayout(e.value);\\n            }, 1000);\\n        }\\n    }, [loading]); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    useEffect(() => {\\n        setTimeout(() => {\\n            isMounted.current = true;\\n            productService.getProducts().then(data => {\\n                datasource.current = data;\\n                setTotalRecords(data.length);\\n                setProducts(datasource.current.slice(0, rows.current));\\n                setLoading(false);\\n            });\\n        }, 1000);\\n    }\\n\\n    const onPage = (event) => {\\n        setLoading(true);\\n\\n        //imitate delay of a backend call\\n        setTimeout(() => {\\n            const startIndex = event.first;\\n            const endIndex = event.first + this.rows;\\n\\n            setFirst(startIndex);\\n            setProducts(datasource.slice(startIndex, endIndex));\\n            setLoading(false);\\n        }, 1000);\\n    }\\n\\n    const renderListItem = (data) => {\\n        return (\\n            <div className=\\\"p-col-12\\\">\\n                <div className=\\\"product-list-item\\\">\\n                    <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                    <div className=\\\"product-list-detail\\\">\\n                        <div className=\\\"product-name\\\">{data.name}</div>\\n                        <div className=\\\"product-description\\\">{data.description}</div>\\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                        <i className=\\\"pi pi-tag product-category-icon\\\"></i><span className=\\\"product-category\\\">{data.category}</span>\\n                    </div>\\n                    <div className=\\\"product-list-action\\\">\\n                        <span className=\\\"product-price\\\">${data.price}</span>\\n                        <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    const renderGridItem = (data) => {\\n        return (\\n            <div className=\\\"p-col-12 p-md-4\\\">\\n                <div className=\\\"product-grid-item card\\\">\\n                    <div className=\\\"product-grid-item-top\\\">\\n                        <div>\\n                            <i className=\\\"pi pi-tag product-category-icon\\\"></i>\\n                            <span className=\\\"product-category\\\">{data.category}</span>\\n                        </div>\\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                    </div>\\n                    <div className=\\\"product-grid-item-content\\\">\\n                    <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                        <div className=\\\"product-name\\\">{data.name}</div>\\n                        <div className=\\\"product-description\\\">{data.description}</div>\\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                    </div>\\n                    <div className=\\\"product-grid-item-bottom\\\">\\n                        <span className=\\\"product-price\\\">${data.price}</span>\\n                        <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    const itemTemplate = (product, layout) => {\\n        if (!product) {\\n            return;\\n        }\\n\\n        if (layout === 'list')\\n            return renderListItem(product);\\n        else if (layout === 'grid')\\n            return renderGridItem(product);\\n    }\\n\\n    const renderHeader = () => {\\n        let onOptionChange = (e) => {\\n            setLoading(true);\\n        };\\n\\n        return (\\n            <div style={{ textAlign: 'left' }}>\\n                <DataViewLayoutOptions layout={layout} onChange={onOptionChange} />\\n            </div>\\n        );\\n    }\\n\\n    const header = renderHeader();\\n\\n    return (\\n        <div className=\\\"dataview-demo\\\">\\n            <div className=\\\"card\\\">\\n                <DataView value={products} layout={layout} header={header}\\n                        itemTemplate={itemTemplate} lazy paginator paginatorPosition={'both'} rows={this.rows}\\n                        totalRecords={totalRecords} first={first} onPage={onPage} loading={loading} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport './DataViewDemo.css';\\n\\nconst DataViewLazyDemo = () => {\\n    const [products, setProducts] = useState(null);\\n    const [layout, setLayout] = useState('grid');\\n    const [loading, setLoading] = useState(true);\\n    const [first, setFirst] = useState(0);\\n    const [totalRecords, setTotalRecords] = useState(0);\\n    const rows = useRef(6);\\n    const datasource = useRef(null);\\n    const isMounted = useRef(false);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        if (isMounted.current) {\\n            setTimeout(() => {\\n                setLoading(false);\\n                setLayout(e.value);\\n            }, 1000);\\n        }\\n    }, [loading]); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    useEffect(() => {\\n        setTimeout(() => {\\n            isMounted.current = true;\\n            productService.getProducts().then(data => {\\n                datasource.current = data;\\n                setTotalRecords(data.length);\\n                setProducts(datasource.current.slice(0, rows.current));\\n                setLoading(false);\\n            });\\n        }, 1000);\\n    }\\n\\n    const onPage = (event) => {\\n        setLoading(true);\\n\\n        //imitate delay of a backend call\\n        setTimeout(() => {\\n            const startIndex = event.first;\\n            const endIndex = event.first + this.rows;\\n\\n            setFirst(startIndex);\\n            setProducts(datasource.slice(startIndex, endIndex));\\n            setLoading(false);\\n        }, 1000);\\n    }\\n\\n    const renderListItem = (data) => {\\n        return (\\n            <div className=\\\"p-col-12\\\">\\n                <div className=\\\"product-list-item\\\">\\n                    <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                    <div className=\\\"product-list-detail\\\">\\n                        <div className=\\\"product-name\\\">{data.name}</div>\\n                        <div className=\\\"product-description\\\">{data.description}</div>\\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                        <i className=\\\"pi pi-tag product-category-icon\\\"></i><span className=\\\"product-category\\\">{data.category}</span>\\n                    </div>\\n                    <div className=\\\"product-list-action\\\">\\n                        <span className=\\\"product-price\\\">${data.price}</span>\\n                        <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    const renderGridItem = (data) => {\\n        return (\\n            <div className=\\\"p-col-12 p-md-4\\\">\\n                <div className=\\\"product-grid-item card\\\">\\n                    <div className=\\\"product-grid-item-top\\\">\\n                        <div>\\n                            <i className=\\\"pi pi-tag product-category-icon\\\"></i>\\n                            <span className=\\\"product-category\\\">{data.category}</span>\\n                        </div>\\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                    </div>\\n                    <div className=\\\"product-grid-item-content\\\">\\n                    <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                        <div className=\\\"product-name\\\">{data.name}</div>\\n                        <div className=\\\"product-description\\\">{data.description}</div>\\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                    </div>\\n                    <div className=\\\"product-grid-item-bottom\\\">\\n                        <span className=\\\"product-price\\\">${data.price}</span>\\n                        <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    const itemTemplate = (product, layout) => {\\n        if (!product) {\\n            return;\\n        }\\n\\n        if (layout === 'list')\\n            return renderListItem(product);\\n        else if (layout === 'grid')\\n            return renderGridItem(product);\\n    }\\n\\n    const renderHeader = () => {\\n        let onOptionChange = (e) => {\\n            setLoading(true);\\n        };\\n\\n        return (\\n            <div style={{ textAlign: 'left' }}>\\n                <DataViewLayoutOptions layout={layout} onChange={onOptionChange} />\\n            </div>\\n        );\\n    }\\n\\n    const header = renderHeader();\\n\\n    return (\\n        <div className=\\\"dataview-demo\\\">\\n            <div className=\\\"card\\\">\\n                <DataView value={products} layout={layout} header={header}\\n                        itemTemplate={itemTemplate} lazy paginator paginatorPosition={'both'} rows={this.rows}\\n                        totalRecords={totalRecords} first={first} onPage={onPage} loading={loading} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    _this5.extFiles = {\n      'src/demo/DataViewDemo.css': {\n        content: \"\\n.dataview-demo .p-dropdown {\\n    width: 14rem;\\n    font-weight: normal;\\n}\\n\\n.dataview-demo .product-name {\\n    font-size: 1.5rem;\\n    font-weight: 700;\\n}\\n\\n.dataview-demo .product-description {\\n    margin: 0 0 1rem 0;\\n}\\n\\n.dataview-demo .product-category-icon {\\n    vertical-align: middle;\\n    margin-right: .5rem;\\n}\\n\\n.dataview-demo .product-category {\\n    font-weight: 600;\\n    vertical-align: middle;\\n}\\n\\n.dataview-demo .product-list-item {\\n    display: flex;\\n    align-items: center;\\n    padding: 1rem;\\n    width: 100%;\\n}\\n\\n.dataview-demo .product-list-item img {\\n    width: 150px;\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n    margin-right: 2rem;\\n}\\n\\n.dataview-demo .product-list-item .product-list-detail {\\n    flex: 1 1 0;\\n}\\n\\n.dataview-demo .product-list-item .p-rating {\\n    margin: 0 0 .5rem 0;\\n}\\n\\n.dataview-demo .product-list-item .product-price {\\n    font-size: 1.5rem;\\n    font-weight: 600;\\n    margin-bottom: .5rem;\\n    align-self: flex-end;\\n}\\n\\n.dataview-demo .product-list-item .product-list-action {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.dataview-demo .product-list-item .p-button {\\n    margin-bottom: .5rem;\\n}\\n\\n.dataview-demo .product-grid-item {\\n    margin: .5em;\\n    border: 1px solid #dee2e6;\\n    padding: 2rem;\\n}\\n\\n.dataview-demo .product-grid-item .product-grid-item-top,\\n    .dataview-demo .product-grid-item .product-grid-item-bottom {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n}\\n\\n.dataview-demo .product-grid-item img {\\n    width: 75%;\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n    margin: 2rem 0;\\n}\\n\\n.dataview-demo .product-grid-item .product-grid-item-content {\\n    text-align: center;\\n}\\n\\n.dataview-demo .product-grid-item .product-price {\\n    font-size: 1.5rem;\\n    font-weight: 600;\\n}\\n\\n@media screen and (max-width: 576px) {\\n    .dataview-demo .product-list-item {\\n        flex-direction: column;\\n        align-items: center;\\n    }\\n\\n    .dataview-demo .product-list-item img {\\n        width: 75%;\\n        margin: 2rem 0;\\n    }\\n\\n    .dataview-demo .product-list-item .product-list-detail {\\n        text-align: center;\\n    }\\n\\n    .dataview-demo .product-list-item .product-price {\\n        align-self: center;\\n    }\\n\\n    .dataview-demo .product-list-item .product-list-action {\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    .dataview-demo .product-list-item .product-list-action {\\n        margin-top: 2rem;\\n        flex-direction: row;\\n        justify-content: space-between;\\n        align-items: center;\\n        width: 100%;\\n    }\\n}\\n                \"\n      }\n    };\n    return _this5;\n  }\n\n  _createClass(DataViewLazyDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataViewLazyDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products',\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return DataViewLazyDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/dataview/DataViewLazyDemo.js"],"names":["React","Component","DataView","DataViewLayoutOptions","TabView","useLiveEditorTabs","ProductService","AppInlineHeader","Rating","Button","DataViewLazyDemo","props","state","products","layout","loading","first","totalRecords","rows","productService","itemTemplate","bind","onPage","setTimeout","getProducts","then","data","datasource","setState","length","slice","event","startIndex","endIndex","image","e","target","src","name","description","rating","category","price","inventoryStatus","toLowerCase","product","renderListItem","renderGridItem","onOptionChange","value","textAlign","header","renderHeader","DataViewLazyDemoDoc","sources","tabName","content","extFiles","service"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,qBAAnB,QAAgD,oCAAhD;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,iBAAT,QAAiC,0BAAjC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAO,qBAAP;AAEA,WAAaC,gBAAb;AAAA;;AAAA;;AAEI,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,MAAM,EAAE,MAFC;AAGTC,MAAAA,OAAO,EAAE,IAHA;AAITC,MAAAA,KAAK,EAAE,CAJE;AAKTC,MAAAA,YAAY,EAAE;AALL,KAAb;AAOA,UAAKC,IAAL,GAAY,CAAZ;AAEA,UAAKC,cAAL,GAAsB,IAAIb,cAAJ,EAAtB;AACA,UAAKc,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AAbe;AAclB;;AAhBL;AAAA;AAAA,WAkBI,6BAAoB;AAAA;;AAChBE,MAAAA,UAAU,CAAC,YAAM;AACb,QAAA,MAAI,CAACJ,cAAL,CAAoBK,WAApB,GAAkCC,IAAlC,CAAuC,UAAAC,IAAI,EAAI;AAC3C,UAAA,MAAI,CAACC,UAAL,GAAkBD,IAAlB;;AACA,UAAA,MAAI,CAACE,QAAL,CAAc;AACVX,YAAAA,YAAY,EAAES,IAAI,CAACG,MADT;AAEVhB,YAAAA,QAAQ,EAAE,MAAI,CAACc,UAAL,CAAgBG,KAAhB,CAAsB,CAAtB,EAAyB,MAAI,CAACZ,IAA9B,CAFA;AAGVH,YAAAA,OAAO,EAAE;AAHC,WAAd;AAKH,SAPD;AAQH,OATS,EASP,IATO,CAAV;AAUH;AA7BL;AAAA;AAAA,WA+BI,gBAAOgB,KAAP,EAAc;AAAA;;AACV,WAAKH,QAAL,CAAc;AACVb,QAAAA,OAAO,EAAE;AADC,OAAd,EADU,CAKV;;AACAQ,MAAAA,UAAU,CAAC,YAAM;AACb,YAAMS,UAAU,GAAGD,KAAK,CAACf,KAAzB;AACA,YAAMiB,QAAQ,GAAGF,KAAK,CAACf,KAAN,GAAc,MAAI,CAACE,IAApC;;AAEA,QAAA,MAAI,CAACU,QAAL,CAAc;AACVZ,UAAAA,KAAK,EAAEgB,UADG;AAEVnB,UAAAA,QAAQ,EAAE,MAAI,CAACc,UAAL,CAAgBG,KAAhB,CAAsBE,UAAtB,EAAkCC,QAAlC,CAFA;AAGVlB,UAAAA,OAAO,EAAE;AAHC,SAAd;AAKH,OATS,EASP,IATO,CAAV;AAUH;AA/CL;AAAA;AAAA,WAiDI,wBAAeW,IAAf,EAAqB;AACjB,0BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,yCAAkCA,IAAI,CAACQ,KAAvC,CAAR;AAAwD,QAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,iBAAOA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAa,uEAApB;AAAA,SAAjE;AAA8J,QAAA,GAAG,EAAEX,IAAI,CAACY,IAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BZ,IAAI,CAACY,IAApC,CADJ,eAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCZ,IAAI,CAACa,WAA3C,CAFJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEb,IAAI,CAACc,MAApB;AAA4B,QAAA,QAAQ,MAApC;AAAqC,QAAA,MAAM,EAAE,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII;AAAG,QAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAIuD;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCd,IAAI,CAACe,QAAzC,CAJvD,CAFJ,eAQI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkCf,IAAI,CAACgB,KAAvC,CADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,qBAAb;AAAmC,QAAA,KAAK,EAAC,aAAzC;AAAuD,QAAA,QAAQ,EAAEhB,IAAI,CAACiB,eAAL,KAAyB,YAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAM,QAAA,SAAS,iCAA0BjB,IAAI,CAACiB,eAAL,CAAqBC,WAArB,EAA1B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgFlB,IAAI,CAACiB,eAArF,CAHJ,CARJ,CADJ,CADJ;AAkBH;AApEL;AAAA;AAAA,WAsEI,wBAAejB,IAAf,EAAqB;AACjB,0BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCA,IAAI,CAACe,QAAzC,CAFJ,CADJ,eAKI;AAAM,QAAA,SAAS,iCAA0Bf,IAAI,CAACiB,eAAL,CAAqBC,WAArB,EAA1B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgFlB,IAAI,CAACiB,eAArF,CALJ,CADJ,eAQI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,GAAG,yCAAkCjB,IAAI,CAACQ,KAAvC,CAAR;AAAwD,QAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,iBAAOA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAa,uEAApB;AAAA,SAAjE;AAA8J,QAAA,GAAG,EAAEX,IAAI,CAACY,IAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BZ,IAAI,CAACY,IAApC,CAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCZ,IAAI,CAACa,WAA3C,CAHJ,eAII,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEb,IAAI,CAACc,MAApB;AAA4B,QAAA,QAAQ,MAApC;AAAqC,QAAA,MAAM,EAAE,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CARJ,eAcI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkCd,IAAI,CAACgB,KAAvC,CADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,qBAAb;AAAmC,QAAA,KAAK,EAAC,aAAzC;AAAuD,QAAA,QAAQ,EAAEhB,IAAI,CAACiB,eAAL,KAAyB,YAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAdJ,CADJ,CADJ;AAuBH;AA9FL;AAAA;AAAA,WAgGI,sBAAaE,OAAb,EAAsB/B,MAAtB,EAA8B;AAC1B,UAAI,CAAC+B,OAAL,EAAc;AACV;AACH;;AAED,UAAI/B,MAAM,KAAK,MAAf,EACI,OAAO,KAAKgC,cAAL,CAAoBD,OAApB,CAAP,CADJ,KAEK,IAAI/B,MAAM,KAAK,MAAf,EACD,OAAO,KAAKiC,cAAL,CAAoBF,OAApB,CAAP;AACP;AAzGL;AAAA;AAAA,WA2GI,wBAAe;AAAA;;AACX,UAAIG,cAAc,GAAG,SAAjBA,cAAiB,CAACb,CAAD,EAAO;AACxB,QAAA,MAAI,CAACP,QAAL,CAAc;AAAEb,UAAAA,OAAO,EAAE;AAAX,SAAd,EAAiC,YAAM;AACnCQ,UAAAA,UAAU,CAAC,YAAM;AACb,YAAA,MAAI,CAACK,QAAL,CAAc;AACVb,cAAAA,OAAO,EAAE,KADC;AAEVD,cAAAA,MAAM,EAAEqB,CAAC,CAACc;AAFA,aAAd;AAIH,WALS,EAKP,IALO,CAAV;AAMH,SAPD;AAQH,OATD;;AAWA,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,qBAAD;AAAuB,QAAA,MAAM,EAAE,KAAKtC,KAAL,CAAWE,MAA1C;AAAkD,QAAA,QAAQ,EAAEkC,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;AA5HL;AAAA;AAAA,WA8HI,kBAAS;AACL,UAAMG,MAAM,GAAG,KAAKC,YAAL,EAAf;AAEA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,aAAa,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+lBAFJ,CADJ,CADJ,eAUI;AAAK,QAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKxC,KAAL,CAAWC,QAA5B;AAAsC,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAAzD;AAAiE,QAAA,MAAM,EAAEqC,MAAzE;AACQ,QAAA,YAAY,EAAE,KAAK/B,YAD3B;AACyC,QAAA,IAAI,MAD7C;AAC8C,QAAA,SAAS,MADvD;AACwD,QAAA,iBAAiB,EAAE,MAD3E;AACmF,QAAA,IAAI,EAAE,KAAKF,IAD9F;AAEQ,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWK,YAFjC;AAE+C,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWI,KAFjE;AAEwE,QAAA,MAAM,EAAE,KAAKM,MAFrF;AAE6F,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWG,OAFjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAVJ,eAkBI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,CADJ;AAsBH;AAvJL;;AAAA;AAAA,EAAsCd,SAAtC;AA0JA,WAAaoD,mBAAb;AAAA;;AAAA;;AAEI,+BAAY1C,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gCAAMA,KAAN;AAEA,WAAK2C,OAAL,GAAe;AACX,eAAS;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OADE;AAyJX,eAAS;AACLD,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,OAAO;AAFF,OAzJE;AAqSX,YAAM;AACFD,QAAAA,OAAO,EAAE,WADP;AAEFC,QAAAA,OAAO;AAFL;AArSK,KAAf;AAmbA,WAAKC,QAAL,GAAgB;AACZ,mCAA6B;AACzBD,QAAAA,OAAO;AADkB;AADjB,KAAhB;AAtbe;AAqjBlB;;AAvjBL;AAAA;AAAA,WAyjBI,iCAAwB;AACpB,aAAO,KAAP;AACH;AA3jBL;AAAA;AAAA,WA6jBI,kBAAS;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQnD,iBAAiB,CAAC;AAAEiC,QAAAA,IAAI,EAAE,kBAAR;AAA4BgB,QAAAA,OAAO,EAAE,KAAKA,OAA1C;AAAmDI,QAAAA,OAAO,EAAE,gBAA5D;AAA8EhC,QAAAA,IAAI,EAAE,UAApF;AAAgG+B,QAAAA,QAAQ,EAAE,KAAKA;AAA/G,OAAD,CAFzB,CADJ,CADJ;AASH;AAvkBL;;AAAA;AAAA,EAAyCxD,SAAzC","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataView, DataViewLayoutOptions } from '../../components/dataview/DataView';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport ProductService from '../service/ProductService';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport { Rating } from '../../components/rating/Rating';\r\nimport { Button } from '../../components/button/Button';\r\nimport './DataViewDemo.scss';\r\n\r\nexport class DataViewLazyDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: null,\r\n            layout: 'grid',\r\n            loading: true,\r\n            first: 0,\r\n            totalRecords: 0\r\n        };\r\n        this.rows = 6;\r\n\r\n        this.productService = new ProductService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.onPage = this.onPage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.productService.getProducts().then(data => {\r\n                this.datasource = data;\r\n                this.setState({\r\n                    totalRecords: data.length,\r\n                    products: this.datasource.slice(0, this.rows),\r\n                    loading: false\r\n                });\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    onPage(event) {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        //imitate delay of a backend call\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + this.rows;\r\n\r\n            this.setState({\r\n                first: startIndex,\r\n                products: this.datasource.slice(startIndex, endIndex),\r\n                loading: false\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    renderListItem(data) {\r\n        return (\r\n            <div className=\"p-col-12\">\r\n                <div className=\"product-list-item\">\r\n                    <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                    <div className=\"product-list-detail\">\r\n                        <div className=\"product-name\">{data.name}</div>\r\n                        <div className=\"product-description\">{data.description}</div>\r\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                        <i className=\"pi pi-tag product-category-icon\"></i><span className=\"product-category\">{data.category}</span>\r\n                    </div>\r\n                    <div className=\"product-list-action\">\r\n                        <span className=\"product-price\">${data.price}</span>\r\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderGridItem(data) {\r\n        return (\r\n            <div className=\"p-col-12 p-md-4\">\r\n                <div className=\"product-grid-item card\">\r\n                    <div className=\"product-grid-item-top\">\r\n                        <div>\r\n                            <i className=\"pi pi-tag product-category-icon\"></i>\r\n                            <span className=\"product-category\">{data.category}</span>\r\n                        </div>\r\n                        <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\r\n                    </div>\r\n                    <div className=\"product-grid-item-content\">\r\n                    <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                        <div className=\"product-name\">{data.name}</div>\r\n                        <div className=\"product-description\">{data.description}</div>\r\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                    </div>\r\n                    <div className=\"product-grid-item-bottom\">\r\n                        <span className=\"product-price\">${data.price}</span>\r\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    itemTemplate(product, layout) {\r\n        if (!product) {\r\n            return;\r\n        }\r\n\r\n        if (layout === 'list')\r\n            return this.renderListItem(product);\r\n        else if (layout === 'grid')\r\n            return this.renderGridItem(product);\r\n    }\r\n\r\n    renderHeader() {\r\n        let onOptionChange = (e) => {\r\n            this.setState({ loading: true }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        loading: false,\r\n                        layout: e.value\r\n                    });\r\n                }, 1000);\r\n            });\r\n        };\r\n\r\n        return (\r\n            <div style={{ textAlign: 'left' }}>\r\n                <DataViewLayoutOptions layout={this.state.layout} onChange={onOptionChange} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataView\">\r\n                        <h1>DataView <span>Lazy</span></h1>\r\n                        <p>Lazy mode is handy to deal with large datasets, instead of loading the entire data, small chunks of data is loaded by invoking corresponding callbacks everytime paging, sorting and filtering happens. Sample belows imitates\r\n                        lazy paging by using an in memory list. It is also important to assign the logical number of rows to totalRecords by doing a projection query for paginator configuration so that paginator displays the UI assuming\r\n                            there are actually records of totalRecords size although in reality they aren't as in lazy mode, only the records that are displayed on the current page exist.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation dataview-demo\">\r\n                    <div className=\"card\">\r\n                        <DataView value={this.state.products} layout={this.state.layout} header={header}\r\n                                itemTemplate={this.itemTemplate} lazy paginator paginatorPosition={'both'} rows={this.rows}\r\n                                totalRecords={this.state.totalRecords} first={this.state.first} onPage={this.onPage} loading={this.state.loading} />\r\n                    </div>\r\n                </div>\r\n\r\n                <DataViewLazyDemoDoc />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataViewLazyDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport './DataViewDemo.css';\r\n\r\nexport class DataViewLazyDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: null,\r\n            layout: 'grid',\r\n            loading: true,\r\n            first: 0,\r\n            totalRecords: 0\r\n        };\r\n        this.rows = 6;\r\n\r\n        this.productService = new ProductService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.onPage = this.onPage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.productService.getProducts().then(data => {\r\n                this.datasource = data;\r\n                this.setState({\r\n                    totalRecords: data.length,\r\n                    products: this.datasource.slice(0, this.rows),\r\n                    loading: false\r\n                });\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    onPage(event) {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        //imitate delay of a backend call\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + this.rows;\r\n\r\n            this.setState({\r\n                first: startIndex,\r\n                products: this.datasource.slice(startIndex, endIndex),\r\n                loading: false\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    renderListItem(data) {\r\n        return (\r\n            <div className=\"p-col-12\">\r\n                <div className=\"product-list-item\">\r\n                    <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                    <div className=\"product-list-detail\">\r\n                        <div className=\"product-name\">{data.name}</div>\r\n                        <div className=\"product-description\">{data.description}</div>\r\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                        <i className=\"pi pi-tag product-category-icon\"></i><span className=\"product-category\">{data.category}</span>\r\n                    </div>\r\n                    <div className=\"product-list-action\">\r\n                        <span className=\"product-price\">\\${data.price}</span>\r\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                        <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderGridItem(data) {\r\n        return (\r\n            <div className=\"p-col-12 p-md-4\">\r\n                <div className=\"product-grid-item card\">\r\n                    <div className=\"product-grid-item-top\">\r\n                        <div>\r\n                            <i className=\"pi pi-tag product-category-icon\"></i>\r\n                            <span className=\"product-category\">{data.category}</span>\r\n                        </div>\r\n                        <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                    </div>\r\n                    <div className=\"product-grid-item-content\">\r\n                    <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                        <div className=\"product-name\">{data.name}</div>\r\n                        <div className=\"product-description\">{data.description}</div>\r\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                    </div>\r\n                    <div className=\"product-grid-item-bottom\">\r\n                        <span className=\"product-price\">\\${data.price}</span>\r\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    itemTemplate(product, layout) {\r\n        if (!product) {\r\n            return;\r\n        }\r\n\r\n        if (layout === 'list')\r\n            return this.renderListItem(product);\r\n        else if (layout === 'grid')\r\n            return this.renderGridItem(product);\r\n    }\r\n\r\n    renderHeader() {\r\n        let onOptionChange = (e) => {\r\n            this.setState({ loading: true }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        loading: false,\r\n                        layout: e.value\r\n                    });\r\n                }, 1000);\r\n            });\r\n        };\r\n\r\n        return (\r\n            <div style={{ textAlign: 'left' }}>\r\n                <DataViewLayoutOptions layout={this.state.layout} onChange={onOptionChange} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"dataview-demo\">\r\n                <div className=\"card\">\r\n                    <DataView value={this.state.products} layout={this.state.layout} header={header}\r\n                            itemTemplate={this.itemTemplate} lazy paginator paginatorPosition={'both'} rows={this.rows}\r\n                            totalRecords={this.state.totalRecords} first={this.state.first} onPage={this.onPage} loading={this.state.loading} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport './DataViewDemo.css';\r\n\r\nconst DataViewLazyDemo = () => {\r\n    const [products, setProducts] = useState(null);\r\n    const [layout, setLayout] = useState('grid');\r\n    const [loading, setLoading] = useState(true);\r\n    const [first, setFirst] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const rows = useRef(6);\r\n    const datasource = useRef(null);\r\n    const isMounted = useRef(false);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n                setLayout(e.value);\r\n            }, 1000);\r\n        }\r\n    }, [loading]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            isMounted.current = true;\r\n            productService.getProducts().then(data => {\r\n                datasource.current = data;\r\n                setTotalRecords(data.length);\r\n                setProducts(datasource.current.slice(0, rows.current));\r\n                setLoading(false);\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    const onPage = (event) => {\r\n        setLoading(true);\r\n\r\n        //imitate delay of a backend call\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + this.rows;\r\n\r\n            setFirst(startIndex);\r\n            setProducts(datasource.slice(startIndex, endIndex));\r\n            setLoading(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const renderListItem = (data) => {\r\n        return (\r\n            <div className=\"p-col-12\">\r\n                <div className=\"product-list-item\">\r\n                    <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                    <div className=\"product-list-detail\">\r\n                        <div className=\"product-name\">{data.name}</div>\r\n                        <div className=\"product-description\">{data.description}</div>\r\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                        <i className=\"pi pi-tag product-category-icon\"></i><span className=\"product-category\">{data.category}</span>\r\n                    </div>\r\n                    <div className=\"product-list-action\">\r\n                        <span className=\"product-price\">\\${data.price}</span>\r\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                        <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderGridItem = (data) => {\r\n        return (\r\n            <div className=\"p-col-12 p-md-4\">\r\n                <div className=\"product-grid-item card\">\r\n                    <div className=\"product-grid-item-top\">\r\n                        <div>\r\n                            <i className=\"pi pi-tag product-category-icon\"></i>\r\n                            <span className=\"product-category\">{data.category}</span>\r\n                        </div>\r\n                        <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                    </div>\r\n                    <div className=\"product-grid-item-content\">\r\n                    <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                        <div className=\"product-name\">{data.name}</div>\r\n                        <div className=\"product-description\">{data.description}</div>\r\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                    </div>\r\n                    <div className=\"product-grid-item-bottom\">\r\n                        <span className=\"product-price\">\\${data.price}</span>\r\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const itemTemplate = (product, layout) => {\r\n        if (!product) {\r\n            return;\r\n        }\r\n\r\n        if (layout === 'list')\r\n            return renderListItem(product);\r\n        else if (layout === 'grid')\r\n            return renderGridItem(product);\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let onOptionChange = (e) => {\r\n            setLoading(true);\r\n        };\r\n\r\n        return (\r\n            <div style={{ textAlign: 'left' }}>\r\n                <DataViewLayoutOptions layout={layout} onChange={onOptionChange} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const header = renderHeader();\r\n\r\n    return (\r\n        <div className=\"dataview-demo\">\r\n            <div className=\"card\">\r\n                <DataView value={products} layout={layout} header={header}\r\n                        itemTemplate={itemTemplate} lazy paginator paginatorPosition={'both'} rows={this.rows}\r\n                        totalRecords={totalRecords} first={first} onPage={onPage} loading={loading} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport './DataViewDemo.css';\r\n\r\nconst DataViewLazyDemo = () => {\r\n    const [products, setProducts] = useState(null);\r\n    const [layout, setLayout] = useState('grid');\r\n    const [loading, setLoading] = useState(true);\r\n    const [first, setFirst] = useState(0);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const rows = useRef(6);\r\n    const datasource = useRef(null);\r\n    const isMounted = useRef(false);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n                setLayout(e.value);\r\n            }, 1000);\r\n        }\r\n    }, [loading]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            isMounted.current = true;\r\n            productService.getProducts().then(data => {\r\n                datasource.current = data;\r\n                setTotalRecords(data.length);\r\n                setProducts(datasource.current.slice(0, rows.current));\r\n                setLoading(false);\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    const onPage = (event) => {\r\n        setLoading(true);\r\n\r\n        //imitate delay of a backend call\r\n        setTimeout(() => {\r\n            const startIndex = event.first;\r\n            const endIndex = event.first + this.rows;\r\n\r\n            setFirst(startIndex);\r\n            setProducts(datasource.slice(startIndex, endIndex));\r\n            setLoading(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const renderListItem = (data) => {\r\n        return (\r\n            <div className=\"p-col-12\">\r\n                <div className=\"product-list-item\">\r\n                    <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                    <div className=\"product-list-detail\">\r\n                        <div className=\"product-name\">{data.name}</div>\r\n                        <div className=\"product-description\">{data.description}</div>\r\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                        <i className=\"pi pi-tag product-category-icon\"></i><span className=\"product-category\">{data.category}</span>\r\n                    </div>\r\n                    <div className=\"product-list-action\">\r\n                        <span className=\"product-price\">\\${data.price}</span>\r\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                        <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderGridItem = (data) => {\r\n        return (\r\n            <div className=\"p-col-12 p-md-4\">\r\n                <div className=\"product-grid-item card\">\r\n                    <div className=\"product-grid-item-top\">\r\n                        <div>\r\n                            <i className=\"pi pi-tag product-category-icon\"></i>\r\n                            <span className=\"product-category\">{data.category}</span>\r\n                        </div>\r\n                        <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                    </div>\r\n                    <div className=\"product-grid-item-content\">\r\n                    <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                        <div className=\"product-name\">{data.name}</div>\r\n                        <div className=\"product-description\">{data.description}</div>\r\n                        <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                    </div>\r\n                    <div className=\"product-grid-item-bottom\">\r\n                        <span className=\"product-price\">\\${data.price}</span>\r\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const itemTemplate = (product, layout) => {\r\n        if (!product) {\r\n            return;\r\n        }\r\n\r\n        if (layout === 'list')\r\n            return renderListItem(product);\r\n        else if (layout === 'grid')\r\n            return renderGridItem(product);\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let onOptionChange = (e) => {\r\n            setLoading(true);\r\n        };\r\n\r\n        return (\r\n            <div style={{ textAlign: 'left' }}>\r\n                <DataViewLayoutOptions layout={layout} onChange={onOptionChange} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const header = renderHeader();\r\n\r\n    return (\r\n        <div className=\"dataview-demo\">\r\n            <div className=\"card\">\r\n                <DataView value={products} layout={layout} header={header}\r\n                        itemTemplate={itemTemplate} lazy paginator paginatorPosition={'both'} rows={this.rows}\r\n                        totalRecords={totalRecords} first={first} onPage={onPage} loading={loading} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/DataViewDemo.css': {\r\n                content: `\r\n.dataview-demo .p-dropdown {\r\n    width: 14rem;\r\n    font-weight: normal;\r\n}\r\n\r\n.dataview-demo .product-name {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n}\r\n\r\n.dataview-demo .product-description {\r\n    margin: 0 0 1rem 0;\r\n}\r\n\r\n.dataview-demo .product-category-icon {\r\n    vertical-align: middle;\r\n    margin-right: .5rem;\r\n}\r\n\r\n.dataview-demo .product-category {\r\n    font-weight: 600;\r\n    vertical-align: middle;\r\n}\r\n\r\n.dataview-demo .product-list-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    width: 100%;\r\n}\r\n\r\n.dataview-demo .product-list-item img {\r\n    width: 150px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    margin-right: 2rem;\r\n}\r\n\r\n.dataview-demo .product-list-item .product-list-detail {\r\n    flex: 1 1 0;\r\n}\r\n\r\n.dataview-demo .product-list-item .p-rating {\r\n    margin: 0 0 .5rem 0;\r\n}\r\n\r\n.dataview-demo .product-list-item .product-price {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    margin-bottom: .5rem;\r\n    align-self: flex-end;\r\n}\r\n\r\n.dataview-demo .product-list-item .product-list-action {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.dataview-demo .product-list-item .p-button {\r\n    margin-bottom: .5rem;\r\n}\r\n\r\n.dataview-demo .product-grid-item {\r\n    margin: .5em;\r\n    border: 1px solid #dee2e6;\r\n    padding: 2rem;\r\n}\r\n\r\n.dataview-demo .product-grid-item .product-grid-item-top,\r\n    .dataview-demo .product-grid-item .product-grid-item-bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.dataview-demo .product-grid-item img {\r\n    width: 75%;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    margin: 2rem 0;\r\n}\r\n\r\n.dataview-demo .product-grid-item .product-grid-item-content {\r\n    text-align: center;\r\n}\r\n\r\n.dataview-demo .product-grid-item .product-price {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n}\r\n\r\n@media screen and (max-width: 576px) {\r\n    .dataview-demo .product-list-item {\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    .dataview-demo .product-list-item img {\r\n        width: 75%;\r\n        margin: 2rem 0;\r\n    }\r\n\r\n    .dataview-demo .product-list-item .product-list-detail {\r\n        text-align: center;\r\n    }\r\n\r\n    .dataview-demo .product-list-item .product-price {\r\n        align-self: center;\r\n    }\r\n\r\n    .dataview-demo .product-list-item .product-list-action {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .dataview-demo .product-list-item .product-list-action {\r\n        margin-top: 2rem;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        width: 100%;\r\n    }\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataViewLazyDemo', sources: this.sources, service: 'ProductService', data: 'products', extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}