{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\datatable\\\\DataTable.js\";\nimport { classNames } from '../utils/ClassNames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Paginator } from '../paginator/Paginator';\nimport DomHandler from '../utils/DomHandler';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FilterUtils from '../utils/FilterUtils';\nimport { ScrollableView } from './ScrollableView';\nimport { TableBody } from './TableBody';\nimport { TableFooter } from './TableFooter';\nimport { TableHeader } from './TableHeader';\nimport { TableLoadingBody } from './TableLoadingBody';\nexport var DataTable = /*#__PURE__*/function (_Component) {\n  _inherits(DataTable, _Component);\n\n  var _super = _createSuper(DataTable);\n\n  function DataTable(props) {\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n\n    if (!_this.props.onPage) {\n      _this.state.first = props.first;\n      _this.state.rows = props.rows;\n    }\n\n    if (!_this.props.onSort) {\n      _this.state.sortField = props.sortField;\n      _this.state.sortOrder = props.sortOrder;\n      _this.state.multiSortMeta = props.multiSortMeta;\n    }\n\n    if (!_this.props.onFilter) {\n      _this.state.filters = props.filters;\n    }\n\n    if (_this.isStateful()) {\n      _this.restoreState(_this.state);\n    }\n\n    _this.onPageChange = _this.onPageChange.bind(_assertThisInitialized(_this));\n    _this.onSort = _this.onSort.bind(_assertThisInitialized(_this));\n    _this.onFilter = _this.onFilter.bind(_assertThisInitialized(_this));\n    _this.onColumnResizeStart = _this.onColumnResizeStart.bind(_assertThisInitialized(_this));\n    _this.onHeaderCheckboxClick = _this.onHeaderCheckboxClick.bind(_assertThisInitialized(_this));\n    _this.onColumnDragStart = _this.onColumnDragStart.bind(_assertThisInitialized(_this));\n    _this.onColumnDragOver = _this.onColumnDragOver.bind(_assertThisInitialized(_this));\n    _this.onColumnDragLeave = _this.onColumnDragLeave.bind(_assertThisInitialized(_this));\n    _this.onColumnDrop = _this.onColumnDrop.bind(_assertThisInitialized(_this));\n    _this.onVirtualScroll = _this.onVirtualScroll.bind(_assertThisInitialized(_this));\n    _this.frozenSelectionMode = null;\n    return _this;\n  }\n\n  _createClass(DataTable, [{\n    key: \"getFirst\",\n    value: function getFirst() {\n      return this.props.onPage ? this.props.first : this.state.first;\n    }\n  }, {\n    key: \"getRows\",\n    value: function getRows() {\n      return this.props.onPage ? this.props.rows : this.state.rows;\n    }\n  }, {\n    key: \"getSortField\",\n    value: function getSortField() {\n      return this.props.onSort ? this.props.sortField : this.state.sortField;\n    }\n  }, {\n    key: \"getSortOrder\",\n    value: function getSortOrder() {\n      return this.props.onSort ? this.props.sortOrder : this.state.sortOrder;\n    }\n  }, {\n    key: \"getMultiSortMeta\",\n    value: function getMultiSortMeta() {\n      return this.props.onSort ? this.props.multiSortMeta : this.state.multiSortMeta;\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return this.props.onFilter ? this.props.filters : this.state.filters;\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      switch (this.props.stateStorage) {\n        case 'local':\n          return window.localStorage;\n\n        case 'session':\n          return window.sessionStorage;\n\n        case 'custom':\n          return null;\n\n        default:\n          throw new Error(this.props.stateStorage + ' is not a valid value for the state storage, supported values are \"local\", \"session\" and \"custom\".');\n      }\n    }\n  }, {\n    key: \"isCustomStateStorage\",\n    value: function isCustomStateStorage() {\n      return this.props.stateStorage === 'custom';\n    }\n  }, {\n    key: \"isStateful\",\n    value: function isStateful() {\n      return this.props.stateKey != null || this.isCustomStateStorage();\n    }\n  }, {\n    key: \"saveState\",\n    value: function saveState() {\n      var state = {};\n\n      if (this.props.paginator) {\n        state.first = this.getFirst();\n        state.rows = this.getRows();\n      }\n\n      var sortField = this.getSortField();\n\n      if (sortField) {\n        state.sortField = sortField;\n        state.sortOrder = this.getSortOrder();\n      }\n\n      var multiSortMeta = this.getMultiSortMeta();\n\n      if (multiSortMeta) {\n        state.multiSortMeta = multiSortMeta;\n      }\n\n      if (this.hasFilter()) {\n        state.filters = this.getFilters();\n      }\n\n      if (this.props.resizableColumns) {\n        this.saveColumnWidths(state);\n      }\n\n      if (this.props.reorderableColumns) {\n        state.columnOrder = this.state.columnOrder;\n      }\n\n      if (this.props.expandedRows) {\n        state.expandedRows = this.props.expandedRows;\n      }\n\n      if (this.props.selection && this.props.onSelectionChange) {\n        state.selection = this.props.selection;\n      }\n\n      if (this.isCustomStateStorage()) {\n        if (this.props.customSaveState) {\n          this.props.customSaveState(state);\n        }\n      } else {\n        var storage = this.getStorage();\n\n        if (Object.keys(state).length) {\n          storage.setItem(this.props.stateKey, JSON.stringify(state));\n        }\n      }\n\n      if (this.props.onStateSave) {\n        this.props.onStateSave(state);\n      }\n    }\n  }, {\n    key: \"clearState\",\n    value: function clearState() {\n      var storage = this.getStorage();\n\n      if (storage && this.props.stateKey) {\n        storage.removeItem(this.props.stateKey);\n      }\n    }\n  }, {\n    key: \"restoreState\",\n    value: function restoreState(state) {\n      var restoredState = {};\n\n      if (this.isCustomStateStorage()) {\n        if (this.props.customRestoreState) {\n          restoredState = this.props.customRestoreState();\n        }\n      } else {\n        var storage = this.getStorage();\n        var stateString = storage.getItem(this.props.stateKey);\n\n        if (stateString) {\n          restoredState = JSON.parse(stateString);\n        }\n      }\n\n      this._restoreState(restoredState, state);\n    }\n  }, {\n    key: \"restoreTableState\",\n    value: function restoreTableState(restoredState) {\n      var state = this._restoreState(restoredState);\n\n      if (state && Object.keys(state).length) {\n        this.setState(state);\n      }\n    }\n  }, {\n    key: \"_restoreState\",\n    value: function _restoreState(restoredState) {\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (restoredState && Object.keys(restoredState).length) {\n        if (this.props.paginator) {\n          if (this.props.onPage) {\n            this.props.onPage({\n              first: restoredState.first,\n              rows: restoredState.rows\n            });\n          } else {\n            state.first = restoredState.first;\n            state.rows = restoredState.rows;\n          }\n        }\n\n        if (restoredState.sortField) {\n          if (this.props.onSort) {\n            this.props.onSort({\n              sortField: restoredState.sortField,\n              sortOrder: restoredState.sortOrder\n            });\n          } else {\n            state.sortField = restoredState.sortField;\n            state.sortOrder = restoredState.sortOrder;\n          }\n        }\n\n        if (restoredState.multiSortMeta) {\n          if (this.props.onSort) {\n            this.props.onSort({\n              multiSortMeta: restoredState.multiSortMeta\n            });\n          } else {\n            state.multiSortMeta = restoredState.multiSortMeta;\n          }\n        }\n\n        if (restoredState.filters) {\n          if (this.props.onFilter) {\n            this.props.onFilter({\n              filters: restoredState.filters\n            });\n          } else {\n            state.filters = restoredState.filters;\n          }\n        }\n\n        if (this.props.resizableColumns) {\n          this.columnWidthsState = restoredState.columnWidths;\n          this.tableWidthState = restoredState.tableWidth;\n        }\n\n        if (this.props.reorderableColumns) {\n          state.columnOrder = restoredState.columnOrder;\n        }\n\n        if (restoredState.expandedRows && this.props.onRowToggle) {\n          this.props.onRowToggle({\n            data: restoredState.expandedRows\n          });\n        }\n\n        if (restoredState.selection && this.props.onSelectionChange) {\n          this.props.onSelectionChange({\n            value: restoredState.selection\n          });\n        }\n\n        if (this.props.onStateRestore) {\n          this.props.onStateRestore(restoredState);\n        }\n      }\n\n      return state;\n    }\n  }, {\n    key: \"saveColumnWidths\",\n    value: function saveColumnWidths(state) {\n      var widths = [];\n      var headers = DomHandler.find(this.container, '.p-datatable-thead > tr > th.p-resizable-column');\n      headers.map(function (header) {\n        return widths.push(DomHandler.getOuterWidth(header));\n      });\n      state.columnWidths = widths.join(',');\n\n      if (this.props.columnResizeMode === 'expand') {\n        state.tableWidth = this.props.scrollable ? DomHandler.findSingle(this.container, '.p-datatable-scrollable-header-table').style.width : DomHandler.getOuterWidth(this.table) + 'px';\n      }\n    }\n  }, {\n    key: \"restoreColumnWidths\",\n    value: function restoreColumnWidths() {\n      if (this.columnWidthsState) {\n        var widths = this.columnWidthsState.split(',');\n\n        if (this.props.columnResizeMode === 'expand' && this.tableWidthState) {\n          if (this.props.scrollable) {\n            this.setScrollableItemsWidthOnExpandResize(null, this.tableWidthState, 0);\n          } else {\n            this.table.style.width = this.tableWidthState;\n            this.container.style.width = this.tableWidthState;\n          }\n        }\n\n        if (this.props.scrollable) {\n          var headerCols = DomHandler.find(this.container, '.p-datatable-scrollable-header-table > colgroup > col');\n          var bodyCols = DomHandler.find(this.container, '.p-datatable-scrollable-body-table > colgroup > col');\n          headerCols.map(function (col, index) {\n            return col.style.width = widths[index] + 'px';\n          });\n          bodyCols.map(function (col, index) {\n            return col.style.width = widths[index] + 'px';\n          });\n        } else {\n          var headers = DomHandler.find(this.table, '.p-datatable-thead > tr > th');\n          headers.map(function (header, index) {\n            return header.style.width = widths[index] + 'px';\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(event) {\n      if (this.props.onPage) this.props.onPage(event);else this.setState({\n        first: event.first,\n        rows: event.rows\n      });\n\n      if (this.props.onValueChange) {\n        this.props.onValueChange();\n      }\n    }\n  }, {\n    key: \"createPaginator\",\n    value: function createPaginator(position, totalRecords, data) {\n      var className = classNames('p-paginator-' + position, this.props.paginatorClassName);\n      return /*#__PURE__*/React.createElement(Paginator, {\n        first: this.getFirst(),\n        rows: this.getRows(),\n        pageLinkSize: this.props.pageLinkSize,\n        className: className,\n        onPageChange: this.onPageChange,\n        template: this.props.paginatorTemplate,\n        totalRecords: totalRecords,\n        rowsPerPageOptions: this.props.rowsPerPageOptions,\n        currentPageReportTemplate: this.props.currentPageReportTemplate,\n        leftContent: this.props.paginatorLeft,\n        rightContent: this.props.paginatorRight,\n        alwaysShow: this.props.alwaysShowPaginator,\n        dropdownAppendTo: this.props.paginatorDropdownAppendTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"onSort\",\n    value: function onSort(event) {\n      var sortField = event.sortField;\n      var sortOrder = this.props.defaultSortOrder;\n      var multiSortMeta;\n      var eventMeta;\n      this.columnSortable = event.sortable;\n      this.columnSortFunction = event.sortFunction;\n      this.columnField = event.sortField;\n\n      if (this.props.sortMode === 'multiple') {\n        var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n        multiSortMeta = this.getMultiSortMeta();\n\n        if (multiSortMeta && multiSortMeta instanceof Array) {\n          var sortMeta = multiSortMeta.find(function (sortMeta) {\n            return sortMeta.field === sortField;\n          });\n          sortOrder = sortMeta ? this.getCalculatedSortOrder(sortMeta.order) : sortOrder;\n        }\n\n        var newMetaData = {\n          field: sortField,\n          order: sortOrder\n        };\n\n        if (sortOrder) {\n          if (!multiSortMeta || !metaKey) {\n            multiSortMeta = [];\n          }\n\n          this.addSortMeta(newMetaData, multiSortMeta);\n        } else if (this.props.removableSort && multiSortMeta) {\n          this.removeSortMeta(newMetaData, multiSortMeta);\n        }\n\n        eventMeta = {\n          multiSortMeta: multiSortMeta\n        };\n      } else {\n        sortOrder = this.getSortField() === sortField ? this.getCalculatedSortOrder(this.getSortOrder()) : sortOrder;\n\n        if (this.props.removableSort) {\n          sortField = sortOrder ? sortField : null;\n        }\n\n        eventMeta = {\n          sortField: sortField,\n          sortOrder: sortOrder\n        };\n      }\n\n      if (this.props.onSort) {\n        this.props.onSort(eventMeta);\n      } else {\n        eventMeta.first = 0;\n        this.setState(eventMeta);\n      }\n\n      if (this.props.onValueChange) {\n        this.props.onValueChange(this.processData({\n          sortField: sortField,\n          sortOrder: sortOrder,\n          multiSortMeta: multiSortMeta\n        }));\n      }\n    }\n  }, {\n    key: \"getCalculatedSortOrder\",\n    value: function getCalculatedSortOrder(currentOrder) {\n      return this.props.removableSort ? currentOrder ? currentOrder < 0 ? 0 : -1 : 1 : currentOrder * -1;\n    }\n  }, {\n    key: \"addSortMeta\",\n    value: function addSortMeta(meta, multiSortMeta) {\n      var index = -1;\n\n      for (var i = 0; i < multiSortMeta.length; i++) {\n        if (multiSortMeta[i].field === meta.field) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index >= 0) multiSortMeta[index] = meta;else multiSortMeta.push(meta);\n    }\n  }, {\n    key: \"removeSortMeta\",\n    value: function removeSortMeta(meta, multiSortMeta) {\n      var index = -1;\n\n      for (var i = 0; i < multiSortMeta.length; i++) {\n        if (multiSortMeta[i].field === meta.field) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index >= 0) {\n        multiSortMeta.splice(index, 1);\n      }\n\n      multiSortMeta = multiSortMeta.length > 0 ? multiSortMeta : null;\n    }\n  }, {\n    key: \"sortSingle\",\n    value: function sortSingle(data, sortField, sortOrder) {\n      var value = _toConsumableArray(data);\n\n      if (this.columnSortable && this.columnSortFunction) {\n        value = this.columnSortFunction({\n          field: this.getSortField(),\n          order: this.getSortOrder()\n        });\n      } else {\n        value.sort(function (data1, data2) {\n          var value1 = ObjectUtils.resolveFieldData(data1, sortField);\n          var value2 = ObjectUtils.resolveFieldData(data2, sortField);\n          var result = null;\n          if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2, undefined, {\n            numeric: true\n          });else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n          return sortOrder * result;\n        });\n      }\n\n      return value;\n    }\n  }, {\n    key: \"sortMultiple\",\n    value: function sortMultiple(data, multiSortMeta) {\n      var _this2 = this;\n\n      var value = _toConsumableArray(data);\n\n      if (this.columnSortable && this.columnSortFunction) {\n        var meta = multiSortMeta.find(function (meta) {\n          return meta.field === _this2.columnField;\n        });\n        var field = this.columnField;\n        var order = meta ? meta.order : this.defaultSortOrder;\n        value = this.columnSortFunction({\n          field: field,\n          order: order\n        });\n      } else {\n        value.sort(function (data1, data2) {\n          return _this2.multisortField(data1, data2, multiSortMeta, 0);\n        });\n      }\n\n      return value;\n    }\n  }, {\n    key: \"multisortField\",\n    value: function multisortField(data1, data2, multiSortMeta, index) {\n      var value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n      var value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n      var result = null;\n\n      if (typeof value1 === 'string' || value1 instanceof String) {\n        if (value1.localeCompare && value1 !== value2) {\n          return multiSortMeta[index].order * value1.localeCompare(value2, undefined, {\n            numeric: true\n          });\n        }\n      } else {\n        result = value1 < value2 ? -1 : 1;\n      }\n\n      if (value1 === value2) {\n        return multiSortMeta.length - 1 > index ? this.multisortField(data1, data2, multiSortMeta, index + 1) : 0;\n      }\n\n      return multiSortMeta[index].order * result;\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(value, field, mode) {\n      this.onFilter({\n        value: value,\n        field: field,\n        matchMode: mode\n      });\n    }\n  }, {\n    key: \"onFilter\",\n    value: function onFilter(event) {\n      var currentFilters = this.getFilters();\n      var newFilters = currentFilters ? _objectSpread({}, currentFilters) : {};\n      if (!this.isFilterBlank(event.value)) newFilters[event.field] = {\n        value: event.value,\n        matchMode: event.matchMode\n      };else if (newFilters[event.field]) delete newFilters[event.field];\n\n      if (this.props.onFilter) {\n        this.props.onFilter({\n          filters: newFilters\n        });\n      } else {\n        this.setState({\n          first: 0,\n          filters: newFilters\n        });\n      }\n\n      if (this.props.onValueChange) {\n        this.props.onValueChange(this.processData({\n          filters: newFilters\n        }));\n      }\n    }\n  }, {\n    key: \"hasFilter\",\n    value: function hasFilter() {\n      var filters = this.getFilters() || this.props.globalFilter;\n      return filters && Object.keys(filters).length > 0;\n    }\n  }, {\n    key: \"isFilterBlank\",\n    value: function isFilterBlank(filter) {\n      if (filter !== null && filter !== undefined) {\n        if (typeof filter === 'string' && filter.trim().length === 0 || filter instanceof Array && filter.length === 0) return true;else return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasFooter\",\n    value: function hasFooter() {\n      if (this.props.children) {\n        if (this.props.footerColumnGroup) {\n          return true;\n        } else {\n          return this.hasChildrenFooter(this.props.children);\n        }\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"hasChildrenFooter\",\n    value: function hasChildrenFooter(children) {\n      var hasFooter = false;\n\n      if (children) {\n        if (children instanceof Array) {\n          for (var i = 0; i < children.length; i++) {\n            hasFooter = hasFooter || this.hasChildrenFooter(children[i]);\n          }\n        } else {\n          return children.props && children.props.footer !== null;\n        }\n      }\n\n      return hasFooter;\n    }\n  }, {\n    key: \"onColumnResizeStart\",\n    value: function onColumnResizeStart(event) {\n      var containerLeft = DomHandler.getOffset(this.container).left;\n      this.resizeColumn = event.columnEl;\n      this.resizeColumnProps = event.columnProps;\n      this.columnResizing = true;\n      this.lastResizerHelperX = event.originalEvent.pageX - containerLeft + this.container.scrollLeft;\n      this.bindColumnResizeEvents();\n    }\n  }, {\n    key: \"onColumnResize\",\n    value: function onColumnResize(event) {\n      var containerLeft = DomHandler.getOffset(this.container).left;\n      DomHandler.addClass(this.container, 'p-unselectable-text');\n      this.resizerHelper.style.height = this.container.offsetHeight + 'px';\n      this.resizerHelper.style.top = 0 + 'px';\n      this.resizerHelper.style.left = event.pageX - containerLeft + this.container.scrollLeft + 'px';\n      this.resizerHelper.style.display = 'block';\n    }\n  }, {\n    key: \"onColumnResizeEnd\",\n    value: function onColumnResizeEnd(event) {\n      var delta = this.resizerHelper.offsetLeft - this.lastResizerHelperX;\n      var columnWidth = this.resizeColumn.offsetWidth;\n      var newColumnWidth = columnWidth + delta;\n      var minWidth = this.resizeColumn.style.minWidth || 15;\n\n      if (columnWidth + delta > parseInt(minWidth, 10)) {\n        if (this.props.columnResizeMode === 'fit') {\n          var nextColumn = this.resizeColumn.nextElementSibling;\n          var nextColumnWidth = nextColumn.offsetWidth - delta;\n\n          if (newColumnWidth > 15 && nextColumnWidth > 15) {\n            if (this.props.scrollable) {\n              var scrollableView = this.findParentScrollableView(this.resizeColumn);\n              var scrollableBodyTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-body-table');\n              var scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\n              var scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\n              var resizeColumnIndex = DomHandler.index(this.resizeColumn);\n              this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n            } else {\n              this.resizeColumn.style.width = newColumnWidth + 'px';\n\n              if (nextColumn) {\n                nextColumn.style.width = nextColumnWidth + 'px';\n              }\n            }\n          }\n        } else if (this.props.columnResizeMode === 'expand') {\n          if (this.props.scrollable) {\n            this.setScrollableItemsWidthOnExpandResize(this.resizeColumn, newColumnWidth, delta);\n          } else {\n            this.table.style.width = this.table.offsetWidth + delta + 'px';\n            this.resizeColumn.style.width = newColumnWidth + 'px';\n          }\n        }\n\n        if (this.props.onColumnResizeEnd) {\n          this.props.onColumnResizeEnd({\n            element: this.resizeColumn,\n            column: this.resizeColumnProps,\n            delta: delta\n          });\n        }\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n      }\n\n      this.resizerHelper.style.display = 'none';\n      this.resizeColumn = null;\n      this.resizeColumnProps = null;\n      DomHandler.removeClass(this.container, 'p-unselectable-text');\n      this.unbindColumnResizeEvents();\n    }\n  }, {\n    key: \"setScrollableItemsWidthOnExpandResize\",\n    value: function setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta) {\n      var scrollableView = column ? this.findParentScrollableView(column) : this.container;\n      var scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body');\n      var scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\n      var scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\n      var scrollableBodyTable = DomHandler.findSingle(scrollableBody, 'table.p-datatable-scrollable-body-table');\n      var scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\n      var scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\n      var scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n      var scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n      var isContainerInViewport = this.container.offsetWidth >= scrollableBodyTableWidth;\n\n      var setWidth = function setWidth(container, table, width, isContainerInViewport) {\n        if (container && table) {\n          container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n          table.style.width = width + 'px';\n        }\n      };\n\n      setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n      setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n      setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n\n      if (column) {\n        var resizeColumnIndex = DomHandler.index(column);\n        this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n        this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n        this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n      }\n    }\n  }, {\n    key: \"findParentScrollableView\",\n    value: function findParentScrollableView(column) {\n      if (column) {\n        var parent = column.parentElement;\n\n        while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\n          parent = parent.parentElement;\n        }\n\n        return parent;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"resizeColGroup\",\n    value: function resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n      if (table) {\n        var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n        if (colGroup) {\n          var col = colGroup.children[resizeColumnIndex];\n          var nextCol = col.nextElementSibling;\n          col.style.width = newColumnWidth + 'px';\n\n          if (nextCol && nextColumnWidth) {\n            nextCol.style.width = nextColumnWidth + 'px';\n          }\n        } else {\n          throw new Error(\"Scrollable tables require a colgroup to support resizable columns\");\n        }\n      }\n    }\n  }, {\n    key: \"bindColumnResizeEvents\",\n    value: function bindColumnResizeEvents() {\n      var _this3 = this;\n\n      this.documentColumnResizeListener = document.addEventListener('mousemove', function (event) {\n        if (_this3.columnResizing) {\n          _this3.onColumnResize(event);\n        }\n      });\n      this.documentColumnResizeEndListener = document.addEventListener('mouseup', function (event) {\n        if (_this3.columnResizing) {\n          _this3.columnResizing = false;\n\n          _this3.onColumnResizeEnd(event);\n        }\n      });\n    }\n  }, {\n    key: \"unbindColumnResizeEvents\",\n    value: function unbindColumnResizeEvents() {\n      document.removeEventListener('document', this.documentColumnResizeListener);\n      document.removeEventListener('document', this.documentColumnResizeEndListener);\n    }\n  }, {\n    key: \"findParentHeader\",\n    value: function findParentHeader(element) {\n      if (element.nodeName === 'TH') {\n        return element;\n      } else {\n        var parent = element.parentElement;\n\n        while (parent.nodeName !== 'TH') {\n          parent = parent.parentElement;\n          if (!parent) break;\n        }\n\n        return parent;\n      }\n    }\n  }, {\n    key: \"onColumnDragStart\",\n    value: function onColumnDragStart(event) {\n      if (this.columnResizing) {\n        event.preventDefault();\n        return;\n      }\n\n      this.iconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUp);\n      this.iconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorUp);\n      this.draggedColumn = this.findParentHeader(event.target);\n      event.dataTransfer.setData('text', 'b'); // Firefox requires this to make dragging possible\n    }\n  }, {\n    key: \"onColumnDragOver\",\n    value: function onColumnDragOver(event) {\n      var dropHeader = this.findParentHeader(event.target);\n\n      if (this.props.reorderableColumns && this.draggedColumn && dropHeader) {\n        event.preventDefault();\n        var containerOffset = DomHandler.getOffset(this.container);\n        var dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n        if (this.draggedColumn !== dropHeader) {\n          var targetLeft = dropHeaderOffset.left - containerOffset.left; //let targetTop =  containerOffset.top - dropHeaderOffset.top;\n\n          var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n          this.reorderIndicatorUp.style.top = dropHeaderOffset.top - containerOffset.top - (this.iconHeight - 1) + 'px';\n          this.reorderIndicatorDown.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n          if (event.pageX > columnCenter) {\n            this.reorderIndicatorUp.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2) + 'px';\n            this.reorderIndicatorDown.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2) + 'px';\n            this.dropPosition = 1;\n          } else {\n            this.reorderIndicatorUp.style.left = targetLeft - Math.ceil(this.iconWidth / 2) + 'px';\n            this.reorderIndicatorDown.style.left = targetLeft - Math.ceil(this.iconWidth / 2) + 'px';\n            this.dropPosition = -1;\n          }\n\n          this.reorderIndicatorUp.style.display = 'block';\n          this.reorderIndicatorDown.style.display = 'block';\n        }\n      }\n    }\n  }, {\n    key: \"onColumnDragLeave\",\n    value: function onColumnDragLeave(event) {\n      if (this.props.reorderableColumns && this.draggedColumn) {\n        event.preventDefault();\n        this.reorderIndicatorUp.style.display = 'none';\n        this.reorderIndicatorDown.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"onColumnDrop\",\n    value: function onColumnDrop(event) {\n      event.preventDefault();\n\n      if (this.draggedColumn) {\n        var dragIndex = DomHandler.index(this.draggedColumn);\n        var dropIndex = DomHandler.index(this.findParentHeader(event.target));\n        var allowDrop = dragIndex !== dropIndex;\n\n        if (allowDrop && (dropIndex - dragIndex === 1 && this.dropPosition === -1 || dragIndex - dropIndex === 1 && this.dropPosition === 1)) {\n          allowDrop = false;\n        }\n\n        if (allowDrop) {\n          var columns = this.state.columnOrder ? this.getColumns() : React.Children.toArray(this.props.children);\n          ObjectUtils.reorderArray(columns, dragIndex, dropIndex);\n          var columnOrder = [];\n\n          var _iterator = _createForOfIteratorHelper(columns),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var column = _step.value;\n              columnOrder.push(column.props.columnKey || column.props.field);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          this.setState({\n            columnOrder: columnOrder\n          });\n\n          if (this.props.onColReorder) {\n            this.props.onColReorder({\n              originalEvent: event,\n              dragIndex: dragIndex,\n              dropIndex: dropIndex,\n              columns: columns\n            });\n          }\n        }\n\n        this.reorderIndicatorUp.style.display = 'none';\n        this.reorderIndicatorDown.style.display = 'none';\n        this.draggedColumn.draggable = false;\n        this.draggedColumn = null;\n        this.dropPosition = null;\n      }\n    }\n  }, {\n    key: \"onVirtualScroll\",\n    value: function onVirtualScroll(event) {\n      var _this4 = this;\n\n      if (this.virtualScrollTimer) {\n        clearTimeout(this.virtualScrollTimer);\n      }\n\n      this.virtualScrollTimer = setTimeout(function () {\n        if (_this4.props.onVirtualScroll) {\n          _this4.props.onVirtualScroll({\n            first: (event.page - 1) * _this4.props.rows,\n            rows: _this4.props.virtualScroll ? _this4.props.rows * 2 : _this4.props.rows\n          });\n        }\n      }, this.props.virtualScrollDelay);\n    }\n  }, {\n    key: \"exportCSV\",\n    value: function exportCSV() {\n      var _this5 = this;\n\n      var data = this.processData();\n      var csv = \"\\uFEFF\";\n      var columns = React.Children.toArray(this.props.children); //headers\n\n      for (var i = 0; i < columns.length; i++) {\n        if (columns[i].props.field) {\n          csv += '\"' + (columns[i].props.header || columns[i].props.field) + '\"';\n\n          if (i < columns.length - 1) {\n            csv += this.props.csvSeparator;\n          }\n        }\n      } //body\n\n\n      data.forEach(function (record, i) {\n        csv += '\\n';\n\n        for (var _i = 0; _i < columns.length; _i++) {\n          var column = columns[_i],\n              field = column.props.field;\n\n          if (column.props.exportable && field) {\n            var cellData = ObjectUtils.resolveFieldData(record, field);\n\n            if (cellData != null) {\n              if (_this5.props.exportFunction) {\n                cellData = _this5.props.exportFunction({\n                  data: cellData,\n                  field: field\n                });\n              } else cellData = String(cellData).replace(/\"/g, '\"\"');\n            } else cellData = '';\n\n            csv += '\"' + cellData + '\"';\n\n            if (_i < columns.length - 1) {\n              csv += _this5.props.csvSeparator;\n            }\n          }\n        }\n      });\n      var blob = new Blob([csv], {\n        type: 'text/csv;charset=utf-8;'\n      });\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        navigator.msSaveOrOpenBlob(blob, this.props.exportFilename + '.csv');\n      } else {\n        var link = document.createElement(\"a\");\n        link.style.display = 'none';\n        document.body.appendChild(link);\n\n        if (link.download !== undefined) {\n          link.setAttribute('href', URL.createObjectURL(blob));\n          link.setAttribute('download', this.props.exportFilename + '.csv');\n          link.click();\n        } else {\n          csv = 'data:text/csv;charset=utf-8,' + csv;\n          window.open(encodeURI(csv));\n        }\n\n        document.body.removeChild(link);\n      }\n    }\n  }, {\n    key: \"closeEditingCell\",\n    value: function closeEditingCell() {\n      if (this.props.editMode !== \"row\") {\n        document.body.click();\n      }\n    }\n  }, {\n    key: \"onHeaderCheckboxClick\",\n    value: function onHeaderCheckboxClick(event) {\n      var selection;\n\n      if (!event.checked) {\n        var visibleData = this.hasFilter() ? this.processData() : this.props.value;\n        selection = _toConsumableArray(visibleData);\n      } else {\n        selection = [];\n      }\n\n      if (this.props.onSelectionChange) {\n        var originalEvent = event.originalEvent,\n            rest = _objectWithoutProperties(event, [\"originalEvent\"]);\n\n        this.props.onSelectionChange(_objectSpread({\n          originalEvent: originalEvent,\n          value: selection\n        }, rest));\n      }\n    }\n  }, {\n    key: \"filterLocal\",\n    value: function filterLocal(value, localFilters) {\n      var filteredValue = [];\n      var filters = localFilters || this.getFilters();\n      var columns = React.Children.toArray(this.props.children);\n\n      for (var i = 0; i < value.length; i++) {\n        var localMatch = true;\n        var globalMatch = false;\n\n        for (var j = 0; j < columns.length; j++) {\n          var col = columns[j];\n          var columnField = col.props.filterField || col.props.field;\n          var filterMeta = filters ? filters[columnField] : null; //local\n\n          if (filterMeta) {\n            var filterValue = filterMeta.value;\n            var dataFieldValue = ObjectUtils.resolveFieldData(value[i], columnField);\n            var filterMatchMode = filterMeta.matchMode || col.props.filterMatchMode;\n            var filterConstraint = filterMatchMode === 'custom' ? col.props.filterFunction : FilterUtils[filterMatchMode];\n\n            if (filterConstraint !== null && !filterConstraint(dataFieldValue, filterValue, this.props.filterLocale)) {\n              localMatch = false;\n            }\n\n            if (!localMatch) {\n              break;\n            }\n          }\n\n          if (!col.props.excludeGlobalFilter && this.props.globalFilter && !globalMatch) {\n            globalMatch = FilterUtils['contains'](ObjectUtils.resolveFieldData(value[i], columnField), this.props.globalFilter, this.props.filterLocale);\n          }\n        }\n\n        var matches = localMatch;\n\n        if (this.props.globalFilter) {\n          matches = localMatch && globalMatch;\n        }\n\n        if (matches) {\n          filteredValue.push(value[i]);\n        }\n      }\n\n      if (filteredValue.length === value.length) {\n        filteredValue = value;\n      }\n\n      return filteredValue;\n    }\n  }, {\n    key: \"processData\",\n    value: function processData(localState) {\n      var data = this.props.value;\n\n      if (!this.props.lazy) {\n        if (data && data.length) {\n          var sortField = localState && localState.sortField || this.getSortField();\n          var sortOrder = localState && localState.sortOrder || this.getSortOrder();\n          var multiSortMeta = localState && localState.multiSortMeta || this.getMultiSortMeta();\n\n          if (sortField || multiSortMeta && multiSortMeta.length) {\n            if (this.props.sortMode === 'single') data = this.sortSingle(data, sortField, sortOrder);else if (this.props.sortMode === 'multiple') data = this.sortMultiple(data, multiSortMeta);\n          }\n\n          var localFilters = localState && localState.filters || this.getFilters();\n\n          if (localFilters || this.props.globalFilter) {\n            data = this.filterLocal(data, localFilters);\n          }\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"isAllSelected\",\n    value: function isAllSelected() {\n      var visibleData = this.hasFilter() ? this.processData() : this.props.value;\n      return this.props.selection && visibleData && visibleData.length && this.props.selection.length === visibleData.length;\n    }\n  }, {\n    key: \"getFrozenColumns\",\n    value: function getFrozenColumns(columns) {\n      var frozenColumns = null;\n\n      var _iterator2 = _createForOfIteratorHelper(columns),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var col = _step2.value;\n\n          if (col.props.frozen) {\n            frozenColumns = frozenColumns || [];\n            frozenColumns.push(col);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return frozenColumns;\n    }\n  }, {\n    key: \"getScrollableColumns\",\n    value: function getScrollableColumns(columns) {\n      var scrollableColumns = null;\n\n      var _iterator3 = _createForOfIteratorHelper(columns),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var col = _step3.value;\n\n          if (!col.props.frozen) {\n            scrollableColumns = scrollableColumns || [];\n            scrollableColumns.push(col);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return scrollableColumns;\n    }\n  }, {\n    key: \"getFrozenSelectionModeInColumn\",\n    value: function getFrozenSelectionModeInColumn(columns) {\n      if (Array.isArray(columns)) {\n        var _iterator4 = _createForOfIteratorHelper(columns),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var col = _step4.value;\n            if (col.props.selectionMode) return col.props.selectionMode;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"createTableHeader\",\n    value: function createTableHeader(value, columns, columnGroup) {\n      return /*#__PURE__*/React.createElement(TableHeader, {\n        value: value,\n        onSort: this.onSort,\n        sortField: this.getSortField(),\n        sortOrder: this.getSortOrder(),\n        multiSortMeta: this.getMultiSortMeta(),\n        columnGroup: columnGroup,\n        resizableColumns: this.props.resizableColumns,\n        onColumnResizeStart: this.onColumnResizeStart,\n        onFilter: this.onFilter,\n        onHeaderCheckboxClick: this.onHeaderCheckboxClick,\n        headerCheckboxSelected: this.isAllSelected(),\n        reorderableColumns: this.props.reorderableColumns,\n        onColumnDragStart: this.onColumnDragStart,\n        filters: this.getFilters(),\n        onColumnDragOver: this.onColumnDragOver,\n        onColumnDragLeave: this.onColumnDragLeave,\n        onColumnDrop: this.onColumnDrop,\n        tabIndex: this.props.tabIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 16\n        }\n      }, columns);\n    }\n  }, {\n    key: \"createTableBody\",\n    value: function createTableBody(value, columns, frozen) {\n      return /*#__PURE__*/React.createElement(TableBody, {\n        tableId: this.props.id,\n        value: value,\n        first: this.getFirst(),\n        rows: this.getRows(),\n        lazy: this.props.lazy,\n        paginator: this.props.paginator,\n        dataKey: this.props.dataKey,\n        compareSelectionBy: this.props.compareSelectionBy,\n        selectionMode: this.props.selectionMode,\n        selection: this.props.selection,\n        metaKeySelection: this.props.metaKeySelection,\n        frozen: frozen,\n        frozenSelectionMode: this.frozenSelectionMode,\n        onSelectionChange: this.props.onSelectionChange,\n        onRowClick: this.props.onRowClick,\n        onRowDoubleClick: this.props.onRowDoubleClick,\n        onRowSelect: this.props.onRowSelect,\n        onRowUnselect: this.props.onRowUnselect,\n        contextMenuSelection: this.props.contextMenuSelection,\n        onContextMenuSelectionChange: this.props.onContextMenuSelectionChange,\n        onContextMenu: this.props.onContextMenu,\n        expandedRows: this.props.expandedRows,\n        onRowToggle: this.props.onRowToggle,\n        rowExpansionTemplate: this.props.rowExpansionTemplate,\n        onRowExpand: this.props.onRowExpand,\n        onRowCollapse: this.props.onRowCollapse,\n        emptyMessage: this.props.emptyMessage,\n        virtualScroll: this.props.virtualScroll,\n        virtualRowHeight: this.props.virtualRowHeight,\n        loading: this.props.loading,\n        groupField: this.props.groupField,\n        rowGroupMode: this.props.rowGroupMode,\n        rowGroupHeaderTemplate: this.props.rowGroupHeaderTemplate,\n        rowGroupFooterTemplate: this.props.rowGroupFooterTemplate,\n        sortField: this.getSortField(),\n        rowClassName: this.props.rowClassName,\n        onRowReorder: this.props.onRowReorder,\n        editMode: this.props.editMode,\n        rowEditorValidator: this.props.rowEditorValidator,\n        onRowEditInit: this.props.onRowEditInit,\n        onRowEditSave: this.props.onRowEditSave,\n        onRowEditCancel: this.props.onRowEditCancel,\n        expandableRowGroups: this.props.expandableRowGroups,\n        showRowReorderElement: this.props.showRowReorderElement,\n        showSelectionElement: this.props.showSelectionElement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314,\n          columnNumber: 16\n        }\n      }, columns);\n    }\n  }, {\n    key: \"createTableLoadingBody\",\n    value: function createTableLoadingBody(columns) {\n      if (this.props.virtualScroll) {\n        return /*#__PURE__*/React.createElement(TableLoadingBody, {\n          columns: columns,\n          rows: this.getRows(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1331,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"createTableFooter\",\n    value: function createTableFooter(columns, columnGroup) {\n      if (this.hasFooter()) return /*#__PURE__*/React.createElement(TableFooter, {\n        columnGroup: columnGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1340,\n          columnNumber: 20\n        }\n      }, columns);else return null;\n    }\n  }, {\n    key: \"createScrollableView\",\n    value: function createScrollableView(value, columns, frozen, headerColumnGroup, footerColumnGroup, totalRecords) {\n      return /*#__PURE__*/React.createElement(ScrollableView, {\n        columns: columns,\n        header: this.createTableHeader(value, columns, headerColumnGroup),\n        body: this.createTableBody(value, columns, frozen),\n        loadingBody: this.createTableLoadingBody(columns),\n        frozenBody: this.props.frozenValue ? this.createTableBody(this.props.frozenValue, columns, true) : null,\n        footer: this.createTableFooter(columns, footerColumnGroup),\n        tableStyle: this.props.tableStyle,\n        tableClassName: this.props.tableClassName,\n        scrollHeight: this.props.scrollHeight,\n        frozen: frozen,\n        frozenWidth: this.props.frozenWidth,\n        virtualScroll: this.props.virtualScroll,\n        virtualRowHeight: this.props.virtualRowHeight,\n        rows: this.props.rows,\n        totalRecords: totalRecords,\n        onVirtualScroll: this.onVirtualScroll,\n        loading: this.props.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"getColumns\",\n    value: function getColumns() {\n      var columns = React.Children.toArray(this.props.children);\n\n      if (columns && columns.length) {\n        if (this.props.reorderableColumns && this.state.columnOrder) {\n          var orderedColumns = [];\n\n          var _iterator5 = _createForOfIteratorHelper(this.state.columnOrder),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var columnKey = _step5.value;\n              var column = this.findColumnByKey(columns, columnKey);\n\n              if (column) {\n                orderedColumns.push(column);\n              }\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n\n          return [].concat(orderedColumns, _toConsumableArray(columns.filter(function (item) {\n            return orderedColumns.indexOf(item) < 0;\n          })));\n        } else {\n          return columns;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"findColumnByKey\",\n    value: function findColumnByKey(columns, key) {\n      if (columns && columns.length) {\n        for (var i = 0; i < columns.length; i++) {\n          var child = columns[i];\n\n          if (child.props.columnKey === key || child.props.field === key) {\n            return child;\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getTotalRecords\",\n    value: function getTotalRecords(data) {\n      return this.props.lazy ? this.props.totalRecords : data ? data.length : 0;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var state = {};\n\n      if (!this.props.onPage) {\n        state.first = this.props.first;\n        state.rows = this.props.rows;\n      }\n\n      if (!this.props.onSort) {\n        state.sortField = this.props.sortField;\n        state.sortOrder = this.props.sortOrder;\n        state.multiSortMeta = this.props.multiSortMeta;\n      }\n\n      if (!this.props.onFilter) {\n        state.filters = this.props.filters;\n      }\n\n      this.resetColumnOrder();\n\n      if (Object.keys(state).length) {\n        this.setState(state);\n      }\n    }\n  }, {\n    key: \"resetColumnOrder\",\n    value: function resetColumnOrder() {\n      var columns = React.Children.toArray(this.props.children);\n      var columnOrder = [];\n\n      var _iterator6 = _createForOfIteratorHelper(columns),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var column = _step6.value;\n          columnOrder.push(column.props.columnKey || column.props.field);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      this.setState({\n        columnOrder: columnOrder\n      });\n    }\n  }, {\n    key: \"renderLoader\",\n    value: function renderLoader() {\n      var iconClassName = classNames('p-datatable-loading-icon pi-spin', this.props.loadingIcon);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-loading-overlay p-component-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1437,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: iconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.isStateful() && this.props.resizableColumns) {\n        this.restoreColumnWidths();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.isStateful()) {\n        this.saveState();\n      }\n\n      if (prevProps.globalFilter !== this.props.globalFilter) {\n        this.filter(this.props.globalFilter, 'globalFilter', 'contains');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var value = this.processData();\n      var columns = this.getColumns();\n      var totalRecords = this.getTotalRecords(value);\n      var className = classNames('p-datatable p-component', {\n        'p-datatable-resizable': this.props.resizableColumns,\n        'p-datatable-resizable-fit': this.props.resizableColumns && this.props.columnResizeMode === 'fit',\n        'p-datatable-scrollable': this.props.scrollable,\n        'p-datatable-virtual-scrollable': this.props.virtualScroll,\n        'p-datatable-auto-layout': this.props.autoLayout,\n        'p-datatable-hoverable-rows': this.props.rowHover || this.props.selectionMode\n      }, this.props.className);\n      var paginatorTop = this.props.paginator && this.props.paginatorPosition !== 'bottom' && this.createPaginator('top', totalRecords);\n      var paginatorBottom = this.props.paginator && this.props.paginatorPosition !== 'top' && this.createPaginator('bottom', totalRecords);\n      var headerFacet = this.props.header && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 48\n        }\n      }, this.props.header);\n      var footerFacet = this.props.footer && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-datatable-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 48\n        }\n      }, this.props.footer);\n      var resizeHelper = this.props.resizableColumns && /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this6.resizerHelper = el;\n        },\n        className: \"p-column-resizer-helper p-highlight\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1481,\n          columnNumber: 59\n        }\n      });\n      var tableContent = null;\n      var resizeIndicatorUp = this.props.reorderableColumns && /*#__PURE__*/React.createElement(\"span\", {\n        ref: function ref(el) {\n          _this6.reorderIndicatorUp = el;\n        },\n        className: \"pi pi-arrow-down p-datatable-reorder-indicator-up\",\n        style: {\n          position: 'absolute',\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1483,\n          columnNumber: 66\n        }\n      });\n      var resizeIndicatorDown = this.props.reorderableColumns && /*#__PURE__*/React.createElement(\"span\", {\n        ref: function ref(el) {\n          _this6.reorderIndicatorDown = el;\n        },\n        className: \"pi pi-arrow-up p-datatable-reorder-indicator-down\",\n        style: {\n          position: 'absolute',\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 68\n        }\n      });\n      var loader;\n\n      if (this.props.loading) {\n        loader = this.renderLoader();\n      }\n\n      if (Array.isArray(columns)) {\n        if (this.props.scrollable) {\n          this.frozenSelectionMode = this.frozenSelectionMode || this.getFrozenSelectionModeInColumn(columns);\n          var frozenColumns = this.getFrozenColumns(columns);\n          var scrollableColumns = frozenColumns ? this.getScrollableColumns(columns) : columns;\n          var frozenView, scrollableView;\n\n          if (frozenColumns) {\n            frozenView = this.createScrollableView(value, frozenColumns, true, this.props.frozenHeaderColumnGroup, this.props.frozenFooterColumnGroup, totalRecords);\n          }\n\n          scrollableView = this.createScrollableView(value, scrollableColumns, false, this.props.headerColumnGroup, this.props.footerColumnGroup, totalRecords);\n          tableContent = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-datatable-scrollable-wrapper\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1503,\n              columnNumber: 32\n            }\n          }, frozenView, scrollableView);\n        } else {\n          var tableHeader = this.createTableHeader(value, columns, this.props.headerColumnGroup);\n          var tableBody = this.createTableBody(value, columns, false);\n          var tableFooter = this.createTableFooter(columns, this.props.footerColumnGroup);\n          tableContent = /*#__PURE__*/React.createElement(\"div\", {\n            className: \"p-datatable-wrapper\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1513,\n              columnNumber: 32\n            }\n          }, /*#__PURE__*/React.createElement(\"table\", {\n            style: this.props.tableStyle,\n            role: \"grid\",\n            className: this.props.tableClassName,\n            ref: function ref(el) {\n              _this6.table = el;\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1514,\n              columnNumber: 25\n            }\n          }, tableHeader, tableFooter, tableBody));\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        ref: function ref(el) {\n          _this6.container = el;\n        },\n        \"data-scrollselectors\": \".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1524,\n          columnNumber: 13\n        }\n      }, loader, headerFacet, paginatorTop, tableContent, paginatorBottom, footerFacet, resizeHelper, resizeIndicatorUp, resizeIndicatorDown);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.rows !== prevState.rows && !nextProps.onPage) {\n        return {\n          rows: nextProps.rows\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return DataTable;\n}(Component);\nDataTable.defaultProps = {\n  id: null,\n  value: null,\n  header: null,\n  footer: null,\n  style: null,\n  className: null,\n  tableStyle: null,\n  tableClassName: null,\n  paginator: false,\n  paginatorPosition: 'bottom',\n  alwaysShowPaginator: true,\n  paginatorClassName: null,\n  paginatorTemplate: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown',\n  paginatorLeft: null,\n  paginatorRight: null,\n  paginatorDropdownAppendTo: null,\n  pageLinkSize: 5,\n  rowsPerPageOptions: null,\n  currentPageReportTemplate: '({currentPage} of {totalPages})',\n  first: 0,\n  rows: null,\n  totalRecords: null,\n  lazy: false,\n  sortField: null,\n  sortOrder: null,\n  multiSortMeta: null,\n  sortMode: 'single',\n  defaultSortOrder: 1,\n  removableSort: false,\n  emptyMessage: null,\n  selectionMode: null,\n  selection: null,\n  onSelectionChange: null,\n  contextMenuSelection: null,\n  onContextMenuSelectionChange: null,\n  compareSelectionBy: 'deepEquals',\n  dataKey: null,\n  metaKeySelection: true,\n  headerColumnGroup: null,\n  footerColumnGroup: null,\n  frozenHeaderColumnGroup: null,\n  frozenFooterColumnGroup: null,\n  rowExpansionTemplate: null,\n  expandedRows: null,\n  onRowToggle: null,\n  resizableColumns: false,\n  columnResizeMode: 'fit',\n  reorderableColumns: false,\n  filters: null,\n  globalFilter: null,\n  filterLocale: undefined,\n  scrollable: false,\n  scrollHeight: null,\n  virtualScroll: false,\n  virtualScrollDelay: 150,\n  virtualRowHeight: 28,\n  frozenWidth: null,\n  frozenValue: null,\n  csvSeparator: ',',\n  exportFilename: 'download',\n  rowGroupMode: null,\n  autoLayout: false,\n  rowClassName: null,\n  rowGroupHeaderTemplate: null,\n  rowGroupFooterTemplate: null,\n  loading: false,\n  loadingIcon: 'pi pi-spinner',\n  tabIndex: 0,\n  stateKey: null,\n  stateStorage: 'session',\n  editMode: 'cell',\n  expandableRowGroups: false,\n  rowHover: false,\n  showSelectionElement: null,\n  showRowReorderElement: null,\n  onColumnResizeEnd: null,\n  onSort: null,\n  onPage: null,\n  onFilter: null,\n  onVirtualScroll: null,\n  onRowClick: null,\n  onRowDoubleClick: null,\n  onRowSelect: null,\n  onRowUnselect: null,\n  onRowExpand: null,\n  onRowCollapse: null,\n  onContextMenu: null,\n  onColReorder: null,\n  onRowReorder: null,\n  onValueChange: null,\n  rowEditorValidator: null,\n  onRowEditInit: null,\n  onRowEditSave: null,\n  onRowEditCancel: null,\n  exportFunction: null,\n  customSaveState: null,\n  customRestoreState: null,\n  onStateSave: null,\n  onStateRestore: null\n};\nDataTable.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.array,\n  header: PropTypes.any,\n  footer: PropTypes.any,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  tableStyle: PropTypes.any,\n  tableClassName: PropTypes.string,\n  paginator: PropTypes.bool,\n  paginatorPosition: PropTypes.string,\n  alwaysShowPaginator: PropTypes.bool,\n  paginatorClassName: PropTypes.string,\n  paginatorTemplate: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  paginatorLeft: PropTypes.any,\n  paginatorRight: PropTypes.any,\n  paginatorDropdownAppendTo: PropTypes.any,\n  pageLinkSize: PropTypes.number,\n  rowsPerPageOptions: PropTypes.array,\n  currentPageReportTemplate: PropTypes.string,\n  first: PropTypes.number,\n  rows: PropTypes.number,\n  totalRecords: PropTypes.number,\n  lazy: PropTypes.bool,\n  sortField: PropTypes.string,\n  sortOrder: PropTypes.number,\n  multiSortMeta: PropTypes.array,\n  sortMode: PropTypes.string,\n  defaultSortOrder: PropTypes.number,\n  removableSort: PropTypes.bool,\n  emptyMessage: PropTypes.any,\n  selectionMode: PropTypes.string,\n  selection: PropTypes.any,\n  onSelectionChange: PropTypes.func,\n  compareSelectionBy: PropTypes.string,\n  dataKey: PropTypes.string,\n  metaKeySelection: PropTypes.bool,\n  headerColumnGroup: PropTypes.any,\n  footerColumnGroup: PropTypes.any,\n  frozenHeaderColumnGroup: PropTypes.any,\n  frozenFooterColumnGroup: PropTypes.any,\n  rowExpansionTemplate: PropTypes.func,\n  expandedRows: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  onRowToggle: PropTypes.func,\n  resizableColumns: PropTypes.bool,\n  columnResizeMode: PropTypes.string,\n  reorderableColumns: PropTypes.bool,\n  filters: PropTypes.object,\n  globalFilter: PropTypes.any,\n  filterLocale: PropTypes.string,\n  scrollable: PropTypes.bool,\n  scrollHeight: PropTypes.string,\n  virtualScroll: PropTypes.bool,\n  virtualScrollDelay: PropTypes.number,\n  virtualRowHeight: PropTypes.number,\n  frozenWidth: PropTypes.string,\n  frozenValue: PropTypes.array,\n  csvSeparator: PropTypes.string,\n  exportFilename: PropTypes.string,\n  rowGroupMode: PropTypes.string,\n  autoLayout: PropTypes.bool,\n  rowClassName: PropTypes.func,\n  rowGroupHeaderTemplate: PropTypes.func,\n  rowGroupFooterTemplate: PropTypes.func,\n  loading: PropTypes.bool,\n  loadingIcon: PropTypes.string,\n  tabIndex: PropTypes.number,\n  stateKey: PropTypes.string,\n  stateStorage: PropTypes.string,\n  editMode: PropTypes.string,\n  expandableRowGroups: PropTypes.bool,\n  rowHover: PropTypes.bool,\n  showSelectionElement: PropTypes.func,\n  showRowReorderElement: PropTypes.func,\n  onColumnResizeEnd: PropTypes.func,\n  onSort: PropTypes.func,\n  onPage: PropTypes.func,\n  onFilter: PropTypes.func,\n  onVirtualScroll: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onRowDoubleClick: PropTypes.func,\n  onRowSelect: PropTypes.func,\n  onRowUnselect: PropTypes.func,\n  onRowExpand: PropTypes.func,\n  onRowCollapse: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onColReorder: PropTypes.func,\n  onRowReorder: PropTypes.func,\n  onValueChange: PropTypes.func,\n  rowEditorValidator: PropTypes.func,\n  onRowEditInit: PropTypes.func,\n  onRowEditSave: PropTypes.func,\n  onRowEditCancel: PropTypes.func,\n  exportFunction: PropTypes.func,\n  customSaveState: PropTypes.func,\n  customRestoreState: PropTypes.func,\n  onStateSave: PropTypes.func,\n  onStateRestore: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/datatable/DataTable.js"],"names":["classNames","PropTypes","React","Component","Paginator","DomHandler","ObjectUtils","FilterUtils","ScrollableView","TableBody","TableFooter","TableHeader","TableLoadingBody","DataTable","props","state","onPage","first","rows","onSort","sortField","sortOrder","multiSortMeta","onFilter","filters","isStateful","restoreState","onPageChange","bind","onColumnResizeStart","onHeaderCheckboxClick","onColumnDragStart","onColumnDragOver","onColumnDragLeave","onColumnDrop","onVirtualScroll","frozenSelectionMode","stateStorage","window","localStorage","sessionStorage","Error","stateKey","isCustomStateStorage","paginator","getFirst","getRows","getSortField","getSortOrder","getMultiSortMeta","hasFilter","getFilters","resizableColumns","saveColumnWidths","reorderableColumns","columnOrder","expandedRows","selection","onSelectionChange","customSaveState","storage","getStorage","Object","keys","length","setItem","JSON","stringify","onStateSave","removeItem","restoredState","customRestoreState","stateString","getItem","parse","_restoreState","setState","columnWidthsState","columnWidths","tableWidthState","tableWidth","onRowToggle","data","value","onStateRestore","widths","headers","find","container","map","header","push","getOuterWidth","join","columnResizeMode","scrollable","findSingle","style","width","table","split","setScrollableItemsWidthOnExpandResize","headerCols","bodyCols","col","index","event","onValueChange","position","totalRecords","className","paginatorClassName","pageLinkSize","paginatorTemplate","rowsPerPageOptions","currentPageReportTemplate","paginatorLeft","paginatorRight","alwaysShowPaginator","paginatorDropdownAppendTo","defaultSortOrder","eventMeta","columnSortable","sortable","columnSortFunction","sortFunction","columnField","sortMode","metaKey","originalEvent","ctrlKey","Array","sortMeta","field","getCalculatedSortOrder","order","newMetaData","addSortMeta","removableSort","removeSortMeta","processData","currentOrder","meta","i","splice","sort","data1","data2","value1","resolveFieldData","value2","result","localeCompare","undefined","numeric","multisortField","String","mode","matchMode","currentFilters","newFilters","isFilterBlank","globalFilter","filter","trim","children","footerColumnGroup","hasChildrenFooter","hasFooter","footer","containerLeft","getOffset","left","resizeColumn","columnEl","resizeColumnProps","columnProps","columnResizing","lastResizerHelperX","pageX","scrollLeft","bindColumnResizeEvents","addClass","resizerHelper","height","offsetHeight","top","display","delta","offsetLeft","columnWidth","offsetWidth","newColumnWidth","minWidth","parseInt","nextColumn","nextElementSibling","nextColumnWidth","scrollableView","findParentScrollableView","scrollableBodyTable","scrollableHeaderTable","scrollableFooterTable","resizeColumnIndex","resizeColGroup","onColumnResizeEnd","element","column","saveState","removeClass","unbindColumnResizeEvents","scrollableBody","scrollableHeader","scrollableFooter","scrollableBodyTableWidth","scrollableHeaderTableWidth","isContainerInViewport","setWidth","calculateScrollbarWidth","parent","parentElement","hasClass","colGroup","nodeName","nextCol","documentColumnResizeListener","document","addEventListener","onColumnResize","documentColumnResizeEndListener","removeEventListener","preventDefault","iconWidth","getHiddenElementOuterWidth","reorderIndicatorUp","iconHeight","getHiddenElementOuterHeight","draggedColumn","findParentHeader","target","dataTransfer","setData","dropHeader","containerOffset","dropHeaderOffset","targetLeft","columnCenter","reorderIndicatorDown","Math","ceil","dropPosition","dragIndex","dropIndex","allowDrop","columns","getColumns","Children","toArray","reorderArray","columnKey","onColReorder","draggable","virtualScrollTimer","clearTimeout","setTimeout","page","virtualScroll","virtualScrollDelay","csv","csvSeparator","forEach","record","exportable","cellData","exportFunction","replace","blob","Blob","type","navigator","msSaveOrOpenBlob","exportFilename","link","createElement","body","appendChild","download","setAttribute","URL","createObjectURL","click","open","encodeURI","removeChild","editMode","checked","visibleData","rest","localFilters","filteredValue","localMatch","globalMatch","j","filterField","filterMeta","filterValue","dataFieldValue","filterMatchMode","filterConstraint","filterFunction","filterLocale","excludeGlobalFilter","matches","localState","lazy","sortSingle","sortMultiple","filterLocal","frozenColumns","frozen","scrollableColumns","isArray","selectionMode","columnGroup","isAllSelected","tabIndex","id","dataKey","compareSelectionBy","metaKeySelection","onRowClick","onRowDoubleClick","onRowSelect","onRowUnselect","contextMenuSelection","onContextMenuSelectionChange","onContextMenu","rowExpansionTemplate","onRowExpand","onRowCollapse","emptyMessage","virtualRowHeight","loading","groupField","rowGroupMode","rowGroupHeaderTemplate","rowGroupFooterTemplate","rowClassName","onRowReorder","rowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","expandableRowGroups","showRowReorderElement","showSelectionElement","headerColumnGroup","createTableHeader","createTableBody","createTableLoadingBody","frozenValue","createTableFooter","tableStyle","tableClassName","scrollHeight","frozenWidth","orderedColumns","findColumnByKey","item","indexOf","key","child","resetColumnOrder","iconClassName","loadingIcon","restoreColumnWidths","prevProps","prevState","getTotalRecords","autoLayout","rowHover","paginatorTop","paginatorPosition","createPaginator","paginatorBottom","headerFacet","footerFacet","resizeHelper","el","tableContent","resizeIndicatorUp","resizeIndicatorDown","loader","renderLoader","getFrozenSelectionModeInColumn","getFrozenColumns","getScrollableColumns","frozenView","createScrollableView","frozenHeaderColumnGroup","frozenFooterColumnGroup","tableHeader","tableBody","tableFooter","nextProps","defaultProps","propTypes","string","array","any","object","bool","oneOfType","number","func"],"mappings":"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","sourcesContent":["import { classNames } from '../utils/ClassNames';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Paginator } from '../paginator/Paginator';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport FilterUtils from '../utils/FilterUtils';\r\nimport { ScrollableView } from './ScrollableView';\r\nimport { TableBody } from './TableBody';\r\nimport { TableFooter } from './TableFooter';\r\nimport { TableHeader } from './TableHeader';\r\nimport { TableLoadingBody } from './TableLoadingBody';\r\n\r\nexport class DataTable extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        header: null,\r\n        footer: null,\r\n        style: null,\r\n        className: null,\r\n        tableStyle: null,\r\n        tableClassName: null,\r\n        paginator: false,\r\n        paginatorPosition: 'bottom',\r\n        alwaysShowPaginator: true,\r\n        paginatorClassName: null,\r\n        paginatorTemplate: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown',\r\n        paginatorLeft:null,\r\n        paginatorRight: null,\r\n        paginatorDropdownAppendTo: null,\r\n        pageLinkSize: 5,\r\n        rowsPerPageOptions: null,\r\n        currentPageReportTemplate: '({currentPage} of {totalPages})',\r\n        first: 0,\r\n        rows: null,\r\n        totalRecords: null,\r\n        lazy: false,\r\n        sortField: null,\r\n        sortOrder: null,\r\n        multiSortMeta: null,\r\n        sortMode: 'single',\r\n        defaultSortOrder: 1,\r\n        removableSort: false,\r\n        emptyMessage: null,\r\n        selectionMode: null,\r\n        selection: null,\r\n        onSelectionChange: null,\r\n        contextMenuSelection: null,\r\n        onContextMenuSelectionChange: null,\r\n        compareSelectionBy: 'deepEquals',\r\n        dataKey: null,\r\n        metaKeySelection: true,\r\n        headerColumnGroup: null,\r\n        footerColumnGroup: null,\r\n        frozenHeaderColumnGroup: null,\r\n        frozenFooterColumnGroup: null,\r\n        rowExpansionTemplate: null,\r\n        expandedRows: null,\r\n        onRowToggle: null,\r\n        resizableColumns: false,\r\n        columnResizeMode: 'fit',\r\n        reorderableColumns: false,\r\n        filters: null,\r\n        globalFilter: null,\r\n        filterLocale: undefined,\r\n        scrollable: false,\r\n        scrollHeight: null,\r\n        virtualScroll: false,\r\n        virtualScrollDelay: 150,\r\n        virtualRowHeight: 28,\r\n        frozenWidth: null,\r\n        frozenValue: null,\r\n        csvSeparator: ',',\r\n        exportFilename: 'download',\r\n        rowGroupMode: null,\r\n        autoLayout: false,\r\n        rowClassName: null,\r\n        rowGroupHeaderTemplate: null,\r\n        rowGroupFooterTemplate: null,\r\n        loading: false,\r\n        loadingIcon: 'pi pi-spinner',\r\n        tabIndex: 0,\r\n        stateKey: null,\r\n        stateStorage: 'session',\r\n        editMode: 'cell',\r\n        expandableRowGroups: false,\r\n        rowHover: false,\r\n        showSelectionElement: null,\r\n        showRowReorderElement: null,\r\n        onColumnResizeEnd: null,\r\n        onSort: null,\r\n        onPage: null,\r\n        onFilter: null,\r\n        onVirtualScroll: null,\r\n        onRowClick: null,\r\n        onRowDoubleClick: null,\r\n        onRowSelect: null,\r\n        onRowUnselect: null,\r\n        onRowExpand: null,\r\n        onRowCollapse: null,\r\n        onContextMenu: null,\r\n        onColReorder: null,\r\n        onRowReorder: null,\r\n        onValueChange: null,\r\n        rowEditorValidator: null,\r\n        onRowEditInit: null,\r\n        onRowEditSave: null,\r\n        onRowEditCancel: null,\r\n        exportFunction: null,\r\n        customSaveState: null,\r\n        customRestoreState: null,\r\n        onStateSave: null,\r\n        onStateRestore: null,\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.array,\r\n        header: PropTypes.any,\r\n        footer: PropTypes.any,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        tableStyle: PropTypes.any,\r\n        tableClassName: PropTypes.string,\r\n        paginator: PropTypes.bool,\r\n        paginatorPosition: PropTypes.string,\r\n        alwaysShowPaginator: PropTypes.bool,\r\n        paginatorClassName: PropTypes.string,\r\n        paginatorTemplate: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n        paginatorLeft: PropTypes.any,\r\n        paginatorRight: PropTypes.any,\r\n        paginatorDropdownAppendTo: PropTypes.any,\r\n        pageLinkSize: PropTypes.number,\r\n        rowsPerPageOptions: PropTypes.array,\r\n        currentPageReportTemplate: PropTypes.string,\r\n        first: PropTypes.number,\r\n        rows: PropTypes.number,\r\n        totalRecords: PropTypes.number,\r\n        lazy: PropTypes.bool,\r\n        sortField: PropTypes.string,\r\n        sortOrder: PropTypes.number,\r\n        multiSortMeta: PropTypes.array,\r\n        sortMode: PropTypes.string,\r\n        defaultSortOrder: PropTypes.number,\r\n        removableSort: PropTypes.bool,\r\n        emptyMessage: PropTypes.any,\r\n        selectionMode: PropTypes.string,\r\n        selection: PropTypes.any,\r\n        onSelectionChange: PropTypes.func,\r\n        compareSelectionBy: PropTypes.string,\r\n        dataKey: PropTypes.string,\r\n        metaKeySelection: PropTypes.bool,\r\n        headerColumnGroup: PropTypes.any,\r\n        footerColumnGroup: PropTypes.any,\r\n        frozenHeaderColumnGroup: PropTypes.any,\r\n        frozenFooterColumnGroup: PropTypes.any,\r\n        rowExpansionTemplate: PropTypes.func,\r\n        expandedRows: PropTypes.oneOfType([PropTypes.array,PropTypes.object]),\r\n        onRowToggle: PropTypes.func,\r\n        resizableColumns: PropTypes.bool,\r\n        columnResizeMode: PropTypes.string,\r\n        reorderableColumns: PropTypes.bool,\r\n        filters: PropTypes.object,\r\n        globalFilter: PropTypes.any,\r\n        filterLocale: PropTypes.string,\r\n        scrollable: PropTypes.bool,\r\n        scrollHeight: PropTypes.string,\r\n        virtualScroll: PropTypes.bool,\r\n        virtualScrollDelay: PropTypes.number,\r\n        virtualRowHeight: PropTypes.number,\r\n        frozenWidth: PropTypes.string,\r\n        frozenValue: PropTypes.array,\r\n        csvSeparator: PropTypes.string,\r\n        exportFilename: PropTypes.string,\r\n        rowGroupMode: PropTypes.string,\r\n        autoLayout: PropTypes.bool,\r\n        rowClassName: PropTypes.func,\r\n        rowGroupHeaderTemplate: PropTypes.func,\r\n        rowGroupFooterTemplate: PropTypes.func,\r\n        loading: PropTypes.bool,\r\n        loadingIcon: PropTypes.string,\r\n        tabIndex: PropTypes.number,\r\n        stateKey: PropTypes.string,\r\n        stateStorage: PropTypes.string,\r\n        editMode: PropTypes.string,\r\n        expandableRowGroups: PropTypes.bool,\r\n        rowHover: PropTypes.bool,\r\n        showSelectionElement: PropTypes.func,\r\n        showRowReorderElement: PropTypes.func,\r\n        onColumnResizeEnd: PropTypes.func,\r\n        onSort: PropTypes.func,\r\n        onPage: PropTypes.func,\r\n        onFilter: PropTypes.func,\r\n        onVirtualScroll: PropTypes.func,\r\n        onRowClick: PropTypes.func,\r\n        onRowDoubleClick: PropTypes.func,\r\n        onRowSelect: PropTypes.func,\r\n        onRowUnselect: PropTypes.func,\r\n        onRowExpand: PropTypes.func,\r\n        onRowCollapse: PropTypes.func,\r\n        onContextMenu: PropTypes.func,\r\n        onColReorder: PropTypes.func,\r\n        onRowReorder: PropTypes.func,\r\n        onValueChange: PropTypes.func,\r\n        rowEditorValidator: PropTypes.func,\r\n        onRowEditInit: PropTypes.func,\r\n        onRowEditSave: PropTypes.func,\r\n        onRowEditCancel: PropTypes.func,\r\n        exportFunction: PropTypes.func,\r\n        customSaveState: PropTypes.func,\r\n        customRestoreState: PropTypes.func,\r\n        onStateSave: PropTypes.func,\r\n        onStateRestore: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        if (!this.props.onPage) {\r\n            this.state.first = props.first;\r\n            this.state.rows = props.rows;\r\n        }\r\n\r\n        if (!this.props.onSort) {\r\n            this.state.sortField = props.sortField;\r\n            this.state.sortOrder = props.sortOrder;\r\n            this.state.multiSortMeta = props.multiSortMeta;\r\n        }\r\n\r\n        if (!this.props.onFilter) {\r\n            this.state.filters = props.filters;\r\n        }\r\n\r\n        if (this.isStateful()) {\r\n            this.restoreState(this.state);\r\n        }\r\n\r\n        this.onPageChange = this.onPageChange.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onColumnResizeStart = this.onColumnResizeStart.bind(this);\r\n        this.onHeaderCheckboxClick = this.onHeaderCheckboxClick.bind(this);\r\n        this.onColumnDragStart = this.onColumnDragStart.bind(this);\r\n        this.onColumnDragOver = this.onColumnDragOver.bind(this);\r\n        this.onColumnDragLeave = this.onColumnDragLeave.bind(this);\r\n        this.onColumnDrop = this.onColumnDrop.bind(this);\r\n        this.onVirtualScroll = this.onVirtualScroll.bind(this);\r\n        this.frozenSelectionMode = null;\r\n    }\r\n\r\n    getFirst() {\r\n        return this.props.onPage ? this.props.first : this.state.first;\r\n    }\r\n\r\n    getRows() {\r\n        return this.props.onPage ? this.props.rows : this.state.rows;\r\n    }\r\n\r\n    getSortField() {\r\n        return this.props.onSort ? this.props.sortField : this.state.sortField;\r\n    }\r\n\r\n    getSortOrder() {\r\n        return this.props.onSort ? this.props.sortOrder : this.state.sortOrder;\r\n    }\r\n\r\n    getMultiSortMeta() {\r\n        return this.props.onSort ? this.props.multiSortMeta : this.state.multiSortMeta;\r\n    }\r\n\r\n    getFilters() {\r\n        return this.props.onFilter ? this.props.filters : this.state.filters;\r\n    }\r\n\r\n    getStorage() {\r\n        switch (this.props.stateStorage) {\r\n            case 'local':\r\n                return window.localStorage;\r\n\r\n            case 'session':\r\n                return window.sessionStorage;\r\n\r\n            case 'custom':\r\n                return null;\r\n\r\n            default:\r\n                throw new Error(this.props.stateStorage + ' is not a valid value for the state storage, supported values are \"local\", \"session\" and \"custom\".');\r\n        }\r\n    }\r\n\r\n    isCustomStateStorage() {\r\n        return this.props.stateStorage === 'custom';\r\n    }\r\n\r\n    isStateful() {\r\n        return this.props.stateKey != null || this.isCustomStateStorage();\r\n    }\r\n\r\n    saveState() {\r\n        let state = {};\r\n\r\n        if (this.props.paginator) {\r\n            state.first = this.getFirst();\r\n            state.rows = this.getRows();\r\n        }\r\n\r\n        let sortField = this.getSortField();\r\n        if (sortField) {\r\n            state.sortField = sortField;\r\n            state.sortOrder = this.getSortOrder();\r\n        }\r\n\r\n        let multiSortMeta = this.getMultiSortMeta();\r\n        if (multiSortMeta) {\r\n            state.multiSortMeta = multiSortMeta;\r\n        }\r\n\r\n        if (this.hasFilter()) {\r\n            state.filters = this.getFilters();\r\n        }\r\n\r\n        if (this.props.resizableColumns) {\r\n            this.saveColumnWidths(state);\r\n        }\r\n\r\n        if (this.props.reorderableColumns) {\r\n            state.columnOrder = this.state.columnOrder;\r\n        }\r\n\r\n        if (this.props.expandedRows) {\r\n            state.expandedRows = this.props.expandedRows;\r\n        }\r\n\r\n        if (this.props.selection && this.props.onSelectionChange) {\r\n            state.selection = this.props.selection;\r\n        }\r\n\r\n        if (this.isCustomStateStorage()) {\r\n            if (this.props.customSaveState) {\r\n                this.props.customSaveState(state);\r\n            }\r\n        }\r\n        else {\r\n            const storage = this.getStorage();\r\n            if (Object.keys(state).length) {\r\n                storage.setItem(this.props.stateKey, JSON.stringify(state));\r\n            }\r\n        }\r\n\r\n        if (this.props.onStateSave) {\r\n            this.props.onStateSave(state);\r\n        }\r\n    }\r\n\r\n    clearState() {\r\n        const storage = this.getStorage();\r\n\r\n        if (storage && this.props.stateKey) {\r\n            storage.removeItem(this.props.stateKey);\r\n        }\r\n    }\r\n\r\n    restoreState(state) {\r\n        let restoredState = {};\r\n\r\n        if (this.isCustomStateStorage()) {\r\n            if (this.props.customRestoreState) {\r\n                restoredState = this.props.customRestoreState();\r\n            }\r\n        }\r\n        else {\r\n            const storage = this.getStorage();\r\n            const stateString = storage.getItem(this.props.stateKey);\r\n\r\n            if (stateString) {\r\n                restoredState = JSON.parse(stateString);\r\n            }\r\n        }\r\n\r\n        this._restoreState(restoredState, state);\r\n    }\r\n\r\n    restoreTableState(restoredState) {\r\n        const state = this._restoreState(restoredState);\r\n        if (state && Object.keys(state).length) {\r\n            this.setState(state);\r\n        }\r\n    }\r\n\r\n    _restoreState(restoredState, state = {}) {\r\n        if (restoredState && Object.keys(restoredState).length) {\r\n            if (this.props.paginator) {\r\n                if (this.props.onPage) {\r\n                    this.props.onPage({\r\n                        first: restoredState.first,\r\n                        rows: restoredState.rows\r\n                    });\r\n                }\r\n                else {\r\n                    state.first = restoredState.first;\r\n                    state.rows = restoredState.rows;\r\n                }\r\n            }\r\n\r\n            if (restoredState.sortField) {\r\n                if (this.props.onSort) {\r\n                    this.props.onSort({\r\n                        sortField: restoredState.sortField,\r\n                        sortOrder: restoredState.sortOrder\r\n                    });\r\n                }\r\n                else {\r\n                    state.sortField = restoredState.sortField;\r\n                    state.sortOrder = restoredState.sortOrder;\r\n                }\r\n            }\r\n\r\n            if (restoredState.multiSortMeta) {\r\n                if (this.props.onSort) {\r\n                    this.props.onSort({\r\n                        multiSortMeta: restoredState.multiSortMeta\r\n                    });\r\n                }\r\n                else {\r\n                    state.multiSortMeta = restoredState.multiSortMeta;\r\n                }\r\n            }\r\n\r\n            if (restoredState.filters) {\r\n                if (this.props.onFilter) {\r\n                    this.props.onFilter({\r\n                        filters: restoredState.filters\r\n                    });\r\n                }\r\n                else {\r\n                    state.filters = restoredState.filters;\r\n                }\r\n            }\r\n\r\n            if (this.props.resizableColumns) {\r\n                this.columnWidthsState = restoredState.columnWidths;\r\n                this.tableWidthState = restoredState.tableWidth;\r\n            }\r\n\r\n            if (this.props.reorderableColumns) {\r\n                state.columnOrder = restoredState.columnOrder;\r\n            }\r\n\r\n            if (restoredState.expandedRows && this.props.onRowToggle) {\r\n                this.props.onRowToggle({\r\n                    data: restoredState.expandedRows\r\n                });\r\n            }\r\n\r\n            if (restoredState.selection && this.props.onSelectionChange) {\r\n                this.props.onSelectionChange({\r\n                    value: restoredState.selection\r\n                });\r\n            }\r\n\r\n            if (this.props.onStateRestore) {\r\n                this.props.onStateRestore(restoredState);\r\n            }\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    saveColumnWidths(state) {\r\n        let widths = [];\r\n        let headers = DomHandler.find(this.container, '.p-datatable-thead > tr > th.p-resizable-column');\r\n        headers.map(header => widths.push(DomHandler.getOuterWidth(header)));\r\n        state.columnWidths = widths.join(',');\r\n\r\n        if (this.props.columnResizeMode === 'expand') {\r\n            state.tableWidth = this.props.scrollable ? DomHandler.findSingle(this.container, '.p-datatable-scrollable-header-table').style.width :\r\n                                                DomHandler.getOuterWidth(this.table) + 'px';\r\n        }\r\n    }\r\n\r\n    restoreColumnWidths() {\r\n        if (this.columnWidthsState) {\r\n            let widths = this.columnWidthsState.split(',');\r\n\r\n            if (this.props.columnResizeMode === 'expand' && this.tableWidthState) {\r\n                if (this.props.scrollable) {\r\n                    this.setScrollableItemsWidthOnExpandResize(null, this.tableWidthState, 0);\r\n                }\r\n                else {\r\n                    this.table.style.width = this.tableWidthState;\r\n                    this.container.style.width = this.tableWidthState;\r\n                }\r\n            }\r\n\r\n            if (this.props.scrollable) {\r\n                let headerCols = DomHandler.find(this.container, '.p-datatable-scrollable-header-table > colgroup > col');\r\n                let bodyCols = DomHandler.find(this.container, '.p-datatable-scrollable-body-table > colgroup > col');\r\n\r\n                headerCols.map((col, index) => col.style.width = widths[index] + 'px');\r\n                bodyCols.map((col, index) => col.style.width = widths[index] + 'px');\r\n            }\r\n            else {\r\n                let headers = DomHandler.find(this.table, '.p-datatable-thead > tr > th');\r\n                headers.map((header, index) => header.style.width = widths[index] + 'px');\r\n            }\r\n        }\r\n    }\r\n\r\n    onPageChange(event) {\r\n        if (this.props.onPage)\r\n            this.props.onPage(event);\r\n        else\r\n            this.setState({first: event.first, rows: event.rows});\r\n\r\n        if (this.props.onValueChange) {\r\n            this.props.onValueChange();\r\n        }\r\n    }\r\n\r\n    createPaginator(position, totalRecords, data) {\r\n        const className = classNames('p-paginator-' + position, this.props.paginatorClassName);\r\n\r\n        return (\r\n            <Paginator first={this.getFirst()} rows={this.getRows()} pageLinkSize={this.props.pageLinkSize} className={className} onPageChange={this.onPageChange} template={this.props.paginatorTemplate}\r\n                        totalRecords={totalRecords} rowsPerPageOptions={this.props.rowsPerPageOptions} currentPageReportTemplate={this.props.currentPageReportTemplate}\r\n                        leftContent={this.props.paginatorLeft} rightContent={this.props.paginatorRight} alwaysShow={this.props.alwaysShowPaginator} dropdownAppendTo={this.props.paginatorDropdownAppendTo} />\r\n        );\r\n    }\r\n\r\n    onSort(event) {\r\n        let sortField = event.sortField;\r\n        let sortOrder = this.props.defaultSortOrder;\r\n        let multiSortMeta;\r\n        let eventMeta;\r\n\r\n        this.columnSortable = event.sortable;\r\n        this.columnSortFunction = event.sortFunction;\r\n        this.columnField = event.sortField;\r\n\r\n        if (this.props.sortMode === 'multiple') {\r\n            let metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\r\n            multiSortMeta = this.getMultiSortMeta();\r\n\r\n            if (multiSortMeta && multiSortMeta instanceof Array) {\r\n                const sortMeta = multiSortMeta.find(sortMeta => sortMeta.field === sortField);\r\n                sortOrder = sortMeta ? this.getCalculatedSortOrder(sortMeta.order) : sortOrder;\r\n            }\r\n\r\n            const newMetaData = {field: sortField, order: sortOrder};\r\n\r\n            if (sortOrder) {\r\n                if(!multiSortMeta || !metaKey) {\r\n                    multiSortMeta = [];\r\n                }\r\n\r\n                this.addSortMeta(newMetaData, multiSortMeta);\r\n            }\r\n            else if (this.props.removableSort && multiSortMeta) {\r\n                this.removeSortMeta(newMetaData, multiSortMeta);\r\n            }\r\n\r\n            eventMeta = {\r\n                multiSortMeta: multiSortMeta\r\n            };\r\n        }\r\n        else {\r\n            sortOrder = (this.getSortField() === sortField) ? this.getCalculatedSortOrder(this.getSortOrder()) : sortOrder;\r\n            if (this.props.removableSort) {\r\n                sortField = sortOrder ? sortField : null;\r\n            }\r\n\r\n            eventMeta = {\r\n                sortField: sortField,\r\n                sortOrder: sortOrder\r\n            };\r\n        }\r\n\r\n        if (this.props.onSort) {\r\n            this.props.onSort(eventMeta);\r\n        }\r\n        else {\r\n            eventMeta.first = 0;\r\n            this.setState(eventMeta);\r\n        }\r\n\r\n        if (this.props.onValueChange) {\r\n            this.props.onValueChange(this.processData({\r\n                sortField: sortField,\r\n                sortOrder: sortOrder,\r\n                multiSortMeta: multiSortMeta\r\n            }));\r\n        }\r\n    }\r\n\r\n    getCalculatedSortOrder(currentOrder) {\r\n        return this.props.removableSort ? (currentOrder ? (currentOrder < 0 ? 0 : -1) : 1) : currentOrder * -1;\r\n    }\r\n\r\n    addSortMeta(meta, multiSortMeta) {\r\n        let index = -1;\r\n        for(let i = 0; i < multiSortMeta.length; i++) {\r\n            if(multiSortMeta[i].field === meta.field) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(index >= 0)\r\n            multiSortMeta[index] = meta;\r\n        else\r\n            multiSortMeta.push(meta);\r\n    }\r\n\r\n    removeSortMeta(meta, multiSortMeta) {\r\n        let index = -1;\r\n        for(let i = 0; i < multiSortMeta.length; i++) {\r\n            if(multiSortMeta[i].field === meta.field) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(index >= 0) {\r\n            multiSortMeta.splice(index, 1);\r\n        }\r\n\r\n        multiSortMeta = multiSortMeta.length > 0 ? multiSortMeta : null;\r\n    }\r\n\r\n    sortSingle(data, sortField, sortOrder) {\r\n        let value = [...data];\r\n\r\n        if(this.columnSortable && this.columnSortFunction) {\r\n            value = this.columnSortFunction({\r\n                field: this.getSortField(),\r\n                order: this.getSortOrder()\r\n            });\r\n        }\r\n        else {\r\n            value.sort((data1, data2) => {\r\n                const value1 = ObjectUtils.resolveFieldData(data1, sortField);\r\n                const value2 = ObjectUtils.resolveFieldData(data2, sortField);\r\n                let result = null;\r\n\r\n                if (value1 == null && value2 != null)\r\n                    result = -1;\r\n                else if (value1 != null && value2 == null)\r\n                    result = 1;\r\n                else if (value1 == null && value2 == null)\r\n                    result = 0;\r\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\r\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\r\n                else\r\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\r\n\r\n                return (sortOrder * result);\r\n            });\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    sortMultiple(data, multiSortMeta) {\r\n        let value = [...data];\r\n\r\n        if (this.columnSortable && this.columnSortFunction) {\r\n            const meta = multiSortMeta.find(meta => meta.field === this.columnField);\r\n            const field = this.columnField;\r\n            const order = meta ? meta.order : this.defaultSortOrder;\r\n\r\n            value = this.columnSortFunction({\r\n                field,\r\n                order\r\n            });\r\n        }\r\n        else {\r\n            value.sort((data1, data2) => {\r\n                return this.multisortField(data1, data2, multiSortMeta, 0);\r\n            });\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    multisortField(data1, data2, multiSortMeta, index) {\r\n        const value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\r\n        const value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\r\n        let result = null;\r\n\r\n        if (typeof value1 === 'string' || value1 instanceof String) {\r\n            if (value1.localeCompare && (value1 !== value2)) {\r\n                return (multiSortMeta[index].order * value1.localeCompare(value2, undefined, { numeric: true }));\r\n            }\r\n        }\r\n        else {\r\n            result = (value1 < value2) ? -1 : 1;\r\n        }\r\n\r\n        if(value1 === value2)  {\r\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\r\n        }\r\n\r\n        return (multiSortMeta[index].order * result);\r\n    }\r\n\r\n    filter(value, field, mode) {\r\n        this.onFilter({\r\n            value: value,\r\n            field: field,\r\n            matchMode: mode\r\n        });\r\n    }\r\n\r\n    onFilter(event) {\r\n        let currentFilters = this.getFilters();\r\n        let newFilters = currentFilters ? {...currentFilters} : {};\r\n\r\n        if(!this.isFilterBlank(event.value))\r\n            newFilters[event.field] = {value: event.value, matchMode: event.matchMode};\r\n        else if(newFilters[event.field])\r\n            delete newFilters[event.field];\r\n\r\n        if (this.props.onFilter) {\r\n            this.props.onFilter({\r\n                filters: newFilters\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                first: 0,\r\n                filters: newFilters\r\n            });\r\n        }\r\n\r\n        if (this.props.onValueChange) {\r\n            this.props.onValueChange(this.processData({\r\n                filters: newFilters\r\n            }));\r\n        }\r\n    }\r\n\r\n    hasFilter() {\r\n        let filters = this.getFilters() || this.props.globalFilter;\r\n\r\n        return filters && Object.keys(filters).length > 0;\r\n    }\r\n\r\n    isFilterBlank(filter) {\r\n        if(filter !== null && filter !== undefined) {\r\n            if((typeof filter === 'string' && filter.trim().length === 0) || (filter instanceof Array && filter.length === 0))\r\n                return true;\r\n            else\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    hasFooter() {\r\n        if(this.props.children) {\r\n            if(this.props.footerColumnGroup) {\r\n                return true;\r\n            }\r\n            else {\r\n                return this.hasChildrenFooter(this.props.children);\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    hasChildrenFooter(children) {\r\n        let hasFooter = false;\r\n\r\n        if (children) {\r\n            if (children instanceof Array) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    hasFooter = hasFooter || this.hasChildrenFooter(children[i]);\r\n                }\r\n            }\r\n            else {\r\n                return children.props && children.props.footer !== null;\r\n            }\r\n        }\r\n\r\n        return hasFooter;\r\n    }\r\n\r\n    onColumnResizeStart(event) {\r\n        let containerLeft = DomHandler.getOffset(this.container).left;\r\n        this.resizeColumn = event.columnEl;\r\n        this.resizeColumnProps = event.columnProps;\r\n        this.columnResizing = true;\r\n        this.lastResizerHelperX = (event.originalEvent.pageX - containerLeft + this.container.scrollLeft);\r\n\r\n        this.bindColumnResizeEvents();\r\n    }\r\n\r\n    onColumnResize(event) {\r\n        let containerLeft = DomHandler.getOffset(this.container).left;\r\n        DomHandler.addClass(this.container, 'p-unselectable-text');\r\n        this.resizerHelper.style.height = this.container.offsetHeight + 'px';\r\n        this.resizerHelper.style.top = 0 + 'px';\r\n        this.resizerHelper.style.left = (event.pageX - containerLeft + this.container.scrollLeft) + 'px';\r\n\r\n        this.resizerHelper.style.display = 'block';\r\n    }\r\n\r\n    onColumnResizeEnd(event) {\r\n        let delta = this.resizerHelper.offsetLeft - this.lastResizerHelperX;\r\n        let columnWidth = this.resizeColumn.offsetWidth;\r\n        let newColumnWidth = columnWidth + delta;\r\n        let minWidth = this.resizeColumn.style.minWidth||15;\r\n\r\n        if(columnWidth + delta > parseInt(minWidth, 10)) {\r\n            if(this.props.columnResizeMode === 'fit') {\r\n                let nextColumn = this.resizeColumn.nextElementSibling;\r\n                let nextColumnWidth = nextColumn.offsetWidth - delta;\r\n\r\n                if(newColumnWidth > 15 && nextColumnWidth > 15) {\r\n                    if(this.props.scrollable) {\r\n                        let scrollableView = this.findParentScrollableView(this.resizeColumn);\r\n                        let scrollableBodyTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-body-table');\r\n                        let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\r\n                        let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\r\n                        let resizeColumnIndex = DomHandler.index(this.resizeColumn);\r\n\r\n                        this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                        this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                        this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\r\n                    }\r\n                    else {\r\n                        this.resizeColumn.style.width = newColumnWidth + 'px';\r\n                        if(nextColumn) {\r\n                            nextColumn.style.width = nextColumnWidth + 'px';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(this.props.columnResizeMode === 'expand') {\r\n                if (this.props.scrollable) {\r\n                    this.setScrollableItemsWidthOnExpandResize(this.resizeColumn, newColumnWidth, delta);\r\n                }\r\n                else {\r\n                    this.table.style.width = this.table.offsetWidth + delta + 'px';\r\n                    this.resizeColumn.style.width = newColumnWidth + 'px';\r\n                }\r\n            }\r\n\r\n            if(this.props.onColumnResizeEnd) {\r\n                this.props.onColumnResizeEnd({\r\n                    element: this.resizeColumn,\r\n                    column: this.resizeColumnProps,\r\n                    delta: delta\r\n                });\r\n            }\r\n\r\n            if (this.isStateful()) {\r\n                this.saveState();\r\n            }\r\n        }\r\n\r\n        this.resizerHelper.style.display = 'none';\r\n        this.resizeColumn = null;\r\n        this.resizeColumnProps = null;\r\n        DomHandler.removeClass(this.container, 'p-unselectable-text');\r\n\r\n        this.unbindColumnResizeEvents();\r\n    }\r\n\r\n    setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta) {\r\n        let scrollableView = column ? this.findParentScrollableView(column) : this.container;\r\n        let scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body');\r\n        let scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\r\n        let scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\r\n        let scrollableBodyTable = DomHandler.findSingle(scrollableBody, 'table.p-datatable-scrollable-body-table');\r\n        let scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\r\n        let scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\r\n\r\n        const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\r\n        const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\r\n        const isContainerInViewport = this.container.offsetWidth >= scrollableBodyTableWidth;\r\n\r\n        let setWidth = (container, table, width, isContainerInViewport) => {\r\n            if (container && table) {\r\n                container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto'\r\n                table.style.width = width + 'px';\r\n            }\r\n        };\r\n\r\n        setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\r\n        setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\r\n        setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\r\n\r\n        if (column) {\r\n            let resizeColumnIndex = DomHandler.index(column);\r\n\r\n            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\r\n            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\r\n            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\r\n        }\r\n    }\r\n\r\n    findParentScrollableView(column) {\r\n        if (column) {\r\n            let parent = column.parentElement;\r\n            while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\r\n                parent = parent.parentElement;\r\n            }\r\n\r\n            return parent;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\r\n        if(table) {\r\n            let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\r\n\r\n            if(colGroup) {\r\n                let col = colGroup.children[resizeColumnIndex];\r\n                let nextCol = col.nextElementSibling;\r\n                col.style.width = newColumnWidth + 'px';\r\n\r\n                if (nextCol && nextColumnWidth) {\r\n                    nextCol.style.width = nextColumnWidth + 'px';\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"Scrollable tables require a colgroup to support resizable columns\");\r\n            }\r\n        }\r\n    }\r\n\r\n    bindColumnResizeEvents() {\r\n        this.documentColumnResizeListener = document.addEventListener('mousemove', (event) => {\r\n            if(this.columnResizing) {\r\n                this.onColumnResize(event);\r\n            }\r\n        });\r\n\r\n        this.documentColumnResizeEndListener = document.addEventListener('mouseup', (event) => {\r\n            if(this.columnResizing) {\r\n                this.columnResizing = false;\r\n                this.onColumnResizeEnd(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    unbindColumnResizeEvents() {\r\n        document.removeEventListener('document', this.documentColumnResizeListener);\r\n        document.removeEventListener('document', this.documentColumnResizeEndListener);\r\n    }\r\n\r\n    findParentHeader(element) {\r\n        if(element.nodeName === 'TH') {\r\n            return element;\r\n        }\r\n        else {\r\n            let parent = element.parentElement;\r\n            while(parent.nodeName !== 'TH') {\r\n                parent = parent.parentElement;\r\n                if(!parent) break;\r\n            }\r\n            return parent;\r\n        }\r\n    }\r\n\r\n    onColumnDragStart(event) {\r\n        if(this.columnResizing) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        this.iconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUp);\r\n        this.iconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorUp);\r\n\r\n        this.draggedColumn = this.findParentHeader(event.target);\r\n        event.dataTransfer.setData('text', 'b'); // Firefox requires this to make dragging possible\r\n    }\r\n\r\n    onColumnDragOver(event) {\r\n        let dropHeader = this.findParentHeader(event.target);\r\n        if(this.props.reorderableColumns && this.draggedColumn && dropHeader) {\r\n            event.preventDefault();\r\n            let containerOffset = DomHandler.getOffset(this.container);\r\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\r\n\r\n            if(this.draggedColumn !== dropHeader) {\r\n                let targetLeft =  dropHeaderOffset.left - containerOffset.left;\r\n                //let targetTop =  containerOffset.top - dropHeaderOffset.top;\r\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\r\n\r\n                this.reorderIndicatorUp.style.top = dropHeaderOffset.top - containerOffset.top - (this.iconHeight - 1) + 'px';\r\n                this.reorderIndicatorDown.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\r\n\r\n                if(event.pageX > columnCenter) {\r\n                    this.reorderIndicatorUp.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDown.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.iconWidth / 2))+ 'px';\r\n                    this.dropPosition = 1;\r\n                }\r\n                else {\r\n                    this.reorderIndicatorUp.style.left = (targetLeft - Math.ceil(this.iconWidth / 2)) + 'px';\r\n                    this.reorderIndicatorDown.style.left = (targetLeft - Math.ceil(this.iconWidth / 2))+ 'px';\r\n                    this.dropPosition = -1;\r\n                }\r\n\r\n                this.reorderIndicatorUp.style.display = 'block';\r\n                this.reorderIndicatorDown.style.display = 'block';\r\n            }\r\n        }\r\n    }\r\n\r\n    onColumnDragLeave(event) {\r\n        if(this.props.reorderableColumns && this.draggedColumn) {\r\n            event.preventDefault();\r\n            this.reorderIndicatorUp.style.display = 'none';\r\n            this.reorderIndicatorDown.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    onColumnDrop(event) {\r\n        event.preventDefault();\r\n        if(this.draggedColumn) {\r\n            let dragIndex = DomHandler.index(this.draggedColumn);\r\n            let dropIndex = DomHandler.index(this.findParentHeader(event.target));\r\n            let allowDrop = (dragIndex !== dropIndex);\r\n            if(allowDrop && ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dragIndex - dropIndex === 1 && this.dropPosition === 1))) {\r\n                allowDrop = false;\r\n            }\r\n\r\n            if(allowDrop) {\r\n                let columns = this.state.columnOrder ? this.getColumns() : React.Children.toArray(this.props.children);\r\n                ObjectUtils.reorderArray(columns, dragIndex, dropIndex);\r\n                let columnOrder = [];\r\n                for(let column of columns) {\r\n                    columnOrder.push(column.props.columnKey||column.props.field);\r\n                }\r\n\r\n                this.setState({\r\n                    columnOrder: columnOrder\r\n                });\r\n\r\n                if (this.props.onColReorder) {\r\n                    this.props.onColReorder({\r\n                        originalEvent: event,\r\n                        dragIndex: dragIndex,\r\n                        dropIndex: dropIndex,\r\n                        columns: columns\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.reorderIndicatorUp.style.display = 'none';\r\n            this.reorderIndicatorDown.style.display = 'none';\r\n            this.draggedColumn.draggable = false;\r\n            this.draggedColumn = null;\r\n            this.dropPosition = null;\r\n        }\r\n    }\r\n\r\n    onVirtualScroll(event) {\r\n        if(this.virtualScrollTimer) {\r\n            clearTimeout(this.virtualScrollTimer);\r\n        }\r\n\r\n        this.virtualScrollTimer = setTimeout(() => {\r\n            if (this.props.onVirtualScroll) {\r\n                this.props.onVirtualScroll({\r\n                    first: (event.page - 1) * this.props.rows,\r\n                    rows: this.props.virtualScroll ? this.props.rows * 2 : this.props.rows\r\n                });\r\n            }\r\n        }, this.props.virtualScrollDelay);\r\n    }\r\n\r\n    exportCSV() {\r\n        let data = this.processData();\r\n        let csv = '\\ufeff';\r\n        let columns = React.Children.toArray(this.props.children);\r\n\r\n        //headers\r\n        for(let i = 0; i < columns.length; i++) {\r\n            if(columns[i].props.field) {\r\n                csv += '\"' + (columns[i].props.header || columns[i].props.field) + '\"';\r\n\r\n                if(i < (columns.length - 1)) {\r\n                    csv += this.props.csvSeparator;\r\n                }\r\n            }\r\n        }\r\n\r\n        //body\r\n        data.forEach((record, i) => {\r\n            csv += '\\n';\r\n            for(let i = 0; i < columns.length; i++) {\r\n                let column = columns[i],\r\n                field = column.props.field;\r\n\r\n                if (column.props.exportable && field) {\r\n                    let cellData = ObjectUtils.resolveFieldData(record, field);\r\n\r\n                    if (cellData != null) {\r\n                        if (this.props.exportFunction) {\r\n                            cellData = this.props.exportFunction({\r\n                                data: cellData,\r\n                                field: field\r\n                            });\r\n                        }\r\n                        else\r\n                            cellData = String(cellData).replace(/\"/g, '\"\"');\r\n                    }\r\n                    else\r\n                        cellData = '';\r\n\r\n                    csv += '\"' + cellData + '\"';\r\n\r\n                    if(i < (columns.length - 1)) {\r\n                        csv += this.props.csvSeparator;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        let blob = new Blob([csv],{\r\n            type: 'text/csv;charset=utf-8;'\r\n        });\r\n\r\n        if(window.navigator.msSaveOrOpenBlob) {\r\n            navigator.msSaveOrOpenBlob(blob, this.props.exportFilename + '.csv');\r\n        }\r\n        else {\r\n            let link = document.createElement(\"a\");\r\n            link.style.display = 'none';\r\n            document.body.appendChild(link);\r\n            if(link.download !== undefined) {\r\n                link.setAttribute('href', URL.createObjectURL(blob));\r\n                link.setAttribute('download', this.props.exportFilename + '.csv');\r\n                link.click();\r\n            }\r\n            else {\r\n                csv = 'data:text/csv;charset=utf-8,' + csv;\r\n                window.open(encodeURI(csv));\r\n            }\r\n            document.body.removeChild(link);\r\n        }\r\n    }\r\n\r\n    closeEditingCell() {\r\n        if (this.props.editMode !== \"row\") {\r\n            document.body.click();\r\n        }\r\n    }\r\n\r\n    onHeaderCheckboxClick(event) {\r\n        let selection;\r\n\r\n        if(!event.checked) {\r\n            let visibleData = this.hasFilter() ? this.processData() : this.props.value;\r\n            selection = [...visibleData];\r\n        }\r\n        else {\r\n            selection = [];\r\n        }\r\n\r\n        if(this.props.onSelectionChange) {\r\n            const { originalEvent, ...rest } = event;\r\n\r\n            this.props.onSelectionChange({\r\n                originalEvent,\r\n                value: selection,\r\n                ...rest\r\n            });\r\n        }\r\n    }\r\n\r\n    filterLocal(value, localFilters) {\r\n        let filteredValue = [];\r\n        let filters = localFilters || this.getFilters();\r\n        let columns = React.Children.toArray(this.props.children);\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            let localMatch = true;\r\n            let globalMatch = false;\r\n\r\n            for (let j = 0; j < columns.length; j++) {\r\n                let col = columns[j];\r\n                let columnField = col.props.filterField || col.props.field;\r\n                let filterMeta = filters ? filters[columnField] : null;\r\n\r\n                //local\r\n                if (filterMeta) {\r\n                    let filterValue = filterMeta.value;\r\n                    let dataFieldValue = ObjectUtils.resolveFieldData(value[i], columnField);\r\n                    let filterMatchMode = filterMeta.matchMode||col.props.filterMatchMode;\r\n                    let filterConstraint = filterMatchMode === 'custom' ? col.props.filterFunction : FilterUtils[filterMatchMode];\r\n\r\n                    if (filterConstraint !== null && !filterConstraint(dataFieldValue, filterValue, this.props.filterLocale)) {\r\n                        localMatch = false;\r\n                    }\r\n\r\n                    if (!localMatch) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!col.props.excludeGlobalFilter && this.props.globalFilter && !globalMatch) {\r\n                    globalMatch = FilterUtils['contains'](ObjectUtils.resolveFieldData(value[i], columnField), this.props.globalFilter, this.props.filterLocale);\r\n                }\r\n            }\r\n\r\n            let matches = localMatch;\r\n            if (this.props.globalFilter) {\r\n                matches = localMatch&&globalMatch;\r\n            }\r\n\r\n            if(matches) {\r\n                filteredValue.push(value[i]);\r\n            }\r\n        }\r\n\r\n        if(filteredValue.length === value.length) {\r\n            filteredValue = value;\r\n        }\r\n\r\n        return filteredValue;\r\n    }\r\n\r\n    processData(localState) {\r\n        let data = this.props.value;\r\n\r\n        if(!this.props.lazy) {\r\n            if(data && data.length) {\r\n                let sortField = (localState && localState.sortField) || this.getSortField();\r\n                let sortOrder = (localState && localState.sortOrder) || this.getSortOrder();\r\n                let multiSortMeta = (localState && localState.multiSortMeta) || this.getMultiSortMeta();\r\n\r\n                if(sortField || (multiSortMeta && multiSortMeta.length)) {\r\n                    if(this.props.sortMode === 'single')\r\n                        data = this.sortSingle(data, sortField, sortOrder);\r\n                    else if(this.props.sortMode === 'multiple')\r\n                        data = this.sortMultiple(data, multiSortMeta);\r\n                }\r\n\r\n                let localFilters = (localState && localState.filters) || this.getFilters();\r\n                if (localFilters || this.props.globalFilter) {\r\n                    data = this.filterLocal(data, localFilters);\r\n                }\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    isAllSelected() {\r\n        let visibleData = this.hasFilter() ? this.processData() : this.props.value;\r\n\r\n        return this.props.selection && visibleData && visibleData.length && this.props.selection.length === visibleData.length;\r\n    }\r\n\r\n    getFrozenColumns(columns) {\r\n        let frozenColumns = null;\r\n\r\n        for(let col of columns) {\r\n            if(col.props.frozen) {\r\n                frozenColumns = frozenColumns||[];\r\n                frozenColumns.push(col);\r\n            }\r\n        }\r\n\r\n        return frozenColumns;\r\n    }\r\n\r\n    getScrollableColumns(columns) {\r\n        let scrollableColumns = null;\r\n\r\n        for(let col of columns) {\r\n            if(!col.props.frozen) {\r\n                scrollableColumns = scrollableColumns||[];\r\n                scrollableColumns.push(col);\r\n            }\r\n        }\r\n\r\n        return scrollableColumns;\r\n    }\r\n\r\n    getFrozenSelectionModeInColumn(columns) {\r\n        if(Array.isArray(columns)) {\r\n            for(let col of columns) {\r\n                if(col.props.selectionMode)\r\n                   return col.props.selectionMode;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    createTableHeader(value, columns, columnGroup) {\r\n        return <TableHeader value={value} onSort={this.onSort} sortField={this.getSortField()} sortOrder={this.getSortOrder()} multiSortMeta={this.getMultiSortMeta()} columnGroup={columnGroup}\r\n                            resizableColumns={this.props.resizableColumns} onColumnResizeStart={this.onColumnResizeStart} onFilter={this.onFilter}\r\n                            onHeaderCheckboxClick={this.onHeaderCheckboxClick} headerCheckboxSelected={this.isAllSelected()}\r\n                            reorderableColumns={this.props.reorderableColumns} onColumnDragStart={this.onColumnDragStart} filters={this.getFilters()}\r\n                            onColumnDragOver={this.onColumnDragOver} onColumnDragLeave={this.onColumnDragLeave} onColumnDrop={this.onColumnDrop} tabIndex={this.props.tabIndex}>\r\n                            {columns}\r\n                          </TableHeader>;\r\n    }\r\n\r\n    createTableBody(value, columns, frozen) {\r\n        return <TableBody tableId={this.props.id} value={value} first={this.getFirst()} rows={this.getRows()} lazy={this.props.lazy} paginator={this.props.paginator} dataKey={this.props.dataKey} compareSelectionBy={this.props.compareSelectionBy}\r\n                        selectionMode={this.props.selectionMode} selection={this.props.selection} metaKeySelection={this.props.metaKeySelection} frozen={frozen} frozenSelectionMode={this.frozenSelectionMode}\r\n                        onSelectionChange={this.props.onSelectionChange} onRowClick={this.props.onRowClick} onRowDoubleClick={this.props.onRowDoubleClick} onRowSelect={this.props.onRowSelect} onRowUnselect={this.props.onRowUnselect}\r\n                        contextMenuSelection={this.props.contextMenuSelection} onContextMenuSelectionChange={this.props.onContextMenuSelectionChange} onContextMenu={this.props.onContextMenu}\r\n                        expandedRows={this.props.expandedRows} onRowToggle={this.props.onRowToggle} rowExpansionTemplate={this.props.rowExpansionTemplate}\r\n                        onRowExpand={this.props.onRowExpand} onRowCollapse={this.props.onRowCollapse} emptyMessage={this.props.emptyMessage}\r\n                        virtualScroll={this.props.virtualScroll} virtualRowHeight={this.props.virtualRowHeight} loading={this.props.loading}\r\n                        groupField={this.props.groupField} rowGroupMode={this.props.rowGroupMode} rowGroupHeaderTemplate={this.props.rowGroupHeaderTemplate} rowGroupFooterTemplate={this.props.rowGroupFooterTemplate}\r\n                        sortField={this.getSortField()} rowClassName={this.props.rowClassName} onRowReorder={this.props.onRowReorder}\r\n                        editMode={this.props.editMode} rowEditorValidator={this.props.rowEditorValidator} onRowEditInit={this.props.onRowEditInit} onRowEditSave={this.props.onRowEditSave} onRowEditCancel={this.props.onRowEditCancel}\r\n                        expandableRowGroups={this.props.expandableRowGroups} showRowReorderElement={this.props.showRowReorderElement} showSelectionElement={this.props.showSelectionElement}>\r\n                        {columns}\r\n                </TableBody>;\r\n    }\r\n\r\n    createTableLoadingBody(columns) {\r\n        if (this.props.virtualScroll) {\r\n            return <TableLoadingBody columns={columns} rows={this.getRows()}></TableLoadingBody>;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    createTableFooter(columns, columnGroup) {\r\n        if(this.hasFooter())\r\n            return <TableFooter columnGroup={columnGroup}>{columns}</TableFooter>;\r\n        else\r\n            return null;\r\n    }\r\n\r\n    createScrollableView(value, columns, frozen, headerColumnGroup, footerColumnGroup, totalRecords) {\r\n        return <ScrollableView columns={columns} header={this.createTableHeader(value, columns, headerColumnGroup)}\r\n                body={this.createTableBody(value, columns, frozen)} loadingBody={this.createTableLoadingBody(columns)} frozenBody={this.props.frozenValue ? this.createTableBody(this.props.frozenValue, columns, true): null}\r\n                footer={this.createTableFooter(columns, footerColumnGroup)} tableStyle={this.props.tableStyle} tableClassName={this.props.tableClassName}\r\n                scrollHeight={this.props.scrollHeight} frozen={frozen} frozenWidth={this.props.frozenWidth}\r\n                virtualScroll={this.props.virtualScroll} virtualRowHeight={this.props.virtualRowHeight} rows={this.props.rows} totalRecords={totalRecords}\r\n                onVirtualScroll={this.onVirtualScroll} loading={this.props.loading}></ScrollableView>\r\n    }\r\n\r\n    getColumns() {\r\n        let columns = React.Children.toArray(this.props.children);\r\n\r\n        if(columns && columns.length) {\r\n            if(this.props.reorderableColumns && this.state.columnOrder) {\r\n                let orderedColumns = [];\r\n                for(let columnKey of this.state.columnOrder) {\r\n                    let column = this.findColumnByKey(columns, columnKey);\r\n                    if (column) {\r\n                        orderedColumns.push(column);\r\n                    }\r\n                }\r\n\r\n                return [...orderedColumns, ...columns.filter((item) => {\r\n                    return orderedColumns.indexOf(item) < 0;\r\n                })];\r\n            }\r\n            else {\r\n                return columns;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    findColumnByKey(columns, key) {\r\n        if(columns && columns.length) {\r\n            for(let i = 0; i < columns.length; i++) {\r\n                let child = columns[i];\r\n                if(child.props.columnKey === key || child.props.field === key) {\r\n                    return child;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTotalRecords(data) {\r\n        return this.props.lazy ? this.props.totalRecords : data ? data.length : 0;\r\n    }\r\n\r\n    reset() {\r\n        let state = {};\r\n        if (!this.props.onPage) {\r\n            state.first = this.props.first;\r\n            state.rows = this.props.rows;\r\n        }\r\n\r\n        if (!this.props.onSort) {\r\n            state.sortField = this.props.sortField;\r\n            state.sortOrder = this.props.sortOrder;\r\n            state.multiSortMeta = this.props.multiSortMeta;\r\n        }\r\n\r\n        if (!this.props.onFilter) {\r\n            state.filters = this.props.filters;\r\n        }\r\n\r\n        this.resetColumnOrder();\r\n\r\n        if (Object.keys(state).length) {\r\n            this.setState(state);\r\n        }\r\n    }\r\n\r\n    resetColumnOrder() {\r\n        let columns = React.Children.toArray(this.props.children);\r\n        let columnOrder = [];\r\n\r\n        for(let column of columns) {\r\n            columnOrder.push(column.props.columnKey||column.props.field);\r\n        }\r\n\r\n        this.setState({\r\n            columnOrder\r\n        });\r\n    }\r\n\r\n    renderLoader() {\r\n        let iconClassName = classNames('p-datatable-loading-icon pi-spin', this.props.loadingIcon);\r\n\r\n        return (\r\n            <div className=\"p-datatable-loading-overlay p-component-overlay\">\r\n                <i className={iconClassName}></i>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.isStateful() && this.props.resizableColumns) {\r\n            this.restoreColumnWidths();\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.rows !== prevState.rows && !nextProps.onPage) {\r\n            return {\r\n                rows: nextProps.rows\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.isStateful()) {\r\n            this.saveState();\r\n        }\r\n\r\n        if (prevProps.globalFilter !== this.props.globalFilter) {\r\n            this.filter(this.props.globalFilter, 'globalFilter', 'contains');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let value = this.processData();\r\n        let columns = this.getColumns();\r\n        let totalRecords = this.getTotalRecords(value);\r\n        let className = classNames('p-datatable p-component', {\r\n                        'p-datatable-resizable': this.props.resizableColumns, 'p-datatable-resizable-fit': this.props.resizableColumns && this.props.columnResizeMode === 'fit',\r\n                        'p-datatable-scrollable': this.props.scrollable, 'p-datatable-virtual-scrollable': this.props.virtualScroll,\r\n                        'p-datatable-auto-layout': this.props.autoLayout, 'p-datatable-hoverable-rows': this.props.rowHover || this.props.selectionMode}, this.props.className);\r\n        let paginatorTop = this.props.paginator && this.props.paginatorPosition !== 'bottom' && this.createPaginator('top', totalRecords);\r\n        let paginatorBottom = this.props.paginator && this.props.paginatorPosition !== 'top' && this.createPaginator('bottom', totalRecords);\r\n        let headerFacet = this.props.header && <div className=\"p-datatable-header\">{this.props.header}</div>;\r\n        let footerFacet = this.props.footer && <div className=\"p-datatable-footer\">{this.props.footer}</div>;\r\n        let resizeHelper = this.props.resizableColumns && <div ref={(el) => {this.resizerHelper = el;}} className=\"p-column-resizer-helper p-highlight\" style={{display:'none'}}></div>;\r\n        let tableContent = null;\r\n        let resizeIndicatorUp = this.props.reorderableColumns && <span ref={(el) => {this.reorderIndicatorUp = el;}} className=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style={{position: 'absolute', display: 'none'}} />\r\n        let resizeIndicatorDown = this.props.reorderableColumns && <span ref={(el) => {this.reorderIndicatorDown = el;}} className=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style={{position: 'absolute', display: 'none'}} />;\r\n        let loader;\r\n\r\n        if(this.props.loading) {\r\n            loader = this.renderLoader();\r\n        }\r\n\r\n        if (Array.isArray(columns)) {\r\n            if (this.props.scrollable) {\r\n                this.frozenSelectionMode = this.frozenSelectionMode || this.getFrozenSelectionModeInColumn(columns);\r\n                let frozenColumns = this.getFrozenColumns(columns);\r\n                let scrollableColumns = frozenColumns ? this.getScrollableColumns(columns) : columns;\r\n                let frozenView, scrollableView;\r\n                if (frozenColumns) {\r\n                    frozenView = this.createScrollableView(value, frozenColumns, true, this.props.frozenHeaderColumnGroup, this.props.frozenFooterColumnGroup, totalRecords);\r\n                }\r\n\r\n                scrollableView = this.createScrollableView(value, scrollableColumns, false, this.props.headerColumnGroup, this.props.footerColumnGroup, totalRecords);\r\n\r\n                tableContent = <div className=\"p-datatable-scrollable-wrapper\">\r\n                                    {frozenView}\r\n                                    {scrollableView}\r\n                            </div>;\r\n            }\r\n            else {\r\n                let tableHeader = this.createTableHeader(value, columns, this.props.headerColumnGroup);\r\n                let tableBody = this.createTableBody(value, columns, false);\r\n                let tableFooter = this.createTableFooter(columns, this.props.footerColumnGroup);\r\n\r\n                tableContent = <div className=\"p-datatable-wrapper\">\r\n                        <table style={this.props.tableStyle} role=\"grid\" className={this.props.tableClassName} ref={(el) => {this.table = el;}}>\r\n                            {tableHeader}\r\n                            {tableFooter}\r\n                            {tableBody}\r\n                        </table>\r\n                    </div>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id={this.props.id} className={className} style={this.props.style} ref={(el) => {this.container = el;}} data-scrollselectors=\".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\">\r\n                {loader}\r\n                {headerFacet}\r\n                {paginatorTop}\r\n                {tableContent}\r\n                {paginatorBottom}\r\n                {footerFacet}\r\n                {resizeHelper}\r\n                {resizeIndicatorUp}\r\n                {resizeIndicatorDown}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}