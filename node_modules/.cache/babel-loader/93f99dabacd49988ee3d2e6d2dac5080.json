{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var MultiSelectDoc=/*#__PURE__*/function(_Component){_inherits(MultiSelectDoc,_Component);var _super=_createSuper(MultiSelectDoc);function MultiSelectDoc(props){var _this;_classCallCheck(this,MultiSelectDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport './MultiSelectDemo.css';\\n\\nexport class MultiSelectDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            selectedCities1: null,\\n            selectedCities2: null,\\n            selectedCountries: null\\n        };\\n\\n        this.cities = [\\n            {name: 'New York', code: 'NY'},\\n            {name: 'Rome', code: 'RM'},\\n            {name: 'London', code: 'LDN'},\\n            {name: 'Istanbul', code: 'IST'},\\n            {name: 'Paris', code: 'PRS'}\\n        ];\\n\\n        this.countries = [\\n            {name: 'Australia', code: 'AU'},\\n            {name: 'Brazil', code: 'BR'},\\n            {name: 'China', code: 'CN'},\\n            {name: 'Egypt', code: 'EG'},\\n            {name: 'France', code: 'FR'},\\n            {name: 'Germany', code: 'DE'},\\n            {name: 'India', code: 'IN'},\\n            {name: 'Japan', code: 'JP'},\\n            {name: 'Spain', code: 'ES'},\\n            {name: 'United States', code: 'US'}\\n        ];\\n\\n        this.countryTemplate = this.countryTemplate.bind(this);\\n        this.selectedCountriesTemplate = this.selectedCountriesTemplate.bind(this);\\n        this.panelFooterTemplate = this.panelFooterTemplate.bind(this);\\n    }\\n\\n    countryTemplate(option) {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    selectedCountriesTemplate(option) {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return \\\"Select Countries\\\";\\n    }\\n\\n    panelFooterTemplate() {\\n        const selectedItems = this.state.selectedCountries;\\n        const length = selectedItems ? selectedItems.length : 0;\\n        return (\\n            <div className=\\\"p-py-2 p-px-3\\\">\\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"multiselect-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <MultiSelect value={this.state.selectedCities1} options={this.cities} onChange={(e) => this.setState({ selectedCities1: e.value })} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                    <h5>Chips</h5>\\n                    <MultiSelect value={this.state.selectedCities2} options={this.cities} onChange={(e) => this.setState({ selectedCities2: e.value })} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" display=\\\"chip\\\" />\\n\\n                    <h5>Advanced with Templating and Filtering</h5>\\n                    <MultiSelect value={this.state.selectedCountries} options={this.countries}  onChange={(e) => this.setState({ selectedCountries: e.value })} optionLabel=\\\"name\\\" placeholder=\\\"Select Countries\\\" filter className=\\\"multiselect-custom\\\"\\n                        itemTemplate={this.countryTemplate} selectedItemTemplate={this.selectedCountriesTemplate} panelFooterTemplate={this.panelFooterTemplate}/>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport './MultiSelectDemo.css';\\n\\nconst MultiSelectDemo = () => {\\n    const [selectedCities1, setSelectedCities1] = useState(null);\\n    const [selectedCities2, setSelectedCities2] = useState(null);\\n    const [selectedCountries, setSelectedCountries] = useState(null);\\n    const cities = [\\n        {name: 'New York', code: 'NY'},\\n        {name: 'Rome', code: 'RM'},\\n        {name: 'London', code: 'LDN'},\\n        {name: 'Istanbul', code: 'IST'},\\n        {name: 'Paris', code: 'PRS'}\\n    ];\\n    const countries = [\\n        {name: 'Australia', code: 'AU'},\\n        {name: 'Brazil', code: 'BR'},\\n        {name: 'China', code: 'CN'},\\n        {name: 'Egypt', code: 'EG'},\\n        {name: 'France', code: 'FR'},\\n        {name: 'Germany', code: 'DE'},\\n        {name: 'India', code: 'IN'},\\n        {name: 'Japan', code: 'JP'},\\n        {name: 'Spain', code: 'ES'},\\n        {name: 'United States', code: 'US'}\\n    ];\\n\\n    const countryTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    const selectedCountriesTemplate = (option) => {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return \\\"Select Countries\\\";\\n    }\\n\\n    const panelFooterTemplate = () => {\\n        const length = selectedCountries ? selectedCountries.length : 0;\\n        return (\\n            <div className=\\\"p-py-2 p-px-3\\\">\\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div className=\\\"multiselect-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <MultiSelect value={selectedCities1} options={cities} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                <h5>Chips</h5>\\n                <MultiSelect value={selectedCities2} options={cities} onChange={(e) => setSelectedCities2(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" display=\\\"chip\\\" />\\n\\n                <h5>Advanced with Templating and Filtering</h5>\\n                <MultiSelect value={selectedCountries} options={countries}  onChange={(e) => setSelectedCountries(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select Countries\\\" filter className=\\\"multiselect-custom\\\"\\n                    itemTemplate={countryTemplate} selectedItemTemplate={selectedCountriesTemplate} panelFooterTemplate={panelFooterTemplate}/>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { MultiSelect } from 'primereact/multiselect';\\nimport './MultiSelectDemo.css';\\n\\nconst MultiSelectDemo = () => {\\n    const [selectedCities1, setSelectedCities1] = useState(null);\\n    const [selectedCities2, setSelectedCities2] = useState(null);\\n    const [selectedCountries, setSelectedCountries] = useState(null);\\n    const cities = [\\n        {name: 'New York', code: 'NY'},\\n        {name: 'Rome', code: 'RM'},\\n        {name: 'London', code: 'LDN'},\\n        {name: 'Istanbul', code: 'IST'},\\n        {name: 'Paris', code: 'PRS'}\\n    ];\\n    const countries = [\\n        {name: 'Australia', code: 'AU'},\\n        {name: 'Brazil', code: 'BR'},\\n        {name: 'China', code: 'CN'},\\n        {name: 'Egypt', code: 'EG'},\\n        {name: 'France', code: 'FR'},\\n        {name: 'Germany', code: 'DE'},\\n        {name: 'India', code: 'IN'},\\n        {name: 'Japan', code: 'JP'},\\n        {name: 'Spain', code: 'ES'},\\n        {name: 'United States', code: 'US'}\\n    ];\\n\\n    const countryTemplate = (option) => {\\n        return (\\n            <div className=\\\"country-item\\\">\\n                <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                <div>{option.name}</div>\\n            </div>\\n        );\\n    }\\n\\n    const selectedCountriesTemplate = (option) => {\\n        if (option) {\\n            return (\\n                <div className=\\\"country-item country-item-value\\\">\\n                    <img alt={option.name} src=\\\"showcase/demo/images/flag_placeholder.png\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${option.code.toLowerCase()}`} />\\n                    <div>{option.name}</div>\\n                </div>\\n            );\\n        }\\n\\n        return \\\"Select Countries\\\";\\n    }\\n\\n    const panelFooterTemplate = () => {\\n        const length = selectedCountries ? selectedCountries.length : 0;\\n        return (\\n            <div className=\\\"p-py-2 p-px-3\\\">\\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\\n            </div>\\n        );\\n    }\\n\\n    return (\\n        <div className=\\\"multiselect-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <MultiSelect value={selectedCities1} options={cities} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" />\\n\\n                <h5>Chips</h5>\\n                <MultiSelect value={selectedCities2} options={cities} onChange={(e) => setSelectedCities2(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select a City\\\" display=\\\"chip\\\" />\\n\\n                <h5>Advanced with Templating and Filtering</h5>\\n                <MultiSelect value={selectedCountries} options={countries}  onChange={(e) => setSelectedCountries(e.value)} optionLabel=\\\"name\\\" placeholder=\\\"Select Countries\\\" filter className=\\\"multiselect-custom\\\"\\n                    itemTemplate={countryTemplate} selectedItemTemplate={selectedCountriesTemplate} panelFooterTemplate={panelFooterTemplate}/>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};_this.extFiles={'src/demo/MultiSelectDemo.css':{content:\"\\n.multiselect-demo .p-multiselect {\\n    min-width: 15rem;\\n}\\n\\n.multiselect-demo .multiselect-custom .p-multiselect-label:not(.p-placeholder):not(.p-multiselect-items-label) {\\n    padding-top: .25rem;\\n    padding-bottom: .25rem;\\n}\\n\\n.multiselect-demo .multiselect-custom .country-item-value {\\n    padding: .25rem .5rem;\\n    border-radius: 3px;\\n    display: inline-flex;\\n    margin-right: .5rem;\\n    background-color: var(--primary-color);\\n    color: var(--primary-color-text);\\n}\\n\\n.multiselect-demo .multiselect-custom .country-item-value img.flag {\\n    width: 17px;\\n}\\n                \"}};return _this;}_createClass(MultiSelectDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { MultiSelect } from 'primereact/multiselect';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"MultiSelect is used as a controlled component with \",/*#__PURE__*/React.createElement(\"i\",null,\"value\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onChange\"),\" properties along with the options collection. There are two alternatives of how to define the options property; One way is providing a collection of \",/*#__PURE__*/React.createElement(\"i\",null,\"SelectItem\"),\" instances having label-value pairs whereas other way is providing an array of arbitrary objects along with the \",/*#__PURE__*/React.createElement(\"i\",null,\"optionLabel\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"optionValue\"),\" properties to specify the label/value field pair. In addition, options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Options as SelectItems\")),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst citySelectItems = [\\n    {label: 'New York', value: 'NY'},\\n    {label: 'Rome', value: 'RM'},\\n    {label: 'London', value: 'LDN'},\\n    {label: 'Istanbul', value: 'IST'},\\n    {label: 'Paris', value: 'PRS'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} />\\n\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Options as any type\")),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst cities = [\\n    {name: 'New York', code: 'NY'},\\n    {name: 'Rome', code: 'RM'},\\n    {name: 'London', code: 'LDN'},\\n    {name: 'Istanbul', code: 'IST'},\\n    {name: 'Paris', code: 'PRS'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<MultiSelect optionLabel=\\\"name\\\" value={cities} options={cities} onChange={(e) => setCities(e.value)} />\\n<MultiSelect optionLabel=\\\"name\\\" optionValue=\\\"code\\\" value={cities} options={cities} onChange={(e) => setCities(e.value)} />\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"When \",/*#__PURE__*/React.createElement(\"i\",null,\"optionValue\"),\" is not defined, value of an option refers to the option object itself.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Chips Display\"),/*#__PURE__*/React.createElement(\"p\",null,\"A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the \",/*#__PURE__*/React.createElement(\"i\",null,\"display\"),\" property to visualize the items as tokens.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<MultiSelect display=\\\"chip\\\" optionLabel=\\\"name\\\" value={selectedCities} options={cities} onChange={(e) => setSelectedCities(e.value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Custom Content\"),/*#__PURE__*/React.createElement(\"p\",null,\"Label of an option is used as the display text of an item by default, for custom content support define an itemTemplate function that gets the option as a parameter and returns the content.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} itemTemplate={itemTemplate} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nitemTemplate(option) {\\n    // custom item content\\n}\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"In addition \",/*#__PURE__*/React.createElement(\"i\",null,\"selectedItemTemplate\"),\" can be used to customize the selected values display instead of the default comma separated list.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} selectedItemTemplate={selectedItemTemplate} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nselectedItemTemplate(option) {\\n    // custom selected item content\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Filtering\"),/*#__PURE__*/React.createElement(\"p\",null,\"Options can be filtered using an input field in the overlay by enabling the \",/*#__PURE__*/React.createElement(\"i\",null,\"filter\"),\" property. By default filtering is done against label of the items and \",/*#__PURE__*/React.createElement(\"i\",null,\"filterBy\"),\" property is available to choose one or more properties of the options. In addition \",/*#__PURE__*/React.createElement(\"i\",null,\"filterMatchMode\"),\" can be utilized to define the filtering algorithm, valid options are \\\"contains\\\" (default), \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\" and \\\"notEquals\\\".\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} filter/>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"SelectItem API\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"label\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"ClassName of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"title\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Tooltip text of the option. (Not supported)\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether the option is disabled or not. (Not supported)\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"name\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the input element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"options\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"An array of selectitems to display as the available options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"optionLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the label field of an option when an arbitrary objects instead of SelectItems are used as options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"panelClassName\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the overlay panel element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"panelStyle\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the overlay panel element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"scrollHeight\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"200px\"),/*#__PURE__*/React.createElement(\"td\",null,\"Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"placeholder\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label to display when there are no selections.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"fixedPlaceholder\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether to display selected items in the label section or always display the placeholder as the default label.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the component should be disabled.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"showClear\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When enabled, a clear icon is displayed to clear the value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filter\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"When specified, displays an input field to filter the items on keyup.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"label\"),/*#__PURE__*/React.createElement(\"td\",null,\"When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterMatchMode\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"contains\"),/*#__PURE__*/React.createElement(\"td\",null,\"Defines how the items are filtered, valid values are \\\"contains\\\", (default) \\\"startsWith\\\", \\\"endsWith\\\", \\\"equals\\\" and \\\"notEquals\\\".\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterPlaceholder\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Placeholder text to show when filter input is empty.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"filterLocale\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"undefined\"),/*#__PURE__*/React.createElement(\"td\",null,\"Locale to use in filtering. The default locale is the host environment's current locale.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"emptyFilterMessage\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"No records found\"),/*#__PURE__*/React.createElement(\"td\",null,\"Template to display when filtering does not return any results.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"resetFilterOnHide\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Clears the filter value when hiding the dropdown.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tabIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Index of the element in tabbing order.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"dataKey\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"A property to uniquely match the value in options for better performance.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"required\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that an input field must be filled out before submitting the form.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"inputId\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Identifier of the focusable input.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"itemTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"function\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Function that gets the option and returns the content for it.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"selectedItemTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"function\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Function that gets an item in the value and returns the content for it.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"panelHeaderTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Template of the panel header.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"panelFooterTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Template of the panel footer.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"appendTo\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element instance where the dialog should be mounted.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"maxSelectedLabels\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"3\"),/*#__PURE__*/React.createElement(\"td\",null,\"Decides how many selected item labels to show at most.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"selectionLimit\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Number of maximum options that can be selected.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"selectedItemsLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"{0} items selected\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label to display after exceeding max selected labels.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaLabelledBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Establishes relationships between the component and label(s) where its value should be one or more element IDs.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"display\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"comma\"),/*#__PURE__*/React.createElement(\"td\",null,\"Used mode to display the selected item. Valid values are 'comma' and 'chip'.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Browser event\",/*#__PURE__*/React.createElement(\"br\",null),\"event.value: Current selected values\",/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when value changes.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onFocus\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the element receives focus.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onBlur\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the element loses focus.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Methods\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"checkValidity\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Checks whether the native hidden select element has any constraints and returns a boolean for the result.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect-label-container\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container of the label to display selected items.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect-label-container\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label to display selected items.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect-trigger\"),/*#__PURE__*/React.createElement(\"td\",null,\"Dropdown button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect-filter-container\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container of filter input.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect-panel\"),/*#__PURE__*/React.createElement(\"td\",null,\"Overlay panel for items.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect-items\"),/*#__PURE__*/React.createElement(\"td\",null,\"List container of items.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect-item\"),/*#__PURE__*/React.createElement(\"td\",null,\"An item in the list.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-multiselect-token\"),/*#__PURE__*/React.createElement(\"td\",null,\"A selected item element container on display='chip' mode.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-chips-token-icon\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon of a selected item element on display='chip' mode.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-chips-token-label\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of a selected item element on display='chip' mode.\")))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\"))),useLiveEditorTabs({name:'MultiSelectDemo',sources:this.sources,extFiles:this.extFiles})));}}]);return MultiSelectDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/multiselect/MultiSelectDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","MultiSelectDoc","props","sources","tabName","content","extFiles","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class MultiSelectDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport './MultiSelectDemo.css';\r\n\r\nexport class MultiSelectDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedCities1: null,\r\n            selectedCities2: null,\r\n            selectedCountries: null\r\n        };\r\n\r\n        this.cities = [\r\n            {name: 'New York', code: 'NY'},\r\n            {name: 'Rome', code: 'RM'},\r\n            {name: 'London', code: 'LDN'},\r\n            {name: 'Istanbul', code: 'IST'},\r\n            {name: 'Paris', code: 'PRS'}\r\n        ];\r\n\r\n        this.countries = [\r\n            {name: 'Australia', code: 'AU'},\r\n            {name: 'Brazil', code: 'BR'},\r\n            {name: 'China', code: 'CN'},\r\n            {name: 'Egypt', code: 'EG'},\r\n            {name: 'France', code: 'FR'},\r\n            {name: 'Germany', code: 'DE'},\r\n            {name: 'India', code: 'IN'},\r\n            {name: 'Japan', code: 'JP'},\r\n            {name: 'Spain', code: 'ES'},\r\n            {name: 'United States', code: 'US'}\r\n        ];\r\n\r\n        this.countryTemplate = this.countryTemplate.bind(this);\r\n        this.selectedCountriesTemplate = this.selectedCountriesTemplate.bind(this);\r\n        this.panelFooterTemplate = this.panelFooterTemplate.bind(this);\r\n    }\r\n\r\n    countryTemplate(option) {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    selectedCountriesTemplate(option) {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return \"Select Countries\";\r\n    }\r\n\r\n    panelFooterTemplate() {\r\n        const selectedItems = this.state.selectedCountries;\r\n        const length = selectedItems ? selectedItems.length : 0;\r\n        return (\r\n            <div className=\"p-py-2 p-px-3\">\r\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"multiselect-demo\">\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <MultiSelect value={this.state.selectedCities1} options={this.cities} onChange={(e) => this.setState({ selectedCities1: e.value })} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                    <h5>Chips</h5>\r\n                    <MultiSelect value={this.state.selectedCities2} options={this.cities} onChange={(e) => this.setState({ selectedCities2: e.value })} optionLabel=\"name\" placeholder=\"Select a City\" display=\"chip\" />\r\n\r\n                    <h5>Advanced with Templating and Filtering</h5>\r\n                    <MultiSelect value={this.state.selectedCountries} options={this.countries}  onChange={(e) => this.setState({ selectedCountries: e.value })} optionLabel=\"name\" placeholder=\"Select Countries\" filter className=\"multiselect-custom\"\r\n                        itemTemplate={this.countryTemplate} selectedItemTemplate={this.selectedCountriesTemplate} panelFooterTemplate={this.panelFooterTemplate}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport './MultiSelectDemo.css';\r\n\r\nconst MultiSelectDemo = () => {\r\n    const [selectedCities1, setSelectedCities1] = useState(null);\r\n    const [selectedCities2, setSelectedCities2] = useState(null);\r\n    const [selectedCountries, setSelectedCountries] = useState(null);\r\n    const cities = [\r\n        {name: 'New York', code: 'NY'},\r\n        {name: 'Rome', code: 'RM'},\r\n        {name: 'London', code: 'LDN'},\r\n        {name: 'Istanbul', code: 'IST'},\r\n        {name: 'Paris', code: 'PRS'}\r\n    ];\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n\r\n    const countryTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const selectedCountriesTemplate = (option) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return \"Select Countries\";\r\n    }\r\n\r\n    const panelFooterTemplate = () => {\r\n        const length = selectedCountries ? selectedCountries.length : 0;\r\n        return (\r\n            <div className=\"p-py-2 p-px-3\">\r\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"multiselect-demo\">\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <MultiSelect value={selectedCities1} options={cities} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                <h5>Chips</h5>\r\n                <MultiSelect value={selectedCities2} options={cities} onChange={(e) => setSelectedCities2(e.value)} optionLabel=\"name\" placeholder=\"Select a City\" display=\"chip\" />\r\n\r\n                <h5>Advanced with Templating and Filtering</h5>\r\n                <MultiSelect value={selectedCountries} options={countries}  onChange={(e) => setSelectedCountries(e.value)} optionLabel=\"name\" placeholder=\"Select Countries\" filter className=\"multiselect-custom\"\r\n                    itemTemplate={countryTemplate} selectedItemTemplate={selectedCountriesTemplate} panelFooterTemplate={panelFooterTemplate}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport './MultiSelectDemo.css';\r\n\r\nconst MultiSelectDemo = () => {\r\n    const [selectedCities1, setSelectedCities1] = useState(null);\r\n    const [selectedCities2, setSelectedCities2] = useState(null);\r\n    const [selectedCountries, setSelectedCountries] = useState(null);\r\n    const cities = [\r\n        {name: 'New York', code: 'NY'},\r\n        {name: 'Rome', code: 'RM'},\r\n        {name: 'London', code: 'LDN'},\r\n        {name: 'Istanbul', code: 'IST'},\r\n        {name: 'Paris', code: 'PRS'}\r\n    ];\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n\r\n    const countryTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const selectedCountriesTemplate = (option) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <img alt={option.name} src=\"showcase/demo/images/flag_placeholder.png\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={\\`flag flag-\\${option.code.toLowerCase()}\\`} />\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return \"Select Countries\";\r\n    }\r\n\r\n    const panelFooterTemplate = () => {\r\n        const length = selectedCountries ? selectedCountries.length : 0;\r\n        return (\r\n            <div className=\"p-py-2 p-px-3\">\r\n                <b>{length}</b> item{length > 1 ? 's' : ''} selected.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"multiselect-demo\">\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <MultiSelect value={selectedCities1} options={cities} onChange={(e) => setSelectedCities1(e.value)} optionLabel=\"name\" placeholder=\"Select a City\" />\r\n\r\n                <h5>Chips</h5>\r\n                <MultiSelect value={selectedCities2} options={cities} onChange={(e) => setSelectedCities2(e.value)} optionLabel=\"name\" placeholder=\"Select a City\" display=\"chip\" />\r\n\r\n                <h5>Advanced with Templating and Filtering</h5>\r\n                <MultiSelect value={selectedCountries} options={countries}  onChange={(e) => setSelectedCountries(e.value)} optionLabel=\"name\" placeholder=\"Select Countries\" filter className=\"multiselect-custom\"\r\n                    itemTemplate={countryTemplate} selectedItemTemplate={selectedCountriesTemplate} panelFooterTemplate={panelFooterTemplate}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/MultiSelectDemo.css': {\r\n                content: `\r\n.multiselect-demo .p-multiselect {\r\n    min-width: 15rem;\r\n}\r\n\r\n.multiselect-demo .multiselect-custom .p-multiselect-label:not(.p-placeholder):not(.p-multiselect-items-label) {\r\n    padding-top: .25rem;\r\n    padding-bottom: .25rem;\r\n}\r\n\r\n.multiselect-demo .multiselect-custom .country-item-value {\r\n    padding: .25rem .5rem;\r\n    border-radius: 3px;\r\n    display: inline-flex;\r\n    margin-right: .5rem;\r\n    background-color: var(--primary-color);\r\n    color: var(--primary-color-text);\r\n}\r\n\r\n.multiselect-demo .multiselect-custom .country-item-value img.flag {\r\n    width: 17px;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { MultiSelect } from 'primereact/multiselect';\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Getting Started</h5>\r\n            <p>MultiSelect is used as a controlled component with <i>value</i> and <i>onChange</i> properties along with the options collection. There are two alternatives\r\n            of how to define the options property; One way is providing a collection of <i>SelectItem</i> instances having label-value pairs\r\n            whereas other way is providing an array of arbitrary objects along with the <i>optionLabel</i> and <i>optionValue</i> properties to specify the label/value field pair. In addition,\r\n            options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.</p>\r\n\r\n            <p><b>Options as SelectItems</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst citySelectItems = [\r\n    {label: 'New York', value: 'NY'},\r\n    {label: 'Rome', value: 'RM'},\r\n    {label: 'London', value: 'LDN'},\r\n    {label: 'Istanbul', value: 'IST'},\r\n    {label: 'Paris', value: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <p><b>Options as any type</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst cities = [\r\n    {name: 'New York', code: 'NY'},\r\n    {name: 'Rome', code: 'RM'},\r\n    {name: 'London', code: 'LDN'},\r\n    {name: 'Istanbul', code: 'IST'},\r\n    {name: 'Paris', code: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect optionLabel=\"name\" value={cities} options={cities} onChange={(e) => setCities(e.value)} />\r\n<MultiSelect optionLabel=\"name\" optionValue=\"code\" value={cities} options={cities} onChange={(e) => setCities(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n            <p>When <i>optionValue</i> is not defined, value of an option refers to the option object itself.</p>\r\n\r\n            <h5>Chips Display</h5>\r\n            <p>A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the <i>display</i> property to visualize the items as tokens.</p>\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect display=\"chip\" optionLabel=\"name\" value={selectedCities} options={cities} onChange={(e) => setSelectedCities(e.value)} />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Custom Content</h5>\r\n            <p>Label of an option is used as the display text of an item by default, for custom content support define an itemTemplate function that gets the option as a parameter and returns the content.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} itemTemplate={itemTemplate} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nitemTemplate(option) {\r\n    // custom item content\r\n}\r\n`}\r\n</CodeHighlight>\r\n                        <p>In addition <i>selectedItemTemplate</i> can be used to customize the selected values display instead of the default comma separated list.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} selectedItemTemplate={selectedItemTemplate} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nselectedItemTemplate(option) {\r\n    // custom selected item content\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Filtering</h5>\r\n            <p>Options can be filtered using an input field in the overlay by enabling the <i>filter</i> property. By default filtering is done against\r\n                label of the items and <i>filterBy</i> property is available to choose one or more properties of the options. In addition <i>filterMatchMode</i> can be utilized\r\n                to define the filtering algorithm, valid options are \"contains\" (default), \"startsWith\", \"endsWith\", \"equals\" and \"notEquals\".</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<MultiSelect value={cities} options={citySelectItems} onChange={(e) => setCities(e.value)} filter/>\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>SelectItem API</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Default</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>label</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>value</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Value of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>ClassName of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>title</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Tooltip text of the option. (Not supported)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Whether the option is disabled or not. (Not supported)</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Properties</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Default</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>id</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Unique identifier of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>name</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the input element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>value</td>\r\n                            <td>array</td>\r\n                            <td>null</td>\r\n                            <td>Value of the component.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>options</td>\r\n                            <td>array</td>\r\n                            <td>null</td>\r\n                            <td>An array of selectitems to display as the available options.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>optionLabel</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the label field of an option when an arbitrary objects instead of SelectItems are used as options.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>style</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>panelClassName</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the overlay panel element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>panelStyle</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the overlay panel element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>scrollHeight</td>\r\n                            <td>string</td>\r\n                            <td>200px</td>\r\n                            <td>Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>placeholder</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label to display when there are no selections.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>fixedPlaceholder</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Whether to display selected items in the label section or always display the placeholder as the default label.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When present, it specifies that the component should be disabled.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>showClear</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When enabled, a clear icon is displayed to clear the value.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filter</td>\r\n                            <td>boolean</td>\r\n                            <td>true</td>\r\n                            <td>When specified, displays an input field to filter the items on keyup.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterBy</td>\r\n                            <td>string</td>\r\n                            <td>label</td>\r\n                            <td>When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterMatchMode</td>\r\n                            <td>string</td>\r\n                            <td>contains</td>\r\n                            <td>Defines how the items are filtered, valid values are \"contains\", (default) \"startsWith\", \"endsWith\", \"equals\" and \"notEquals\".</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterPlaceholder</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Placeholder text to show when filter input is empty.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>filterLocale</td>\r\n                            <td>string</td>\r\n                            <td>undefined</td>\r\n                            <td>Locale to use in filtering. The default locale is the host environment's current locale.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>emptyFilterMessage</td>\r\n                            <td>any</td>\r\n                            <td>No records found</td>\r\n                            <td>Template to display when filtering does not return any results.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>resetFilterOnHide</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Clears the filter value when hiding the dropdown.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tabIndex</td>\r\n                            <td>number</td>\r\n                            <td>null</td>\r\n                            <td>Index of the element in tabbing order.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>dataKey</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>A property to uniquely match the value in options for better performance.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>required</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When present, it specifies that an input field must be filled out before submitting the form.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>inputId</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Identifier of the focusable input.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltip</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Content of the tooltip.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltipOptions</td>\r\n                            <td>object</td>\r\n                            <td>null</td>\r\n                            <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>itemTemplate</td>\r\n                            <td>function</td>\r\n                            <td>null</td>\r\n                            <td>Function that gets the option and returns the content for it.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>selectedItemTemplate</td>\r\n                            <td>function</td>\r\n                            <td>null</td>\r\n                            <td>Function that gets an item in the value and returns the content for it.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>panelHeaderTemplate</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Template of the panel header.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>panelFooterTemplate</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Template of the panel footer.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>appendTo</td>\r\n                            <td>DOM element</td>\r\n                            <td>null</td>\r\n                            <td>DOM element instance where the dialog should be mounted.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>maxSelectedLabels</td>\r\n                            <td>number</td>\r\n                            <td>3</td>\r\n                            <td>Decides how many selected item labels to show at most.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>selectionLimit</td>\r\n                            <td>number</td>\r\n                            <td>null</td>\r\n                            <td>Number of maximum options that can be selected.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>selectedItemsLabel</td>\r\n                            <td>string</td>\r\n                            <td>&#123;0&#125; items selected</td>\r\n                            <td>Label to display after exceeding max selected labels.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ariaLabelledBy</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>display</td>\r\n                            <td>string</td>\r\n                            <td>comma</td>\r\n                            <td>Used mode to display the selected item. Valid values are 'comma' and 'chip'.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Events</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Parameters</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>onChange</td>\r\n                            <td>event.originalEvent: Browser event<br />\r\n                                event.value: Current selected values<br />\r\n                            </td>\r\n                            <td>Callback to invoke when value changes.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onFocus</td>\r\n                            <td>event: Browser event.</td>\r\n                            <td>Callback to invoke when the element receives focus.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onBlur</td>\r\n                            <td>event: Browser event.</td>\r\n                            <td>Callback to invoke when the element loses focus.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Methods</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Parameters</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>checkValidity</td>\r\n                            <td>-</td>\r\n                            <td>Checks whether the native hidden select element has any constraints and returns a boolean for the result.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Styling</h5>\r\n            <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Element</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>p-multiselect</td>\r\n                            <td>Container element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-label-container</td>\r\n                            <td>Container of the label to display selected items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-label-container</td>\r\n                            <td>Label to display selected items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-trigger</td>\r\n                            <td>Dropdown button.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-filter-container</td>\r\n                            <td>Container of filter input.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-panel</td>\r\n                            <td>Overlay panel for items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-items</td>\r\n                            <td>List container of items.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-item</td>\r\n                            <td>An item in the list.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-multiselect-token</td>\r\n                            <td>A selected item element container on display='chip' mode.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-chips-token-icon</td>\r\n                            <td>Icon of a selected item element on display='chip' mode.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-chips-token-label</td>\r\n                            <td>Label of a selected item element on display='chip' mode.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <h5>Dependencies</h5>\r\n                <p>None.</p>\r\n            </div>\r\n\r\n            </TabPanel>\r\n\r\n            {\r\n                useLiveEditorTabs({ name: 'MultiSelectDemo', sources: this.sources, extFiles: this.extFiles })\r\n            }\r\n        </TabView>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}