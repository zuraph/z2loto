{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var KnobDoc=/*#__PURE__*/function(_Component){_inherits(KnobDoc,_Component);var _super=_createSuper(KnobDoc);function KnobDoc(props){var _this;_classCallCheck(this,KnobDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, {Component} from 'react';\\nimport { Knob } from 'primereact/knob';\\nimport { Button } from 'primereact/button';\\n\\nexport class KnobDemo extends Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            value: 0,\\n            value1 : 0,\\n            value2 : 50,\\n            value3 : 75,\\n            value4 : 10,\\n            value5 : 40,\\n            value6 : 60,\\n            value7 : 40,\\n            value8 : 60,\\n            value9 : 50,\\n            value10: 0,\\n            disabledIncrementBtn: false,\\n            disabledDecrementBtn: true\\n        }\\n\\n        this.increment = this.increment.bind(this);\\n        this.decrement = this.decrement.bind(this);\\n    }\\n\\n    increment() {\\n        this.setState((prevState) => {\\n            const value = prevState.value10 + 1;\\n            return {\\n                value10: value,\\n                disabledIncrementBtn: value === 100,\\n                disabledDecrementBtn: false\\n            }\\n        });\\n    }\\n\\n    decrement() {\\n        this.setState((prevState) => {\\n            const value = prevState.value10 - 1;\\n            return {\\n                value10: value,\\n                disabledIncrementBtn: false,\\n                disabledDecrementBtn: value === 0\\n            }\\n        });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                     <div className=\\\"p-grid p-formgrid p-text-center\\\">\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5>Basic</h5>\\n                            <Knob value={this.state.value1} onChange={(e)=>this.setState({value1: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5>Readonly</h5>\\n                            <Knob value={this.state.value2} readOnly/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5>Disabled</h5>\\n                            <Knob value={this.state.value3} disabled/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Min/Max</h5>\\n                            <Knob value={this.state.value4} min={-50} max={50} onChange={(e)=>this.setState({value4: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Step</h5>\\n                            <Knob value={this.state.value5} step={10} onChange={(e)=>this.setState({value5: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Template</h5>\\n                            <Knob value={this.state.value6} valueTemplate={\\\"{value}%\\\"} onChange={(e)=>this.setState({value6: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Stroke</h5>\\n                            <Knob value={this.state.value7} strokeWidth={5} onChange={(e)=>this.setState({value7: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Size</h5>\\n                            <Knob value={this.state.value8} size={200} onChange={(e)=>this.setState({value8: e.value})}/>\\n                        </div>\\n                        <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                            <h5 className=\\\"p-mt-3\\\">Color</h5>\\n                            <Knob value={this.state.value9} valueColor={\\\"SlateGray\\\"} rangeColor={\\\"MediumTurquoise\\\"} onChange={(e)=>this.setState({value9: e.value})}/>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div className=\\\"card p-text-center\\\">\\n                    <h5>Reactive Knob</h5>\\n                    <Knob value={this.state.value10} size={150} readOnly />\\n                    <Button label=\\\"Increment\\\" onClick={this.increment} className=\\\"p-mr-2\\\" disabled={this.state.disabledIncrementBtn} />\\n                    <Button label=\\\"Decrement\\\" onClick={this.decrement} disabled={this.state.disabledDecrementBtn} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Knob } from 'primereact/knob';\\nimport { Button } from 'primereact/button';\\n\\nconst KnobDemo = () => {\\n    const [value, setValue] = useState(0);\\n    const [value1, setValue1] = useState(0);\\n    const [value2, setValue2] = useState(50);\\n    const [value3, setValue3] = useState(75);\\n    const [value4, setValue4] = useState(10);\\n    const [value5, setValue5] = useState(40);\\n    const [value6, setValue6] = useState(60);\\n    const [value7, setValue7] = useState(40);\\n    const [value8, setValue8] = useState(60);\\n    const [value9, setValue9] = useState(50);\\n    const [value10, setValue10] = useState(0);\\n    const [disabledIncrementBtn, setDisabledIncrementBtn] = useState(false);\\n    const [disabledDecrementBtn, setDisabledDecrementBtn] = useState(true);\\n\\n    const increment = () => {\\n        const value = value10 + 1;\\n        setValue10(value);\\n        setDisabledIncrementBtn(value === 100);\\n        setDisabledDecrementBtn(false);\\n    }\\n\\n    const decrement = () => {\\n        const value = value10 - 1;\\n        setValue10(value);\\n        setDisabledIncrementBtn(false);\\n        setDisabledDecrementBtn(value === 0);\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <div className=\\\"p-grid p-formgrid p-text-center\\\">\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Basic</h5>\\n                        <Knob value={value1} onChange={(e) => setValue1(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Readonly</h5>\\n                        <Knob value={value2} readOnly/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Disabled</h5>\\n                        <Knob value={value3} disabled/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Min/Max</h5>\\n                        <Knob value={value4} min={-50} max={50} onChange={(e) =>  setValue4(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Step</h5>\\n                        <Knob value={value5} step={10} onChange={(e) => setValue5(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Template</h5>\\n                        <Knob value={value6} valueTemplate={\\\"{value}%\\\"} onChange={(e) => setValue6(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Stroke</h5>\\n                        <Knob value={value7} strokeWidth={5} onChange={(e) => setValue7(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Size</h5>\\n                        <Knob value={value8} size={200} onChange={(e) => setValue8(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Color</h5>\\n                        <Knob value={value9} valueColor={\\\"SlateGray\\\"} rangeColor={\\\"MediumTurquoise\\\"} onChange={(e) => setValue9(e.value)}/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div className=\\\"card p-text-center\\\">\\n                <h5>Reactive Knob</h5>\\n                <Knob value={value10} size={150} readOnly />\\n                <Button label=\\\"Increment\\\" onClick={increment} className=\\\"p-mr-2\\\" disabled={disabledIncrementBtn} />\\n                <Button label=\\\"Decrement\\\" onClick={decrement} disabled={disabledDecrementBtn} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Knob } from 'primereact/knob';\\nimport { Button } from 'primereact/button';\\n\\nconst KnobDemo = () => {\\n    const [value, setValue] = useState(0);\\n    const [value1, setValue1] = useState(0);\\n    const [value2, setValue2] = useState(50);\\n    const [value3, setValue3] = useState(75);\\n    const [value4, setValue4] = useState(10);\\n    const [value5, setValue5] = useState(40);\\n    const [value6, setValue6] = useState(60);\\n    const [value7, setValue7] = useState(40);\\n    const [value8, setValue8] = useState(60);\\n    const [value9, setValue9] = useState(50);\\n    const [value10, setValue10] = useState(0);\\n    const [disabledIncrementBtn, setDisabledIncrementBtn] = useState(false);\\n    const [disabledDecrementBtn, setDisabledDecrementBtn] = useState(true);\\n\\n    const increment = () => {\\n        const value = value10 + 1;\\n        setValue10(value);\\n        setDisabledIncrementBtn(value === 100);\\n        setDisabledDecrementBtn(false);\\n    }\\n\\n    const decrement = () => {\\n        const value = value10 - 1;\\n        setValue10(value);\\n        setDisabledIncrementBtn(false);\\n        setDisabledDecrementBtn(value === 0);\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <div className=\\\"p-grid p-formgrid p-text-center\\\">\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Basic</h5>\\n                        <Knob value={value1} onChange={(e) => setValue1(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Readonly</h5>\\n                        <Knob value={value2} readOnly/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5>Disabled</h5>\\n                        <Knob value={value3} disabled/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Min/Max</h5>\\n                        <Knob value={value4} min={-50} max={50} onChange={(e) => setValue4(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Step</h5>\\n                        <Knob value={value5} step={10} onChange={(e) => setValue5(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Template</h5>\\n                        <Knob value={value6} valueTemplate={\\\"{value}%\\\"} onChange={(e) => setValue6(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Stroke</h5>\\n                        <Knob value={value7} strokeWidth={5} onChange={(e) => setValue7(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Size</h5>\\n                        <Knob value={value8} size={200} onChange={(e) => setValue8(e.value)}/>\\n                    </div>\\n                    <div className=\\\"p-field p-col-12 p-md-4\\\">\\n                        <h5 className=\\\"p-mt-3\\\">Color</h5>\\n                        <Knob value={value9} valueColor={\\\"SlateGray\\\"} rangeColor={\\\"MediumTurquoise\\\"} onChange={(e) => setValue9(e.value)}/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div className=\\\"card p-text-center\\\">\\n                <h5>Reactive Knob</h5>\\n                <Knob value={value10} size={150} readOnly />\\n                <Button label=\\\"Increment\\\" onClick={increment} className=\\\"p-mr-2\\\" disabled={disabledIncrementBtn} />\\n                <Button label=\\\"Decrement\\\" onClick={decrement} disabled={disabledDecrementBtn} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this;}_createClass(KnobDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { Knob } from 'primereact/knob';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"Knob is used as a controlled input with value and onChange properties.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Knob value={value} onChange={(e) => setValue(value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Minimum and Maximum\"),/*#__PURE__*/React.createElement(\"p\",null,\"Boundaries are configured with the \",/*#__PURE__*/React.createElement(\"i\",null,\"min\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"max\"),\" values whose defaults are 0 and 100 respectively.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Knob value={value} min={0} max={100} onChange={(e) => setValue(value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Step\"),/*#__PURE__*/React.createElement(\"p\",null,\"Step factor is 1 by default and can be customized with \",/*#__PURE__*/React.createElement(\"i\",null,\"step\"),\" option.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Knob value={value} step={10} onChange={(e) => setValue(value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",null,\"valueColor\"),\" defines the value color, \",/*#__PURE__*/React.createElement(\"i\",null,\"rangeColor\"),\" defines the range background and similarly \",/*#__PURE__*/React.createElement(\"i\",null,\"textColor\"),\" configures the color of the value text. In addition, \",/*#__PURE__*/React.createElement(\"i\",null,\"strokeWidth\"),\" is used to determine the width of the stroke of range and value sections.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Knob value={value} valueColor={\\\"SlateGray\\\"} rangeColor={\\\"MediumTurquoise\\\"} onChange={(e) => setValue(value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Size\"),/*#__PURE__*/React.createElement(\"p\",null,\"Default size of the Knob is 100 pixels for width and height, use the \",/*#__PURE__*/React.createElement(\"i\",null,\"size\"),\" property to customize it per your requirements.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Knob value={value} size={200} onChange={(e) => setValue(value)} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"p\",null,\"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"size\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"100\"),/*#__PURE__*/React.createElement(\"td\",null,\"Size of the component in pixels.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the component should be disabled.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"readOnly\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the component value cannot be edited.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"step\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Step factor to increment/decrement the value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"min\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"0\"),/*#__PURE__*/React.createElement(\"td\",null,\"Mininum boundary value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"max\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"100\"),/*#__PURE__*/React.createElement(\"td\",null,\"Maximum boundary value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"valueColor\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Background of the value.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"rangeColor\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Background color of the range.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"textColor\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Color of the value text.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"strokeWidth\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"14\"),/*#__PURE__*/React.createElement(\"td\",null,\"Width of the knob stroke.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"showValue\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether the show the value inside the knob.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"valueTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"{value}\"),/*#__PURE__*/React.createElement(\"td\",null,\"Template string of the value.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"value: New value\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when the value changes.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-knob\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-knob-range\"),/*#__PURE__*/React.createElement(\"td\",null,\"Range element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-knob-value\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-knob-text\"),/*#__PURE__*/React.createElement(\"td\",null,\"Text element.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'KnobDemo',sources:this.sources})));}}]);return KnobDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/knob/KnobDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","KnobDoc","props","sources","tabName","content","name"],"mappings":"wsBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,kCAAlC,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CAEA,UAAaC,CAAAA,OAAb,kGAEI,iBAAYC,KAAZ,CAAmB,yCACf,uBAAMA,KAAN,EAEA,MAAKC,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,m/IAFF,CADE,CA6GX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,y7HAFF,CA7GE,CAuMX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,w7HAFL,CAvMK,CAAf,CAHe,aAqSlB,CAvSL,yDAySI,gCAAwB,CACpB,MAAO,MAAP,CACH,CA3SL,sBA6SI,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,mBACI,oBAAC,QAAD,EAAU,MAAM,CAAC,eAAjB,eACI,uCADJ,cAEI,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,gDAFJ,cAQI,gDARJ,cASI,sGATJ,cAUI,oBAAC,aAAD,qEAVJ,cAgBI,oDAhBJ,cAiBI,gFAAsC,mCAAtC,sBAAqD,mCAArD,sDAjBJ,cAkBI,oBAAC,aAAD,uFAlBJ,cAwBI,qCAxBJ,cAyBI,oGAA0D,oCAA1D,YAzBJ,cA0BI,oBAAC,aAAD,+EA1BJ,cAgCI,wCAhCJ,cAiCI,0CAAG,0CAAH,2CAA8C,0CAA9C,6DAA2G,yCAA3G,uEACiB,2CADjB,8EAjCJ,cAmCI,oBAAC,aAAD,iIAnCJ,cAyCI,qCAzCJ,cA0CI,kHAAwE,oCAAxE,oDA1CJ,cA2CI,oBAAC,aAAD,gFA3CJ,cAiDI,2CAjDJ,cAkDI,6KAlDJ,cAoDI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACA,2CACI,qCADJ,cAEI,qCAFJ,cAGI,wCAHJ,cAII,4CAJJ,CADA,CADJ,cASI,8CACA,2CACI,mCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,kEAJJ,CADA,cAOA,2CACI,sCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,wDAJJ,CAPA,cAaA,2CACI,qCADJ,cAEI,uCAFJ,cAGI,oCAHJ,cAII,iEAJJ,CAbA,cAmBA,2CACI,yCADJ,cAEI,wCAFJ,cAGI,sCAHJ,cAII,kGAJJ,CAnBA,cAyBA,2CACI,yCADJ,cAEI,wCAFJ,cAGI,sCAHJ,cAII,sGAJJ,CAzBA,cA+BA,2CACI,qCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,8EAJJ,CA/BA,cAqCA,2CACI,oCADJ,cAEI,uCAFJ,cAGI,kCAHJ,cAII,wDAJJ,CArCA,cA2CA,2CACI,oCADJ,cAEI,uCAFJ,cAGI,oCAHJ,cAII,wDAJJ,CA3CA,cAiDA,2CACI,2CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,yDAJJ,CAjDA,cAuDA,2CACI,2CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,+DAJJ,CAvDA,cA6DA,2CACI,0CADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,yDAJJ,CA7DA,cAmEA,2CACI,4CADJ,cAEI,uCAFJ,cAGI,mCAHJ,cAII,0DAJJ,CAnEA,cAyEA,2CACI,0CADJ,cAEI,wCAFJ,cAGI,qCAHJ,cAII,4EAJJ,CAzEA,cA+EA,2CACI,8CADJ,cAEI,uCAFJ,cAGI,wCAHJ,cAII,8DAJJ,CA/EA,CATJ,CADJ,CApDJ,cAuJI,uCAvJJ,cAwJI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACA,2CACI,qCADJ,cAEI,2CAFJ,cAGI,4CAHJ,CADA,CADJ,cAQI,8CACA,2CACI,yCADJ,cAEI,iDAFJ,cAGI,2EAHJ,CADA,CARJ,CADJ,CAxJJ,cA2KI,wCA3KJ,cA4KI,0HAAgF,oBAAC,IAAD,EAAM,EAAE,CAAC,UAAT,aAAhF,UA5KJ,cA8KI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACA,2CACI,qCADJ,cAEI,wCAFJ,CADA,CADJ,cAOI,8CACA,2CACI,uCADJ,cAEI,mDAFJ,CADA,cAKA,2CACI,6CADJ,cAEI,+CAFJ,CALA,cASA,2CACI,6CADJ,cAEI,+CAFJ,CATA,cAaA,2CACI,4CADJ,cAEI,8CAFJ,CAbA,CAPJ,CADJ,CA9KJ,cA2MI,6CA3MJ,cA4MI,qCA5MJ,CADJ,CAiNQL,iBAAiB,CAAC,CAAEM,IAAI,CAAE,UAAR,CAAoBH,OAAO,CAAE,KAAKA,OAAlC,CAAD,CAjNzB,CADJ,CADJ,CAwNH,CAtgBL,qBAA6BR,SAA7B","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class KnobDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, {Component} from 'react';\r\nimport { Knob } from 'primereact/knob';\r\nimport { Button } from 'primereact/button';\r\n\r\nexport class KnobDemo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n            value1 : 0,\r\n            value2 : 50,\r\n            value3 : 75,\r\n            value4 : 10,\r\n            value5 : 40,\r\n            value6 : 60,\r\n            value7 : 40,\r\n            value8 : 60,\r\n            value9 : 50,\r\n            value10: 0,\r\n            disabledIncrementBtn: false,\r\n            disabledDecrementBtn: true\r\n        }\r\n\r\n        this.increment = this.increment.bind(this);\r\n        this.decrement = this.decrement.bind(this);\r\n    }\r\n\r\n    increment() {\r\n        this.setState((prevState) => {\r\n            const value = prevState.value10 + 1;\r\n            return {\r\n                value10: value,\r\n                disabledIncrementBtn: value === 100,\r\n                disabledDecrementBtn: false\r\n            }\r\n        });\r\n    }\r\n\r\n    decrement() {\r\n        this.setState((prevState) => {\r\n            const value = prevState.value10 - 1;\r\n            return {\r\n                value10: value,\r\n                disabledIncrementBtn: false,\r\n                disabledDecrementBtn: value === 0\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                     <div className=\"p-grid p-formgrid p-text-center\">\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5>Basic</h5>\r\n                            <Knob value={this.state.value1} onChange={(e)=>this.setState({value1: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5>Readonly</h5>\r\n                            <Knob value={this.state.value2} readOnly/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5>Disabled</h5>\r\n                            <Knob value={this.state.value3} disabled/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Min/Max</h5>\r\n                            <Knob value={this.state.value4} min={-50} max={50} onChange={(e)=>this.setState({value4: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Step</h5>\r\n                            <Knob value={this.state.value5} step={10} onChange={(e)=>this.setState({value5: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Template</h5>\r\n                            <Knob value={this.state.value6} valueTemplate={\"{value}%\"} onChange={(e)=>this.setState({value6: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Stroke</h5>\r\n                            <Knob value={this.state.value7} strokeWidth={5} onChange={(e)=>this.setState({value7: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Size</h5>\r\n                            <Knob value={this.state.value8} size={200} onChange={(e)=>this.setState({value8: e.value})}/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-4\">\r\n                            <h5 className=\"p-mt-3\">Color</h5>\r\n                            <Knob value={this.state.value9} valueColor={\"SlateGray\"} rangeColor={\"MediumTurquoise\"} onChange={(e)=>this.setState({value9: e.value})}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card p-text-center\">\r\n                    <h5>Reactive Knob</h5>\r\n                    <Knob value={this.state.value10} size={150} readOnly />\r\n                    <Button label=\"Increment\" onClick={this.increment} className=\"p-mr-2\" disabled={this.state.disabledIncrementBtn} />\r\n                    <Button label=\"Decrement\" onClick={this.decrement} disabled={this.state.disabledDecrementBtn} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Knob } from 'primereact/knob';\r\nimport { Button } from 'primereact/button';\r\n\r\nconst KnobDemo = () => {\r\n    const [value, setValue] = useState(0);\r\n    const [value1, setValue1] = useState(0);\r\n    const [value2, setValue2] = useState(50);\r\n    const [value3, setValue3] = useState(75);\r\n    const [value4, setValue4] = useState(10);\r\n    const [value5, setValue5] = useState(40);\r\n    const [value6, setValue6] = useState(60);\r\n    const [value7, setValue7] = useState(40);\r\n    const [value8, setValue8] = useState(60);\r\n    const [value9, setValue9] = useState(50);\r\n    const [value10, setValue10] = useState(0);\r\n    const [disabledIncrementBtn, setDisabledIncrementBtn] = useState(false);\r\n    const [disabledDecrementBtn, setDisabledDecrementBtn] = useState(true);\r\n\r\n    const increment = () => {\r\n        const value = value10 + 1;\r\n        setValue10(value);\r\n        setDisabledIncrementBtn(value === 100);\r\n        setDisabledDecrementBtn(false);\r\n    }\r\n\r\n    const decrement = () => {\r\n        const value = value10 - 1;\r\n        setValue10(value);\r\n        setDisabledIncrementBtn(false);\r\n        setDisabledDecrementBtn(value === 0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"p-grid p-formgrid p-text-center\">\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Basic</h5>\r\n                        <Knob value={value1} onChange={(e) => setValue1(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Readonly</h5>\r\n                        <Knob value={value2} readOnly/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Disabled</h5>\r\n                        <Knob value={value3} disabled/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Min/Max</h5>\r\n                        <Knob value={value4} min={-50} max={50} onChange={(e) =>  setValue4(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Step</h5>\r\n                        <Knob value={value5} step={10} onChange={(e) => setValue5(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Template</h5>\r\n                        <Knob value={value6} valueTemplate={\"{value}%\"} onChange={(e) => setValue6(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Stroke</h5>\r\n                        <Knob value={value7} strokeWidth={5} onChange={(e) => setValue7(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Size</h5>\r\n                        <Knob value={value8} size={200} onChange={(e) => setValue8(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Color</h5>\r\n                        <Knob value={value9} valueColor={\"SlateGray\"} rangeColor={\"MediumTurquoise\"} onChange={(e) => setValue9(e.value)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card p-text-center\">\r\n                <h5>Reactive Knob</h5>\r\n                <Knob value={value10} size={150} readOnly />\r\n                <Button label=\"Increment\" onClick={increment} className=\"p-mr-2\" disabled={disabledIncrementBtn} />\r\n                <Button label=\"Decrement\" onClick={decrement} disabled={disabledDecrementBtn} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Knob } from 'primereact/knob';\r\nimport { Button } from 'primereact/button';\r\n\r\nconst KnobDemo = () => {\r\n    const [value, setValue] = useState(0);\r\n    const [value1, setValue1] = useState(0);\r\n    const [value2, setValue2] = useState(50);\r\n    const [value3, setValue3] = useState(75);\r\n    const [value4, setValue4] = useState(10);\r\n    const [value5, setValue5] = useState(40);\r\n    const [value6, setValue6] = useState(60);\r\n    const [value7, setValue7] = useState(40);\r\n    const [value8, setValue8] = useState(60);\r\n    const [value9, setValue9] = useState(50);\r\n    const [value10, setValue10] = useState(0);\r\n    const [disabledIncrementBtn, setDisabledIncrementBtn] = useState(false);\r\n    const [disabledDecrementBtn, setDisabledDecrementBtn] = useState(true);\r\n\r\n    const increment = () => {\r\n        const value = value10 + 1;\r\n        setValue10(value);\r\n        setDisabledIncrementBtn(value === 100);\r\n        setDisabledDecrementBtn(false);\r\n    }\r\n\r\n    const decrement = () => {\r\n        const value = value10 - 1;\r\n        setValue10(value);\r\n        setDisabledIncrementBtn(false);\r\n        setDisabledDecrementBtn(value === 0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"p-grid p-formgrid p-text-center\">\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Basic</h5>\r\n                        <Knob value={value1} onChange={(e) => setValue1(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Readonly</h5>\r\n                        <Knob value={value2} readOnly/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5>Disabled</h5>\r\n                        <Knob value={value3} disabled/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Min/Max</h5>\r\n                        <Knob value={value4} min={-50} max={50} onChange={(e) => setValue4(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Step</h5>\r\n                        <Knob value={value5} step={10} onChange={(e) => setValue5(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Template</h5>\r\n                        <Knob value={value6} valueTemplate={\"{value}%\"} onChange={(e) => setValue6(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Stroke</h5>\r\n                        <Knob value={value7} strokeWidth={5} onChange={(e) => setValue7(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Size</h5>\r\n                        <Knob value={value8} size={200} onChange={(e) => setValue8(e.value)}/>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-4\">\r\n                        <h5 className=\"p-mt-3\">Color</h5>\r\n                        <Knob value={value9} valueColor={\"SlateGray\"} rangeColor={\"MediumTurquoise\"} onChange={(e) => setValue9(e.value)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card p-text-center\">\r\n                <h5>Reactive Knob</h5>\r\n                <Knob value={value10} size={150} readOnly />\r\n                <Button label=\"Increment\" onClick={increment} className=\"p-mr-2\" disabled={disabledIncrementBtn} />\r\n                <Button label=\"Decrement\" onClick={decrement} disabled={disabledDecrementBtn} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n                        <CodeHighlight lang=\"js\">\r\n                            {`\r\nimport { Knob } from 'primereact/knob';\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Knob is used as a controlled input with value and onChange properties.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Minimum and Maximum</h5>\r\n                        <p>Boundaries are configured with the <i>min</i> and <i>max</i> values whose defaults are 0 and 100 respectively.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} min={0} max={100} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Step</h5>\r\n                        <p>Step factor is 1 by default and can be customized with <i>step</i> option.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} step={10} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p><i>valueColor</i> defines the value color, <i>rangeColor</i> defines the range background and similarly <i>textColor</i> configures the color of the value text.\r\n                            In addition, <i>strokeWidth</i> is used to determine the width of the stroke of range and value sections.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} valueColor={\"SlateGray\"} rangeColor={\"MediumTurquoise\"} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Size</h5>\r\n                        <p>Default size of the Knob is 100 pixels for width and height, use the <i>size</i> property to customize it per your requirements.</p>\r\n                        <CodeHighlight>\r\n                            {`\r\n<Knob value={value} size={200} onChange={(e) => setValue(value)} />\r\n`}\r\n                        </CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <p>Any property as style and class are passed to the main container element. Following are the\r\n                            additional properties to configure the component.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Type</th>\r\n                                    <th>Default</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>id</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Unique identifier of the element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>value</td>\r\n                                    <td>number</td>\r\n                                    <td>null</td>\r\n                                    <td>Value of the component.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>size</td>\r\n                                    <td>number</td>\r\n                                    <td>100</td>\r\n                                    <td>Size of the component in pixels.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>disabled</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>When present, it specifies that the component should be disabled.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>readOnly</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>When present, it specifies that the component value cannot be edited.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>step</td>\r\n                                    <td>number</td>\r\n                                    <td>null</td>\r\n                                    <td>Step factor to increment/decrement the value.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>min</td>\r\n                                    <td>number</td>\r\n                                    <td>0</td>\r\n                                    <td>Mininum boundary value.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>max</td>\r\n                                    <td>number</td>\r\n                                    <td>100</td>\r\n                                    <td>Maximum boundary value.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>valueColor</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Background of the value.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>rangeColor</td>\r\n                                    <td>number</td>\r\n                                    <td>null</td>\r\n                                    <td>Background color of the range.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>textColor</td>\r\n                                    <td>number</td>\r\n                                    <td>null</td>\r\n                                    <td>Color of the value text.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>strokeWidth</td>\r\n                                    <td>number</td>\r\n                                    <td>14</td>\r\n                                    <td>Width of the knob stroke.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>showValue</td>\r\n                                    <td>boolean</td>\r\n                                    <td>true</td>\r\n                                    <td>Whether the show the value inside the knob.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>valueTemplate</td>\r\n                                    <td>string</td>\r\n                                    <td>&#123;value&#125;</td>\r\n                                    <td>Template string of the value.</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Parameters</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>onChange</td>\r\n                                    <td>value: New value</td>\r\n                                    <td>Callback to invoke when the value changes.</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.\r\n                        </p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Element</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>p-knob</td>\r\n                                    <td>Container element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-knob-range</td>\r\n                                    <td>Range element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-knob-value</td>\r\n                                    <td>Value element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-knob-text</td>\r\n                                    <td>Text element.</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'KnobDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}