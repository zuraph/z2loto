{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\chart\\\\DoughnutChartDemo.js\";\nimport React, { Component } from 'react';\nimport { TabView } from '../../components/tabview/TabView';\nimport { Chart } from '../../components/chart/Chart';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport AppContentContext from '../../AppContentContext';\nexport var DoughnutChartDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DoughnutChartDemo, _Component);\n\n  var _super = _createSuper(DoughnutChartDemo);\n\n  function DoughnutChartDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DoughnutChartDemo);\n\n    _this = _super.call(this, props);\n    _this.chartData = {\n      labels: ['A', 'B', 'C'],\n      datasets: [{\n        data: [300, 50, 100],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n      }]\n    };\n    _this.lightOptions = {\n      legend: {\n        labels: {\n          fontColor: '#495057'\n        }\n      }\n    };\n    _this.darkOptions = {\n      legend: {\n        labels: {\n          fontColor: '#ebedef'\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DoughnutChartDemo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, \"DoughnutChart\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, \"A doughnut chart is a variant of the pie chart, with a blank center allowing for additional information about the data as a whole to be included.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AppContentContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, function (context) {\n        var options = context.darkTheme ? _this2.darkOptions : _this2.lightOptions;\n        return /*#__PURE__*/React.createElement(Chart, {\n          type: \"doughnut\",\n          data: _this2.chartData,\n          options: options,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 44\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(DoughnutChartDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DoughnutChartDemo;\n}(Component);\nexport var DoughnutChartDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DoughnutChartDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DoughnutChartDemoDoc);\n\n  function DoughnutChartDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, DoughnutChartDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class DoughnutChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.chartData = {\\n            labels: ['A', 'B', 'C'],\\n            datasets: [\\n                {\\n                    data: [300, 50, 100],\\n                    backgroundColor: [\\n                        \\\"#FF6384\\\",\\n                        \\\"#36A2EB\\\",\\n                        \\\"#FFCE56\\\"\\n                    ],\\n                    hoverBackgroundColor: [\\n                        \\\"#FF6384\\\",\\n                        \\\"#36A2EB\\\",\\n                        \\\"#FFCE56\\\"\\n                    ]\\n                }]\\n        };\\n\\n        this.lightOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"card\\\">\\n                <Chart type=\\\"doughnut\\\" data={this.chartData} options={this.lightOptions} />\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst DoughnutChartDemo = () => {\\n    const chartData = {\\n        labels: ['A', 'B', 'C'],\\n        datasets: [\\n            {\\n                data: [300, 50, 100],\\n                backgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#36A2EB\\\",\\n                    \\\"#FFCE56\\\"\\n                ],\\n                hoverBackgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#36A2EB\\\",\\n                    \\\"#FFCE56\\\"\\n                ]\\n            }]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"doughnut\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst DoughnutChartDemo = () => {\\n    const chartData = {\\n        labels: ['A', 'B', 'C'],\\n        datasets: [\\n            {\\n                data: [300, 50, 100],\\n                backgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#36A2EB\\\",\\n                    \\\"#FFCE56\\\"\\n                ],\\n                hoverBackgroundColor: [\\n                    \\\"#FF6384\\\",\\n                    \\\"#36A2EB\\\",\\n                    \\\"#FFCE56\\\"\\n                ]\\n            }]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"doughnut\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(DoughnutChartDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DoughnutChartDemo',\n        sources: this.sources,\n        dependencies: {\n          'chart.js': '2.7.3'\n        }\n      })));\n    }\n  }]);\n\n  return DoughnutChartDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/chart/DoughnutChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","DoughnutChartDemo","props","chartData","labels","datasets","data","backgroundColor","hoverBackgroundColor","lightOptions","legend","fontColor","darkOptions","context","options","darkTheme","DoughnutChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class DoughnutChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['A', 'B', 'C'],\r\n            datasets: [\r\n                {\r\n                    data: [300, 50, 100],\r\n                    backgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ]\r\n                }]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        this.darkOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>DoughnutChart</h1>\r\n                        <p>A doughnut chart is a variant of the pie chart, with a blank center allowing for additional information about the data as a whole to be included.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <AppContentContext.Consumer>\r\n                            {\r\n                                context => {\r\n                                    let options = context.darkTheme ? this.darkOptions : this.lightOptions;\r\n\r\n                                    return <Chart type=\"doughnut\" data={this.chartData} options={options} />\r\n                                }\r\n                            }\r\n                        </AppContentContext.Consumer>\r\n                    </div>\r\n                </div>\r\n\r\n                <DoughnutChartDemoDoc></DoughnutChartDemoDoc>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class DoughnutChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class DoughnutChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['A', 'B', 'C'],\r\n            datasets: [\r\n                {\r\n                    data: [300, 50, 100],\r\n                    backgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ]\r\n                }]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <Chart type=\"doughnut\" data={this.chartData} options={this.lightOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst DoughnutChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['A', 'B', 'C'],\r\n        datasets: [\r\n            {\r\n                data: [300, 50, 100],\r\n                backgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\"\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\"\r\n                ]\r\n            }]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"doughnut\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst DoughnutChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['A', 'B', 'C'],\r\n        datasets: [\r\n            {\r\n                data: [300, 50, 100],\r\n                backgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\"\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\"\r\n                ]\r\n            }]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"doughnut\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DoughnutChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}