{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\treetable\\\\TreeTableSortDemo.js\";\nimport React, { Component } from 'react';\nimport { TreeTable } from '../../components/treetable/TreeTable';\nimport { Column } from '../../components/column/Column';\nimport { NodeService } from '../service/NodeService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var TreeTableSortDemo = /*#__PURE__*/function (_Component) {\n  _inherits(TreeTableSortDemo, _Component);\n\n  var _super = _createSuper(TreeTableSortDemo);\n\n  function TreeTableSortDemo(props) {\n    var _this;\n\n    _classCallCheck(this, TreeTableSortDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      nodes1: [],\n      nodes2: []\n    };\n    _this.nodeservice = new NodeService();\n    return _this;\n  }\n\n  _createClass(TreeTableSortDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.nodeservice.getTreeTableNodes().then(function (data) {\n        _this2.setState({\n          nodes1: data\n        });\n\n        var nodes2 = data;\n        nodes2.push({\n          data: {\n            name: 'Documents',\n            size: '100kb',\n            type: 'Link'\n          }\n        });\n\n        _this2.setState({\n          nodes2: nodes2\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"treeTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, \"TreeTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 39\n        }\n      }, \"Sort\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, \"TreeTable supports both single column and multiple column sorting.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, \"Single Column Sorting\"), /*#__PURE__*/React.createElement(TreeTable, {\n        value: this.state.nodes1,\n        defaultSortOrder: -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        expander: true,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, \"Multiple Column Sorting\"), /*#__PURE__*/React.createElement(TreeTable, {\n        value: this.state.nodes2,\n        sortMode: \"multiple\",\n        defaultSortOrder: -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        expander: true,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(TreeTableSortDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return TreeTableSortDemo;\n}(Component);\n\nvar TreeTableSortDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(TreeTableSortDemoDoc, _Component2);\n\n  var _super2 = _createSuper(TreeTableSortDemoDoc);\n\n  function TreeTableSortDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, TreeTableSortDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport class TreeTableSortDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes1: [],\\n            nodes2: []\\n        };\\n\\n        this.nodeservice = new NodeService();\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => {\\n            this.setState({ nodes1: data });\\n\\n            let nodes2 = data;\\n            nodes2.push({\\n                data: {\\n                    name: 'Documents',\\n                    size: '100kb',\\n                    type: 'Link'\\n                }\\n            });\\n\\n            this.setState({\\n                nodes2\\n            });\\n        });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Single Column Sorting</h5>\\n                    <TreeTable value={this.state.nodes1} defaultSortOrder={-1}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                    </TreeTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multiple Column Sorting</h5>\\n                    <TreeTable value={this.state.nodes2} sortMode=\\\"multiple\\\" defaultSortOrder={-1}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableSortDemo = () => {\\n    const [nodes1, setNodes1] = useState([]);\\n    const [nodes2, setNodes2] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => {\\n            setNodes1(data);\\n\\n            let _nodes2 = data;\\n            _nodes2.push({\\n                data: {\\n                    name: 'Documents',\\n                    size: '100kb',\\n                    type: 'Link'\\n                }\\n            });\\n\\n            setNodes2(_nodes2);\\n        });\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Column Sorting</h5>\\n                <TreeTable value={nodes1} defaultSortOrder={-1}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple Column Sorting</h5>\\n                <TreeTable value={nodes2} sortMode=\\\"multiple\\\" defaultSortOrder={-1}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableSortDemo = () => {\\n    const [nodes1, setNodes1] = useState([]);\\n    const [nodes2, setNodes2] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => {\\n            setNodes1(data);\\n\\n            let _nodes2 = data;\\n            _nodes2.push({\\n                data: {\\n                    name: 'Documents',\\n                    size: '100kb',\\n                    type: 'Link'\\n                }\\n            });\\n\\n            setNodes2(_nodes2);\\n        });\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Column Sorting</h5>\\n                <TreeTable value={nodes1} defaultSortOrder={-1}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                </TreeTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple Column Sorting</h5>\\n                <TreeTable value={nodes2} sortMode=\\\"multiple\\\" defaultSortOrder={-1}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander sortable></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" sortable></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" sortable></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(TreeTableSortDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'TreeTableSortDemo',\n        sources: this.sources,\n        service: 'NodeService',\n        data: 'treetablenodes'\n      })));\n    }\n  }]);\n\n  return TreeTableSortDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/treetable/TreeTableSortDemo.js"],"names":["React","Component","TreeTable","Column","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableSortDemo","props","state","nodes1","nodes2","nodeservice","getTreeTableNodes","then","data","setState","push","name","size","type","TreeTableSortDemoDoc","sources","tabName","content","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class TreeTableSortDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes1: [],\r\n            nodes2: []\r\n        };\r\n\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => {\r\n            this.setState({ nodes1: data });\r\n\r\n            let nodes2 = data;\r\n            nodes2.push({\r\n                data: {\r\n                    name: 'Documents',\r\n                    size: '100kb',\r\n                    type: 'Link'\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                nodes2\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Sort</span></h1>\r\n                        <p>TreeTable supports both single column and multiple column sorting.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Single Column Sorting</h5>\r\n                        <TreeTable value={this.state.nodes1} defaultSortOrder={-1}>\r\n                            <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                            <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                            <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Multiple Column Sorting</h5>\r\n                        <TreeTable value={this.state.nodes2} sortMode=\"multiple\" defaultSortOrder={-1}>\r\n                            <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                            <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                            <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableSortDemoDoc />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass TreeTableSortDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport class TreeTableSortDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes1: [],\r\n            nodes2: []\r\n        };\r\n\r\n        this.nodeservice = new NodeService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => {\r\n            this.setState({ nodes1: data });\r\n\r\n            let nodes2 = data;\r\n            nodes2.push({\r\n                data: {\r\n                    name: 'Documents',\r\n                    size: '100kb',\r\n                    type: 'Link'\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                nodes2\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Single Column Sorting</h5>\r\n                    <TreeTable value={this.state.nodes1} defaultSortOrder={-1}>\r\n                        <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                        <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                        <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                    </TreeTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multiple Column Sorting</h5>\r\n                    <TreeTable value={this.state.nodes2} sortMode=\"multiple\" defaultSortOrder={-1}>\r\n                        <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                        <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                        <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableSortDemo = () => {\r\n    const [nodes1, setNodes1] = useState([]);\r\n    const [nodes2, setNodes2] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => {\r\n            setNodes1(data);\r\n\r\n            let _nodes2 = data;\r\n            _nodes2.push({\r\n                data: {\r\n                    name: 'Documents',\r\n                    size: '100kb',\r\n                    type: 'Link'\r\n                }\r\n            });\r\n\r\n            setNodes2(_nodes2);\r\n        });\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Column Sorting</h5>\r\n                <TreeTable value={nodes1} defaultSortOrder={-1}>\r\n                    <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                    <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                    <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple Column Sorting</h5>\r\n                <TreeTable value={nodes2} sortMode=\"multiple\" defaultSortOrder={-1}>\r\n                    <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                    <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                    <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableSortDemo = () => {\r\n    const [nodes1, setNodes1] = useState([]);\r\n    const [nodes2, setNodes2] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => {\r\n            setNodes1(data);\r\n\r\n            let _nodes2 = data;\r\n            _nodes2.push({\r\n                data: {\r\n                    name: 'Documents',\r\n                    size: '100kb',\r\n                    type: 'Link'\r\n                }\r\n            });\r\n\r\n            setNodes2(_nodes2);\r\n        });\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Column Sorting</h5>\r\n                <TreeTable value={nodes1} defaultSortOrder={-1}>\r\n                    <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                    <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                    <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                </TreeTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple Column Sorting</h5>\r\n                <TreeTable value={nodes2} sortMode=\"multiple\" defaultSortOrder={-1}>\r\n                    <Column field=\"name\" header=\"Name\" expander sortable></Column>\r\n                    <Column field=\"size\" header=\"Size\" sortable></Column>\r\n                    <Column field=\"type\" header=\"Type\" sortable></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableSortDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}