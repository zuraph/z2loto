{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TreeTableRow}from'./TreeTableRow';export var TreeTableBody=/*#__PURE__*/function(_Component){_inherits(TreeTableBody,_Component);var _super=_createSuper(TreeTableBody);function TreeTableBody(){_classCallCheck(this,TreeTableBody);return _super.apply(this,arguments);}_createClass(TreeTableBody,[{key:\"createRow\",value:function createRow(node,index){return/*#__PURE__*/React.createElement(TreeTableRow,{key:node.key||JSON.stringify(node.data),level:0,rowIndex:index,node:node,columns:this.props.columns,expandedKeys:this.props.expandedKeys,onToggle:this.props.onToggle,onExpand:this.props.onExpand,onCollapse:this.props.onCollapse,selectionMode:this.props.selectionMode,selectionKeys:this.props.selectionKeys,onSelectionChange:this.props.onSelectionChange,metaKeySelection:this.props.metaKeySelection,onRowClick:this.props.onRowClick,onSelect:this.props.onSelect,onUnselect:this.props.onUnselect,propagateSelectionUp:this.props.propagateSelectionUp,propagateSelectionDown:this.props.propagateSelectionDown,rowClassName:this.props.rowClassName,contextMenuSelectionKey:this.props.contextMenuSelectionKey,onContextMenuSelectionChange:this.props.onContextMenuSelectionChange,onContextMenu:this.props.onContextMenu});}},{key:\"renderRows\",value:function renderRows(){var _this=this;if(this.props.paginator&&!this.props.lazy){var rpp=this.props.rows||0;var startIndex=this.props.first||0;var endIndex=startIndex+rpp;var rows=[];for(var i=startIndex;i<endIndex;i++){var rowData=this.props.value[i];if(rowData)rows.push(this.createRow(this.props.value[i]));else break;}return rows;}else{return this.props.value.map(function(node,index){return _this.createRow(node,index);});}}},{key:\"renderEmptyMessage\",value:function renderEmptyMessage(){if(this.props.loading){return null;}else{var colSpan=this.props.columns?this.props.columns.length:null;return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"p-treetable-emptymessage\",colSpan:colSpan},this.props.emptyMessage));}}},{key:\"render\",value:function render(){var content=this.props.value&&this.props.value.length?this.renderRows():this.renderEmptyMessage();return/*#__PURE__*/React.createElement(\"tbody\",{className:\"p-treetable-tbody\"},content);}}]);return TreeTableBody;}(Component);TreeTableBody.defaultProps={value:null,columns:null,expandedKeys:null,contextMenuSelectionKey:null,paginator:false,first:null,rows:null,selectionMode:null,selectionKeys:null,metaKeySelection:true,propagateSelectionUp:true,propagateSelectionDown:true,lazy:false,rowClassName:null,emptyMessage:\"No records found\",loading:false,onExpand:null,onCollapse:null,onToggle:null,onRowClick:null,onSelect:null,onUnselect:null,onSelectionChange:null,onContextMenuSelectionChange:null,onContextMenu:null};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/treetable/TreeTableBody.js"],"names":["React","Component","TreeTableRow","TreeTableBody","node","index","key","JSON","stringify","data","props","columns","expandedKeys","onToggle","onExpand","onCollapse","selectionMode","selectionKeys","onSelectionChange","metaKeySelection","onRowClick","onSelect","onUnselect","propagateSelectionUp","propagateSelectionDown","rowClassName","contextMenuSelectionKey","onContextMenuSelectionChange","onContextMenu","paginator","lazy","rpp","rows","startIndex","first","endIndex","i","rowData","value","push","createRow","map","loading","colSpan","length","emptyMessage","content","renderRows","renderEmptyMessage","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TreeTableRow } from './TreeTableRow';\r\n\r\nexport class TreeTableBody extends Component {\r\n\r\n    static defaultProps = {\r\n        value: null,\r\n        columns: null,\r\n        expandedKeys: null,\r\n        contextMenuSelectionKey: null,\r\n        paginator: false,\r\n        first: null,\r\n        rows: null,\r\n        selectionMode: null,\r\n        selectionKeys: null,\r\n        metaKeySelection: true,\r\n        propagateSelectionUp: true,\r\n        propagateSelectionDown: true,\r\n        lazy: false,\r\n        rowClassName: null,\r\n        emptyMessage: \"No records found\",\r\n        loading: false,\r\n        onExpand: null,\r\n        onCollapse: null,\r\n        onToggle: null,\r\n        onRowClick: null,\r\n        onSelect: null,\r\n        onUnselect: null,\r\n        onSelectionChange: null,\r\n        onContextMenuSelectionChange: null,\r\n        onContextMenu: null\r\n    }\r\n\r\n    static propTypes = {\r\n        value: PropTypes.array,\r\n        columns: PropTypes.array,\r\n        expandedKeys: PropTypes.object,\r\n        contextMenuSelectionKey: PropTypes.any,\r\n        paginator: PropTypes.bool,\r\n        first: PropTypes.number,\r\n        rows: PropTypes.number,\r\n        selectionMode: PropTypes.string,\r\n        selectionKeys: PropTypes.any,\r\n        metaKeySelection: PropTypes.bool,\r\n        propagateSelectionUp: PropTypes.bool,\r\n        propagateSelectionDown: PropTypes.bool,\r\n        lazy: PropTypes.bool,\r\n        rowClassName: PropTypes.func,\r\n        emptyMessage: PropTypes.string,\r\n        loading: PropTypes.bool,\r\n        onExpand: PropTypes.func,\r\n        onCollapse: PropTypes.func,\r\n        onToggle: PropTypes.func,\r\n        onRowClick: PropTypes.func,\r\n        onSelect: PropTypes.func,\r\n        onUnselect: PropTypes.func,\r\n        onSelectionChange: PropTypes.func,\r\n        onContextMenuSelectionChange: PropTypes.func,\r\n        onContextMenu: PropTypes.func\r\n    }\r\n\r\n    createRow(node, index) {\r\n        return (\r\n            <TreeTableRow key={node.key||JSON.stringify(node.data)} level={0} rowIndex={index}\r\n                            node={node} columns={this.props.columns} expandedKeys={this.props.expandedKeys}\r\n                            onToggle={this.props.onToggle} onExpand={this.props.onExpand} onCollapse={this.props.onCollapse}\r\n                            selectionMode={this.props.selectionMode} selectionKeys={this.props.selectionKeys} onSelectionChange={this.props.onSelectionChange}\r\n                            metaKeySelection={this.props.metaKeySelection} onRowClick={this.props.onRowClick} onSelect={this.props.onSelect} onUnselect={this.props.onUnselect}\r\n                            propagateSelectionUp={this.props.propagateSelectionUp} propagateSelectionDown={this.props.propagateSelectionDown}\r\n                            rowClassName={this.props.rowClassName}\r\n                            contextMenuSelectionKey={this.props.contextMenuSelectionKey} onContextMenuSelectionChange={this.props.onContextMenuSelectionChange} onContextMenu={this.props.onContextMenu} />\r\n        );\r\n    }\r\n\r\n    renderRows() {\r\n        if (this.props.paginator && !this.props.lazy) {\r\n            let rpp = this.props.rows||0;\r\n            let startIndex = this.props.first||0;\r\n            let endIndex = (startIndex + rpp);\r\n            let rows = [];\r\n\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let rowData = this.props.value[i];\r\n                if (rowData)\r\n                    rows.push(this.createRow(this.props.value[i]));\r\n                else\r\n                    break;\r\n            }\r\n\r\n            return rows;\r\n        }\r\n        else {\r\n            return this.props.value.map((node, index) => this.createRow(node, index));\r\n        }\r\n    }\r\n\r\n    renderEmptyMessage() {\r\n        if (this.props.loading) {\r\n            return null;\r\n        }\r\n        else {\r\n            const colSpan = this.props.columns ? this.props.columns.length : null;\r\n            return (\r\n                <tr>\r\n                    <td className=\"p-treetable-emptymessage\" colSpan={colSpan}>{this.props.emptyMessage}</td>\r\n                </tr>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const content = (this.props.value && this.props.value.length) ? this.renderRows() : this.renderEmptyMessage();\r\n\r\n        return (\r\n            <tbody className=\"p-treetable-tbody\">\r\n                {content}\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}