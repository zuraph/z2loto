{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\galleria\\\\GalleriaFullScreenDemo.js\";\nimport React, { Component } from 'react';\nimport { PhotoService } from '../service/PhotoService';\nimport { Galleria } from '../../components/galleria/Galleria';\nimport { Button } from '../../components/button/Button';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var GalleriaFullScreenDemo = /*#__PURE__*/function (_Component) {\n  _inherits(GalleriaFullScreenDemo, _Component);\n\n  var _super = _createSuper(GalleriaFullScreenDemo);\n\n  function GalleriaFullScreenDemo(props) {\n    var _this;\n\n    _classCallCheck(this, GalleriaFullScreenDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      images: null,\n      activeIndex: 0\n    };\n    _this.galleriaService = new PhotoService();\n    _this.itemTemplate = _this.itemTemplate.bind(_assertThisInitialized(_this));\n    _this.thumbnailTemplate = _this.thumbnailTemplate.bind(_assertThisInitialized(_this));\n    _this.onItemChange = _this.onItemChange.bind(_assertThisInitialized(_this));\n    _this.responsiveOptions = [{\n      breakpoint: '1024px',\n      numVisible: 5\n    }, {\n      breakpoint: '768px',\n      numVisible: 3\n    }, {\n      breakpoint: '560px',\n      numVisible: 1\n    }];\n    _this.responsiveOptions2 = [{\n      breakpoint: '1500px',\n      numVisible: 5\n    }, {\n      breakpoint: '1024px',\n      numVisible: 3\n    }, {\n      breakpoint: '768px',\n      numVisible: 2\n    }, {\n      breakpoint: '560px',\n      numVisible: 1\n    }];\n    return _this;\n  }\n\n  _createClass(GalleriaFullScreenDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.galleriaService.getImages().then(function (data) {\n        return _this2.setState({\n          images: data\n        });\n      });\n    }\n  }, {\n    key: \"onItemChange\",\n    value: function onItemChange(event) {\n      this.setState({\n        activeIndex: event.index\n      });\n    }\n  }, {\n    key: \"itemTemplate\",\n    value: function itemTemplate(item) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: item.itemImageSrc,\n        alt: item.alt,\n        style: {\n          width: '100%',\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"thumbnailTemplate\",\n    value: function thumbnailTemplate(item) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: item.thumbnailImageSrc,\n        alt: item.alt,\n        style: {\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"galleria\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, \"Galleria \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 38\n        }\n      }, \"FullScreen\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, \"In fullscreen mode content covers the whole page over a mask.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, \"With Thumbnails\"), /*#__PURE__*/React.createElement(Galleria, {\n        ref: function ref(el) {\n          return _this3.galleria1 = el;\n        },\n        value: this.state.images,\n        responsiveOptions: this.responsiveOptions2,\n        numVisible: 9,\n        style: {\n          maxWidth: '50%'\n        },\n        circular: true,\n        fullScreen: true,\n        showItemNavigators: true,\n        item: this.itemTemplate,\n        thumbnail: this.thumbnailTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"Show\",\n        icon: \"pi pi-external-link\",\n        onClick: function onClick() {\n          return _this3.galleria1.show();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, \"Without Thumbnails\"), /*#__PURE__*/React.createElement(Galleria, {\n        ref: function ref(el) {\n          return _this3.galleria2 = el;\n        },\n        value: this.state.images,\n        responsiveOptions: this.responsiveOptions,\n        numVisible: 7,\n        style: {\n          maxWidth: '850px'\n        },\n        circular: true,\n        fullScreen: true,\n        showItemNavigators: true,\n        showThumbnails: false,\n        item: this.itemTemplate,\n        thumbnail: this.thumbnailTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: \"Show\",\n        icon: \"pi pi-external-link\",\n        onClick: function onClick() {\n          return _this3.galleria2.show();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, \"Custom Content\"), /*#__PURE__*/React.createElement(Galleria, {\n        ref: function ref(el) {\n          return _this3.galleria3 = el;\n        },\n        value: this.state.images,\n        responsiveOptions: this.responsiveOptions,\n        numVisible: 7,\n        style: {\n          maxWidth: '850px'\n        },\n        activeIndex: this.state.activeIndex,\n        onItemChange: function onItemChange(e) {\n          return _this3.setState({\n            activeIndex: e.index\n          });\n        },\n        circular: true,\n        fullScreen: true,\n        showItemNavigators: true,\n        showThumbnails: false,\n        item: this.itemTemplate,\n        thumbnail: this.thumbnailTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-grid\",\n        style: {\n          maxWidth: '400px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, this.state.images && this.state.images.map(function (image, index) {\n        var imgEl = /*#__PURE__*/React.createElement(\"img\", {\n          src: image.thumbnailImageSrc,\n          alt: image.alt,\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            _this3.setState({\n              activeIndex: index\n            }, function () {\n              return _this3.galleria3.show();\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 49\n          }\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-col-3\",\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 41\n          }\n        }, imgEl);\n      })))), /*#__PURE__*/React.createElement(GalleriaFullScreenDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return GalleriaFullScreenDemo;\n}(Component);\nexport var GalleriaFullScreenDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(GalleriaFullScreenDemoDoc, _Component2);\n\n  var _super2 = _createSuper(GalleriaFullScreenDemoDoc);\n\n  function GalleriaFullScreenDemoDoc() {\n    _classCallCheck(this, GalleriaFullScreenDemoDoc);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(GalleriaFullScreenDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Source\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 1\n        }\n      }, \"\\nimport React, { Component } from 'react';\\nimport { PhotoService } from '../service/PhotoService';\\nimport { Galleria } from 'primereact/galleria';\\nimport { Button } from 'primereact/button';\\n\\nexport class GalleriaFullScreenDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            images: null,\\n            activeIndex: 0\\n        };\\n\\n        this.galleriaService = new PhotoService();\\n        this.itemTemplate = this.itemTemplate.bind(this);\\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\\n        this.onItemChange = this.onItemChange.bind(this);\\n\\n        this.responsiveOptions = [\\n            {\\n                breakpoint: '1024px',\\n                numVisible: 5\\n            },\\n            {\\n                breakpoint: '768px',\\n                numVisible: 3\\n            },\\n            {\\n                breakpoint: '560px',\\n                numVisible: 1\\n            }\\n        ];\\n\\n        this.responsiveOptions2 = [\\n            {\\n                breakpoint: '1500px',\\n                numVisible: 5\\n            },\\n            {\\n                breakpoint: '1024px',\\n                numVisible: 3\\n            },\\n            {\\n                breakpoint: '768px',\\n                numVisible: 2\\n            },\\n            {\\n                breakpoint: '560px',\\n                numVisible: 1\\n            }\\n        ];\\n    }\\n\\n    componentDidMount() {\\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\\n    }\\n\\n    onItemChange(event) {\\n        this.setState({ activeIndex: event.index });\\n    }\\n\\n    itemTemplate(item) {\\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />;\\n    }\\n\\n    thumbnailTemplate(item) {\\n        return <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />;\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>With Thumbnails</h5>\\n                    <Galleria ref={(el) => this.galleria1 = el} value={this.state.images} responsiveOptions={this.responsiveOptions2} numVisible={9} style={{ maxWidth: '50%' }}\\n                        circular fullScreen showItemNavigators item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\\n\\n                    <Button label=\\\"Show\\\" icon=\\\"pi pi-external-link\\\" onClick={() => this.galleria1.show()} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Without Thumbnails</h5>\\n                    <Galleria ref={(el) => this.galleria2 = el} value={this.state.images} responsiveOptions={this.responsiveOptions} numVisible={7} style={{ maxWidth: '850px' }}\\n                        circular fullScreen showItemNavigators showThumbnails={false} item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\\n\\n                    <Button label=\\\"Show\\\" icon=\\\"pi pi-external-link\\\" onClick={() => this.galleria2.show()} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Custom Content</h5>\\n                    <Galleria ref={(el) => this.galleria3 = el} value={this.state.images} responsiveOptions={this.responsiveOptions} numVisible={7} style={{ maxWidth: '850px' }}\\n                        activeIndex={this.state.activeIndex} onItemChange={(e) => this.setState({ activeIndex: e.index })}\\n                        circular fullScreen showItemNavigators showThumbnails={false} item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\\n\\n                    <div className=\\\"p-grid\\\" style={{ maxWidth: '400px' }}>\\n                        {\\n                            this.state.images && this.state.images.map((image, index) => {\\n                                let imgEl = <img src={image.thumbnailImageSrc} alt={image.alt} style={{ cursor: 'pointer' }} onClick={() => {\\n                                    this.setState({ activeIndex: index }, () => this.galleria3.show());\\n                                }} />\\n\\n                                return (\\n                                    <div className=\\\"p-col-3\\\" key={index}>\\n                                        {imgEl}\\n                                    </div>\\n                                )\\n                            })\\n                        }\\n                    </div>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\"))));\n    }\n  }]);\n\n  return GalleriaFullScreenDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/galleria/GalleriaFullScreenDemo.js"],"names":["React","Component","PhotoService","Galleria","Button","TabView","TabPanel","CodeHighlight","AppInlineHeader","GalleriaFullScreenDemo","props","state","images","activeIndex","galleriaService","itemTemplate","bind","thumbnailTemplate","onItemChange","responsiveOptions","breakpoint","numVisible","responsiveOptions2","getImages","then","data","setState","event","index","item","itemImageSrc","alt","width","display","thumbnailImageSrc","el","galleria1","maxWidth","show","galleria2","galleria3","e","map","image","imgEl","cursor","GalleriaFullScreenDemoDoc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { PhotoService } from '../service/PhotoService';\r\nimport { Galleria } from '../../components/galleria/Galleria';\r\nimport { Button } from '../../components/button/Button';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class GalleriaFullScreenDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            images: null,\r\n            activeIndex: 0\r\n        };\r\n\r\n        this.galleriaService = new PhotoService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\r\n        this.onItemChange = this.onItemChange.bind(this);\r\n\r\n        this.responsiveOptions = [\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 5\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 3\r\n            },\r\n            {\r\n                breakpoint: '560px',\r\n                numVisible: 1\r\n            }\r\n        ];\r\n\r\n        this.responsiveOptions2 = [\r\n            {\r\n                breakpoint: '1500px',\r\n                numVisible: 5\r\n            },\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 3\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 2\r\n            },\r\n            {\r\n                breakpoint: '560px',\r\n                numVisible: 1\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\r\n    }\r\n\r\n    onItemChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    itemTemplate(item) {\r\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />;\r\n    }\r\n\r\n    thumbnailTemplate(item) {\r\n        return <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"galleria\">\r\n                        <h1>Galleria <span>FullScreen</span></h1>\r\n                        <p>In fullscreen mode content covers the whole page over a mask.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>With Thumbnails</h5>\r\n                        <Galleria ref={(el) => this.galleria1 = el} value={this.state.images} responsiveOptions={this.responsiveOptions2} numVisible={9} style={{ maxWidth: '50%' }}\r\n                            circular fullScreen showItemNavigators item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\r\n\r\n                        <Button label=\"Show\" icon=\"pi pi-external-link\" onClick={() => this.galleria1.show()} />\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Without Thumbnails</h5>\r\n                        <Galleria ref={(el) => this.galleria2 = el} value={this.state.images} responsiveOptions={this.responsiveOptions} numVisible={7} style={{ maxWidth: '850px' }}\r\n                            circular fullScreen showItemNavigators showThumbnails={false} item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\r\n\r\n                        <Button label=\"Show\" icon=\"pi pi-external-link\" onClick={() => this.galleria2.show()} />\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Custom Content</h5>\r\n                        <Galleria ref={(el) => this.galleria3 = el} value={this.state.images} responsiveOptions={this.responsiveOptions} numVisible={7} style={{ maxWidth: '850px' }}\r\n                            activeIndex={this.state.activeIndex} onItemChange={(e) => this.setState({ activeIndex: e.index })}\r\n                            circular fullScreen showItemNavigators showThumbnails={false} item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\r\n\r\n                        <div className=\"p-grid\" style={{ maxWidth: '400px' }}>\r\n                            {\r\n                                this.state.images && this.state.images.map((image, index) => {\r\n                                    let imgEl = <img src={image.thumbnailImageSrc} alt={image.alt} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        this.setState({ activeIndex: index }, () => this.galleria3.show());\r\n                                    }} />\r\n\r\n                                    return (\r\n                                        <div className=\"p-col-3\" key={index}>\r\n                                            {imgEl}\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <GalleriaFullScreenDemoDoc></GalleriaFullScreenDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class GalleriaFullScreenDemoDoc extends Component {\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Source\">\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, { Component } from 'react';\r\nimport { PhotoService } from '../service/PhotoService';\r\nimport { Galleria } from 'primereact/galleria';\r\nimport { Button } from 'primereact/button';\r\n\r\nexport class GalleriaFullScreenDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            images: null,\r\n            activeIndex: 0\r\n        };\r\n\r\n        this.galleriaService = new PhotoService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\r\n        this.onItemChange = this.onItemChange.bind(this);\r\n\r\n        this.responsiveOptions = [\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 5\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 3\r\n            },\r\n            {\r\n                breakpoint: '560px',\r\n                numVisible: 1\r\n            }\r\n        ];\r\n\r\n        this.responsiveOptions2 = [\r\n            {\r\n                breakpoint: '1500px',\r\n                numVisible: 5\r\n            },\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 3\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 2\r\n            },\r\n            {\r\n                breakpoint: '560px',\r\n                numVisible: 1\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\r\n    }\r\n\r\n    onItemChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    itemTemplate(item) {\r\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />;\r\n    }\r\n\r\n    thumbnailTemplate(item) {\r\n        return <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>With Thumbnails</h5>\r\n                    <Galleria ref={(el) => this.galleria1 = el} value={this.state.images} responsiveOptions={this.responsiveOptions2} numVisible={9} style={{ maxWidth: '50%' }}\r\n                        circular fullScreen showItemNavigators item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\r\n\r\n                    <Button label=\"Show\" icon=\"pi pi-external-link\" onClick={() => this.galleria1.show()} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Without Thumbnails</h5>\r\n                    <Galleria ref={(el) => this.galleria2 = el} value={this.state.images} responsiveOptions={this.responsiveOptions} numVisible={7} style={{ maxWidth: '850px' }}\r\n                        circular fullScreen showItemNavigators showThumbnails={false} item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\r\n\r\n                    <Button label=\"Show\" icon=\"pi pi-external-link\" onClick={() => this.galleria2.show()} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Custom Content</h5>\r\n                    <Galleria ref={(el) => this.galleria3 = el} value={this.state.images} responsiveOptions={this.responsiveOptions} numVisible={7} style={{ maxWidth: '850px' }}\r\n                        activeIndex={this.state.activeIndex} onItemChange={(e) => this.setState({ activeIndex: e.index })}\r\n                        circular fullScreen showItemNavigators showThumbnails={false} item={this.itemTemplate} thumbnail={this.thumbnailTemplate} />\r\n\r\n                    <div className=\"p-grid\" style={{ maxWidth: '400px' }}>\r\n                        {\r\n                            this.state.images && this.state.images.map((image, index) => {\r\n                                let imgEl = <img src={image.thumbnailImageSrc} alt={image.alt} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                    this.setState({ activeIndex: index }, () => this.galleria3.show());\r\n                                }} />\r\n\r\n                                return (\r\n                                    <div className=\"p-col-3\" key={index}>\r\n                                        {imgEl}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n`}\r\n                        </CodeHighlight>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}