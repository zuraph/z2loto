{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var CaptchaDoc=/*#__PURE__*/function(_Component){_inherits(CaptchaDoc,_Component);var _super=_createSuper(CaptchaDoc);function CaptchaDoc(props){var _this;_classCallCheck(this,CaptchaDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Captcha } from 'primereact/captcha';\\nimport { Toast } from 'primereact/toast';\\n\\nexport class CaptchaDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.showResponse = this.showResponse.bind(this);\\n    }\\n\\n    showResponse() {\\n        this.toast.show({ severity: 'info', summary: 'Success', detail: 'User Responded' });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => this.toast = el}></Toast>\\n\\n                <div className=\\\"card\\\">\\n                    <Captcha siteKey=\\\"YOUR_SITE_KEY\\\" onResponse={this.showResponse} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useRef } from 'react';\\nimport { Captcha } from 'primereact/captcha';\\nimport { Toast } from 'primereact/toast';\\n\\nconst CaptchaDemo = () => {\\n    const toast = useRef(null);\\n\\n    const showResponse = () => {\\n        toast.current.show({ severity: 'info', summary: 'Success', detail: 'User Responded' });\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <Captcha siteKey=\\\"YOUR_SITE_KEY\\\" onResponse={showResponse} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useRef } from 'react';\\nimport { Captcha } from 'primereact/captcha';\\nimport { Toast } from 'primereact/toast';\\n\\nconst CaptchaDemo = () => {\\n    const toast = useRef(null);\\n\\n    const showResponse = () => {\\n        toast.current.show({ severity: 'info', summary: 'Success', detail: 'User Responded' });\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <Captcha siteKey=\\\"YOUR_SITE_KEY\\\" onResponse={showResponse} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this;}_createClass(CaptchaDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { Captcha } from 'primereact/captcha';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"Captcha is used with a siteKey and a callback to verify the response.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Captcha siteKey=\\\"YOUR_SITE_KEY\\\" onResponse={showResponse}></Captcha>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Verification\"),/*#__PURE__*/React.createElement(\"p\",null,\"In order to ensure if a response token is valid, verification against recaptcha api needs to be done at backend. \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://developers.google.com/recaptcha/docs/verify\"},\"Read more\"),\" at official documentation.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst showResponse = (response) => {\\n//call to a backend to verify against recaptcha with private key\\n}\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"In addition, include the captcha widget resource to your page.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<script src=\\\"https://www.google.com/recaptcha/api.js?render=explicit\\\" async defer></script>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"siteKey\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Public sitekey.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"theme\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"light\"),/*#__PURE__*/React.createElement(\"td\",null,\"The color scheme of the widget.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"type\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"image\"),/*#__PURE__*/React.createElement(\"td\",null,\"The type of CAPTCHA to serve.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"size\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"normal\"),/*#__PURE__*/React.createElement(\"td\",null,\"The size of the widget.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tabIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"0\"),/*#__PURE__*/React.createElement(\"td\",null,\"The tabIndex of the widget and challenge.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"language\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"en\"),/*#__PURE__*/React.createElement(\"td\",null,\"Language of the widget.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onResponse\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.response: The user response token.\"),/*#__PURE__*/React.createElement(\"td\",null,\"The callback function to be executed when the user submits a successful CAPTCHA response.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onExpire\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"The callback function to be executed when the recaptcha response expires and the user needs to solve a new CAPTCHA.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Methods\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"reset\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Resets the reCAPTCHA widget.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"getResponse\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Gets the response for the reCAPTCHA widget.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"Google Recaptcha V2\")),useLiveEditorTabs({name:'CaptchaDemo',sources:this.sources})));}}]);return CaptchaDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/captcha/CaptchaDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","CaptchaDoc","props","sources","tabName","content","name"],"mappings":"wpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,kCAAlC,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,iBAAT,KAAiC,0BAAjC,CAEA,UAAaC,CAAAA,UAAb,wGAEI,oBAAYC,KAAZ,CAAmB,4CACf,uBAAMA,KAAN,EAEA,MAAKC,OAAL,CAAe,CACX,QAAS,CACLC,OAAO,CAAE,cADJ,CAELC,OAAO,yvBAFF,CADE,CAiCX,QAAS,CACLD,OAAO,CAAE,cADJ,CAELC,OAAO,klBAFF,CAjCE,CA2DX,KAAM,CACFD,OAAO,CAAE,WADP,CAEFC,OAAO,klBAFL,CA3DK,CAAf,CAHe,aAyFlB,CA3FL,4DA6FI,gCAAwB,CACpB,MAAO,MAAP,CACH,CA/FL,sBAiGI,iBAAS,CACL,mBACI,2BAAK,SAAS,CAAC,+BAAf,eACI,oBAAC,OAAD,mBACI,oBAAC,QAAD,EAAU,MAAM,CAAC,eAAjB,eACI,uCADJ,cAEpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,sDAFoB,cAQI,gDARJ,cASI,qGATJ,cAUpB,oBAAC,aAAD,oFAVoB,cAgBI,6CAhBJ,cAiBI,8JAAoH,yBAAG,IAAI,CAAC,qDAAR,cAApH,+BAjBJ,cAmBpB,oBAAC,aAAD,EAAe,IAAI,CAAC,IAApB,kHAnBoB,cA2BI,8FA3BJ,cA4BpB,oBAAC,aAAD,0GA5BoB,cAkCI,2CAlCJ,cAmCI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,qCAFJ,cAGI,wCAHJ,cAII,4CAJJ,CADJ,CADJ,cASI,8CACI,2CACI,mCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,kEAJJ,CADJ,cAOI,2CACI,wCADJ,cAEI,uCAFJ,cAGI,qCAHJ,cAII,gDAJJ,CAPJ,cAaI,2CACI,sCADJ,cAEI,uCAFJ,cAGI,sCAHJ,cAII,gEAJJ,CAbJ,cAmBI,2CACI,qCADJ,cAEI,uCAFJ,cAGI,sCAHJ,cAII,8DAJJ,CAnBJ,cAyBI,2CACI,qCADJ,cAEI,uCAFJ,cAGI,uCAHJ,cAII,wDAJJ,CAzBJ,cA+BI,2CACI,yCADJ,cAEI,uCAFJ,cAGI,kCAHJ,cAII,0EAJJ,CA/BJ,cAqCI,2CACI,yCADJ,cAEI,uCAFJ,cAGI,mCAHJ,cAII,wDAJJ,CArCJ,CATJ,CADJ,CAnCJ,cA4FI,uCA5FJ,cA6FI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,2CAFJ,cAGI,4CAHJ,CADJ,CADJ,cAQI,8CACI,2CACI,2CADJ,cAEI,yEAFJ,cAGI,0HAHJ,CADJ,cAMI,2CACI,yCADJ,cAEI,kCAFJ,cAGI,oJAHJ,CANJ,CARJ,CADJ,CA7FJ,cAqHI,wCArHJ,cAsHI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BAAO,SAAS,CAAC,WAAjB,eACI,8CACI,2CACI,qCADJ,cAEI,2CAFJ,cAGI,4CAHJ,CADJ,CADJ,cAQI,8CACI,2CACI,sCADJ,cAEI,kCAFJ,cAGI,6DAHJ,CADJ,cAMI,2CACI,4CADJ,cAEI,kCAFJ,cAGI,4EAHJ,CANJ,CARJ,CADJ,CAtHJ,cA8II,6CA9IJ,cA+II,mDA/IJ,CADJ,CAoJQL,iBAAiB,CAAC,CAAEM,IAAI,CAAE,aAAR,CAAuBH,OAAO,CAAE,KAAKA,OAArC,CAAD,CApJzB,CADJ,CADJ,CA2JH,CA7PL,wBAAgCP,SAAhC","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class CaptchaDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Captcha } from 'primereact/captcha';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nexport class CaptchaDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.showResponse = this.showResponse.bind(this);\r\n    }\r\n\r\n    showResponse() {\r\n        this.toast.show({ severity: 'info', summary: 'Success', detail: 'User Responded' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => this.toast = el}></Toast>\r\n\r\n                <div className=\"card\">\r\n                    <Captcha siteKey=\"YOUR_SITE_KEY\" onResponse={this.showResponse} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { Captcha } from 'primereact/captcha';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst CaptchaDemo = () => {\r\n    const toast = useRef(null);\r\n\r\n    const showResponse = () => {\r\n        toast.current.show({ severity: 'info', summary: 'Success', detail: 'User Responded' });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <Captcha siteKey=\"YOUR_SITE_KEY\" onResponse={showResponse} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { Captcha } from 'primereact/captcha';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst CaptchaDemo = () => {\r\n    const toast = useRef(null);\r\n\r\n    const showResponse = () => {\r\n        toast.current.show({ severity: 'info', summary: 'Success', detail: 'User Responded' });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <Captcha siteKey=\"YOUR_SITE_KEY\" onResponse={showResponse} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Captcha } from 'primereact/captcha';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Captcha is used with a siteKey and a callback to verify the response.</p>\r\n<CodeHighlight>\r\n{`\r\n<Captcha siteKey=\"YOUR_SITE_KEY\" onResponse={showResponse}></Captcha>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Verification</h5>\r\n                        <p>In order to ensure if a response token is valid, verification against recaptcha api needs to be done at backend. <a href=\"https://developers.google.com/recaptcha/docs/verify\">Read more</a> at\r\n                        official documentation.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst showResponse = (response) => {\r\n//call to a backend to verify against recaptcha with private key\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <p>In addition, include the captcha widget resource to your page.</p>\r\n<CodeHighlight>\r\n{`\r\n<script src=\"https://www.google.com/recaptcha/api.js?render=explicit\" async defer></script>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>siteKey</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Public sitekey.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>theme</td>\r\n                                        <td>string</td>\r\n                                        <td>light</td>\r\n                                        <td>The color scheme of the widget.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>type</td>\r\n                                        <td>string</td>\r\n                                        <td>image</td>\r\n                                        <td>The type of CAPTCHA to serve.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>size</td>\r\n                                        <td>string</td>\r\n                                        <td>normal</td>\r\n                                        <td>The size of the widget.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tabIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>0</td>\r\n                                        <td>The tabIndex of the widget and challenge.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>language</td>\r\n                                        <td>string</td>\r\n                                        <td>en</td>\r\n                                        <td>Language of the widget.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onResponse</td>\r\n                                        <td>event.response: The user response token.</td>\r\n                                        <td>The callback function to be executed when the user submits a successful CAPTCHA response.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onExpire</td>\r\n                                        <td>-</td>\r\n                                        <td>The callback function to be executed when the recaptcha response expires and the user needs to solve a new CAPTCHA.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Methods</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>reset</td>\r\n                                        <td>-</td>\r\n                                        <td>Resets the reCAPTCHA widget.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>getResponse</td>\r\n                                        <td>-</td>\r\n                                        <td>Gets the response for the reCAPTCHA widget.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>Google Recaptcha V2</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'CaptchaDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}