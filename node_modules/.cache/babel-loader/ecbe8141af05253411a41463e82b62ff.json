{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\inputtext\\\\InputText.js\",\n    _this2 = this;\n\nimport React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport KeyFilter from '../keyfilter/KeyFilter';\nimport { tip } from '../tooltip/Tooltip';\nimport DomHandler from '../utils/DomHandler';\nimport ObjectUtils from '../utils/ObjectUtils';\n\nvar InputTextComponent = /*#__PURE__*/function (_Component) {\n  _inherits(InputTextComponent, _Component);\n\n  var _super = _createSuper(InputTextComponent);\n\n  function InputTextComponent(props) {\n    var _this;\n\n    _classCallCheck(this, InputTextComponent);\n\n    _this = _super.call(this, props);\n    _this.onInput = _this.onInput.bind(_assertThisInitialized(_this));\n    _this.onKeyPress = _this.onKeyPress.bind(_assertThisInitialized(_this));\n    _this.elementRef = createRef(_this.props.forwardRef);\n    return _this;\n  }\n\n  _createClass(InputTextComponent, [{\n    key: \"isFilled\",\n    value: function isFilled() {\n      return this.props.value != null && this.props.value.toString().length > 0 || this.props.defaultValue != null && this.props.defaultValue.toString().length > 0;\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(event) {\n      if (this.props.onKeyPress) {\n        this.props.onKeyPress(event);\n      }\n\n      if (this.props.keyfilter) {\n        KeyFilter.onKeyPress(event, this.props.keyfilter, this.props.validateOnly);\n      }\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(event) {\n      var validatePattern = true;\n\n      if (this.props.keyfilter && this.props.validateOnly) {\n        validatePattern = KeyFilter.validate(event, this.props.keyfilter);\n      }\n\n      if (this.props.onInput) {\n        this.props.onInput(event, validatePattern);\n      }\n\n      if (!this.props.onChange) {\n        if (event.target.value.length > 0) DomHandler.addClass(event.target, 'p-filled');else DomHandler.removeClass(event.target, 'p-filled');\n      }\n    }\n  }, {\n    key: \"updateForwardRef\",\n    value: function updateForwardRef() {\n      var ref = this.props.forwardRef;\n\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(this.elementRef.current);\n        } else {\n          ref.current = this.elementRef.current;\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateForwardRef();\n\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.elementRef.current,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = classNames('p-inputtext p-component', {\n        'p-disabled': this.props.disabled,\n        'p-filled': this.isFilled()\n      }, this.props.className);\n      var inputProps = ObjectUtils.findDiffKeys(this.props, InputTextComponent.defaultProps);\n      return /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        ref: this.elementRef\n      }, inputProps, {\n        className: className,\n        onInput: this.onInput,\n        onKeyPress: this.onKeyPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }\n      }));\n    }\n  }]);\n\n  return InputTextComponent;\n}(Component);\n\nInputTextComponent.defaultProps = {\n  onInput: null,\n  onKeyPress: null,\n  keyfilter: null,\n  validateOnly: false,\n  tooltip: null,\n  tooltipOptions: null,\n  forwardRef: null\n};\nInputTextComponent.propTypes = {\n  onInput: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  keyfilter: PropTypes.any,\n  validateOnly: PropTypes.bool,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  forwardRef: PropTypes.any\n};\nexport var InputText = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(InputTextComponent, Object.assign({\n    forwardRef: ref\n  }, props, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 59\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/inputtext/InputText.js"],"names":["React","Component","createRef","PropTypes","classNames","KeyFilter","tip","DomHandler","ObjectUtils","InputTextComponent","props","onInput","bind","onKeyPress","elementRef","forwardRef","value","toString","length","defaultValue","event","keyfilter","validateOnly","validatePattern","validate","onChange","target","addClass","removeClass","ref","current","updateForwardRef","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","options","className","disabled","isFilled","inputProps","findDiffKeys","defaultProps","propTypes","func","any","bool","string","object","InputText"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport KeyFilter from '../keyfilter/KeyFilter';\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\n\r\nclass InputTextComponent extends Component {\r\n\r\n    static defaultProps = {\r\n        onInput: null,\r\n        onKeyPress: null,\r\n        keyfilter: null,\r\n        validateOnly: false,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        forwardRef: null\r\n    };\r\n\r\n    static propTypes = {\r\n        onInput: PropTypes.func,\r\n        onKeyPress: PropTypes.func,\r\n        keyfilter: PropTypes.any,\r\n        validateOnly: PropTypes.bool,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        forwardRef: PropTypes.any\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onInput = this.onInput.bind(this);\r\n        this.onKeyPress = this.onKeyPress.bind(this);\r\n\r\n        this.elementRef = createRef(this.props.forwardRef);\r\n    }\r\n\r\n    isFilled() {\r\n        return (this.props.value != null && this.props.value.toString().length > 0) || (this.props.defaultValue != null && this.props.defaultValue.toString().length > 0)\r\n    }\r\n\r\n    onKeyPress(event) {\r\n        if (this.props.onKeyPress) {\r\n            this.props.onKeyPress(event);\r\n        }\r\n\r\n        if (this.props.keyfilter) {\r\n            KeyFilter.onKeyPress(event, this.props.keyfilter, this.props.validateOnly)\r\n        }\r\n    }\r\n\r\n    onInput(event) {\r\n        let validatePattern = true;\r\n        if (this.props.keyfilter && this.props.validateOnly) {\r\n            validatePattern = KeyFilter.validate(event, this.props.keyfilter);\r\n        }\r\n\r\n        if (this.props.onInput) {\r\n            this.props.onInput(event, validatePattern);\r\n        }\r\n\r\n        if (!this.props.onChange) {\r\n            if (event.target.value.length > 0)\r\n                DomHandler.addClass(event.target, 'p-filled');\r\n            else\r\n                DomHandler.removeClass(event.target, 'p-filled');\r\n        }\r\n    }\r\n\r\n    updateForwardRef() {\r\n        let ref = this.props.forwardRef;\r\n\r\n        if (ref) {\r\n            if (typeof ref === 'function') {\r\n                ref(this.elementRef.current);\r\n            }\r\n            else {\r\n                ref.current = this.elementRef.current;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateForwardRef();\r\n\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.elementRef.current,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-inputtext p-component', {\r\n            'p-disabled': this.props.disabled,\r\n            'p-filled': this.isFilled()\r\n        }, this.props.className);\r\n\r\n        let inputProps = ObjectUtils.findDiffKeys(this.props, InputTextComponent.defaultProps);\r\n\r\n        return <input ref={this.elementRef} {...inputProps} className={className} onInput={this.onInput} onKeyPress={this.onKeyPress} />;\r\n    }\r\n}\r\n\r\nexport const InputText = React.forwardRef((props, ref) => <InputTextComponent forwardRef={ref} {...props} />);\r\n"]},"metadata":{},"sourceType":"module"}