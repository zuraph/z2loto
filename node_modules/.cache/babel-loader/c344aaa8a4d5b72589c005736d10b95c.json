{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classNames from'classnames';import{PhotoService}from'../service/PhotoService';import{Button}from'../../components/button/Button';import{Galleria}from'../../components/galleria/Galleria';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{AppInlineHeader}from'../../AppInlineHeader';import'./GalleriaDemo.scss';export var GalleriaAdvancedDemo=/*#__PURE__*/function(_Component){_inherits(GalleriaAdvancedDemo,_Component);var _super=_createSuper(GalleriaAdvancedDemo);function GalleriaAdvancedDemo(props){var _this;_classCallCheck(this,GalleriaAdvancedDemo);_this=_super.call(this,props);_this.state={images:null,activeIndex:0,showThumbnails:false,isAutoPlayActive:true,isFullScreen:false};_this.responsiveOptions=[{breakpoint:'1024px',numVisible:5},{breakpoint:'960px',numVisible:4},{breakpoint:'768px',numVisible:3},{breakpoint:'560px',numVisible:1}];_this.galleriaService=new PhotoService();_this.itemTemplate=_this.itemTemplate.bind(_assertThisInitialized(_this));_this.thumbnailTemplate=_this.thumbnailTemplate.bind(_assertThisInitialized(_this));_this.onThumbnailChange=_this.onThumbnailChange.bind(_assertThisInitialized(_this));_this.onItemChange=_this.onItemChange.bind(_assertThisInitialized(_this));_this.onFullScreenChange=_this.onFullScreenChange.bind(_assertThisInitialized(_this));return _this;}_createClass(GalleriaAdvancedDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.galleriaService.getImages().then(function(data){return _this2.setState({images:data});});this.bindDocumentListeners();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(prevState.isAutoPlayActive!==this.galleria.isAutoPlayActive()){this.setState({isAutoPlayActive:this.galleria.isAutoPlayActive()});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unbindDocumentListeners();}},{key:\"onThumbnailChange\",value:function onThumbnailChange(event){this.setState({activeIndex:event.index});}},{key:\"onItemChange\",value:function onItemChange(event){this.setState({activeIndex:event.index});}},{key:\"toggleFullScreen\",value:function toggleFullScreen(){if(this.state.isFullScreen){this.closeFullScreen();}else{this.openFullScreen();}}},{key:\"onFullScreenChange\",value:function onFullScreenChange(){this.setState(function(prevState){return{isFullScreen:!prevState.isFullScreen};});}},{key:\"openFullScreen\",value:function openFullScreen(){var elem=document.querySelector('.custom-galleria');if(elem.requestFullscreen){elem.requestFullscreen();}else if(elem.mozRequestFullScreen){/* Firefox */elem.mozRequestFullScreen();}else if(elem.webkitRequestFullscreen){/* Chrome, Safari & Opera */elem.webkitRequestFullscreen();}else if(elem.msRequestFullscreen){/* IE/Edge */elem.msRequestFullscreen();}}},{key:\"closeFullScreen\",value:function closeFullScreen(){if(document.exitFullscreen){document.exitFullscreen();}else if(document.mozCancelFullScreen){document.mozCancelFullScreen();}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();}else if(document.msExitFullscreen){document.msExitFullscreen();}}},{key:\"bindDocumentListeners\",value:function bindDocumentListeners(){document.addEventListener(\"fullscreenchange\",this.onFullScreenChange);document.addEventListener(\"mozfullscreenchange\",this.onFullScreenChange);document.addEventListener(\"webkitfullscreenchange\",this.onFullScreenChange);document.addEventListener(\"msfullscreenchange\",this.onFullScreenChange);}},{key:\"unbindDocumentListeners\",value:function unbindDocumentListeners(){document.removeEventListener(\"fullscreenchange\",this.onFullScreenChange);document.removeEventListener(\"mozfullscreenchange\",this.onFullScreenChange);document.removeEventListener(\"webkitfullscreenchange\",this.onFullScreenChange);document.removeEventListener(\"msfullscreenchange\",this.onFullScreenChange);}},{key:\"thumbnailTemplate\",value:function thumbnailTemplate(item){return/*#__PURE__*/React.createElement(\"div\",{className:\"p-grid p-nogutter p-justify-center\"},/*#__PURE__*/React.createElement(\"img\",{src:item.thumbnailImageSrc,alt:item.alt,style:{display:'block'}}));}},{key:\"itemTemplate\",value:function itemTemplate(item){if(this.state.isFullScreen){return/*#__PURE__*/React.createElement(\"img\",{src:item.itemImageSrc,alt:item.alt});}return/*#__PURE__*/React.createElement(\"img\",{src:item.itemImageSrc,alt:item.alt,style:{width:'100%',display:'block'}});}},{key:\"renderFooter\",value:function renderFooter(){var _this3=this;var autoPlayClassName=classNames('pi',{'pi-play':!this.state.isAutoPlayActive,'pi-pause':this.state.isAutoPlayActive});var fullScreenClassName=classNames('pi',{'pi-window-maximize':!this.state.isFullScreen,'pi-window-minimize':this.state.isFullScreen});return/*#__PURE__*/React.createElement(\"div\",{className:\"custom-galleria-footer\"},/*#__PURE__*/React.createElement(Button,{icon:\"pi pi-list\",onClick:function onClick(){return _this3.setState({showThumbnails:!_this3.state.showThumbnails});}}),/*#__PURE__*/React.createElement(Button,{icon:autoPlayClassName,onClick:function onClick(){if(!_this3.state.isAutoPlayActive){_this3.galleria.startSlideShow();_this3.setState({isAutoPlayActive:true});}else{_this3.galleria.stopSlideShow();_this3.setState({isAutoPlayActive:false});}}}),this.state.images&&/*#__PURE__*/React.createElement(\"span\",{className:\"title-container\"},/*#__PURE__*/React.createElement(\"span\",null,this.state.activeIndex+1,\"/\",this.state.images.length),/*#__PURE__*/React.createElement(\"span\",{className:\"title\"},this.state.images[this.state.activeIndex].title),/*#__PURE__*/React.createElement(\"span\",null,this.state.images[this.state.activeIndex].alt)),/*#__PURE__*/React.createElement(Button,{icon:fullScreenClassName,onClick:function onClick(){return _this3.toggleFullScreen();},className:\"fullscreen-button\"}));}},{key:\"render\",value:function render(){var _this4=this;var footer=this.renderFooter();var galleriaClassName=classNames('custom-galleria',{'fullscreen':this.state.isFullScreen});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"galleria\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Galleria \",/*#__PURE__*/React.createElement(\"span\",null,\"Advanced\")),/*#__PURE__*/React.createElement(\"p\",null,\"Galleria can be extended further to implement complex requirements.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation galleria-demo\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(Galleria,{ref:function ref(el){return _this4.galleria=el;},value:this.state.images,activeIndex:this.state.activeIndex,onItemChange:this.onItemChange,showThumbnails:this.state.showThumbnails,showItemNavigators:true,showItemNavigatorsOnHover:true,numVisible:5,circular:true,autoPlay:true,transitionInterval:3000,responsiveOptions:this.responsiveOptions,item:this.itemTemplate,thumbnail:this.thumbnailTemplate,footer:footer,style:{maxWidth:'640px'},className:galleriaClassName}))),/*#__PURE__*/React.createElement(GalleriaAdvancedDemoDoc,null));}}]);return GalleriaAdvancedDemo;}(Component);export var GalleriaAdvancedDemoDoc=/*#__PURE__*/function(_Component2){_inherits(GalleriaAdvancedDemoDoc,_Component2);var _super2=_createSuper(GalleriaAdvancedDemoDoc);function GalleriaAdvancedDemoDoc(){_classCallCheck(this,GalleriaAdvancedDemoDoc);return _super2.apply(this,arguments);}_createClass(GalleriaAdvancedDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Source\"},/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport classNames from 'classnames';\\nimport { PhotoService } from '../service/PhotoService';\\nimport { Button } from 'primereact/button';\\nimport { Galleria } from 'primereact/galleria';\\nimport './GalleriaDemo.scss';\\n\\nexport class GalleriaAdvancedDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            images: null,\\n            activeIndex: 0,\\n            showThumbnails: false,\\n            isAutoPlayActive: true,\\n            isFullScreen: false\\n        };\\n\\n        this.responsiveOptions = [\\n            {\\n                breakpoint: '1024px',\\n                numVisible: 5\\n            },\\n            {\\n                breakpoint: '960px',\\n                numVisible: 4\\n            },\\n            {\\n                breakpoint: '768px',\\n                numVisible: 3\\n            },\\n            {\\n                breakpoint: '560px',\\n                numVisible: 1\\n            }\\n        ];\\n\\n        this.galleriaService = new PhotoService();\\n        this.itemTemplate = this.itemTemplate.bind(this);\\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\\n        this.onThumbnailChange = this.onThumbnailChange.bind(this);\\n        this.onItemChange = this.onItemChange.bind(this);\\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\\n        this.bindDocumentListeners();\\n    }\\n\\n    componentDidUpdate(prevProps, prevState) {\\n        if (prevState.isAutoPlayActive !== this.galleria.isAutoPlayActive()) {\\n            this.setState({\\n                isAutoPlayActive: this.galleria.isAutoPlayActive()\\n            });\\n        }\\n    }\\n\\n    componentWillUnmount() {\\n        this.unbindDocumentListeners();\\n    }\\n\\n    onThumbnailChange(event) {\\n        this.setState({ activeIndex: event.index });\\n    }\\n\\n    onItemChange(event) {\\n        this.setState({ activeIndex: event.index });\\n    }\\n\\n    toggleFullScreen() {\\n        if (this.state.isFullScreen) {\\n            this.closeFullScreen();\\n        }\\n        else {\\n            this.openFullScreen();\\n        }\\n    }\\n\\n    onFullScreenChange() {\\n        this.setState((prevState) => ({ isFullScreen: !prevState.isFullScreen }));\\n    }\\n\\n    openFullScreen() {\\n        let elem = document.querySelector('.custom-galleria');\\n        if (elem.requestFullscreen) {\\n            elem.requestFullscreen();\\n        }\\n        else if (elem.mozRequestFullScreen) { /* Firefox */\\n            elem.mozRequestFullScreen();\\n        }\\n        else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\\n            elem.webkitRequestFullscreen();\\n        }\\n        else if (elem.msRequestFullscreen) { /* IE/Edge */\\n            elem.msRequestFullscreen();\\n        }\\n    }\\n\\n    closeFullScreen() {\\n        if (document.exitFullscreen) {\\n            document.exitFullscreen();\\n        }\\n        else if (document.mozCancelFullScreen) {\\n            document.mozCancelFullScreen();\\n        }\\n        else if (document.webkitExitFullscreen) {\\n            document.webkitExitFullscreen();\\n        }\\n        else if (document.msExitFullscreen) {\\n            document.msExitFullscreen();\\n        }\\n    }\\n\\n    bindDocumentListeners() {\\n        document.addEventListener(\\\"fullscreenchange\\\", this.onFullScreenChange);\\n        document.addEventListener(\\\"mozfullscreenchange\\\", this.onFullScreenChange);\\n        document.addEventListener(\\\"webkitfullscreenchange\\\", this.onFullScreenChange);\\n        document.addEventListener(\\\"msfullscreenchange\\\", this.onFullScreenChange);\\n    }\\n\\n    unbindDocumentListeners() {\\n        document.removeEventListener(\\\"fullscreenchange\\\", this.onFullScreenChange);\\n        document.removeEventListener(\\\"mozfullscreenchange\\\", this.onFullScreenChange);\\n        document.removeEventListener(\\\"webkitfullscreenchange\\\", this.onFullScreenChange);\\n        document.removeEventListener(\\\"msfullscreenchange\\\", this.onFullScreenChange);\\n    }\\n\\n    thumbnailTemplate(item) {\\n        return (\\n            <div className=\\\"p-grid p-nogutter p-justify-center\\\">\\n                <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />\\n            </div>\\n        );\\n    }\\n\\n    itemTemplate(item) {\\n        if (this.state.isFullScreen) {\\n            return <img src={item.itemImageSrc} alt={item.alt} />\\n        }\\n\\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />\\n    }\\n\\n    renderFooter() {\\n        let autoPlayClassName = classNames('pi', {\\n            'pi-play': !this.state.isAutoPlayActive,\\n            'pi-pause': this.state.isAutoPlayActive\\n        });\\n\\n        let fullScreenClassName = classNames('pi', {\\n            'pi-window-maximize': !this.state.isFullScreen,\\n            'pi-window-minimize': this.state.isFullScreen\\n        });\\n\\n        return (\\n            <div className=\\\"custom-galleria-footer\\\">\\n                <Button icon=\\\"pi pi-list\\\" onClick={() => this.setState({ showThumbnails: !this.state.showThumbnails })} />\\n                <Button icon={autoPlayClassName} onClick={() => {\\n                    if (!this.state.isAutoPlayActive) {\\n                        this.galleria.startSlideShow();\\n                        this.setState({ isAutoPlayActive: true });\\n                    }\\n                    else {\\n                        this.galleria.stopSlideShow();\\n                        this.setState({ isAutoPlayActive: false });\\n                    }\\n                }} />\\n                {\\n                    this.state.images && (\\n                        <span className=\\\"title-container\\\">\\n                            <span>{this.state.activeIndex + 1}/{this.state.images.length}</span>\\n                            <span className=\\\"title\\\">{this.state.images[this.state.activeIndex].title}</span>\\n                            <span>{this.state.images[this.state.activeIndex].alt}</span>\\n                        </span>\\n                    )\\n                }\\n                <Button icon={fullScreenClassName} onClick={() => this.toggleFullScreen()} className=\\\"fullscreen-button\\\" />\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        const footer = this.renderFooter();\\n        const galleriaClassName = classNames('custom-galleria', {\\n            'fullscreen': this.state.isFullScreen\\n        });\\n\\n        return (\\n            <div className=\\\"galleria-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <Galleria ref={(el) => this.galleria = el} value={this.state.images} activeIndex={this.state.activeIndex} onItemChange={this.onItemChange}\\n                        showThumbnails={this.state.showThumbnails} showItemNavigators showItemNavigatorsOnHover\\n                        numVisible={5} circular autoPlay transitionInterval={3000} responsiveOptions={this.responsiveOptions}\\n                        item={this.itemTemplate} thumbnail={this.thumbnailTemplate} footer={footer}\\n                        style={{ maxWidth: '640px' }} className={galleriaClassName} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"scss\"},\"\\n.galleria-demo {\\n    .custom-galleria {\\n        &.fullscreen {\\n            display: flex;\\n            flex-direction: column;\\n\\n            .p-galleria-content {\\n                flex-grow: 1;\\n                justify-content: center;\\n            }\\n        }\\n\\n        .p-galleria-content {\\n            position: relative;\\n        }\\n\\n        .p-galleria-thumbnail-wrapper {\\n            position: absolute;\\n            bottom: 0;\\n            left: 0;\\n            width: 100%;\\n        }\\n\\n        .p-galleria-thumbnail-items-container {\\n            width: 100%;\\n        }\\n\\n        .custom-galleria-footer {\\n            display: flex;\\n            align-items: center;\\n            background-color: rgba(0, 0, 0, .9);\\n            color: #ffffff;\\n\\n            > button {\\n                background-color: transparent;\\n                color: #ffffff;\\n                border: 0 none;\\n                border-radius: 0;\\n                margin: .2rem 0;\\n\\n                &.fullscreen-button {\\n                    margin-left: auto;\\n                }\\n\\n                &:hover {\\n                    background-color: rgba(255, 255, 255, 0.1);\\n                }\\n            }\\n        }\\n\\n        .title-container {\\n            > span {\\n                font-size: .9rem;\\n                padding-left: .829rem;\\n\\n                &.title {\\n                    font-weight: bold;\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n\"))));}}]);return GalleriaAdvancedDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/galleria/GalleriaAdvancedDemo.js"],"names":["React","Component","classNames","PhotoService","Button","Galleria","TabView","TabPanel","CodeHighlight","AppInlineHeader","GalleriaAdvancedDemo","props","state","images","activeIndex","showThumbnails","isAutoPlayActive","isFullScreen","responsiveOptions","breakpoint","numVisible","galleriaService","itemTemplate","bind","thumbnailTemplate","onThumbnailChange","onItemChange","onFullScreenChange","getImages","then","data","setState","bindDocumentListeners","prevProps","prevState","galleria","unbindDocumentListeners","event","index","closeFullScreen","openFullScreen","elem","document","querySelector","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","addEventListener","removeEventListener","item","thumbnailImageSrc","alt","display","itemImageSrc","width","autoPlayClassName","fullScreenClassName","startSlideShow","stopSlideShow","length","title","toggleFullScreen","footer","renderFooter","galleriaClassName","el","maxWidth","GalleriaAdvancedDemoDoc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { PhotoService } from '../service/PhotoService';\r\nimport { Button } from '../../components/button/Button';\r\nimport { Galleria } from '../../components/galleria/Galleria';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './GalleriaDemo.scss';\r\n\r\nexport class GalleriaAdvancedDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            images: null,\r\n            activeIndex: 0,\r\n            showThumbnails: false,\r\n            isAutoPlayActive: true,\r\n            isFullScreen: false\r\n        };\r\n\r\n        this.responsiveOptions = [\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 5\r\n            },\r\n            {\r\n                breakpoint: '960px',\r\n                numVisible: 4\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 3\r\n            },\r\n            {\r\n                breakpoint: '560px',\r\n                numVisible: 1\r\n            }\r\n        ];\r\n\r\n        this.galleriaService = new PhotoService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\r\n        this.onThumbnailChange = this.onThumbnailChange.bind(this);\r\n        this.onItemChange = this.onItemChange.bind(this);\r\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\r\n        this.bindDocumentListeners();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.isAutoPlayActive !== this.galleria.isAutoPlayActive()) {\r\n            this.setState({\r\n                isAutoPlayActive: this.galleria.isAutoPlayActive()\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentListeners();\r\n    }\r\n\r\n    onThumbnailChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    onItemChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        if (this.state.isFullScreen) {\r\n            this.closeFullScreen();\r\n        }\r\n        else {\r\n            this.openFullScreen();\r\n        }\r\n    }\r\n\r\n    onFullScreenChange() {\r\n        this.setState((prevState) => ({ isFullScreen: !prevState.isFullScreen }));\r\n    }\r\n\r\n    openFullScreen() {\r\n        let elem = document.querySelector('.custom-galleria');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        }\r\n        else if (elem.mozRequestFullScreen) { /* Firefox */\r\n            elem.mozRequestFullScreen();\r\n        }\r\n        else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\r\n            elem.webkitRequestFullscreen();\r\n        }\r\n        else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n            elem.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    closeFullScreen() {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        }\r\n        else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        }\r\n        else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n        else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        }\r\n    }\r\n\r\n    bindDocumentListeners() {\r\n        document.addEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    unbindDocumentListeners() {\r\n        document.removeEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    thumbnailTemplate(item) {\r\n        return (\r\n            <div className=\"p-grid p-nogutter p-justify-center\">\r\n                <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    itemTemplate(item) {\r\n        if (this.state.isFullScreen) {\r\n            return <img src={item.itemImageSrc} alt={item.alt} />\r\n        }\r\n\r\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />\r\n    }\r\n\r\n    renderFooter() {\r\n        let autoPlayClassName = classNames('pi', {\r\n            'pi-play': !this.state.isAutoPlayActive,\r\n            'pi-pause': this.state.isAutoPlayActive\r\n        });\r\n\r\n        let fullScreenClassName = classNames('pi', {\r\n            'pi-window-maximize': !this.state.isFullScreen,\r\n            'pi-window-minimize': this.state.isFullScreen\r\n        });\r\n\r\n        return (\r\n            <div className=\"custom-galleria-footer\">\r\n                <Button icon=\"pi pi-list\" onClick={() => this.setState({ showThumbnails: !this.state.showThumbnails })} />\r\n                <Button icon={autoPlayClassName} onClick={() => {\r\n                    if (!this.state.isAutoPlayActive) {\r\n                        this.galleria.startSlideShow();\r\n                        this.setState({ isAutoPlayActive: true });\r\n                    }\r\n                    else {\r\n                        this.galleria.stopSlideShow();\r\n                        this.setState({ isAutoPlayActive: false });\r\n                    }\r\n                }} />\r\n                {\r\n                    this.state.images && (\r\n                        <span className=\"title-container\">\r\n                            <span>{this.state.activeIndex + 1}/{this.state.images.length}</span>\r\n                            <span className=\"title\">{this.state.images[this.state.activeIndex].title}</span>\r\n                            <span>{this.state.images[this.state.activeIndex].alt}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n                <Button icon={fullScreenClassName} onClick={() => this.toggleFullScreen()} className=\"fullscreen-button\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const footer = this.renderFooter();\r\n        const galleriaClassName = classNames('custom-galleria', {\r\n            'fullscreen': this.state.isFullScreen\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"galleria\">\r\n                        <h1>Galleria <span>Advanced</span></h1>\r\n                        <p>Galleria can be extended further to implement complex requirements.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation galleria-demo\">\r\n                    <div className=\"card\">\r\n                        <Galleria ref={(el) => this.galleria = el} value={this.state.images} activeIndex={this.state.activeIndex} onItemChange={this.onItemChange}\r\n                            showThumbnails={this.state.showThumbnails} showItemNavigators showItemNavigatorsOnHover\r\n                            numVisible={5} circular autoPlay transitionInterval={3000} responsiveOptions={this.responsiveOptions}\r\n                            item={this.itemTemplate} thumbnail={this.thumbnailTemplate} footer={footer}\r\n                            style={{ maxWidth: '640px' }} className={galleriaClassName} />\r\n                    </div>\r\n                </div>\r\n\r\n                <GalleriaAdvancedDemoDoc />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class GalleriaAdvancedDemoDoc extends Component {\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Source\">\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport { PhotoService } from '../service/PhotoService';\r\nimport { Button } from 'primereact/button';\r\nimport { Galleria } from 'primereact/galleria';\r\nimport './GalleriaDemo.scss';\r\n\r\nexport class GalleriaAdvancedDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            images: null,\r\n            activeIndex: 0,\r\n            showThumbnails: false,\r\n            isAutoPlayActive: true,\r\n            isFullScreen: false\r\n        };\r\n\r\n        this.responsiveOptions = [\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 5\r\n            },\r\n            {\r\n                breakpoint: '960px',\r\n                numVisible: 4\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 3\r\n            },\r\n            {\r\n                breakpoint: '560px',\r\n                numVisible: 1\r\n            }\r\n        ];\r\n\r\n        this.galleriaService = new PhotoService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\r\n        this.onThumbnailChange = this.onThumbnailChange.bind(this);\r\n        this.onItemChange = this.onItemChange.bind(this);\r\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\r\n        this.bindDocumentListeners();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.isAutoPlayActive !== this.galleria.isAutoPlayActive()) {\r\n            this.setState({\r\n                isAutoPlayActive: this.galleria.isAutoPlayActive()\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentListeners();\r\n    }\r\n\r\n    onThumbnailChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    onItemChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        if (this.state.isFullScreen) {\r\n            this.closeFullScreen();\r\n        }\r\n        else {\r\n            this.openFullScreen();\r\n        }\r\n    }\r\n\r\n    onFullScreenChange() {\r\n        this.setState((prevState) => ({ isFullScreen: !prevState.isFullScreen }));\r\n    }\r\n\r\n    openFullScreen() {\r\n        let elem = document.querySelector('.custom-galleria');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        }\r\n        else if (elem.mozRequestFullScreen) { /* Firefox */\r\n            elem.mozRequestFullScreen();\r\n        }\r\n        else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\r\n            elem.webkitRequestFullscreen();\r\n        }\r\n        else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n            elem.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    closeFullScreen() {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        }\r\n        else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        }\r\n        else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n        else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        }\r\n    }\r\n\r\n    bindDocumentListeners() {\r\n        document.addEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    unbindDocumentListeners() {\r\n        document.removeEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    thumbnailTemplate(item) {\r\n        return (\r\n            <div className=\"p-grid p-nogutter p-justify-center\">\r\n                <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    itemTemplate(item) {\r\n        if (this.state.isFullScreen) {\r\n            return <img src={item.itemImageSrc} alt={item.alt} />\r\n        }\r\n\r\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />\r\n    }\r\n\r\n    renderFooter() {\r\n        let autoPlayClassName = classNames('pi', {\r\n            'pi-play': !this.state.isAutoPlayActive,\r\n            'pi-pause': this.state.isAutoPlayActive\r\n        });\r\n\r\n        let fullScreenClassName = classNames('pi', {\r\n            'pi-window-maximize': !this.state.isFullScreen,\r\n            'pi-window-minimize': this.state.isFullScreen\r\n        });\r\n\r\n        return (\r\n            <div className=\"custom-galleria-footer\">\r\n                <Button icon=\"pi pi-list\" onClick={() => this.setState({ showThumbnails: !this.state.showThumbnails })} />\r\n                <Button icon={autoPlayClassName} onClick={() => {\r\n                    if (!this.state.isAutoPlayActive) {\r\n                        this.galleria.startSlideShow();\r\n                        this.setState({ isAutoPlayActive: true });\r\n                    }\r\n                    else {\r\n                        this.galleria.stopSlideShow();\r\n                        this.setState({ isAutoPlayActive: false });\r\n                    }\r\n                }} />\r\n                {\r\n                    this.state.images && (\r\n                        <span className=\"title-container\">\r\n                            <span>{this.state.activeIndex + 1}/{this.state.images.length}</span>\r\n                            <span className=\"title\">{this.state.images[this.state.activeIndex].title}</span>\r\n                            <span>{this.state.images[this.state.activeIndex].alt}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n                <Button icon={fullScreenClassName} onClick={() => this.toggleFullScreen()} className=\"fullscreen-button\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const footer = this.renderFooter();\r\n        const galleriaClassName = classNames('custom-galleria', {\r\n            'fullscreen': this.state.isFullScreen\r\n        });\r\n\r\n        return (\r\n            <div className=\"galleria-demo\">\r\n                <div className=\"card\">\r\n                    <Galleria ref={(el) => this.galleria = el} value={this.state.images} activeIndex={this.state.activeIndex} onItemChange={this.onItemChange}\r\n                        showThumbnails={this.state.showThumbnails} showItemNavigators showItemNavigatorsOnHover\r\n                        numVisible={5} circular autoPlay transitionInterval={3000} responsiveOptions={this.responsiveOptions}\r\n                        item={this.itemTemplate} thumbnail={this.thumbnailTemplate} footer={footer}\r\n                        style={{ maxWidth: '640px' }} className={galleriaClassName} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n`}\r\n</CodeHighlight>\r\n<CodeHighlight lang=\"scss\">\r\n{`\r\n.galleria-demo {\r\n    .custom-galleria {\r\n        &.fullscreen {\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            .p-galleria-content {\r\n                flex-grow: 1;\r\n                justify-content: center;\r\n            }\r\n        }\r\n\r\n        .p-galleria-content {\r\n            position: relative;\r\n        }\r\n\r\n        .p-galleria-thumbnail-wrapper {\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 100%;\r\n        }\r\n\r\n        .p-galleria-thumbnail-items-container {\r\n            width: 100%;\r\n        }\r\n\r\n        .custom-galleria-footer {\r\n            display: flex;\r\n            align-items: center;\r\n            background-color: rgba(0, 0, 0, .9);\r\n            color: #ffffff;\r\n\r\n            > button {\r\n                background-color: transparent;\r\n                color: #ffffff;\r\n                border: 0 none;\r\n                border-radius: 0;\r\n                margin: .2rem 0;\r\n\r\n                &.fullscreen-button {\r\n                    margin-left: auto;\r\n                }\r\n\r\n                &:hover {\r\n                    background-color: rgba(255, 255, 255, 0.1);\r\n                }\r\n            }\r\n        }\r\n\r\n        .title-container {\r\n            > span {\r\n                font-size: .9rem;\r\n                padding-left: .829rem;\r\n\r\n                &.title {\r\n                    font-weight: bold;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n`}\r\n</CodeHighlight>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}