{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\datatable\\\\HeaderCell.js\";\nimport React, { Component } from 'react';\nimport { InputText } from '../inputtext/InputText';\nimport { classNames } from '../utils/ClassNames';\nimport { RowCheckbox } from './RowCheckbox';\nimport DomHandler from '../utils/DomHandler';\nexport var HeaderCell = /*#__PURE__*/function (_Component) {\n  _inherits(HeaderCell, _Component);\n\n  var _super = _createSuper(HeaderCell);\n\n  function HeaderCell(props) {\n    var _this;\n\n    _classCallCheck(this, HeaderCell);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      filterValue: '',\n      badgeVisible: false\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onFilterChange = _this.onFilterChange.bind(_assertThisInitialized(_this));\n    _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized(_this));\n    _this.onResizerMouseDown = _this.onResizerMouseDown.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(HeaderCell, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.props.columnProps.sortable) {\n        var targetNode = event.target;\n\n        if (DomHandler.hasClass(targetNode, 'p-sortable-column') || DomHandler.hasClass(targetNode, 'p-column-title') || DomHandler.hasClass(targetNode, 'p-sortable-column-icon') || DomHandler.hasClass(targetNode.parentElement, 'p-sortable-column-icon')) {\n          this.props.onSort({\n            originalEvent: event,\n            sortField: this.props.columnProps.sortField || this.props.columnProps.field,\n            sortFunction: this.props.columnProps.sortFunction,\n            sortable: this.props.columnProps.sortable\n          });\n          DomHandler.clearSelection();\n        }\n      }\n    }\n  }, {\n    key: \"onFilterChange\",\n    value: function onFilterChange(e) {\n      var _this2 = this;\n\n      var filterValue = e.target.value;\n\n      if (this.props.columnProps.filter && this.props.onFilter) {\n        if (this.filterTimeout) {\n          clearTimeout(this.filterTimeout);\n        }\n\n        this.filterTimeout = setTimeout(function () {\n          _this2.props.onFilter({\n            value: filterValue,\n            field: _this2.props.columnProps.filterField || _this2.props.columnProps.field,\n            matchMode: _this2.props.columnProps.filterMatchMode\n          });\n\n          _this2.filterTimeout = null;\n        }, this.filterDelay);\n      }\n\n      this.setState({\n        filterValue: filterValue\n      });\n    }\n  }, {\n    key: \"onResizerMouseDown\",\n    value: function onResizerMouseDown(event) {\n      if (this.props.resizableColumns && this.props.onColumnResizeStart) {\n        this.props.onColumnResizeStart({\n          originalEvent: event,\n          columnEl: event.target.parentElement,\n          columnProps: this.props.columnProps\n        });\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (this.props.reorderableColumns && this.props.columnProps.reorderable) {\n        if (event.target.nodeName !== 'INPUT') this.el.draggable = true;else if (event.target.nodeName === 'INPUT') this.el.draggable = false;\n      }\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      if (event.key === 'Enter' && event.currentTarget === this.el) {\n        this.onClick(event);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"getMultiSortMetaDataIndex\",\n    value: function getMultiSortMetaDataIndex() {\n      if (this.props.multiSortMeta) {\n        var columnSortField = this.props.columnProps.sortField || this.props.columnProps.field;\n\n        for (var i = 0; i < this.props.multiSortMeta.length; i++) {\n          if (this.props.multiSortMeta[i].field === columnSortField) {\n            return i;\n          }\n        }\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"getAriaSort\",\n    value: function getAriaSort(sorted, sortOrder) {\n      if (this.props.columnProps.sortable) {\n        var sortIcon = sorted ? sortOrder < 0 ? 'pi-sort-amount-down' : 'pi-sort-amount-up-alt' : 'pi-sort-alt';\n        if (sortIcon === 'pi-sort-down') return 'descending';else if (sortIcon === 'pi-sort-up') return 'ascending';else return 'none';\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderSortIcon\",\n    value: function renderSortIcon(sorted, sortOrder) {\n      if (this.props.columnProps.sortable) {\n        var sortIcon = sorted ? sortOrder < 0 ? 'pi-sort-amount-down' : 'pi-sort-amount-up-alt' : 'pi-sort-alt';\n        var sortIconClassName = classNames('p-sortable-column-icon pi pi-fw', sortIcon);\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: sortIconClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderSortBadge\",\n    value: function renderSortBadge(sortMetaDataIndex) {\n      if (sortMetaDataIndex !== -1 && this.state.badgeVisible) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-sortable-column-badge\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 20\n          }\n        }, sortMetaDataIndex + 1);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var filterElement, headerCheckbox;\n\n      if (this.props.columnProps.filter && this.props.renderOptions.renderFilter) {\n        filterElement = this.props.columnProps.filterElement || /*#__PURE__*/React.createElement(InputText, {\n          onChange: this.onFilterChange,\n          type: this.props.columnProps.filterType,\n          value: this.state.filterValue,\n          className: \"p-column-filter\",\n          placeholder: this.props.columnProps.filterPlaceholder,\n          maxLength: this.props.columnProps.filterMaxLength,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 67\n          }\n        });\n      }\n\n      if (this.props.columnProps.selectionMode === 'multiple' && this.props.renderOptions.renderHeaderCheckbox) {\n        headerCheckbox = /*#__PURE__*/React.createElement(RowCheckbox, {\n          onClick: this.props.onHeaderCheckboxClick,\n          selected: this.props.headerCheckboxSelected,\n          disabled: !this.props.value || this.props.value.length === 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 30\n          }\n        });\n      }\n\n      if (this.props.renderOptions.filterOnly) {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          ref: function ref(el) {\n            return _this3.el = el;\n          },\n          role: \"columnheader\",\n          className: classNames('p-filter-column', this.props.columnProps.filterHeaderClassName),\n          style: this.props.columnProps.filterHeaderStyle || this.props.columnProps.style,\n          colSpan: this.props.columnProps.colSpan,\n          rowSpan: this.props.columnProps.rowSpan,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }\n        }, filterElement, headerCheckbox);\n      } else {\n        var sortMetaDataIndex = this.getMultiSortMetaDataIndex();\n        var multiSortMetaData = sortMetaDataIndex !== -1 ? this.props.multiSortMeta[sortMetaDataIndex] : null;\n        var singleSorted = this.props.sortField !== null ? this.props.columnProps.field === this.props.sortField || this.props.columnProps.sortField === this.props.sortField : false;\n        var multipleSorted = multiSortMetaData !== null;\n        var sortOrder = 0;\n        var resizer = this.props.resizableColumns && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-column-resizer p-clickable\",\n          onMouseDown: this.onResizerMouseDown,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 58\n          }\n        });\n        if (singleSorted) sortOrder = this.props.sortOrder;else if (multipleSorted) sortOrder = multiSortMetaData.order;\n        var sorted = this.props.columnProps.sortable && (singleSorted || multipleSorted);\n        var className = classNames({\n          'p-sortable-column': this.props.columnProps.sortable,\n          'p-highlight': sorted,\n          'p-resizable-column': this.props.resizableColumns,\n          'p-selection-column': this.props.columnProps.selectionMode\n        }, this.props.columnProps.headerClassName || this.props.columnProps.className);\n        var sortIconElement = this.renderSortIcon(sorted, sortOrder);\n        var ariaSortData = this.getAriaSort(sorted, sortOrder);\n        var sortBadge = this.renderSortBadge(sortMetaDataIndex);\n        return /*#__PURE__*/React.createElement(\"th\", {\n          ref: function ref(el) {\n            return _this3.el = el;\n          },\n          role: \"columnheader\",\n          tabIndex: this.props.columnProps.sortable ? this.props.tabIndex : null,\n          className: className,\n          style: this.props.columnProps.headerStyle || this.props.columnProps.style,\n          onClick: this.onClick,\n          onMouseDown: this.onMouseDown,\n          onKeyDown: this.onKeyDown,\n          colSpan: this.props.columnProps.colSpan,\n          rowSpan: this.props.columnProps.rowSpan,\n          \"aria-sort\": ariaSortData,\n          onDragStart: this.props.onDragStart,\n          onDragOver: this.props.onDragOver,\n          onDragLeave: this.props.onDragLeave,\n          onDrop: this.props.onDrop,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }\n        }, resizer, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-column-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }\n        }, this.props.columnProps.header), sortIconElement, sortBadge, filterElement, headerCheckbox);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var filterField = nextProps.columnProps.filterField || nextProps.columnProps.field;\n      var value = nextProps.filters && nextProps.filters[filterField] ? nextProps.filters[filterField].value : null;\n      return {\n        filterValue: value !== null ? value : '',\n        badgeVisible: nextProps.multiSortMeta && nextProps.multiSortMeta.length > 1\n      };\n    }\n  }]);\n\n  return HeaderCell;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/datatable/HeaderCell.js"],"names":["React","Component","InputText","classNames","RowCheckbox","DomHandler","HeaderCell","props","state","filterValue","badgeVisible","onClick","bind","onFilterChange","onMouseDown","onResizerMouseDown","onKeyDown","event","columnProps","sortable","targetNode","target","hasClass","parentElement","onSort","originalEvent","sortField","field","sortFunction","clearSelection","e","value","filter","onFilter","filterTimeout","clearTimeout","setTimeout","filterField","matchMode","filterMatchMode","filterDelay","setState","resizableColumns","onColumnResizeStart","columnEl","preventDefault","reorderableColumns","reorderable","nodeName","el","draggable","key","currentTarget","multiSortMeta","columnSortField","i","length","sorted","sortOrder","sortIcon","sortIconClassName","sortMetaDataIndex","filterElement","headerCheckbox","renderOptions","renderFilter","filterType","filterPlaceholder","filterMaxLength","selectionMode","renderHeaderCheckbox","onHeaderCheckboxClick","headerCheckboxSelected","filterOnly","filterHeaderClassName","filterHeaderStyle","style","colSpan","rowSpan","getMultiSortMetaDataIndex","multiSortMetaData","singleSorted","multipleSorted","resizer","order","className","headerClassName","sortIconElement","renderSortIcon","ariaSortData","getAriaSort","sortBadge","renderSortBadge","tabIndex","headerStyle","onDragStart","onDragOver","onDragLeave","onDrop","header","nextProps","prevState","filters"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {InputText} from '../inputtext/InputText';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport {RowCheckbox} from './RowCheckbox';\r\nimport DomHandler from '../utils/DomHandler';\r\n\r\nexport class HeaderCell extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filterValue: '',\r\n            badgeVisible: false\r\n        }\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onFilterChange = this.onFilterChange.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onResizerMouseDown = this.onResizerMouseDown.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    onClick(event) {\r\n        if (this.props.columnProps.sortable) {\r\n            let targetNode = event.target;\r\n            if(DomHandler.hasClass(targetNode, 'p-sortable-column') || DomHandler.hasClass(targetNode, 'p-column-title')\r\n                || DomHandler.hasClass(targetNode, 'p-sortable-column-icon') || DomHandler.hasClass(targetNode.parentElement, 'p-sortable-column-icon')) {\r\n                this.props.onSort({\r\n                    originalEvent: event,\r\n                    sortField: this.props.columnProps.sortField || this.props.columnProps.field,\r\n                    sortFunction: this.props.columnProps.sortFunction,\r\n                    sortable: this.props.columnProps.sortable\r\n                });\r\n\r\n                DomHandler.clearSelection();\r\n            }\r\n        }\r\n    }\r\n\r\n    onFilterChange(e) {\r\n        let filterValue = e.target.value;\r\n\r\n        if (this.props.columnProps.filter && this.props.onFilter) {\r\n            if(this.filterTimeout) {\r\n                clearTimeout(this.filterTimeout);\r\n            }\r\n\r\n            this.filterTimeout = setTimeout(() => {\r\n                this.props.onFilter({\r\n                    value: filterValue,\r\n                    field: this.props.columnProps.filterField || this.props.columnProps.field,\r\n                    matchMode: this.props.columnProps.filterMatchMode\r\n                });\r\n                this.filterTimeout = null;\r\n            }, this.filterDelay);\r\n        }\r\n\r\n        this.setState({ filterValue });\r\n    }\r\n\r\n    onResizerMouseDown(event) {\r\n        if(this.props.resizableColumns && this.props.onColumnResizeStart) {\r\n            this.props.onColumnResizeStart({\r\n                originalEvent: event,\r\n                columnEl: event.target.parentElement,\r\n                columnProps: this.props.columnProps\r\n            });\r\n\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onMouseDown(event) {\r\n        if (this.props.reorderableColumns && this.props.columnProps.reorderable) {\r\n            if (event.target.nodeName !== 'INPUT')\r\n                this.el.draggable = true;\r\n            else if (event.target.nodeName === 'INPUT')\r\n                this.el.draggable = false;\r\n        }\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (event.key === 'Enter' && event.currentTarget === this.el) {\r\n            this.onClick(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    getMultiSortMetaDataIndex() {\r\n        if (this.props.multiSortMeta) {\r\n            let columnSortField = this.props.columnProps.sortField || this.props.columnProps.field;\r\n            for (let i = 0; i < this.props.multiSortMeta.length; i++) {\r\n                if (this.props.multiSortMeta[i].field === columnSortField) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const filterField = nextProps.columnProps.filterField || nextProps.columnProps.field;\r\n        const value = nextProps.filters && nextProps.filters[filterField] ? nextProps.filters[filterField].value : null;\r\n\r\n        return {\r\n            filterValue: value !== null ? value : '',\r\n            badgeVisible: nextProps.multiSortMeta && nextProps.multiSortMeta.length > 1\r\n        }\r\n    }\r\n\r\n    getAriaSort(sorted, sortOrder) {\r\n        if (this.props.columnProps.sortable) {\r\n            let sortIcon = sorted ? sortOrder < 0 ? 'pi-sort-amount-down' : 'pi-sort-amount-up-alt': 'pi-sort-alt';\r\n            if (sortIcon === 'pi-sort-down')\r\n                return 'descending';\r\n            else if (sortIcon === 'pi-sort-up')\r\n                return 'ascending';\r\n            else\r\n                return 'none';\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderSortIcon(sorted, sortOrder) {\r\n        if (this.props.columnProps.sortable) {\r\n            let sortIcon = sorted ? sortOrder < 0 ? 'pi-sort-amount-down' : 'pi-sort-amount-up-alt': 'pi-sort-alt';\r\n            let sortIconClassName = classNames('p-sortable-column-icon pi pi-fw', sortIcon);\r\n\r\n            return (\r\n                <span className={sortIconClassName}></span>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderSortBadge(sortMetaDataIndex) {\r\n        if (sortMetaDataIndex !== -1 && this.state.badgeVisible) {\r\n            return <span className=\"p-sortable-column-badge\">{sortMetaDataIndex + 1}</span>;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let filterElement, headerCheckbox;\r\n\r\n        if (this.props.columnProps.filter && this.props.renderOptions.renderFilter) {\r\n            filterElement = this.props.columnProps.filterElement||<InputText onChange={this.onFilterChange} type={this.props.columnProps.filterType} value={this.state.filterValue}\r\n                        className=\"p-column-filter\" placeholder={this.props.columnProps.filterPlaceholder} maxLength={this.props.columnProps.filterMaxLength} />;\r\n        }\r\n\r\n        if (this.props.columnProps.selectionMode === 'multiple' && this.props.renderOptions.renderHeaderCheckbox) {\r\n            headerCheckbox = <RowCheckbox onClick={this.props.onHeaderCheckboxClick} selected={this.props.headerCheckboxSelected} disabled={!this.props.value || this.props.value.length === 0} />;\r\n        }\r\n\r\n        if (this.props.renderOptions.filterOnly) {\r\n            return (\r\n                <th ref={(el) => this.el = el} role=\"columnheader\" className={classNames('p-filter-column', this.props.columnProps.filterHeaderClassName)} style={this.props.columnProps.filterHeaderStyle||this.props.columnProps.style}\r\n                    colSpan={this.props.columnProps.colSpan} rowSpan={this.props.columnProps.rowSpan}>\r\n                    {filterElement}\r\n                    {headerCheckbox}\r\n                </th>\r\n            );\r\n        }\r\n        else {\r\n            let sortMetaDataIndex = this.getMultiSortMetaDataIndex();\r\n            let multiSortMetaData = sortMetaDataIndex !== -1 ? this.props.multiSortMeta[sortMetaDataIndex] : null;\r\n            let singleSorted = this.props.sortField !== null ? (this.props.columnProps.field === this.props.sortField || this.props.columnProps.sortField === this.props.sortField) : false;\r\n            let multipleSorted = multiSortMetaData !== null;\r\n            let sortOrder = 0;\r\n            let resizer = this.props.resizableColumns && <span className=\"p-column-resizer p-clickable\" onMouseDown={this.onResizerMouseDown}></span>;\r\n\r\n            if(singleSorted)\r\n                sortOrder = this.props.sortOrder;\r\n            else if(multipleSorted)\r\n                sortOrder = multiSortMetaData.order;\r\n\r\n            let sorted = this.props.columnProps.sortable && (singleSorted || multipleSorted);\r\n            let className = classNames({'p-sortable-column': this.props.columnProps.sortable,\r\n                            'p-highlight': sorted,\r\n                            'p-resizable-column': this.props.resizableColumns,\r\n                            'p-selection-column': this.props.columnProps.selectionMode}, this.props.columnProps.headerClassName||this.props.columnProps.className);\r\n\r\n            let sortIconElement = this.renderSortIcon(sorted, sortOrder);\r\n            let ariaSortData = this.getAriaSort(sorted, sortOrder);\r\n            let sortBadge = this.renderSortBadge(sortMetaDataIndex);\r\n\r\n            return (\r\n                <th ref={(el) => this.el = el} role=\"columnheader\" tabIndex={this.props.columnProps.sortable ? this.props.tabIndex : null}\r\n                    className={className} style={this.props.columnProps.headerStyle||this.props.columnProps.style} onClick={this.onClick} onMouseDown={this.onMouseDown} onKeyDown={this.onKeyDown}\r\n                    colSpan={this.props.columnProps.colSpan} rowSpan={this.props.columnProps.rowSpan} aria-sort={ariaSortData}\r\n                    onDragStart={this.props.onDragStart} onDragOver={this.props.onDragOver} onDragLeave={this.props.onDragLeave} onDrop={this.props.onDrop}>\r\n                    {resizer}\r\n                    <span className=\"p-column-title\">{this.props.columnProps.header}</span>\r\n                    {sortIconElement}\r\n                    {sortBadge}\r\n                    {filterElement}\r\n                    {headerCheckbox}\r\n                </th>\r\n            );\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}