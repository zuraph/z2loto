{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\chips\\\\ChipsDemo.js\";\nimport React, { Component } from 'react';\nimport { Chips } from '../../components/chips/Chips';\nimport { ChipsDoc } from './ChipsDoc';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var ChipsDemo = /*#__PURE__*/function (_Component) {\n  _inherits(ChipsDemo, _Component);\n\n  var _super = _createSuper(ChipsDemo);\n\n  function ChipsDemo(props) {\n    var _this;\n\n    _classCallCheck(this, ChipsDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      values1: [],\n      values2: [],\n      values3: []\n    };\n    return _this;\n  }\n\n  _createClass(ChipsDemo, [{\n    key: \"customChip\",\n    value: function customChip(item) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, item, \" - (active) \"), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-user-plus\",\n        style: {\n          fontSize: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"chips\",\n        showInputStyle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, \"Chips\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, \"Chips is used to enter multiple values on an input field.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation p-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, \"Basic\"), /*#__PURE__*/React.createElement(Chips, {\n        value: this.state.values1,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            values1: e.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"Comma Separator\"), /*#__PURE__*/React.createElement(Chips, {\n        value: this.state.values2,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            values2: e.value\n          });\n        },\n        separator: \",\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, \"Template\"), /*#__PURE__*/React.createElement(Chips, {\n        value: this.state.values3,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            values3: e.value\n          });\n        },\n        max: 5,\n        itemTemplate: this.customChip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(ChipsDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ChipsDemo;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/chips/ChipsDemo.js"],"names":["React","Component","Chips","ChipsDoc","AppInlineHeader","ChipsDemo","props","state","values1","values2","values3","item","fontSize","e","setState","value","customChip"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Chips } from '../../components/chips/Chips';\r\nimport { ChipsDoc } from './ChipsDoc';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class ChipsDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values1: [],\r\n            values2: [],\r\n            values3: []\r\n        };\r\n    }\r\n\r\n    customChip(item) {\r\n        return (\r\n            <div>\r\n                <span>{item} - (active) </span>\r\n                <i className=\"pi pi-user-plus\" style={{ fontSize: '14px' }}></i>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chips\" showInputStyle>\r\n                        <h1>Chips</h1>\r\n                        <p>Chips is used to enter multiple values on an input field.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation p-fluid\">\r\n                    <div className=\"card\">\r\n                        <h5>Basic</h5>\r\n                        <Chips value={this.state.values1} onChange={(e) => this.setState({ values1: e.value })} />\r\n\r\n                        <h5>Comma Separator</h5>\r\n                        <Chips value={this.state.values2} onChange={(e) => this.setState({ values2: e.value })} separator=\",\" />\r\n\r\n                        <h5>Template</h5>\r\n                        <Chips value={this.state.values3} onChange={(e) => this.setState({ values3: e.value })} max={5} itemTemplate={this.customChip}></Chips>\r\n                    </div>\r\n                </div>\r\n\r\n                <ChipsDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}