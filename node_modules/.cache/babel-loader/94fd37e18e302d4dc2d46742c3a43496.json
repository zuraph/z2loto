{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{InputText}from'../inputtext/InputText';import{Checkbox}from'../checkbox/Checkbox';import{Ripple}from'../ripple/Ripple';import ObjectUtils from'../utils/ObjectUtils';export var MultiSelectHeader=/*#__PURE__*/function(_Component){_inherits(MultiSelectHeader,_Component);var _super=_createSuper(MultiSelectHeader);function MultiSelectHeader(props){var _this;_classCallCheck(this,MultiSelectHeader);_this=_super.call(this,props);_this.onFilter=_this.onFilter.bind(_assertThisInitialized(_this));_this.onToggleAll=_this.onToggleAll.bind(_assertThisInitialized(_this));return _this;}_createClass(MultiSelectHeader,[{key:\"onFilter\",value:function onFilter(event){if(this.props.onFilter){this.props.onFilter({originalEvent:event,query:event.target.value});}}},{key:\"onToggleAll\",value:function onToggleAll(event){if(this.props.onToggleAll){this.props.onToggleAll({originalEvent:event,checked:this.props.allChecked});}}},{key:\"renderFilterElement\",value:function renderFilterElement(){if(this.props.filter){return/*#__PURE__*/React.createElement(\"div\",{className:\"p-multiselect-filter-container\"},/*#__PURE__*/React.createElement(InputText,{type:\"text\",role:\"textbox\",value:this.props.filterValue,onChange:this.onFilter,className:\"p-multiselect-filter\",placeholder:this.props.filterPlaceholder}),/*#__PURE__*/React.createElement(\"span\",{className:\"p-multiselect-filter-icon pi pi-search\"}));}return null;}},{key:\"render\",value:function render(){var filterElement=this.renderFilterElement();var checkboxElement=/*#__PURE__*/React.createElement(Checkbox,{checked:this.props.allChecked,onChange:this.onToggleAll,role:\"checkbox\",\"aria-checked\":this.props.allChecked});var closeElement=/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"p-multiselect-close p-link\",onClick:this.props.onClose},/*#__PURE__*/React.createElement(\"span\",{className:\"p-multiselect-close-icon pi pi-times\"}),/*#__PURE__*/React.createElement(Ripple,null));var element=/*#__PURE__*/React.createElement(\"div\",{className:\"p-multiselect-header\"},checkboxElement,filterElement,closeElement);if(this.props.template){var defaultOptions={className:'p-multiselect-header',checkboxElement:checkboxElement,checked:this.props.allChecked,onChange:this.onToggleAll,filterElement:filterElement,closeElement:closeElement,closeElementClassName:'p-multiselect-close p-link',closeIconClassName:'p-multiselect-close-icon pi pi-times',onCloseClick:this.props.onClose,element:element,props:this.props};return ObjectUtils.getJSXElement(this.props.template,defaultOptions);}return element;}}]);return MultiSelectHeader;}(Component);MultiSelectHeader.defaultProps={filter:false,filterValue:null,filterPlaceholder:null,onFilter:null,onClose:null,onToggleAll:null,allChecked:false,template:null};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/multiselect/MultiSelectHeader.js"],"names":["React","Component","InputText","Checkbox","Ripple","ObjectUtils","MultiSelectHeader","props","onFilter","bind","onToggleAll","event","originalEvent","query","target","value","checked","allChecked","filter","filterValue","filterPlaceholder","filterElement","renderFilterElement","checkboxElement","closeElement","onClose","element","template","defaultOptions","className","onChange","closeElementClassName","closeIconClassName","onCloseClick","getJSXElement","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { InputText } from '../inputtext/InputText';\r\nimport { Checkbox } from '../checkbox/Checkbox';\r\nimport { Ripple } from '../ripple/Ripple';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\n\r\nexport class MultiSelectHeader extends Component {\r\n\r\n    static defaultProps = {\r\n        filter: false,\r\n        filterValue: null,\r\n        filterPlaceholder: null,\r\n        onFilter: null,\r\n        onClose: null,\r\n        onToggleAll: null,\r\n        allChecked: false,\r\n        template: null\r\n    }\r\n\r\n    static propTypes = {\r\n        filter: PropTypes.bool,\r\n        filterValue: PropTypes.string,\r\n        filterPlaceholder: PropTypes.string,\r\n        allChecked: PropTypes.bool,\r\n        onFilter: PropTypes.func,\r\n        onClose: PropTypes.func,\r\n        onToggleAll: PropTypes.func,\r\n        template: PropTypes.any\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onFilter = this.onFilter.bind(this);\r\n        this.onToggleAll = this.onToggleAll.bind(this);\r\n    }\r\n\r\n    onFilter(event) {\r\n        if (this.props.onFilter) {\r\n            this.props.onFilter({\r\n                originalEvent: event,\r\n                query: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    onToggleAll(event) {\r\n        if (this.props.onToggleAll) {\r\n            this.props.onToggleAll({\r\n                originalEvent: event,\r\n                checked: this.props.allChecked\r\n            });\r\n        }\r\n    }\r\n\r\n    renderFilterElement() {\r\n        if (this.props.filter) {\r\n            return (\r\n                <div className=\"p-multiselect-filter-container\">\r\n                    <InputText type=\"text\" role=\"textbox\" value={this.props.filterValue} onChange={this.onFilter}\r\n                        className=\"p-multiselect-filter\" placeholder={this.props.filterPlaceholder} />\r\n                    <span className=\"p-multiselect-filter-icon pi pi-search\"></span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const filterElement = this.renderFilterElement();\r\n        const checkboxElement = <Checkbox checked={this.props.allChecked} onChange={this.onToggleAll} role=\"checkbox\" aria-checked={this.props.allChecked} />;\r\n        const closeElement = (\r\n            <button type=\"button\" className=\"p-multiselect-close p-link\" onClick={this.props.onClose}>\r\n                <span className=\"p-multiselect-close-icon pi pi-times\"></span>\r\n                <Ripple />\r\n            </button>\r\n        );\r\n        const element = (\r\n            <div className=\"p-multiselect-header\">\r\n                {checkboxElement}\r\n                {filterElement}\r\n                {closeElement}\r\n            </div>\r\n        );\r\n\r\n        if (this.props.template) {\r\n            const defaultOptions = {\r\n                className: 'p-multiselect-header',\r\n                checkboxElement,\r\n                checked: this.props.allChecked,\r\n                onChange: this.onToggleAll,\r\n                filterElement,\r\n                closeElement,\r\n                closeElementClassName: 'p-multiselect-close p-link',\r\n                closeIconClassName: 'p-multiselect-close-icon pi pi-times',\r\n                onCloseClick: this.props.onClose,\r\n                element,\r\n                props: this.props\r\n            }\r\n\r\n            return ObjectUtils.getJSXElement(this.props.template, defaultOptions);\r\n        }\r\n\r\n        return element;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}