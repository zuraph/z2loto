{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var FileUploadDoc=/*#__PURE__*/function(_Component){_inherits(FileUploadDoc,_Component);var _super=_createSuper(FileUploadDoc);function FileUploadDoc(props){var _this;_classCallCheck(this,FileUploadDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Toast } from 'primereact/toast';\\nimport { FileUpload } from 'primereact/fileupload';\\n\\nexport class FileUploadDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.onUpload = this.onUpload.bind(this);\\n        this.onBasicUpload = this.onBasicUpload.bind(this);\\n        this.onBasicUploadAuto = this.onBasicUploadAuto.bind(this);\\n    }\\n\\n    onUpload() {\\n        this.toast.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\\n    }\\n\\n    onBasicUpload() {\\n        this.toast.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\\n    }\\n\\n    onBasicUploadAuto() {\\n        this.toast.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => { this.toast = el; }}></Toast>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Advanced</h5>\\n                    <FileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" onUpload={this.onUpload} multiple accept=\\\"image/*\\\" maxFileSize={1000000}\\n                        emptyTemplate={<p className=\\\"p-m-0\\\">Drag and drop files to here to upload.</p>} />\\n\\n                    <h5>Basic</h5>\\n                    <FileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize={1000000} onUpload={this.onBasicUpload} />\\n\\n                    <h5>Basic with Auto</h5>\\n                    <FileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto chooseLabel=\\\"Browse\\\" />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useRef } from 'react';\\nimport { Toast } from 'primereact/toast';\\nimport { FileUpload } from 'primereact/fileupload';\\n\\nconst FileUploadDemo = () => {\\n    const toast = useRef(null);\\n\\n    const onUpload = () => {\\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\\n    }\\n\\n    const onBasicUpload = () => {\\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\\n    }\\n\\n    const onBasicUploadAuto = () => {\\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Advanced</h5>\\n                <FileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" onUpload={onUpload} multiple accept=\\\"image/*\\\" maxFileSize={1000000}\\n                    emptyTemplate={<p className=\\\"p-m-0\\\">Drag and drop files to here to upload.</p>} />\\n\\n                <h5>Basic</h5>\\n                <FileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize={1000000} onUpload={onBasicUpload} />\\n\\n                <h5>Basic with Auto</h5>\\n                <FileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize={1000000} onUpload={onBasicUploadAuto} auto chooseLabel=\\\"Browse\\\" />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useRef } from 'react';\\nimport { Toast } from 'primereact/toast';\\nimport { FileUpload } from 'primereact/fileupload';\\n\\nconst FileUploadDemo = () => {\\n    const toast = useRef(null);\\n\\n    const onUpload = () => {\\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\\n    }\\n\\n    const onBasicUpload = () => {\\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\\n    }\\n\\n    const onBasicUploadAuto = () => {\\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Advanced</h5>\\n                <FileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" onUpload={onUpload} multiple accept=\\\"image/*\\\" maxFileSize={1000000}\\n                    emptyTemplate={<p className=\\\"p-m-0\\\">Drag and drop files to here to upload.</p>} />\\n\\n                <h5>Basic</h5>\\n                <FileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize={1000000} onUpload={onBasicUpload} />\\n\\n                <h5>Basic with Auto</h5>\\n                <FileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize={1000000} onUpload={onBasicUploadAuto} auto chooseLabel=\\\"Browse\\\" />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};_this.extFiles={'public/upload.php':{content:\"\\n<?php echo '<p>Fake Upload Process</p>'; ?>\\n                \"}};return _this;}_createClass(FileUploadDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { FileUpload } from 'primereact/fileupload';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"FileUpload requires a \",/*#__PURE__*/React.createElement(\"i\",null,\"url\"),\" property as the upload target and a \",/*#__PURE__*/React.createElement(\"i\",null,\"name\"),\" to identify the files at backend.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<FileUpload name=\\\"demo\\\" url=\\\"./upload\\\"></FileUpload>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Multiple Uploads\"),/*#__PURE__*/React.createElement(\"p\",null,\"Only one file can be selected at a time by default, to allow selecting multiple files at once enable \",/*#__PURE__*/React.createElement(\"i\",null,\"multiple\"),\" option.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<FileUpload name=\\\"demo[]\\\" url=\\\"./upload\\\" multiple />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"DragDrop\"),/*#__PURE__*/React.createElement(\"p\",null,\"File selection can also be done by dragging and dropping from the filesystem to the content section of the component.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Auto Uploads\"),/*#__PURE__*/React.createElement(\"p\",null,\"When \",/*#__PURE__*/React.createElement(\"i\",null,\"auto\"),\" property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<FileUpload name=\\\"demo\\\" url=\\\"./upload\\\" auto />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"File Types\"),/*#__PURE__*/React.createElement(\"p\",null,\"Selectable file types can be restricted with \",/*#__PURE__*/React.createElement(\"i\",null,\"accept\"),\" property, example below only allows images to be uploaded. Read more about other possible values \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://www.w3schools.com/tags/att_input_accept.asp\"},\" here\"),\".\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<FileUpload name=\\\"demo[]\\\" url=\\\"./upload\\\" multiple accept=\\\"image/*\\\" />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"File Size\"),/*#__PURE__*/React.createElement(\"p\",null,\"Maximium file size can be restricted using \",/*#__PURE__*/React.createElement(\"i\",null,\"maxFileSize\"),\" property defined in bytes.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<FileUpload name=\\\"demo\\\" url=\\\"./upload\\\" maxFileSize=\\\"1000000\\\" />\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"In order to customize the default messages use \",/*#__PURE__*/React.createElement(\"i\",null,\"invalidFileSizeMessageSummary\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"invalidFileSizeMessageDetail\"),\" options. In summary messages, \",0,\" placeholder refers to the filename and in detail message, the file size.\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"invalidFileSizeMessageSummary: '\",0,\": Invalid file size, '\"),/*#__PURE__*/React.createElement(\"li\",null,\"invalidFileSizeMessageDetail: string = 'maximum upload size is \",0,\".'\")),/*#__PURE__*/React.createElement(\"h5\",null,\"Request Customization\"),/*#__PURE__*/React.createElement(\"p\",null,\"XHR request to upload the files can be customized using the onBeforeUpload callback that passes the xhr instance and FormData object as event parameters.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Basic UI\"),/*#__PURE__*/React.createElement(\"p\",null,\"FileUpload basic mode provides a simpler UI as an alternative to advanced mode.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<FileUpload name=\\\"demo\\\" url=\\\"./upload\\\" mode=\\\"basic\\\" />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Custom Upload\"),/*#__PURE__*/React.createElement(\"p\",null,\"Uploading implementation can be overriden by enabling customUpload property and defining a custom upload handler event.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<FileUpload name=\\\"demo[]\\\" url=\\\"./upload\\\" customUpload uploadHandler={myUploader} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst myUploader = (event) => {\\n    //event.files == files to upload\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"name\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the request parameter to identify the files at backend.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"url\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Remote url to upload the files.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"mode\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"advanced\"),/*#__PURE__*/React.createElement(\"td\",null,\"Defines the UI of the component, possible values are \\\"advanced\\\" and \\\"basic\\\".\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"multiple\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Used to select multiple files at once from file dialog.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"accept\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Pattern to restrict the allowed file types such as \\\"image/*\\\".\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Disables the upload functionality.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"auto\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When enabled, upload begins automatically after selection is completed.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"maxFileSize\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Maximum file size allowed in bytes.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"invalidFileSizeMessageSummary\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"\\\"{0}: Invalid file size, \\\"\"),/*#__PURE__*/React.createElement(\"td\",null,\"Summary message of the invalid fize size.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"invalidFileSizeMessageDetail\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"\\\"maximum upload size is {0}.\\\"\"),/*#__PURE__*/React.createElement(\"td\",null,\"Detail message of the invalid fize size.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"withCredentials\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"previewWidth\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"50\"),/*#__PURE__*/React.createElement(\"td\",null,\"Width of the image thumbnail in pixels.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"chooseLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the choose button. Defaults to global value in Locale configuration.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"uploadLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the upload button. Defaults to global value in Locale configuration.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"cancelLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the cancel button. Defaults to global value in Locale configuration.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"customUpload\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether to use the default upload or a manual implementation defined in uploadHandler callback.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"emptyTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"The template of empty content in container.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onBeforeUpload\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.xhr: XmlHttpRequest instance. \",/*#__PURE__*/React.createElement(\"br\",null),\"event.formData: FormData object.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke before file upload begins to customize the request such as post parameters before the files.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onBeforeSend\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.xhr: XmlHttpRequest instance. \",/*#__PURE__*/React.createElement(\"br\",null),\"event.formData: FormData object.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke before file send begins to customize the request such as adding headers.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onUpload\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.xhr: XmlHttpRequest instance.\",/*#__PURE__*/React.createElement(\"br\",null),\"event.files: Uploaded files.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when file upload is complete.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onError\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.xhr: XmlHttpRequest instance.\",/*#__PURE__*/React.createElement(\"br\",null),\"event.files: Files that are not uploaded.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke if file upload fails.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onClear\"),/*#__PURE__*/React.createElement(\"td\",null,\"-.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when files in queue are removed without uploading.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onSelect\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Original browser event. \",/*#__PURE__*/React.createElement(\"br\",null),\"event.files: List of selected files.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when file upload is complete.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onProgress\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Original browser event. \",/*#__PURE__*/React.createElement(\"br\",null),\"event.progress: Calculated progress value.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when files are selected.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onValidationFail\"),/*#__PURE__*/React.createElement(\"td\",null,\"file: Invalid file.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a validation file fails.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"uploadHandler\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.files: List of selected files.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke in custom upload mode to upload the files manually.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onRemove\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Original browser event. \",/*#__PURE__*/React.createElement(\"br\",null),\"event.file: Selected file.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a file is removed without uploading using clear button of a file.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Methods\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"upload\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Uploads the selected files.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"clear\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Clears the files list.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-fileupload\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-fileupload-buttonbar\"),/*#__PURE__*/React.createElement(\"td\",null,\"Header containing the buttons.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-fileupload-content\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content section.\")))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\"))),useLiveEditorTabs({name:'FileUploadDemo',sources:this.sources,extFiles:this.extFiles})));}}]);return FileUploadDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/fileupload/FileUplodDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","FileUploadDoc","props","sources","tabName","content","extFiles","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class FileUploadDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { FileUpload } from 'primereact/fileupload';\r\n\r\nexport class FileUploadDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onUpload = this.onUpload.bind(this);\r\n        this.onBasicUpload = this.onBasicUpload.bind(this);\r\n        this.onBasicUploadAuto = this.onBasicUploadAuto.bind(this);\r\n    }\r\n\r\n    onUpload() {\r\n        this.toast.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n\r\n    onBasicUpload() {\r\n        this.toast.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\r\n    }\r\n\r\n    onBasicUploadAuto() {\r\n        this.toast.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => { this.toast = el; }}></Toast>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Advanced</h5>\r\n                    <FileUpload name=\"demo[]\" url=\"./upload.php\" onUpload={this.onUpload} multiple accept=\"image/*\" maxFileSize={1000000}\r\n                        emptyTemplate={<p className=\"p-m-0\">Drag and drop files to here to upload.</p>} />\r\n\r\n                    <h5>Basic</h5>\r\n                    <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUpload} />\r\n\r\n                    <h5>Basic with Auto</h5>\r\n                    <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" maxFileSize={1000000} onUpload={this.onBasicUploadAuto} auto chooseLabel=\"Browse\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { FileUpload } from 'primereact/fileupload';\r\n\r\nconst FileUploadDemo = () => {\r\n    const toast = useRef(null);\r\n\r\n    const onUpload = () => {\r\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n\r\n    const onBasicUpload = () => {\r\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\r\n    }\r\n\r\n    const onBasicUploadAuto = () => {\r\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Advanced</h5>\r\n                <FileUpload name=\"demo[]\" url=\"./upload.php\" onUpload={onUpload} multiple accept=\"image/*\" maxFileSize={1000000}\r\n                    emptyTemplate={<p className=\"p-m-0\">Drag and drop files to here to upload.</p>} />\r\n\r\n                <h5>Basic</h5>\r\n                <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" maxFileSize={1000000} onUpload={onBasicUpload} />\r\n\r\n                <h5>Basic with Auto</h5>\r\n                <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" maxFileSize={1000000} onUpload={onBasicUploadAuto} auto chooseLabel=\"Browse\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { Toast } from 'primereact/toast';\r\nimport { FileUpload } from 'primereact/fileupload';\r\n\r\nconst FileUploadDemo = () => {\r\n    const toast = useRef(null);\r\n\r\n    const onUpload = () => {\r\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n\r\n    const onBasicUpload = () => {\r\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\r\n    }\r\n\r\n    const onBasicUploadAuto = () => {\r\n        toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Advanced</h5>\r\n                <FileUpload name=\"demo[]\" url=\"./upload.php\" onUpload={onUpload} multiple accept=\"image/*\" maxFileSize={1000000}\r\n                    emptyTemplate={<p className=\"p-m-0\">Drag and drop files to here to upload.</p>} />\r\n\r\n                <h5>Basic</h5>\r\n                <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" maxFileSize={1000000} onUpload={onBasicUpload} />\r\n\r\n                <h5>Basic with Auto</h5>\r\n                <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" maxFileSize={1000000} onUpload={onBasicUploadAuto} auto chooseLabel=\"Browse\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'public/upload.php': {\r\n                content: `\r\n<?php echo '<p>Fake Upload Process</p>'; ?>\r\n                `\r\n            }\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { FileUpload } from 'primereact/fileupload';\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Getting Started</h5>\r\n            <p>FileUpload requires a <i>url</i> property as the upload target and a <i>name</i> to identify the files at backend.</p>\r\n<CodeHighlight>\r\n{`\r\n<FileUpload name=\"demo\" url=\"./upload\"></FileUpload>\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Multiple Uploads</h5>\r\n            <p>Only one file can be selected at a time by default, to allow selecting multiple files at once enable <i>multiple</i> option.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<FileUpload name=\"demo[]\" url=\"./upload\" multiple />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>DragDrop</h5>\r\n            <p>File selection can also be done by dragging and dropping from the filesystem to the content section of the component.</p>\r\n\r\n            <h5>Auto Uploads</h5>\r\n            <p>When <i>auto</i> property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<FileUpload name=\"demo\" url=\"./upload\" auto />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>File Types</h5>\r\n            <p>Selectable file types can be restricted with <i>accept</i> property, example below only allows images to be uploaded. Read more about other possible values <a href=\"https://www.w3schools.com/tags/att_input_accept.asp\"> here</a>.</p>\r\n<CodeHighlight>\r\n{`\r\n<FileUpload name=\"demo[]\" url=\"./upload\" multiple accept=\"image/*\" />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>File Size</h5>\r\n            <p>Maximium file size can be restricted using <i>maxFileSize</i> property defined in bytes.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<FileUpload name=\"demo\" url=\"./upload\" maxFileSize=\"1000000\" />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <p>In order to customize the default messages use <i>invalidFileSizeMessageSummary</i> and <i>invalidFileSizeMessageDetail</i> options. In summary messages, {0} placeholder refers to the filename and in detail message, the file size.</p>\r\n            <ul>\r\n                <li>\r\n                    invalidFileSizeMessageSummary: '{0}: Invalid file size, '\r\n                </li>\r\n                <li>\r\n                    invalidFileSizeMessageDetail: string = 'maximum upload size is {0}.'\r\n                </li>\r\n            </ul>\r\n\r\n            <h5>Request Customization</h5>\r\n            <p>XHR request to upload the files can be customized using the onBeforeUpload callback that passes the xhr instance and FormData object as event parameters.</p>\r\n\r\n            <h5>Basic UI</h5>\r\n            <p>FileUpload basic mode provides a simpler UI as an alternative to advanced mode.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<FileUpload name=\"demo\" url=\"./upload\" mode=\"basic\" />\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Custom Upload</h5>\r\n            <p>Uploading implementation can be overriden by enabling customUpload property and defining a custom upload handler event.</p>\r\n<CodeHighlight>\r\n{`\r\n<FileUpload name=\"demo[]\" url=\"./upload\" customUpload uploadHandler={myUploader} />\r\n`}\r\n</CodeHighlight>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst myUploader = (event) => {\r\n    //event.files == files to upload\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Properties</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Default</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>id</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Unique identifier of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>name</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the request parameter to identify the files at backend.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>url</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Remote url to upload the files.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>mode</td>\r\n                            <td>string</td>\r\n                            <td>advanced</td>\r\n                            <td>Defines the UI of the component, possible values are \"advanced\" and \"basic\".</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>multiple</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Used to select multiple files at once from file dialog.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>accept</td>\r\n                            <td>string</td>\r\n                            <td>false</td>\r\n                            <td>Pattern to restrict the allowed file types such as \"image/*\".</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Disables the upload functionality.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>auto</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When enabled, upload begins automatically after selection is completed.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>maxFileSize</td>\r\n                            <td>number</td>\r\n                            <td>null</td>\r\n                            <td>Maximum file size allowed in bytes.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>invalidFileSizeMessageSummary</td>\r\n                            <td>string</td>\r\n                            <td>\"&#123;0&#125;: Invalid file size, \"</td>\r\n                            <td>Summary message of the invalid fize size.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>invalidFileSizeMessageDetail</td>\r\n                            <td>string</td>\r\n                            <td>\"maximum upload size is &#123;0&#125;.\"</td>\r\n                            <td>Detail message of the invalid fize size.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>style</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the component.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the component.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>withCredentials</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>previewWidth</td>\r\n                            <td>number</td>\r\n                            <td>50</td>\r\n                            <td>Width of the image thumbnail in pixels.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>chooseLabel</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label of the choose button. Defaults to global value in Locale configuration.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>uploadLabel</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label of the upload button. Defaults to global value in Locale configuration.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>cancelLabel</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label of the cancel button. Defaults to global value in Locale configuration.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>customUpload</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Whether to use the default upload or a manual implementation defined in uploadHandler callback.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>emptyTemplate</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>The template of empty content in container.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Events</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Parameters</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>onBeforeUpload</td>\r\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\r\n                                event.formData: FormData object.</td>\r\n                            <td>Callback to invoke before file upload begins to customize the request\r\n                                such as post parameters before the files.</td>\r\n                        </tr>\r\n\t\t\t\t\t\t<tr>\r\n                            <td>onBeforeSend</td>\r\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\r\n                                event.formData: FormData object.</td>\r\n                            <td>Callback to invoke before file send begins to customize the request\r\n                                such as adding headers.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onUpload</td>\r\n                            <td>event.xhr: XmlHttpRequest instance.<br />\r\n                                event.files: Uploaded files.</td>\r\n                            <td>Callback to invoke when file upload is complete.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onError</td>\r\n                            <td>event.xhr: XmlHttpRequest instance.<br />\r\n                                event.files: Files that are not uploaded.</td>\r\n                            <td>Callback to invoke if file upload fails.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onClear</td>\r\n                            <td>-.</td>\r\n                            <td>Callback to invoke when files in queue are removed without uploading.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onSelect</td>\r\n                            <td>event.originalEvent: Original browser event. <br />\r\n                                event.files: List of selected files.</td>\r\n                            <td>Callback to invoke when file upload is complete.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onProgress</td>\r\n                            <td>event.originalEvent: Original browser event. <br />\r\n                                event.progress: Calculated progress value.</td>\r\n                            <td>Callback to invoke when files are selected.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onValidationFail</td>\r\n                            <td>file: Invalid file.</td>\r\n                            <td>Callback to invoke when a validation file fails.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>uploadHandler</td>\r\n                            <td>event.files: List of selected files.</td>\r\n                            <td>Callback to invoke in custom upload mode to upload the files manually.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>onRemove</td>\r\n                            <td>event.originalEvent: Original browser event. <br />\r\n                                event.file: Selected file.</td>\r\n                            <td>Callback to invoke when a file is removed without uploading using clear button of a file.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Methods</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Parameters</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>upload</td>\r\n                            <td>-</td>\r\n                            <td>Uploads the selected files.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>clear</td>\r\n                            <td>-</td>\r\n                            <td>Clears the files list.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Styling</h5>\r\n            <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Element</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>p-fileupload</td>\r\n                            <td>Container element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-fileupload-buttonbar</td>\r\n                            <td>Header containing the buttons.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>p-fileupload-content</td>\r\n                            <td>Content section.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <h5>Dependencies</h5>\r\n                <p>None.</p>\r\n            </div>\r\n\r\n            </TabPanel>\r\n\r\n            {\r\n                useLiveEditorTabs({ name: 'FileUploadDemo', sources: this.sources, extFiles: this.extFiles })\r\n            }\r\n        </TabView>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}