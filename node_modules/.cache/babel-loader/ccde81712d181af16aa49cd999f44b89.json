{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\treetable\\\\TreeTableBodyCell.js\";\nimport React, { Component } from 'react';\nimport { classNames } from '../utils/ClassNames';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport DomHandler from '../utils/DomHandler';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport var TreeTableBodyCell = /*#__PURE__*/function (_Component) {\n  _inherits(TreeTableBodyCell, _Component);\n\n  var _super = _createSuper(TreeTableBodyCell);\n\n  function TreeTableBodyCell(props) {\n    var _this;\n\n    _classCallCheck(this, TreeTableBodyCell);\n\n    _this = _super.call(this, props);\n\n    if (_this.props.editor) {\n      _this.state = {};\n    }\n\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.onEditorFocus = _this.onEditorFocus.bind(_assertThisInitialized(_this));\n    _this.eventBusKey = \"\".concat(_this.props.field, \"_\").concat(_this.props.rowIndex);\n    return _this;\n  }\n\n  _createClass(TreeTableBodyCell, [{\n    key: \"onClick\",\n    value: function onClick() {\n      var _this2 = this;\n\n      if (this.props.editor && !this.state.editing) {\n        this.selfClick = true;\n        this.setState({\n          editing: true\n        }, function () {\n          _this2.bindDocumentEditListener();\n\n          OverlayEventBus.on('overlay-click', function (e) {\n            if (!_this2.isOutsideClicked(e.target)) {\n              _this2.selfClick = true;\n            }\n          }, _this2.eventBusKey);\n        });\n      }\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      if (event.which === 13 || event.which === 9) {\n        this.switchCellToViewMode(event);\n      }\n    }\n  }, {\n    key: \"bindDocumentEditListener\",\n    value: function bindDocumentEditListener() {\n      var _this3 = this;\n\n      if (!this.documentEditListener) {\n        this.documentEditListener = function (e) {\n          if (!_this3.selfClick && _this3.isOutsideClicked(e.target)) {\n            _this3.switchCellToViewMode(e);\n          }\n\n          _this3.selfClick = false;\n        };\n\n        document.addEventListener('click', this.documentEditListener);\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(target) {\n      return this.container && !(this.container.isSameNode(target) || this.container.contains(target));\n    }\n  }, {\n    key: \"unbindDocumentEditListener\",\n    value: function unbindDocumentEditListener() {\n      if (this.documentEditListener) {\n        document.removeEventListener('click', this.documentEditListener);\n        this.documentEditListener = null;\n        this.selfClick = false;\n      }\n    }\n  }, {\n    key: \"closeCell\",\n    value: function closeCell() {\n      var _this4 = this;\n\n      /* When using the 'tab' key, the focus event of the next cell is not called in IE. */\n      setTimeout(function () {\n        _this4.setState({\n          editing: false\n        }, function () {\n          _this4.unbindDocumentEditListener();\n\n          OverlayEventBus.off('overlay-click', _this4.eventBusKey);\n        });\n      }, 1);\n    }\n  }, {\n    key: \"onEditorFocus\",\n    value: function onEditorFocus(event) {\n      this.onClick(event);\n    }\n  }, {\n    key: \"switchCellToViewMode\",\n    value: function switchCellToViewMode(event) {\n      if (this.props.editorValidator) {\n        var valid = this.props.editorValidator({\n          originalEvent: event,\n          columnProps: this.props\n        });\n\n        if (valid) {\n          this.closeCell();\n        }\n      } else {\n        this.closeCell();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this5 = this;\n\n      if (this.container && this.props.editor) {\n        clearTimeout(this.tabindexTimeout);\n\n        if (this.state && this.state.editing) {\n          var focusable = DomHandler.findSingle(this.container, 'input');\n\n          if (focusable && document.activeElement !== focusable && !focusable.hasAttribute('data-isCellEditing')) {\n            focusable.setAttribute('data-isCellEditing', true);\n            focusable.focus();\n          }\n\n          this.keyHelper.tabIndex = -1;\n        } else {\n          this.tabindexTimeout = setTimeout(function () {\n            if (_this5.keyHelper) {\n              _this5.keyHelper.setAttribute('tabindex', 0);\n            }\n          }, 50);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentEditListener();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var className = classNames(this.props.bodyClassName || this.props.className, {\n        'p-editable-column': this.props.editor,\n        'p-cell-editing': this.props.editor ? this.state.editing : false\n      });\n      var style = this.props.bodyStyle || this.props.style;\n      var content;\n\n      if (this.state && this.state.editing) {\n        if (this.props.editor) content = this.props.editor(this.props);else throw new Error(\"Editor is not found on column.\");\n      } else {\n        if (this.props.body) content = this.props.body(this.props.node, this.props);else content = ObjectUtils.resolveFieldData(this.props.node.data, this.props.field);\n      }\n      /* eslint-disable */\n\n\n      var editorKeyHelper = this.props.editor && /*#__PURE__*/React.createElement(\"a\", {\n        tabIndex: 0,\n        ref: function ref(el) {\n          _this6.keyHelper = el;\n        },\n        className: \"p-cell-editor-key-helper p-hidden-accessible\",\n        onFocus: this.onEditorFocus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 193\n        }\n      }));\n      /* eslint-enable */\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        ref: function ref(el) {\n          return _this6.container = el;\n        },\n        className: className,\n        style: style,\n        onClick: this.onClick,\n        onKeyDown: this.onKeyDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, this.props.children, editorKeyHelper, content);\n    }\n  }]);\n\n  return TreeTableBodyCell;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/treetable/TreeTableBodyCell.js"],"names":["React","Component","classNames","ObjectUtils","DomHandler","OverlayEventBus","TreeTableBodyCell","props","editor","state","onClick","bind","onKeyDown","onEditorFocus","eventBusKey","field","rowIndex","editing","selfClick","setState","bindDocumentEditListener","on","e","isOutsideClicked","target","event","which","switchCellToViewMode","documentEditListener","document","addEventListener","container","isSameNode","contains","removeEventListener","setTimeout","unbindDocumentEditListener","off","editorValidator","valid","originalEvent","columnProps","closeCell","clearTimeout","tabindexTimeout","focusable","findSingle","activeElement","hasAttribute","setAttribute","focus","keyHelper","tabIndex","className","bodyClassName","style","bodyStyle","content","Error","body","node","resolveFieldData","data","editorKeyHelper","el","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport class TreeTableBodyCell extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (this.props.editor) {\r\n            this.state = {};\r\n        }\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onEditorFocus = this.onEditorFocus.bind(this);\r\n\r\n        this.eventBusKey = `${this.props.field}_${this.props.rowIndex}`;\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.editor && !this.state.editing) {\r\n            this.selfClick = true;\r\n\r\n            this.setState({\r\n                editing: true\r\n            }, () => {\r\n                this.bindDocumentEditListener();\r\n\r\n                OverlayEventBus.on('overlay-click', (e) => {\r\n                    if (!this.isOutsideClicked(e.target)) {\r\n                        this.selfClick = true;\r\n                    }\r\n                }, this.eventBusKey);\r\n            });\r\n        }\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (event.which === 13 || event.which === 9) {\r\n            this.switchCellToViewMode(event);\r\n        }\r\n    }\r\n\r\n    bindDocumentEditListener() {\r\n        if (!this.documentEditListener) {\r\n            this.documentEditListener = (e) => {\r\n                if (!this.selfClick && this.isOutsideClicked(e.target)) {\r\n                    this.switchCellToViewMode(e);\r\n                }\r\n\r\n                this.selfClick = false;\r\n            };\r\n\r\n            document.addEventListener('click', this.documentEditListener);\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(target) {\r\n        return this.container && !(this.container.isSameNode(target) || this.container.contains(target));\r\n    }\r\n\r\n    unbindDocumentEditListener() {\r\n        if(this.documentEditListener) {\r\n            document.removeEventListener('click', this.documentEditListener);\r\n            this.documentEditListener = null;\r\n            this.selfClick = false;\r\n        }\r\n    }\r\n\r\n    closeCell() {\r\n        /* When using the 'tab' key, the focus event of the next cell is not called in IE. */\r\n        setTimeout(() => {\r\n            this.setState({\r\n                editing: false\r\n            }, () => {\r\n                this.unbindDocumentEditListener();\r\n                OverlayEventBus.off('overlay-click', this.eventBusKey);\r\n            });\r\n        }, 1);\r\n    }\r\n\r\n    onEditorFocus(event) {\r\n        this.onClick(event);\r\n    }\r\n\r\n    switchCellToViewMode(event) {\r\n        if (this.props.editorValidator) {\r\n            let valid = this.props.editorValidator({\r\n                originalEvent: event,\r\n                columnProps: this.props\r\n            });\r\n\r\n            if(valid) {\r\n                this.closeCell();\r\n            }\r\n        }\r\n        else {\r\n            this.closeCell();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.container && this.props.editor) {\r\n            clearTimeout(this.tabindexTimeout);\r\n            if (this.state && this.state.editing) {\r\n                let focusable = DomHandler.findSingle(this.container, 'input');\r\n                if (focusable && document.activeElement !== focusable && !focusable.hasAttribute('data-isCellEditing')) {\r\n                    focusable.setAttribute('data-isCellEditing', true);\r\n                    focusable.focus();\r\n                }\r\n\r\n                this.keyHelper.tabIndex = -1;\r\n            }\r\n            else {\r\n                this.tabindexTimeout = setTimeout(() => {\r\n                    if (this.keyHelper) {\r\n                        this.keyHelper.setAttribute('tabindex', 0);\r\n                    }\r\n                }, 50);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentEditListener();\r\n    }\r\n\r\n    render() {\r\n        const className = classNames(this.props.bodyClassName||this.props.className, {\r\n            'p-editable-column': this.props.editor,\r\n            'p-cell-editing': this.props.editor ? this.state.editing : false\r\n        });\r\n        const style = this.props.bodyStyle || this.props.style\r\n        let content;\r\n\r\n        if(this.state && this.state.editing) {\r\n            if(this.props.editor)\r\n                content = this.props.editor(this.props);\r\n            else\r\n                throw new Error(\"Editor is not found on column.\");\r\n        }\r\n        else {\r\n            if (this.props.body)\r\n                content = this.props.body(this.props.node, this.props);\r\n            else\r\n                content = ObjectUtils.resolveFieldData(this.props.node.data, this.props.field);\r\n        }\r\n\r\n        /* eslint-disable */\r\n        const editorKeyHelper = this.props.editor && <a tabIndex={0} ref={(el) => {this.keyHelper = el;}} className=\"p-cell-editor-key-helper p-hidden-accessible\" onFocus={this.onEditorFocus}><span></span></a>;\r\n        /* eslint-enable */\r\n\r\n        return (\r\n            <td ref={el => this.container = el} className={className} style={style} onClick={this.onClick} onKeyDown={this.onKeyDown}>\r\n                {this.props.children}\r\n                {editorKeyHelper}\r\n                {content}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}