{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\datascroller\\\\DataScrollerLoaderDemo.js\";\nimport React, { Component } from 'react';\nimport { DataScroller } from '../../components/datascroller/DataScroller';\nimport { Button } from '../../components/button/Button';\nimport { Rating } from '../../components/rating/Rating';\nimport ProductService from '../service/ProductService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport './DataScrollerDemo.scss';\nexport var DataScrollerLoaderDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataScrollerLoaderDemo, _Component);\n\n  var _super = _createSuper(DataScrollerLoaderDemo);\n\n  function DataScrollerLoaderDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataScrollerLoaderDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      products: []\n    };\n    _this.productService = new ProductService();\n    _this.itemTemplate = _this.itemTemplate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataScrollerLoaderDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.productService.getProducts().then(function (data) {\n        return _this2.setState({\n          products: data\n        });\n      });\n    }\n  }, {\n    key: \"itemTemplate\",\n    value: function itemTemplate(data) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"showcase/demo/images/product/\".concat(data.image),\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        alt: data.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, data.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, data.description), /*#__PURE__*/React.createElement(Rating, {\n        value: data.rating,\n        readOnly: true,\n        cancel: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-tag product-category-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 72\n        }\n      }, data.category)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"product-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"$\", data.price), /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-shopping-cart\",\n        label: \"Add to Cart\",\n        disabled: data.inventoryStatus === 'OUTOFSTOCK',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-badge status-\".concat(data.inventoryStatus.toLowerCase()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, data.inventoryStatus)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var footer = /*#__PURE__*/React.createElement(Button, {\n        type: \"text\",\n        icon: \"pi pi-plus\",\n        label: \"Load\",\n        onClick: function onClick() {\n          return _this3.ds.load();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataScroller\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, \"DataScroller \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 42\n        }\n      }, \"Loader\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"Instead of scrolling, a custom element can be used to load data.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation datascroller-demo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DataScroller, {\n        ref: function ref(el) {\n          return _this3.ds = el;\n        },\n        value: this.state.products,\n        itemTemplate: this.itemTemplate,\n        rows: 5,\n        loader: true,\n        footer: footer,\n        header: \"Click Load Button at Footer to Load More\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(DataScrollerLoaderDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataScrollerLoaderDemo;\n}(Component);\nexport var DataScrollerLoaderDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataScrollerLoaderDoc, _Component2);\n\n  var _super2 = _createSuper(DataScrollerLoaderDoc);\n\n  function DataScrollerLoaderDoc(props) {\n    var _this4;\n\n    _classCallCheck(this, DataScrollerLoaderDoc);\n\n    _this4 = _super2.call(this, props);\n    _this4.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataScroller } from 'primereact/datascroller';\\nimport { Button } from 'primereact/button';\\nimport { Rating } from 'primereact/rating';\\nimport ProductService from '../service/ProductService';\\nimport './DataScrollerDemo.css';\\n\\nexport class DataScrollerLoaderDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: []\\n        };\\n\\n        this.productService = new ProductService();\\n        this.itemTemplate = this.itemTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProducts().then(data => this.setState({ products: data }));\\n    }\\n\\n    itemTemplate(data) {\\n        return (\\n            <div className=\\\"product-item\\\">\\n                <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                <div className=\\\"product-detail\\\">\\n                    <div className=\\\"product-name\\\">{data.name}</div>\\n                    <div className=\\\"product-description\\\">{data.description}</div>\\n                    <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                    <i className=\\\"pi pi-tag product-category-icon\\\"></i><span className=\\\"product-category\\\">{data.category}</span>\\n                </div>\\n                <div className=\\\"product-action\\\">\\n                    <span className=\\\"product-price\\\">${data.price}</span>\\n                    <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                    <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        const footer = <Button type=\\\"text\\\" icon=\\\"pi pi-plus\\\" label=\\\"Load\\\" onClick={() => this.ds.load()} />;\\n\\n        return (\\n            <div className=\\\"datascroller-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <DataScroller ref={(el) => this.ds = el} value={this.state.products} itemTemplate={this.itemTemplate} rows={5}\\n                        loader footer={footer} header=\\\"Click Load Button at Footer to Load More\\\" />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataScroller } from 'primereact/datascroller';\\nimport { Button } from 'primereact/button';\\nimport { Rating } from 'primereact/rating';\\nimport ProductService from '../service/ProductService';\\nimport './DataScrollerDemo.css';\\n\\nconst DataScrollerLoaderDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const ds = useRef(null);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        this.productService.getProducts().then(data => this.setState({ products: data }));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const itemTemplate = (data) => {\\n        return (\\n            <div className=\\\"product-item\\\">\\n                <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                <div className=\\\"product-detail\\\">\\n                    <div className=\\\"product-name\\\">{data.name}</div>\\n                    <div className=\\\"product-description\\\">{data.description}</div>\\n                    <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                    <i className=\\\"pi pi-tag product-category-icon\\\"></i><span className=\\\"product-category\\\">{data.category}</span>\\n                </div>\\n                <div className=\\\"product-action\\\">\\n                    <span className=\\\"product-price\\\">${data.price}</span>\\n                    <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                    <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    const footer = <Button type=\\\"text\\\" icon=\\\"pi pi-plus\\\" label=\\\"Load\\\" onClick={() => ds.load()} />;\\n\\n    return (\\n        <div className=\\\"datascroller-demo\\\">\\n            <div className=\\\"card\\\">\\n                <DataScroller ref={ds} value={products} itemTemplate={itemTemplate} rows={5}\\n                    loader footer={footer} header=\\\"Click Load Button at Footer to Load More\\\" />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataScroller } from 'primereact/datascroller';\\nimport { Button } from 'primereact/button';\\nimport { Rating } from 'primereact/rating';\\nimport ProductService from '../service/ProductService';\\nimport './DataScrollerDemo.css';\\n\\nconst DataScrollerLoaderDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const ds = useRef(null);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        this.productService.getProducts().then(data => this.setState({ products: data }));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const itemTemplate = (data) => {\\n        return (\\n            <div className=\\\"product-item\\\">\\n                <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\\n                <div className=\\\"product-detail\\\">\\n                    <div className=\\\"product-name\\\">{data.name}</div>\\n                    <div className=\\\"product-description\\\">{data.description}</div>\\n                    <Rating value={data.rating} readOnly cancel={false}></Rating>\\n                    <i className=\\\"pi pi-tag product-category-icon\\\"></i><span className=\\\"product-category\\\">{data.category}</span>\\n                </div>\\n                <div className=\\\"product-action\\\">\\n                    <span className=\\\"product-price\\\">${data.price}</span>\\n                    <Button icon=\\\"pi pi-shopping-cart\\\" label=\\\"Add to Cart\\\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\\n                    <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    const footer = <Button type=\\\"text\\\" icon=\\\"pi pi-plus\\\" label=\\\"Load\\\" onClick={() => ds.load()} />;\\n\\n    return (\\n        <div className=\\\"datascroller-demo\\\">\\n            <div className=\\\"card\\\">\\n                <DataScroller ref={ds} value={products} itemTemplate={itemTemplate} rows={5}\\n                    loader footer={footer} header=\\\"Click Load Button at Footer to Load More\\\" />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    _this4.extFiles = {\n      'src/demo/DataScrollerDemo.css': {\n        content: \"\\n.datascroller-demo .product-name {\\n    font-size: 1.5rem;\\n    font-weight: 700;\\n}\\n\\n.datascroller-demo .product-description {\\n    margin: 0 0 1rem 0;\\n}\\n\\n.datascroller-demo .product-category-icon {\\n    vertical-align: middle;\\n    margin-right: .5rem;\\n}\\n\\n.datascroller-demo .product-category {\\n    font-weight: 600;\\n    vertical-align: middle;\\n}\\n\\n.datascroller-demo .product-item {\\n    display: flex;\\n    align-items: center;\\n    padding: 1rem;\\n    width: 100%;\\n}\\n\\n.datascroller-demo .product-item img {\\n    width: 150px;\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n    margin-right: 2rem;\\n}\\n\\n.datascroller-demo .product-item .product-detail {\\n    flex: 1 1 0;\\n}\\n\\n.datascroller-demo .product-item .p-rating {\\n    margin: 0 0 .5rem 0;\\n}\\n\\n.datascroller-demo .product-item .product-price {\\n    font-size: 1.5rem;\\n    font-weight: 600;\\n    margin-bottom: .5rem;\\n    align-self: flex-end;\\n}\\n\\n.datascroller-demo .product-item .product-action {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.datascroller-demo .product-item .p-button {\\n    margin-bottom: .5rem;\\n}\\n\\n@media screen and (max-width: 576px) {\\n    .datascroller-demo .product-item {\\n        flex-direction: column;\\n        align-items: center;\\n    }\\n\\n    .datascroller-demo .product-item img {\\n        width: 75%;\\n        margin: 2rem 0;\\n    }\\n\\n    .datascroller-demo .product-item .product-detail {\\n        text-align: center;\\n    }\\n\\n    .datascroller-demo .product-item .product-price {\\n        align-self: center;\\n    }\\n\\n    .datascroller-demo .product-item .product-action {\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    .datascroller-demo .product-item .product-action {\\n        margin-top: 2rem;\\n        flex-direction: row;\\n        justify-content: space-between;\\n        align-items: center;\\n        width: 100%;\\n    }\\n}\\n                \"\n      }\n    };\n    return _this4;\n  }\n\n  _createClass(DataScrollerLoaderDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataScrollerLoaderDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products',\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return DataScrollerLoaderDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datascroller/DataScrollerLoaderDemo.js"],"names":["React","Component","DataScroller","Button","Rating","ProductService","TabView","useLiveEditorTabs","AppInlineHeader","DataScrollerLoaderDemo","props","state","products","productService","itemTemplate","bind","getProducts","then","data","setState","image","e","target","src","name","description","rating","category","price","inventoryStatus","toLowerCase","footer","ds","load","el","DataScrollerLoaderDoc","sources","tabName","content","extFiles","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataScroller } from '../../components/datascroller/DataScroller';\r\nimport { Button } from '../../components/button/Button';\r\nimport { Rating } from '../../components/rating/Rating';\r\nimport ProductService from '../service/ProductService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './DataScrollerDemo.scss';\r\n\r\nexport class DataScrollerLoaderDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProducts().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    itemTemplate(data) {\r\n        return (\r\n            <div className=\"product-item\">\r\n                <img src={`showcase/demo/images/product/${data.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                <div className=\"product-detail\">\r\n                    <div className=\"product-name\">{data.name}</div>\r\n                    <div className=\"product-description\">{data.description}</div>\r\n                    <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                    <i className=\"pi pi-tag product-category-icon\"></i><span className=\"product-category\">{data.category}</span>\r\n                </div>\r\n                <div className=\"product-action\">\r\n                    <span className=\"product-price\">${data.price}</span>\r\n                    <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                    <span className={`product-badge status-${data.inventoryStatus.toLowerCase()}`}>{data.inventoryStatus}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const footer = <Button type=\"text\" icon=\"pi pi-plus\" label=\"Load\" onClick={() => this.ds.load()} />;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataScroller\">\r\n                        <h1>DataScroller <span>Loader</span></h1>\r\n                        <p>Instead of scrolling, a custom element can be used to load data.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation datascroller-demo\">\r\n                    <div className=\"card\">\r\n                        <DataScroller ref={(el) => this.ds = el} value={this.state.products} itemTemplate={this.itemTemplate} rows={5}\r\n                            loader footer={footer} header=\"Click Load Button at Footer to Load More\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <DataScrollerLoaderDoc />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataScrollerLoaderDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataScroller } from 'primereact/datascroller';\r\nimport { Button } from 'primereact/button';\r\nimport { Rating } from 'primereact/rating';\r\nimport ProductService from '../service/ProductService';\r\nimport './DataScrollerDemo.css';\r\n\r\nexport class DataScrollerLoaderDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProducts().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    itemTemplate(data) {\r\n        return (\r\n            <div className=\"product-item\">\r\n                <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                <div className=\"product-detail\">\r\n                    <div className=\"product-name\">{data.name}</div>\r\n                    <div className=\"product-description\">{data.description}</div>\r\n                    <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                    <i className=\"pi pi-tag product-category-icon\"></i><span className=\"product-category\">{data.category}</span>\r\n                </div>\r\n                <div className=\"product-action\">\r\n                    <span className=\"product-price\">\\${data.price}</span>\r\n                    <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                    <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const footer = <Button type=\"text\" icon=\"pi pi-plus\" label=\"Load\" onClick={() => this.ds.load()} />;\r\n\r\n        return (\r\n            <div className=\"datascroller-demo\">\r\n                <div className=\"card\">\r\n                    <DataScroller ref={(el) => this.ds = el} value={this.state.products} itemTemplate={this.itemTemplate} rows={5}\r\n                        loader footer={footer} header=\"Click Load Button at Footer to Load More\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataScroller } from 'primereact/datascroller';\r\nimport { Button } from 'primereact/button';\r\nimport { Rating } from 'primereact/rating';\r\nimport ProductService from '../service/ProductService';\r\nimport './DataScrollerDemo.css';\r\n\r\nconst DataScrollerLoaderDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const ds = useRef(null);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        this.productService.getProducts().then(data => this.setState({ products: data }));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const itemTemplate = (data) => {\r\n        return (\r\n            <div className=\"product-item\">\r\n                <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                <div className=\"product-detail\">\r\n                    <div className=\"product-name\">{data.name}</div>\r\n                    <div className=\"product-description\">{data.description}</div>\r\n                    <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                    <i className=\"pi pi-tag product-category-icon\"></i><span className=\"product-category\">{data.category}</span>\r\n                </div>\r\n                <div className=\"product-action\">\r\n                    <span className=\"product-price\">\\${data.price}</span>\r\n                    <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                    <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const footer = <Button type=\"text\" icon=\"pi pi-plus\" label=\"Load\" onClick={() => ds.load()} />;\r\n\r\n    return (\r\n        <div className=\"datascroller-demo\">\r\n            <div className=\"card\">\r\n                <DataScroller ref={ds} value={products} itemTemplate={itemTemplate} rows={5}\r\n                    loader footer={footer} header=\"Click Load Button at Footer to Load More\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataScroller } from 'primereact/datascroller';\r\nimport { Button } from 'primereact/button';\r\nimport { Rating } from 'primereact/rating';\r\nimport ProductService from '../service/ProductService';\r\nimport './DataScrollerDemo.css';\r\n\r\nconst DataScrollerLoaderDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const ds = useRef(null);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        this.productService.getProducts().then(data => this.setState({ products: data }));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const itemTemplate = (data) => {\r\n        return (\r\n            <div className=\"product-item\">\r\n                <img src={\\`showcase/demo/images/product/\\${data.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={data.name} />\r\n                <div className=\"product-detail\">\r\n                    <div className=\"product-name\">{data.name}</div>\r\n                    <div className=\"product-description\">{data.description}</div>\r\n                    <Rating value={data.rating} readOnly cancel={false}></Rating>\r\n                    <i className=\"pi pi-tag product-category-icon\"></i><span className=\"product-category\">{data.category}</span>\r\n                </div>\r\n                <div className=\"product-action\">\r\n                    <span className=\"product-price\">\\${data.price}</span>\r\n                    <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'}></Button>\r\n                    <span className={\\`product-badge status-\\${data.inventoryStatus.toLowerCase()}\\`}>{data.inventoryStatus}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const footer = <Button type=\"text\" icon=\"pi pi-plus\" label=\"Load\" onClick={() => ds.load()} />;\r\n\r\n    return (\r\n        <div className=\"datascroller-demo\">\r\n            <div className=\"card\">\r\n                <DataScroller ref={ds} value={products} itemTemplate={itemTemplate} rows={5}\r\n                    loader footer={footer} header=\"Click Load Button at Footer to Load More\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/DataScrollerDemo.css': {\r\n                content: `\r\n.datascroller-demo .product-name {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n}\r\n\r\n.datascroller-demo .product-description {\r\n    margin: 0 0 1rem 0;\r\n}\r\n\r\n.datascroller-demo .product-category-icon {\r\n    vertical-align: middle;\r\n    margin-right: .5rem;\r\n}\r\n\r\n.datascroller-demo .product-category {\r\n    font-weight: 600;\r\n    vertical-align: middle;\r\n}\r\n\r\n.datascroller-demo .product-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    width: 100%;\r\n}\r\n\r\n.datascroller-demo .product-item img {\r\n    width: 150px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    margin-right: 2rem;\r\n}\r\n\r\n.datascroller-demo .product-item .product-detail {\r\n    flex: 1 1 0;\r\n}\r\n\r\n.datascroller-demo .product-item .p-rating {\r\n    margin: 0 0 .5rem 0;\r\n}\r\n\r\n.datascroller-demo .product-item .product-price {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    margin-bottom: .5rem;\r\n    align-self: flex-end;\r\n}\r\n\r\n.datascroller-demo .product-item .product-action {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.datascroller-demo .product-item .p-button {\r\n    margin-bottom: .5rem;\r\n}\r\n\r\n@media screen and (max-width: 576px) {\r\n    .datascroller-demo .product-item {\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    .datascroller-demo .product-item img {\r\n        width: 75%;\r\n        margin: 2rem 0;\r\n    }\r\n\r\n    .datascroller-demo .product-item .product-detail {\r\n        text-align: center;\r\n    }\r\n\r\n    .datascroller-demo .product-item .product-price {\r\n        align-self: center;\r\n    }\r\n\r\n    .datascroller-demo .product-item .product-action {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .datascroller-demo .product-item .product-action {\r\n        margin-top: 2rem;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        width: 100%;\r\n    }\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataScrollerLoaderDemo', sources: this.sources, service: 'ProductService', data: 'products', extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}