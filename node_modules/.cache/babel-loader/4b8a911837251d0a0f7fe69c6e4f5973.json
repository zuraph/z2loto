{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var SplitButtonDoc=/*#__PURE__*/function(_Component){_inherits(SplitButtonDoc,_Component);var _super=_createSuper(SplitButtonDoc);function SplitButtonDoc(props){var _this;_classCallCheck(this,SplitButtonDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { SplitButton } from 'primereact/splitbutton';\\nimport { Toast } from 'primereact/toast';\\n\\nexport class SplitButtonDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.items = [\\n            {\\n                label: 'Update',\\n                icon: 'pi pi-refresh',\\n                command: () => {\\n                    this.toast.show({severity:'success', summary:'Updated', detail:'Data Updated'});\\n                }\\n            },\\n            {\\n                label: 'Delete',\\n                icon: 'pi pi-times',\\n                command: () => {\\n                    this.toast.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\\n                }\\n            },\\n            {\\n                label: 'React Website',\\n                icon: 'pi pi-external-link',\\n                command: () => {\\n                    window.location.href = 'https://facebook.github.io/react/'\\n                }\\n            },\\n            {   label: 'Upload',\\n                icon: 'pi pi-upload',\\n                command: () => {\\n                    window.location.hash = \\\"/fileupload\\\"\\n                }\\n            }\\n        ];\\n\\n        this.save = this.save.bind(this);\\n    }\\n\\n    save() {\\n        this.toast.show({severity: 'success', summary: 'Success', detail: 'Data Saved'});\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => this.toast = el}></Toast>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" onClick={this.save} model={this.items}></SplitButton>\\n\\n                    <h5>Severities</h5>\\n                    <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={this.items} className=\\\"p-mr-2\\\"></SplitButton>\\n                    <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={this.items} className=\\\"p-button-secondary p-mr-2\\\"></SplitButton>\\n                    <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={this.items} className=\\\"p-button-success p-mr-2\\\"></SplitButton>\\n                    <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={this.items} className=\\\"p-button-info p-mr-2\\\"></SplitButton>\\n                    <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={this.items} className=\\\"p-button-warning p-mr-2\\\"></SplitButton>\\n                    <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={this.items} className=\\\"p-button-help p-mr-2\\\"></SplitButton>\\n                    <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={this.items} className=\\\"p-button-danger p-mr-2\\\"></SplitButton>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useRef } from 'react';\\nimport { SplitButton } from 'primereact/splitbutton';\\nimport { Toast } from 'primereact/toast';\\n\\nconst SplitButtonDemo = () => {\\n    const toast = useRef(null);\\n    const items = [\\n        {\\n            label: 'Update',\\n            icon: 'pi pi-refresh',\\n            command: () => {\\n                toast.current.show({severity:'success', summary:'Updated', detail:'Data Updated'});\\n            }\\n        },\\n        {\\n            label: 'Delete',\\n            icon: 'pi pi-times',\\n            command: () => {\\n                toast.current.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\\n            }\\n        },\\n        {\\n            label: 'React Website',\\n            icon: 'pi pi-external-link',\\n            command: () => {\\n                window.location.href = 'https://facebook.github.io/react/'\\n            }\\n        },\\n        {   label: 'Upload',\\n            icon: 'pi pi-upload',\\n            command: () => {\\n                window.location.hash = \\\"/fileupload\\\"\\n            }\\n        }\\n    ];\\n\\n    const save = () => {\\n        toast.current.show({severity: 'success', summary: 'Success', detail: 'Data Saved'});\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" onClick={save} model={items}></SplitButton>\\n\\n                <h5>Severities</h5>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-secondary p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-success p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-info p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-warning p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-help p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-danger p-mr-2\\\"></SplitButton>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useRef } from 'react';\\nimport { SplitButton } from 'primereact/splitbutton';\\nimport { Toast } from 'primereact/toast';\\n\\nconst SplitButtonDemo = () => {\\n    const toast = useRef(null);\\n    const items = [\\n        {\\n            label: 'Update',\\n            icon: 'pi pi-refresh',\\n            command: () => {\\n                toast.current.show({severity:'success', summary:'Updated', detail:'Data Updated'});\\n            }\\n        },\\n        {\\n            label: 'Delete',\\n            icon: 'pi pi-times',\\n            command: () => {\\n                toast.current.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\\n            }\\n        },\\n        {\\n            label: 'React Website',\\n            icon: 'pi pi-external-link',\\n            command: () => {\\n                window.location.href = 'https://facebook.github.io/react/'\\n            }\\n        },\\n        {   label: 'Upload',\\n            icon: 'pi pi-upload',\\n            command: () => {\\n                window.location.hash = \\\"/fileupload\\\"\\n            }\\n        }\\n    ];\\n\\n    const save = () => {\\n        toast.current.show({severity: 'success', summary: 'Success', detail: 'Data Saved'});\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" onClick={save} model={items}></SplitButton>\\n\\n                <h5>Severities</h5>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-secondary p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-success p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-info p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-warning p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-help p-mr-2\\\"></SplitButton>\\n                <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" model={items} className=\\\"p-button-danger p-mr-2\\\"></SplitButton>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this;}_createClass(SplitButtonDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport {SplitButton} from 'primereact/splitbutton';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"SplitButton has a default command button and a collection of additional options defined by the \",/*#__PURE__*/React.createElement(\"i\",null,\"model\"),\" property.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nexport const SplitButtonDemo = () => {\\n\\n    const items = [\\n        {\\n            label: 'Update',\\n            icon: 'pi pi-refresh',\\n            command: (e) => {\\n                toast.current.show({severity:'success', summary:'Updated', detail:'Data Updated'});\\n            }\\n        },\\n        {\\n            label: 'Delete',\\n            icon: 'pi pi-times',\\n            command: (e) => {\\n                toast.current.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\\n            }\\n        },\\n        {\\n            label: 'React Website',\\n            icon: 'pi pi-external-link',\\n            command:(e) => {\\n                window.location.href = 'https://facebook.github.io/react/'\\n            }\\n        },\\n        {   label: 'Upload',\\n            icon: 'pi pi-upload',\\n            command:(e) => {\\n                window.location.hash = \\\"/fileupload\\\"\\n            }\\n        }\\n    ]\\n\\n    const save = () => {\\n        toast.current.show({severity: 'success', summary: 'Success', detail: 'Data Saved'});\\n    }\\n\\n        return (\\n            <SplitButton label=\\\"Save\\\" icon=\\\"pi pi-plus\\\" onClick={save} model={items}></SplitButton>\\n        )\\n    }\\n}\\n\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"MenuModel API\"),/*#__PURE__*/React.createElement(\"p\",null,\"SplitButton uses the common MenuModel API to define the items, visit \",/*#__PURE__*/React.createElement(Link,{to:\"/menumodel\"},\"MenuModel API\"),\" for details.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Severity\"),/*#__PURE__*/React.createElement(\"p\",null,\"Different color options are available as severity levels.\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\".p-button-secondary\"),/*#__PURE__*/React.createElement(\"li\",null,\".p-button-success\"),/*#__PURE__*/React.createElement(\"li\",null,\".p-button-info\"),/*#__PURE__*/React.createElement(\"li\",null,\".p-button-warning\"),/*#__PURE__*/React.createElement(\"li\",null,\".p-button-danger\")),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<SplitButton label=\\\"Primary\\\" />\\n<SplitButton label=\\\"Secondary\\\" className=\\\"p-button-secondary\\\" model={items} />\\n<SplitButton label=\\\"Success\\\" className=\\\"p-button-success\\\" model={items} />\\n<SplitButton label=\\\"Info\\\" className=\\\"p-button-info\\\" model={items} />\\n<SplitButton label=\\\"Warning\\\" className=\\\"p-button-warning\\\" model={items} />\\n<SplitButton label=\\\"Danger\\\" className=\\\"p-button-danger\\\" model={items} />\\n\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Identifier of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"label\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Text of the button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"icon\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the icon.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"model\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"MenuModel instance to define the overlay items.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the component should be disabled.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"ClassName of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"menuStyle\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the overlay menu.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"menuClassName\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"ClassName class of the overlay menu.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tabIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Index of the element in tabbing order.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"appendTo\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element instance where the dialog should be mounted.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"buttonTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Template of the default button.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onClick\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when main button is clicked.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-splitbutton\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-splitbutton-button\"),/*#__PURE__*/React.createElement(\"td\",null,\"Dropdown button.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-menu\"),/*#__PURE__*/React.createElement(\"td\",null,\"Overlay menu.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'SplitButtonDemo',sources:this.sources})));}}]);return SplitButtonDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/splitbutton/SplitButtonDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","SplitButtonDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class SplitButtonDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { SplitButton } from 'primereact/splitbutton';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nexport class SplitButtonDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.items = [\r\n            {\r\n                label: 'Update',\r\n                icon: 'pi pi-refresh',\r\n                command: () => {\r\n                    this.toast.show({severity:'success', summary:'Updated', detail:'Data Updated'});\r\n                }\r\n            },\r\n            {\r\n                label: 'Delete',\r\n                icon: 'pi pi-times',\r\n                command: () => {\r\n                    this.toast.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\r\n                }\r\n            },\r\n            {\r\n                label: 'React Website',\r\n                icon: 'pi pi-external-link',\r\n                command: () => {\r\n                    window.location.href = 'https://facebook.github.io/react/'\r\n                }\r\n            },\r\n            {   label: 'Upload',\r\n                icon: 'pi pi-upload',\r\n                command: () => {\r\n                    window.location.hash = \"/fileupload\"\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.save = this.save.bind(this);\r\n    }\r\n\r\n    save() {\r\n        this.toast.show({severity: 'success', summary: 'Success', detail: 'Data Saved'});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => this.toast = el}></Toast>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" onClick={this.save} model={this.items}></SplitButton>\r\n\r\n                    <h5>Severities</h5>\r\n                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.items} className=\"p-mr-2\"></SplitButton>\r\n                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.items} className=\"p-button-secondary p-mr-2\"></SplitButton>\r\n                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.items} className=\"p-button-success p-mr-2\"></SplitButton>\r\n                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.items} className=\"p-button-info p-mr-2\"></SplitButton>\r\n                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.items} className=\"p-button-warning p-mr-2\"></SplitButton>\r\n                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.items} className=\"p-button-help p-mr-2\"></SplitButton>\r\n                    <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={this.items} className=\"p-button-danger p-mr-2\"></SplitButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { SplitButton } from 'primereact/splitbutton';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst SplitButtonDemo = () => {\r\n    const toast = useRef(null);\r\n    const items = [\r\n        {\r\n            label: 'Update',\r\n            icon: 'pi pi-refresh',\r\n            command: () => {\r\n                toast.current.show({severity:'success', summary:'Updated', detail:'Data Updated'});\r\n            }\r\n        },\r\n        {\r\n            label: 'Delete',\r\n            icon: 'pi pi-times',\r\n            command: () => {\r\n                toast.current.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\r\n            }\r\n        },\r\n        {\r\n            label: 'React Website',\r\n            icon: 'pi pi-external-link',\r\n            command: () => {\r\n                window.location.href = 'https://facebook.github.io/react/'\r\n            }\r\n        },\r\n        {   label: 'Upload',\r\n            icon: 'pi pi-upload',\r\n            command: () => {\r\n                window.location.hash = \"/fileupload\"\r\n            }\r\n        }\r\n    ];\r\n\r\n    const save = () => {\r\n        toast.current.show({severity: 'success', summary: 'Success', detail: 'Data Saved'});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" onClick={save} model={items}></SplitButton>\r\n\r\n                <h5>Severities</h5>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-secondary p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-success p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-info p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-warning p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-help p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-danger p-mr-2\"></SplitButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { SplitButton } from 'primereact/splitbutton';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst SplitButtonDemo = () => {\r\n    const toast = useRef(null);\r\n    const items = [\r\n        {\r\n            label: 'Update',\r\n            icon: 'pi pi-refresh',\r\n            command: () => {\r\n                toast.current.show({severity:'success', summary:'Updated', detail:'Data Updated'});\r\n            }\r\n        },\r\n        {\r\n            label: 'Delete',\r\n            icon: 'pi pi-times',\r\n            command: () => {\r\n                toast.current.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\r\n            }\r\n        },\r\n        {\r\n            label: 'React Website',\r\n            icon: 'pi pi-external-link',\r\n            command: () => {\r\n                window.location.href = 'https://facebook.github.io/react/'\r\n            }\r\n        },\r\n        {   label: 'Upload',\r\n            icon: 'pi pi-upload',\r\n            command: () => {\r\n                window.location.hash = \"/fileupload\"\r\n            }\r\n        }\r\n    ];\r\n\r\n    const save = () => {\r\n        toast.current.show({severity: 'success', summary: 'Success', detail: 'Data Saved'});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" onClick={save} model={items}></SplitButton>\r\n\r\n                <h5>Severities</h5>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-secondary p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-success p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-info p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-warning p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-help p-mr-2\"></SplitButton>\r\n                <SplitButton label=\"Save\" icon=\"pi pi-plus\" model={items} className=\"p-button-danger p-mr-2\"></SplitButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport {SplitButton} from 'primereact/splitbutton';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>SplitButton has a default command button and a collection of additional options defined by the <i>model</i> property.</p>\r\n                        <CodeHighlight lang=\"js\">\r\n{`\r\nexport const SplitButtonDemo = () => {\r\n\r\n    const items = [\r\n        {\r\n            label: 'Update',\r\n            icon: 'pi pi-refresh',\r\n            command: (e) => {\r\n                toast.current.show({severity:'success', summary:'Updated', detail:'Data Updated'});\r\n            }\r\n        },\r\n        {\r\n            label: 'Delete',\r\n            icon: 'pi pi-times',\r\n            command: (e) => {\r\n                toast.current.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\r\n            }\r\n        },\r\n        {\r\n            label: 'React Website',\r\n            icon: 'pi pi-external-link',\r\n            command:(e) => {\r\n                window.location.href = 'https://facebook.github.io/react/'\r\n            }\r\n        },\r\n        {   label: 'Upload',\r\n            icon: 'pi pi-upload',\r\n            command:(e) => {\r\n                window.location.hash = \"/fileupload\"\r\n            }\r\n        }\r\n    ]\r\n\r\n    const save = () => {\r\n        toast.current.show({severity: 'success', summary: 'Success', detail: 'Data Saved'});\r\n    }\r\n\r\n        return (\r\n            <SplitButton label=\"Save\" icon=\"pi pi-plus\" onClick={save} model={items}></SplitButton>\r\n        )\r\n    }\r\n}\r\n\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>MenuModel API</h5>\r\n                        <p>SplitButton uses the common MenuModel API to define the items, visit <Link to=\"/menumodel\">MenuModel API</Link> for details.</p>\r\n\r\n                        <h5>Severity</h5>\r\n                        <p>Different color options are available as severity levels.</p>\r\n\r\n                        <ul>\r\n                            <li>.p-button-secondary</li>\r\n                            <li>.p-button-success</li>\r\n                            <li>.p-button-info</li>\r\n                            <li>.p-button-warning</li>\r\n                            <li>.p-button-danger</li>\r\n                        </ul>\r\n\r\n<CodeHighlight>\r\n{`\r\n<SplitButton label=\"Primary\" />\r\n<SplitButton label=\"Secondary\" className=\"p-button-secondary\" model={items} />\r\n<SplitButton label=\"Success\" className=\"p-button-success\" model={items} />\r\n<SplitButton label=\"Info\" className=\"p-button-info\" model={items} />\r\n<SplitButton label=\"Warning\" className=\"p-button-warning\" model={items} />\r\n<SplitButton label=\"Danger\" className=\"p-button-danger\" model={items} />\r\n\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Identifier of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>label</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Text of the button.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>icon</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Name of the icon.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>model</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>MenuModel instance to define the overlay items.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>disabled</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the component should be disabled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>ClassName of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>menuStyle</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the overlay menu.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>menuClassName</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>ClassName class of the overlay menu.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tabIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Index of the element in tabbing order.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>appendTo</td>\r\n                                        <td>DOM element</td>\r\n                                        <td>null</td>\r\n                                        <td>DOM element instance where the dialog should be mounted.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltip</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Content of the tooltip.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tooltipOptions</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>buttonTemplate</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Template of the default button.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onClick</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Callback to invoke when main button is clicked.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-splitbutton</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-splitbutton-button</td>\r\n                                        <td>Dropdown button.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-menu</td>\r\n                                        <td>Overlay menu.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'SplitButtonDemo', sources: this.sources })\r\n                    }\r\n                </TabView >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}