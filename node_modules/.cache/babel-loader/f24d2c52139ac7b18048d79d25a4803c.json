{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import ReactDOM from'react-dom';import ObjectUtils from'../utils/ObjectUtils';import{Ripple}from'../ripple/Ripple';import{classNames}from'../utils/ClassNames';import{CSSTransition}from'react-transition-group';var AutoCompletePanelComponent=/*#__PURE__*/function(_Component){_inherits(AutoCompletePanelComponent,_Component);var _super=_createSuper(AutoCompletePanelComponent);function AutoCompletePanelComponent(){_classCallCheck(this,AutoCompletePanelComponent);return _super.apply(this,arguments);}_createClass(AutoCompletePanelComponent,[{key:\"renderElement\",value:function renderElement(){var _this=this;var panelClassName=classNames('p-autocomplete-panel p-component',this.props.panelClassName);var panelStyle=_objectSpread({maxHeight:this.props.scrollHeight},this.props.panelStyle);var items;if(this.props.suggestions){items=this.props.suggestions.map(function(suggestion,index){var itemContent=_this.props.itemTemplate?ObjectUtils.getJSXElement(_this.props.itemTemplate,suggestion):_this.props.field?ObjectUtils.resolveFieldData(suggestion,_this.props.field):suggestion;return/*#__PURE__*/React.createElement(\"li\",{key:index+'_item',role:\"option\",\"aria-selected\":_this.props.ariaSelected===suggestion,className:\"p-autocomplete-item\",onClick:function onClick(e){return _this.props.onItemClick(e,suggestion);}},itemContent,/*#__PURE__*/React.createElement(Ripple,null));});}return/*#__PURE__*/React.createElement(CSSTransition,{nodeRef:this.props.forwardRef,classNames:\"p-connected-overlay\",in:this.props.in,timeout:{enter:120,exit:100},unmountOnExit:true,onEnter:this.props.onEnter,onEntering:this.props.onEntering,onEntered:this.props.onEntered,onExit:this.props.onExit},/*#__PURE__*/React.createElement(\"div\",{ref:this.props.forwardRef,className:panelClassName,style:panelStyle,onClick:this.props.onClick},/*#__PURE__*/React.createElement(\"ul\",{className:\"p-autocomplete-items\",role:\"listbox\",id:this.props.listId},items)));}},{key:\"render\",value:function render(){var element=this.renderElement();if(this.props.appendTo){return ReactDOM.createPortal(element,this.props.appendTo);}else{return element;}}}]);return AutoCompletePanelComponent;}(Component);AutoCompletePanelComponent.defaultProps={suggestions:null,field:null,appendTo:null,itemTemplate:null,onItemClick:null,scrollHeight:'200px',listId:null,ariaSelected:null,panelClassName:null,panelStyle:null,forwardRef:null,onClick:null};export var AutoCompletePanel=React.forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(AutoCompletePanelComponent,Object.assign({forwardRef:ref},props));});","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/autocomplete/AutoCompletePanel.js"],"names":["React","Component","ReactDOM","ObjectUtils","Ripple","classNames","CSSTransition","AutoCompletePanelComponent","panelClassName","props","panelStyle","maxHeight","scrollHeight","items","suggestions","map","suggestion","index","itemContent","itemTemplate","getJSXElement","field","resolveFieldData","ariaSelected","e","onItemClick","forwardRef","in","enter","exit","onEnter","onEntering","onEntered","onExit","onClick","listId","element","renderElement","appendTo","createPortal","defaultProps","AutoCompletePanel","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { Ripple } from '../ripple/Ripple';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass AutoCompletePanelComponent extends Component {\r\n\r\n    static defaultProps = {\r\n        suggestions: null,\r\n        field: null,\r\n        appendTo: null,\r\n        itemTemplate: null,\r\n        onItemClick: null,\r\n        scrollHeight: '200px',\r\n        listId: null,\r\n        ariaSelected: null,\r\n        panelClassName: null,\r\n        panelStyle: null,\r\n        forwardRef: null,\r\n        onClick: null\r\n    }\r\n\r\n    static propTypes = {\r\n        suggestions: PropTypes.array,\r\n        field: PropTypes.string,\r\n        appendTo: PropTypes.any,\r\n        itemTemplate: PropTypes.any,\r\n        onItemClick: PropTypes.func,\r\n        scrollHeight: PropTypes.string,\r\n        listId: PropTypes.any,\r\n        ariaSelected: PropTypes.any,\r\n        panelClassName: PropTypes.string,\r\n        panelStyle: PropTypes.object,\r\n        forwardRef: PropTypes.any,\r\n        onClick: PropTypes.func\r\n    };\r\n\r\n    renderElement() {\r\n        const panelClassName = classNames('p-autocomplete-panel p-component', this.props.panelClassName);\r\n        const panelStyle = { maxHeight: this.props.scrollHeight, ...this.props.panelStyle };\r\n        let items;\r\n\r\n        if (this.props.suggestions) {\r\n            items = this.props.suggestions.map((suggestion, index) => {\r\n                let itemContent = this.props.itemTemplate ? ObjectUtils.getJSXElement(this.props.itemTemplate, suggestion) : this.props.field ? ObjectUtils.resolveFieldData(suggestion, this.props.field) : suggestion;\r\n\r\n                return (\r\n                    <li key={index + '_item'} role=\"option\" aria-selected={this.props.ariaSelected === suggestion} className=\"p-autocomplete-item\" onClick={(e) => this.props.onItemClick(e, suggestion)}>\r\n                        {itemContent}\r\n                        <Ripple />\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.props.forwardRef} classNames=\"p-connected-overlay\" in={this.props.in} timeout={{ enter: 120, exit: 100 }}\r\n                unmountOnExit onEnter={this.props.onEnter} onEntering={this.props.onEntering} onEntered={this.props.onEntered} onExit={this.props.onExit}>\r\n                <div ref={this.props.forwardRef} className={panelClassName} style={panelStyle} onClick={this.props.onClick}>\r\n                    <ul className=\"p-autocomplete-items\" role=\"listbox\" id={this.props.listId}>\r\n                        {items}\r\n                    </ul>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let element = this.renderElement();\r\n\r\n        if (this.props.appendTo) {\r\n            return ReactDOM.createPortal(element, this.props.appendTo);\r\n        }\r\n        else {\r\n            return element;\r\n        }\r\n    }\r\n}\r\n\r\nexport const AutoCompletePanel = React.forwardRef((props, ref) => <AutoCompletePanelComponent forwardRef={ref} {...props} />);\r\n"]},"metadata":{},"sourceType":"module"}