{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\checkbox\\\\CheckboxDemo.js\";\nimport React, { Component } from 'react';\nimport { Checkbox } from '../../components/checkbox/Checkbox';\nimport { CheckboxDoc } from './CheckboxDoc';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var CheckboxDemo = /*#__PURE__*/function (_Component) {\n  _inherits(CheckboxDemo, _Component);\n\n  var _super = _createSuper(CheckboxDemo);\n\n  function CheckboxDemo(props) {\n    var _this;\n\n    _classCallCheck(this, CheckboxDemo);\n\n    _this = _super.call(this, props);\n    _this.categories = [{\n      name: 'Accounting',\n      key: 'A'\n    }, {\n      name: 'Marketing',\n      key: 'M'\n    }, {\n      name: 'Production',\n      key: 'P'\n    }, {\n      name: 'Research',\n      key: 'R'\n    }];\n    _this.state = {\n      checked: false,\n      cities: [],\n      selectedCategories: _this.categories.slice(1, 3)\n    };\n    _this.onCityChange = _this.onCityChange.bind(_assertThisInitialized(_this));\n    _this.onCategoryChange = _this.onCategoryChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CheckboxDemo, [{\n    key: \"onCategoryChange\",\n    value: function onCategoryChange(e) {\n      var selectedCategories = _toConsumableArray(this.state.selectedCategories);\n\n      if (e.checked) {\n        selectedCategories.push(e.value);\n      } else {\n        for (var i = 0; i < selectedCategories.length; i++) {\n          var selectedCategory = selectedCategories[i];\n\n          if (selectedCategory.key === e.value.key) {\n            selectedCategories.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      this.setState({\n        selectedCategories: selectedCategories\n      });\n    }\n  }, {\n    key: \"onCityChange\",\n    value: function onCityChange(e) {\n      var selectedCities = _toConsumableArray(this.state.cities);\n\n      if (e.checked) selectedCities.push(e.value);else selectedCities.splice(selectedCities.indexOf(e.value), 1);\n      this.setState({\n        cities: selectedCities\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"checkbox\",\n        showInputStyle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"Checkbox\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, \"Checkbox is an extension to standard checkbox element with skinning capabilities.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"Basic\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        inputId: \"binary\",\n        checked: this.state.checked,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            checked: e.checked\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"binary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, this.state.checked ? 'true' : 'false')), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, \"Multiple\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        inputId: \"city1\",\n        name: \"city\",\n        value: \"Chicago\",\n        onChange: this.onCityChange,\n        checked: this.state.cities.indexOf('Chicago') !== -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"city1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, \"Chicago\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        inputId: \"city2\",\n        name: \"city\",\n        value: \"Los Angeles\",\n        onChange: this.onCityChange,\n        checked: this.state.cities.indexOf('Los Angeles') !== -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"city2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, \"Los Angeles\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        inputId: \"city3\",\n        name: \"city\",\n        value: \"New York\",\n        onChange: this.onCityChange,\n        checked: this.state.cities.indexOf('New York') !== -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"city3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }, \"New York\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        inputId: \"city4\",\n        name: \"city\",\n        value: \"San Francisco\",\n        onChange: this.onCityChange,\n        checked: this.state.cities.indexOf('San Francisco') !== -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"city4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, \"San Francisco\")), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, \"Dynamic Values, Preselection, Value Binding and Disabled Option\"), this.categories.map(function (category) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: category.key,\n          className: \"p-field-checkbox\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          inputId: category.key,\n          name: \"category\",\n          value: category,\n          onChange: _this2.onCategoryChange,\n          checked: _this2.state.selectedCategories.some(function (item) {\n            return item.key === category.key;\n          }),\n          disabled: category.key === 'R',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 41\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: category.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 41\n          }\n        }, category.name));\n      }))), /*#__PURE__*/React.createElement(CheckboxDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CheckboxDemo;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/checkbox/CheckboxDemo.js"],"names":["React","Component","Checkbox","CheckboxDoc","AppInlineHeader","CheckboxDemo","props","categories","name","key","state","checked","cities","selectedCategories","slice","onCityChange","bind","onCategoryChange","e","push","value","i","length","selectedCategory","splice","setState","selectedCities","indexOf","map","category","some","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Checkbox } from '../../components/checkbox/Checkbox';\r\nimport { CheckboxDoc } from './CheckboxDoc';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class CheckboxDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.categories = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\r\n\r\n        this.state = {\r\n            checked: false,\r\n            cities: [],\r\n            selectedCategories: this.categories.slice(1,3)\r\n        };\r\n\r\n        this.onCityChange = this.onCityChange.bind(this);\r\n        this.onCategoryChange = this.onCategoryChange.bind(this);\r\n    }\r\n\r\n    onCategoryChange(e) {\r\n        let selectedCategories = [...this.state.selectedCategories];\r\n\r\n        if (e.checked) {\r\n            selectedCategories.push(e.value);\r\n        }\r\n        else {\r\n            for (let i = 0; i < selectedCategories.length; i++) {\r\n                const selectedCategory = selectedCategories[i];\r\n\r\n                if (selectedCategory.key === e.value.key) {\r\n                    selectedCategories.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({ selectedCategories });\r\n    }\r\n\r\n\r\n    onCityChange(e) {\r\n        let selectedCities = [...this.state.cities];\r\n\r\n        if (e.checked)\r\n            selectedCities.push(e.value);\r\n        else\r\n            selectedCities.splice(selectedCities.indexOf(e.value), 1);\r\n\r\n        this.setState({ cities: selectedCities });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"checkbox\" showInputStyle>\r\n                        <h1>Checkbox</h1>\r\n                        <p>Checkbox is an extension to standard checkbox element with skinning capabilities.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Basic</h5>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"binary\" checked={this.state.checked} onChange={e => this.setState({ checked: e.checked })} />\r\n                            <label htmlFor=\"binary\">{this.state.checked ? 'true' : 'false'}</label>\r\n                        </div>\r\n\r\n                        <h5>Multiple</h5>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"city1\" name=\"city\" value=\"Chicago\" onChange={this.onCityChange} checked={this.state.cities.indexOf('Chicago') !== -1} />\r\n                            <label htmlFor=\"city1\">Chicago</label>\r\n                        </div>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"city2\" name=\"city\" value=\"Los Angeles\" onChange={this.onCityChange} checked={this.state.cities.indexOf('Los Angeles') !== -1} />\r\n                            <label htmlFor=\"city2\">Los Angeles</label>\r\n                        </div>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"city3\" name=\"city\" value=\"New York\" onChange={this.onCityChange} checked={this.state.cities.indexOf('New York') !== -1} />\r\n                            <label htmlFor=\"city3\">New York</label>\r\n                        </div>\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"city4\" name=\"city\" value=\"San Francisco\" onChange={this.onCityChange} checked={this.state.cities.indexOf('San Francisco') !== -1} />\r\n                            <label htmlFor=\"city4\">San Francisco</label>\r\n                        </div>\r\n\r\n                        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\r\n                        {\r\n                            this.categories.map((category) => {\r\n                                return (\r\n                                    <div key={category.key} className=\"p-field-checkbox\">\r\n                                        <Checkbox inputId={category.key} name=\"category\" value={category} onChange={this.onCategoryChange} checked={this.state.selectedCategories.some((item) => item.key === category.key)} disabled={category.key === 'R'} />\r\n                                        <label htmlFor={category.key}>{category.name}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <CheckboxDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}