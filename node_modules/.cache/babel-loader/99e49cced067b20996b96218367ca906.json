{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\autocomplete\\\\AutoComplete.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputText } from '../inputtext/InputText';\nimport { Button } from '../button/Button';\nimport DomHandler from '../utils/DomHandler';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { AutoCompletePanel } from './AutoCompletePanel';\nimport { classNames } from '../utils/ClassNames';\nimport { tip } from '../tooltip/Tooltip';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport var AutoComplete = /*#__PURE__*/function (_Component) {\n  _inherits(AutoComplete, _Component);\n\n  var _super = _createSuper(AutoComplete);\n\n  function AutoComplete(props) {\n    var _this;\n\n    _classCallCheck(this, AutoComplete);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      searching: false,\n      focused: false,\n      overlayVisible: false\n    };\n    _this.onInputChange = _this.onInputChange.bind(_assertThisInitialized(_this));\n    _this.onInputFocus = _this.onInputFocus.bind(_assertThisInitialized(_this));\n    _this.onInputBlur = _this.onInputBlur.bind(_assertThisInitialized(_this));\n    _this.onInputKeyDown = _this.onInputKeyDown.bind(_assertThisInitialized(_this));\n    _this.onDropdownClick = _this.onDropdownClick.bind(_assertThisInitialized(_this));\n    _this.onMultiContainerClick = _this.onMultiContainerClick.bind(_assertThisInitialized(_this));\n    _this.onMultiInputFocus = _this.onMultiInputFocus.bind(_assertThisInitialized(_this));\n    _this.onMultiInputBlur = _this.onMultiInputBlur.bind(_assertThisInitialized(_this));\n    _this.selectItem = _this.selectItem.bind(_assertThisInitialized(_this));\n    _this.onOverlayEnter = _this.onOverlayEnter.bind(_assertThisInitialized(_this));\n    _this.onOverlayEntering = _this.onOverlayEntering.bind(_assertThisInitialized(_this));\n    _this.onOverlayEntered = _this.onOverlayEntered.bind(_assertThisInitialized(_this));\n    _this.onOverlayExit = _this.onOverlayExit.bind(_assertThisInitialized(_this));\n    _this.onPanelClick = _this.onPanelClick.bind(_assertThisInitialized(_this));\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.listId = _this.id + '_list';\n    _this.overlayRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"onInputChange\",\n    value: function onInputChange(event) {\n      var _this2 = this;\n\n      //Cancel the search request if user types within the timeout\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n\n      var query = event.target.value;\n\n      if (!this.props.multiple) {\n        this.updateModel(event, query);\n      }\n\n      if (query.length === 0) {\n        this.hideOverlay();\n\n        if (this.props.onClear) {\n          this.props.onClear(event);\n        }\n      } else {\n        if (query.length >= this.props.minLength) {\n          this.timeout = setTimeout(function () {\n            _this2.search(event, query, 'input');\n          }, this.props.delay);\n        } else {\n          this.hideOverlay();\n        }\n      }\n    }\n  }, {\n    key: \"search\",\n    value: function search(event, query, source) {\n      //allow empty string but not undefined or null\n      if (query === undefined || query === null) {\n        return;\n      } //do not search blank values on input change\n\n\n      if (source === 'input' && query.trim().length === 0) {\n        return;\n      }\n\n      if (this.props.completeMethod) {\n        this.setState({\n          searching: true\n        });\n        this.props.completeMethod({\n          originalEvent: event,\n          query: query\n        });\n      }\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(event, option, preventInputFocus) {\n      if (this.props.multiple) {\n        this.inputEl.value = '';\n\n        if (!this.isSelected(option)) {\n          var newValue = this.props.value ? [].concat(_toConsumableArray(this.props.value), [option]) : [option];\n          this.updateModel(event, newValue);\n        }\n      } else {\n        this.updateInputField(option);\n        this.updateModel(event, option);\n      }\n\n      if (this.props.onSelect) {\n        this.props.onSelect({\n          originalEvent: event,\n          value: option\n        });\n      }\n\n      if (!preventInputFocus) {\n        this.inputEl.focus();\n        this.hideOverlay();\n      }\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(event, value) {\n      if (this.props.onChange) {\n        this.props.onChange({\n          originalEvent: event,\n          value: value,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.id,\n            value: value\n          }\n        });\n      }\n\n      this.ariaSelected = value;\n    }\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(value) {\n      if (value) {\n        if (this.props.selectedItemTemplate && (this.props.multiple ? this.isSelected(value) : this.findOptionIndex(value) > -1)) {\n          var resolvedFieldData = ObjectUtils.getJSXElement(this.props.selectedItemTemplate, value);\n          return resolvedFieldData ? resolvedFieldData : value;\n        } else if (this.props.field) {\n          var _resolvedFieldData = ObjectUtils.resolveFieldData(value, this.props.field);\n\n          return _resolvedFieldData !== null && _resolvedFieldData !== undefined ? _resolvedFieldData : value;\n        } else return value;\n      } else return '';\n    }\n  }, {\n    key: \"updateInputField\",\n    value: function updateInputField(value) {\n      var formattedValue = this.formatValue(value);\n      this.inputEl.value = formattedValue;\n    }\n  }, {\n    key: \"showOverlay\",\n    value: function showOverlay() {\n      this.setState({\n        overlayVisible: true\n      });\n    }\n  }, {\n    key: \"hideOverlay\",\n    value: function hideOverlay() {\n      this.setState({\n        overlayVisible: false,\n        searching: false\n      });\n    }\n  }, {\n    key: \"onOverlayEnter\",\n    value: function onOverlayEnter() {\n      this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\n      this.alignOverlay();\n    }\n  }, {\n    key: \"onOverlayEntering\",\n    value: function onOverlayEntering() {\n      if (this.props.autoHighlight && this.props.suggestions && this.props.suggestions.length) {\n        DomHandler.addClass(this.overlayRef.current.firstChild.firstChild, 'p-highlight');\n      }\n    }\n  }, {\n    key: \"onOverlayEntered\",\n    value: function onOverlayEntered() {\n      this.bindDocumentClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n    }\n  }, {\n    key: \"onOverlayExit\",\n    value: function onOverlayExit() {\n      this.unbindDocumentClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n    }\n  }, {\n    key: \"alignOverlay\",\n    value: function alignOverlay() {\n      var target = this.props.multiple ? this.multiContainer : this.inputEl;\n\n      if (this.props.appendTo) {\n        this.overlayRef.current.style.minWidth = DomHandler.getWidth(target) + 'px';\n        DomHandler.absolutePosition(this.overlayRef.current, target);\n      } else {\n        DomHandler.relativePosition(this.overlayRef.current, target);\n      }\n    }\n  }, {\n    key: \"onPanelClick\",\n    value: function onPanelClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.container\n      });\n    }\n  }, {\n    key: \"onDropdownClick\",\n    value: function onDropdownClick(event) {\n      this.inputEl.focus();\n      if (this.props.dropdownMode === 'blank') this.search(event, '', 'dropdown');else if (this.props.dropdownMode === 'current') this.search(event, this.inputEl.value, 'dropdown');\n\n      if (this.props.onDropdownClick) {\n        this.props.onDropdownClick({\n          originalEvent: event,\n          query: this.inputEl.value\n        });\n      }\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(event, index) {\n      var removedValue = this.props.value[index];\n      var newValue = this.props.value.filter(function (val, i) {\n        return index !== i;\n      });\n      this.updateModel(event, newValue);\n\n      if (this.props.onUnselect) {\n        this.props.onUnselect({\n          originalEvent: event,\n          value: removedValue\n        });\n      }\n    }\n  }, {\n    key: \"onInputKeyDown\",\n    value: function onInputKeyDown(event) {\n      if (this.state.overlayVisible) {\n        var highlightItem = DomHandler.findSingle(this.overlayRef.current, 'li.p-highlight');\n\n        switch (event.which) {\n          //down\n          case 40:\n            if (highlightItem) {\n              var nextElement = highlightItem.nextElementSibling;\n\n              if (nextElement) {\n                DomHandler.addClass(nextElement, 'p-highlight');\n                DomHandler.removeClass(highlightItem, 'p-highlight');\n                DomHandler.scrollInView(this.overlayRef.current, nextElement);\n              }\n            } else {\n              DomHandler.addClass(this.overlayRef.current.firstChild.firstChild, 'p-highlight');\n            }\n\n            event.preventDefault();\n            break;\n          //up\n\n          case 38:\n            if (highlightItem) {\n              var previousElement = highlightItem.previousElementSibling;\n\n              if (previousElement) {\n                DomHandler.addClass(previousElement, 'p-highlight');\n                DomHandler.removeClass(highlightItem, 'p-highlight');\n                DomHandler.scrollInView(this.overlayRef.current, previousElement);\n              }\n            }\n\n            event.preventDefault();\n            break;\n          //enter,tab\n\n          case 13:\n            if (highlightItem) {\n              this.selectItem(event, this.props.suggestions[DomHandler.index(highlightItem)]);\n              this.hideOverlay();\n            }\n\n            event.preventDefault();\n            break;\n          //escape\n\n          case 27:\n            this.hideOverlay();\n            event.preventDefault();\n            break;\n          //tab\n\n          case 9:\n            if (highlightItem) {\n              this.selectItem(event, this.props.suggestions[DomHandler.index(highlightItem)]);\n            }\n\n            this.hideOverlay();\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (this.props.multiple) {\n        switch (event.which) {\n          //backspace\n          case 8:\n            if (this.props.value && this.props.value.length && !this.inputEl.value) {\n              var removedValue = this.props.value[this.props.value.length - 1];\n              var newValue = this.props.value.slice(0, -1);\n              this.updateModel(event, newValue);\n\n              if (this.props.onUnselect) {\n                this.props.onUnselect({\n                  originalEvent: event,\n                  value: removedValue\n                });\n              }\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"onInputFocus\",\n    value: function onInputFocus(event) {\n      var _this3 = this;\n\n      event.persist();\n      this.setState({\n        focused: true\n      }, function () {\n        if (_this3.props.onFocus) {\n          _this3.props.onFocus(event);\n        }\n      });\n    }\n  }, {\n    key: \"forceItemSelection\",\n    value: function forceItemSelection(event) {\n      var valid = false;\n      var inputValue = event.target.value.trim();\n\n      if (this.props.suggestions) {\n        var _iterator = _createForOfIteratorHelper(this.props.suggestions),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            var itemValue = this.props.field ? ObjectUtils.resolveFieldData(item, this.props.field) : item;\n\n            if (itemValue && inputValue === itemValue.trim()) {\n              valid = true;\n              this.selectItem(event, item, true);\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      if (!valid) {\n        this.inputEl.value = '';\n        this.updateModel(event, null);\n\n        if (this.props.onClear) {\n          this.props.onClear(event);\n        }\n      }\n    }\n  }, {\n    key: \"onInputBlur\",\n    value: function onInputBlur(event) {\n      var _this4 = this;\n\n      event.persist();\n      this.setState({\n        focused: false\n      }, function () {\n        if (_this4.props.forceSelection) {\n          _this4.forceItemSelection(event);\n        }\n\n        if (_this4.props.onBlur) {\n          _this4.props.onBlur(event);\n        }\n      });\n    }\n  }, {\n    key: \"onMultiContainerClick\",\n    value: function onMultiContainerClick(event) {\n      this.inputEl.focus();\n\n      if (this.props.onClick) {\n        this.props.onClick(event);\n      }\n    }\n  }, {\n    key: \"onMultiInputFocus\",\n    value: function onMultiInputFocus(event) {\n      this.onInputFocus(event);\n      DomHandler.addClass(this.multiContainer, 'p-focus');\n    }\n  }, {\n    key: \"onMultiInputBlur\",\n    value: function onMultiInputBlur(event) {\n      this.onInputBlur(event);\n      DomHandler.removeClass(this.multiContainer, 'p-focus');\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(val) {\n      var selected = false;\n\n      if (this.props.value && this.props.value.length) {\n        for (var i = 0; i < this.props.value.length; i++) {\n          if (ObjectUtils.equals(this.props.value[i], val)) {\n            selected = true;\n            break;\n          }\n        }\n      }\n\n      return selected;\n    }\n  }, {\n    key: \"findOptionIndex\",\n    value: function findOptionIndex(option) {\n      var index = -1;\n\n      if (this.props.suggestions) {\n        for (var i = 0; i < this.props.suggestions.length; i++) {\n          if (ObjectUtils.equals(option, this.props.suggestions[i])) {\n            index = i;\n            break;\n          }\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this5 = this;\n\n      if (!this.documentClickListener) {\n        this.documentClickListener = function (event) {\n          if (event.which === 3) {\n            // right click\n            return;\n          }\n\n          if (_this5.state.overlayVisible && _this5.isOutsideClicked(event)) {\n            _this5.hideOverlay();\n          }\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this6 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, function () {\n          if (_this6.state.overlayVisible) {\n            _this6.hideOverlay();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"bindResizeListener\",\n    value: function bindResizeListener() {\n      var _this7 = this;\n\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this7.state.overlayVisible) {\n            _this7.hideOverlay();\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    }\n  }, {\n    key: \"unbindResizeListener\",\n    value: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(event) {\n      return this.container && this.overlayRef && this.overlayRef.current && !this.overlayRef.current.contains(event.target) && !this.isInputClicked(event);\n    }\n  }, {\n    key: \"isInputClicked\",\n    value: function isInputClicked(event) {\n      if (this.props.multiple) return event.target === this.multiContainer || this.multiContainer.contains(event.target);else return event.target === this.inputEl;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoFocus && this.inputEl) {\n        this.inputEl.focus();\n      }\n\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.suggestions !== this.props.suggestions && this.state.searching) {\n        if (this.props.suggestions && this.props.suggestions.length) {\n          this.alignOverlay();\n          this.showOverlay();\n        } else {\n          this.hideOverlay();\n        }\n\n        this.setState({\n          searching: false\n        });\n      }\n\n      if (this.inputEl && !this.props.multiple) {\n        this.updateInputField(this.props.value);\n      }\n\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentClickListener();\n      this.unbindResizeListener();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.container,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"renderSimpleAutoComplete\",\n    value: function renderSimpleAutoComplete() {\n      var _this8 = this;\n\n      var inputClassName = classNames('p-autocomplete-input', this.props.inputClassName, {\n        'p-autocomplete-dd-input': this.props.dropdown\n      });\n      return /*#__PURE__*/React.createElement(InputText, {\n        ref: function ref(el) {\n          return _this8.inputEl = el;\n        },\n        id: this.props.inputId,\n        type: this.props.type,\n        name: this.props.name,\n        defaultValue: this.formatValue(this.props.value),\n        role: \"searchbox\",\n        \"aria-autocomplete\": \"list\",\n        \"aria-controls\": this.listId,\n        \"aria-labelledby\": this.props.ariaLabelledBy,\n        className: inputClassName,\n        style: this.props.inputStyle,\n        autoComplete: \"off\",\n        readOnly: this.props.readOnly,\n        disabled: this.props.disabled,\n        placeholder: this.props.placeholder,\n        size: this.props.size,\n        maxLength: this.props.maxlength,\n        tabIndex: this.props.tabIndex,\n        onBlur: this.onInputBlur,\n        onFocus: this.onInputFocus,\n        onChange: this.onInputChange,\n        onMouseDown: this.props.onMouseDown,\n        onKeyUp: this.props.onKeyUp,\n        onKeyDown: this.onInputKeyDown,\n        onKeyPress: this.props.onKeyPress,\n        onContextMenu: this.props.onContextMenu,\n        onClick: this.props.onClick,\n        onDoubleClick: this.props.onDblClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"renderChips\",\n    value: function renderChips() {\n      var _this9 = this;\n\n      if (this.props.value && this.props.value.length) {\n        return this.props.value.map(function (val, index) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index + 'multi-item',\n            className: \"p-autocomplete-token p-highlight\",\n            __self: _this9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"p-autocomplete-token-label\",\n            __self: _this9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 25\n            }\n          }, _this9.formatValue(val)), !_this9.props.disabled && /*#__PURE__*/React.createElement(\"span\", {\n            className: \"p-autocomplete-token-icon pi pi-times-circle\",\n            onClick: function onClick(e) {\n              return _this9.removeItem(e, index);\n            },\n            __self: _this9,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 50\n            }\n          }));\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderMultiInput\",\n    value: function renderMultiInput() {\n      var _this10 = this;\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"p-autocomplete-input-token\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        ref: function ref(el) {\n          return _this10.inputEl = el;\n        },\n        type: this.props.type,\n        disabled: this.props.disabled,\n        placeholder: this.props.placeholder,\n        role: \"searchbox\",\n        \"aria-autocomplete\": \"list\",\n        \"aria-controls\": this.listId,\n        \"aria-labelledby\": this.props.ariaLabelledBy,\n        autoComplete: \"off\",\n        tabIndex: this.props.tabIndex,\n        onChange: this.onInputChange,\n        id: this.props.inputId,\n        name: this.props.name,\n        style: this.props.inputStyle,\n        className: this.props.inputClassName,\n        maxLength: this.props.maxlength,\n        onKeyUp: this.props.onKeyUp,\n        onKeyDown: this.onInputKeyDown,\n        onKeyPress: this.props.onKeyPress,\n        onFocus: this.onMultiInputFocus,\n        onBlur: this.onMultiInputBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderMultipleAutoComplete\",\n    value: function renderMultipleAutoComplete() {\n      var _this11 = this;\n\n      var multiContainerClass = classNames('p-autocomplete-multiple-container p-component p-inputtext', {\n        'p-disabled': this.props.disabled\n      });\n      var tokens = this.renderChips();\n      var input = this.renderMultiInput();\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        ref: function ref(el) {\n          _this11.multiContainer = el;\n        },\n        className: multiContainerClass,\n        onContextMenu: this.props.onContextMenu,\n        onMouseDown: this.props.onMouseDown,\n        onClick: this.onMultiContainerClick,\n        onDoubleClick: this.props.onDblClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }\n      }, tokens, input);\n    }\n  }, {\n    key: \"renderDropdown\",\n    value: function renderDropdown() {\n      var _this12 = this;\n\n      return /*#__PURE__*/React.createElement(Button, {\n        ref: function ref(el) {\n          return _this12.dropdownButton = el;\n        },\n        type: \"button\",\n        icon: \"pi pi-chevron-down\",\n        className: \"p-autocomplete-dropdown\",\n        disabled: this.props.disabled,\n        onClick: this.onDropdownClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"renderLoader\",\n    value: function renderLoader() {\n      if (this.state.searching) {\n        return /*#__PURE__*/React.createElement(\"i\", {\n          className: \"p-autocomplete-loader pi pi-spinner pi-spin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this13 = this;\n\n      var input, dropdown;\n      var className = classNames('p-autocomplete p-component p-inputwrapper', this.props.className, {\n        'p-autocomplete-dd': this.props.dropdown,\n        'p-autocomplete-multiple': this.props.multiple,\n        'p-inputwrapper-filled': this.props.value,\n        'p-inputwrapper-focus': this.state.focused\n      });\n      var loader = this.renderLoader();\n      if (this.props.multiple) input = this.renderMultipleAutoComplete();else input = this.renderSimpleAutoComplete();\n\n      if (this.props.dropdown) {\n        dropdown = this.renderDropdown();\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        ref: function ref(el) {\n          return _this13.container = el;\n        },\n        id: this.id,\n        style: this.props.style,\n        className: className,\n        \"aria-haspopup\": \"listbox\",\n        \"aria-expanded\": this.state.overlayVisible,\n        \"aria-owns\": this.listId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 13\n        }\n      }, input, loader, dropdown, /*#__PURE__*/React.createElement(AutoCompletePanel, {\n        ref: this.overlayRef,\n        suggestions: this.props.suggestions,\n        field: this.props.field,\n        listId: this.listId,\n        appendTo: this.props.appendTo,\n        itemTemplate: this.props.itemTemplate,\n        onItemClick: this.selectItem,\n        ariaSelected: this.ariaSelected,\n        panelStyle: this.props.panelStyle,\n        panelClassName: this.props.panelClassName,\n        onClick: this.onPanelClick,\n        in: this.state.overlayVisible,\n        onEnter: this.onOverlayEnter,\n        onEntering: this.onOverlayEntering,\n        onEntered: this.onOverlayEntered,\n        onExit: this.onOverlayExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return AutoComplete;\n}(Component);\nAutoComplete.defaultProps = {\n  id: null,\n  value: null,\n  name: null,\n  type: 'text',\n  suggestions: null,\n  field: null,\n  forceSelection: false,\n  autoHighlight: false,\n  scrollHeight: '200px',\n  dropdown: false,\n  dropdownMode: 'blank',\n  multiple: false,\n  minLength: 1,\n  delay: 300,\n  style: null,\n  className: null,\n  inputId: null,\n  inputStyle: null,\n  inputClassName: null,\n  panelClassName: null,\n  panelStyle: null,\n  placeholder: null,\n  readOnly: false,\n  disabled: false,\n  maxlength: null,\n  size: null,\n  appendTo: null,\n  tabIndex: null,\n  autoFocus: false,\n  tooltip: null,\n  tooltipOptions: null,\n  ariaLabelledBy: null,\n  completeMethod: null,\n  itemTemplate: null,\n  selectedItemTemplate: null,\n  onChange: null,\n  onFocus: null,\n  onBlur: null,\n  onSelect: null,\n  onUnselect: null,\n  onDropdownClick: null,\n  onClick: null,\n  onDblClick: null,\n  onMouseDown: null,\n  onKeyUp: null,\n  onKeyPress: null,\n  onContextMenu: null,\n  onClear: null\n};\nAutoComplete.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.any,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  suggestions: PropTypes.array,\n  field: PropTypes.string,\n  forceSelection: PropTypes.bool,\n  autoHighlight: PropTypes.bool,\n  scrollHeight: PropTypes.string,\n  dropdown: PropTypes.bool,\n  dropdownMode: PropTypes.string,\n  multiple: PropTypes.bool,\n  minLength: PropTypes.number,\n  delay: PropTypes.number,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  inputId: PropTypes.string,\n  inputStyle: PropTypes.object,\n  inputClassName: PropTypes.string,\n  panelClassName: PropTypes.string,\n  panelStyle: PropTypes.object,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  maxlength: PropTypes.number,\n  size: PropTypes.number,\n  appendTo: PropTypes.any,\n  tabIndex: PropTypes.number,\n  autoFocus: PropTypes.bool,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  ariaLabelledBy: PropTypes.string,\n  completeMethod: PropTypes.func,\n  itemTemplate: PropTypes.any,\n  selectedItemTemplate: PropTypes.any,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onSelect: PropTypes.func,\n  onUnselect: PropTypes.func,\n  onDropdownClick: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onClear: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/autocomplete/AutoComplete.js"],"names":["React","Component","PropTypes","InputText","Button","DomHandler","ObjectUtils","AutoCompletePanel","classNames","tip","UniqueComponentId","ConnectedOverlayScrollHandler","OverlayEventBus","AutoComplete","props","state","searching","focused","overlayVisible","onInputChange","bind","onInputFocus","onInputBlur","onInputKeyDown","onDropdownClick","onMultiContainerClick","onMultiInputFocus","onMultiInputBlur","selectItem","onOverlayEnter","onOverlayEntering","onOverlayEntered","onOverlayExit","onPanelClick","id","listId","overlayRef","createRef","event","timeout","clearTimeout","query","target","value","multiple","updateModel","length","hideOverlay","onClear","minLength","setTimeout","search","delay","source","undefined","trim","completeMethod","setState","originalEvent","option","preventInputFocus","inputEl","isSelected","newValue","updateInputField","onSelect","focus","onChange","stopPropagation","preventDefault","name","ariaSelected","selectedItemTemplate","findOptionIndex","resolvedFieldData","getJSXElement","field","resolveFieldData","formattedValue","formatValue","current","style","zIndex","String","generateZIndex","alignOverlay","autoHighlight","suggestions","addClass","firstChild","bindDocumentClickListener","bindScrollListener","bindResizeListener","unbindDocumentClickListener","unbindScrollListener","unbindResizeListener","multiContainer","appendTo","minWidth","getWidth","absolutePosition","relativePosition","emit","container","dropdownMode","index","removedValue","filter","val","i","onUnselect","highlightItem","findSingle","which","nextElement","nextElementSibling","removeClass","scrollInView","previousElement","previousElementSibling","slice","persist","onFocus","valid","inputValue","item","itemValue","forceSelection","forceItemSelection","onBlur","onClick","selected","equals","documentClickListener","isOutsideClicked","document","addEventListener","removeEventListener","scrollHandler","resizeListener","window","contains","isInputClicked","autoFocus","tooltip","renderTooltip","prevProps","showOverlay","tooltipOptions","update","content","destroy","options","inputClassName","dropdown","el","inputId","type","ariaLabelledBy","inputStyle","readOnly","disabled","placeholder","size","maxlength","tabIndex","onMouseDown","onKeyUp","onKeyPress","onContextMenu","onDblClick","map","e","removeItem","multiContainerClass","tokens","renderChips","input","renderMultiInput","dropdownButton","className","loader","renderLoader","renderMultipleAutoComplete","renderSimpleAutoComplete","renderDropdown","itemTemplate","panelStyle","panelClassName","defaultProps","scrollHeight","propTypes","string","any","array","bool","number","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { InputText } from '../inputtext/InputText';\r\nimport { Button } from '../button/Button';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { AutoCompletePanel } from './AutoCompletePanel';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport class AutoComplete extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        name: null,\r\n        type: 'text',\r\n        suggestions: null,\r\n        field: null,\r\n        forceSelection: false,\r\n        autoHighlight: false,\r\n        scrollHeight: '200px',\r\n        dropdown: false,\r\n        dropdownMode: 'blank',\r\n        multiple: false,\r\n        minLength: 1,\r\n        delay: 300,\r\n        style: null,\r\n        className: null,\r\n        inputId: null,\r\n        inputStyle: null,\r\n        inputClassName: null,\r\n        panelClassName: null,\r\n        panelStyle: null,\r\n        placeholder: null,\r\n        readOnly: false,\r\n        disabled: false,\r\n        maxlength: null,\r\n        size: null,\r\n        appendTo: null,\r\n        tabIndex: null,\r\n        autoFocus: false,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        ariaLabelledBy: null,\r\n        completeMethod: null,\r\n        itemTemplate: null,\r\n        selectedItemTemplate: null,\r\n        onChange: null,\r\n        onFocus: null,\r\n        onBlur: null,\r\n        onSelect: null,\r\n        onUnselect: null,\r\n        onDropdownClick: null,\r\n        onClick: null,\r\n        onDblClick: null,\r\n        onMouseDown: null,\r\n        onKeyUp: null,\r\n        onKeyPress: null,\r\n        onContextMenu: null,\r\n        onClear: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.any,\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        suggestions: PropTypes.array,\r\n        field: PropTypes.string,\r\n        forceSelection: PropTypes.bool,\r\n        autoHighlight: PropTypes.bool,\r\n        scrollHeight: PropTypes.string,\r\n        dropdown: PropTypes.bool,\r\n        dropdownMode: PropTypes.string,\r\n        multiple: PropTypes.bool,\r\n        minLength: PropTypes.number,\r\n        delay: PropTypes.number,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        inputId: PropTypes.string,\r\n        inputStyle: PropTypes.object,\r\n        inputClassName: PropTypes.string,\r\n        panelClassName: PropTypes.string,\r\n        panelStyle: PropTypes.object,\r\n        placeholder: PropTypes.string,\r\n        readOnly: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        maxlength: PropTypes.number,\r\n        size: PropTypes.number,\r\n        appendTo: PropTypes.any,\r\n        tabIndex: PropTypes.number,\r\n        autoFocus: PropTypes.bool,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        ariaLabelledBy: PropTypes.string,\r\n        completeMethod: PropTypes.func,\r\n        itemTemplate: PropTypes.any,\r\n        selectedItemTemplate: PropTypes.any,\r\n        onChange: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func,\r\n        onSelect: PropTypes.func,\r\n        onUnselect: PropTypes.func,\r\n        onDropdownClick: PropTypes.func,\r\n        onClick: PropTypes.func,\r\n        onDblClick: PropTypes.func,\r\n        onMouseDown: PropTypes.func,\r\n        onKeyUp: PropTypes.func,\r\n        onKeyPress: PropTypes.func,\r\n        onContextMenu: PropTypes.func,\r\n        onClear: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searching: false,\r\n            focused: false,\r\n            overlayVisible: false\r\n        };\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onInputFocus = this.onInputFocus.bind(this);\r\n        this.onInputBlur = this.onInputBlur.bind(this);\r\n        this.onInputKeyDown = this.onInputKeyDown.bind(this);\r\n        this.onDropdownClick = this.onDropdownClick.bind(this);\r\n        this.onMultiContainerClick = this.onMultiContainerClick.bind(this);\r\n        this.onMultiInputFocus = this.onMultiInputFocus.bind(this);\r\n        this.onMultiInputBlur = this.onMultiInputBlur.bind(this);\r\n        this.selectItem = this.selectItem.bind(this);\r\n        this.onOverlayEnter = this.onOverlayEnter.bind(this);\r\n        this.onOverlayEntering = this.onOverlayEntering.bind(this);\r\n        this.onOverlayEntered = this.onOverlayEntered.bind(this);\r\n        this.onOverlayExit = this.onOverlayExit.bind(this);\r\n        this.onPanelClick = this.onPanelClick.bind(this);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.listId = this.id + '_list';\r\n        this.overlayRef = React.createRef();\r\n    }\r\n\r\n    onInputChange(event) {\r\n        //Cancel the search request if user types within the timeout\r\n        if (this.timeout) {\r\n            clearTimeout(this.timeout);\r\n        }\r\n\r\n        let query = event.target.value;\r\n        if (!this.props.multiple) {\r\n            this.updateModel(event, query);\r\n        }\r\n\r\n        if (query.length === 0) {\r\n            this.hideOverlay();\r\n            if (this.props.onClear) {\r\n                this.props.onClear(event);\r\n            }\r\n        }\r\n        else {\r\n            if (query.length >= this.props.minLength) {\r\n                this.timeout = setTimeout(() => {\r\n                    this.search(event, query, 'input');\r\n                }, this.props.delay);\r\n            }\r\n            else {\r\n                this.hideOverlay();\r\n            }\r\n        }\r\n    }\r\n\r\n    search(event, query, source) {\r\n        //allow empty string but not undefined or null\r\n        if (query === undefined || query === null) {\r\n            return;\r\n        }\r\n\r\n        //do not search blank values on input change\r\n        if (source === 'input' && query.trim().length === 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.completeMethod) {\r\n            this.setState({ searching: true });\r\n            this.props.completeMethod({\r\n                originalEvent: event,\r\n                query: query\r\n            });\r\n        }\r\n    }\r\n\r\n    selectItem(event, option, preventInputFocus) {\r\n        if (this.props.multiple) {\r\n            this.inputEl.value = '';\r\n            if (!this.isSelected(option)) {\r\n                let newValue = this.props.value ? [...this.props.value, option] : [option];\r\n                this.updateModel(event, newValue);\r\n            }\r\n        }\r\n        else {\r\n            this.updateInputField(option);\r\n            this.updateModel(event, option);\r\n        }\r\n\r\n        if (this.props.onSelect) {\r\n            this.props.onSelect({\r\n                originalEvent: event,\r\n                value: option\r\n            })\r\n        }\r\n\r\n        if (!preventInputFocus) {\r\n            this.inputEl.focus();\r\n            this.hideOverlay();\r\n        }\r\n    }\r\n\r\n    updateModel(event, value) {\r\n        if (this.props.onChange) {\r\n            this.props.onChange({\r\n                originalEvent: event,\r\n                value: value,\r\n                stopPropagation: () => { },\r\n                preventDefault: () => { },\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.id,\r\n                    value: value\r\n                }\r\n            });\r\n        }\r\n\r\n        this.ariaSelected = value;\r\n    }\r\n\r\n    formatValue(value) {\r\n        if (value) {\r\n            if (this.props.selectedItemTemplate && (this.props.multiple ? this.isSelected(value) : this.findOptionIndex(value) > -1)) {\r\n                const resolvedFieldData = ObjectUtils.getJSXElement(this.props.selectedItemTemplate, value);\r\n                return resolvedFieldData ? resolvedFieldData : value;\r\n            }\r\n            else if (this.props.field) {\r\n                const resolvedFieldData = ObjectUtils.resolveFieldData(value, this.props.field);\r\n                return resolvedFieldData !== null && resolvedFieldData !== undefined ? resolvedFieldData : value;\r\n            }\r\n            else\r\n                return value;\r\n        }\r\n        else\r\n            return '';\r\n    }\r\n\r\n    updateInputField(value) {\r\n        const formattedValue = this.formatValue(value);\r\n        this.inputEl.value = formattedValue;\r\n    }\r\n\r\n    showOverlay() {\r\n        this.setState({ overlayVisible: true });\r\n    }\r\n\r\n    hideOverlay() {\r\n        this.setState({\r\n            overlayVisible: false,\r\n            searching: false\r\n        });\r\n    }\r\n\r\n    onOverlayEnter() {\r\n        this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\r\n        this.alignOverlay();\r\n    }\r\n\r\n    onOverlayEntering() {\r\n        if (this.props.autoHighlight && this.props.suggestions && this.props.suggestions.length) {\r\n            DomHandler.addClass(this.overlayRef.current.firstChild.firstChild, 'p-highlight');\r\n        }\r\n    }\r\n\r\n    onOverlayEntered() {\r\n        this.bindDocumentClickListener();\r\n        this.bindScrollListener();\r\n        this.bindResizeListener();\r\n    }\r\n\r\n    onOverlayExit() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindScrollListener();\r\n        this.unbindResizeListener();\r\n    }\r\n\r\n    alignOverlay() {\r\n        let target = this.props.multiple ? this.multiContainer : this.inputEl;\r\n\r\n        if (this.props.appendTo) {\r\n            this.overlayRef.current.style.minWidth = DomHandler.getWidth(target) + 'px';\r\n            DomHandler.absolutePosition(this.overlayRef.current, target);\r\n        }\r\n        else {\r\n            DomHandler.relativePosition(this.overlayRef.current, target);\r\n        }\r\n    }\r\n\r\n    onPanelClick(event) {\r\n        OverlayEventBus.emit('overlay-click', {\r\n            originalEvent: event,\r\n            target: this.container\r\n        });\r\n    }\r\n\r\n    onDropdownClick(event) {\r\n        this.inputEl.focus();\r\n\r\n        if (this.props.dropdownMode === 'blank')\r\n            this.search(event, '', 'dropdown');\r\n        else if (this.props.dropdownMode === 'current')\r\n            this.search(event, this.inputEl.value, 'dropdown');\r\n\r\n        if (this.props.onDropdownClick) {\r\n            this.props.onDropdownClick({\r\n                originalEvent: event,\r\n                query: this.inputEl.value\r\n            });\r\n        }\r\n    }\r\n\r\n    removeItem(event, index) {\r\n        let removedValue = this.props.value[index];\r\n        let newValue = this.props.value.filter((val, i) => (index !== i));\r\n        this.updateModel(event, newValue);\r\n\r\n        if (this.props.onUnselect) {\r\n            this.props.onUnselect({\r\n                originalEvent: event,\r\n                value: removedValue\r\n            })\r\n        }\r\n    }\r\n\r\n    onInputKeyDown(event) {\r\n        if (this.state.overlayVisible) {\r\n            let highlightItem = DomHandler.findSingle(this.overlayRef.current, 'li.p-highlight');\r\n\r\n            switch (event.which) {\r\n                //down\r\n                case 40:\r\n                    if (highlightItem) {\r\n                        let nextElement = highlightItem.nextElementSibling;\r\n                        if (nextElement) {\r\n                            DomHandler.addClass(nextElement, 'p-highlight');\r\n                            DomHandler.removeClass(highlightItem, 'p-highlight');\r\n                            DomHandler.scrollInView(this.overlayRef.current, nextElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        DomHandler.addClass(this.overlayRef.current.firstChild.firstChild, 'p-highlight');\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    break;\r\n\r\n                //up\r\n                case 38:\r\n                    if (highlightItem) {\r\n                        let previousElement = highlightItem.previousElementSibling;\r\n                        if (previousElement) {\r\n                            DomHandler.addClass(previousElement, 'p-highlight');\r\n                            DomHandler.removeClass(highlightItem, 'p-highlight');\r\n                            DomHandler.scrollInView(this.overlayRef.current, previousElement);\r\n                        }\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    break;\r\n\r\n                //enter,tab\r\n                case 13:\r\n                    if (highlightItem) {\r\n                        this.selectItem(event, this.props.suggestions[DomHandler.index(highlightItem)]);\r\n                        this.hideOverlay();\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    break;\r\n\r\n                //escape\r\n                case 27:\r\n                    this.hideOverlay();\r\n                    event.preventDefault();\r\n                    break;\r\n\r\n                //tab\r\n                case 9:\r\n                    if (highlightItem) {\r\n                        this.selectItem(event, this.props.suggestions[DomHandler.index(highlightItem)]);\r\n                    }\r\n\r\n                    this.hideOverlay();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (this.props.multiple) {\r\n            switch (event.which) {\r\n                //backspace\r\n                case 8:\r\n                    if (this.props.value && this.props.value.length && !this.inputEl.value) {\r\n                        let removedValue = this.props.value[this.props.value.length - 1];\r\n                        let newValue = this.props.value.slice(0, -1);\r\n\r\n                        this.updateModel(event, newValue);\r\n\r\n                        if (this.props.onUnselect) {\r\n                            this.props.onUnselect({\r\n                                originalEvent: event,\r\n                                value: removedValue\r\n                            })\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onInputFocus(event) {\r\n        event.persist();\r\n\r\n        this.setState({ focused: true }, () => {\r\n            if (this.props.onFocus) {\r\n                this.props.onFocus(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    forceItemSelection(event) {\r\n        let valid = false;\r\n        let inputValue = event.target.value.trim();\r\n\r\n        if (this.props.suggestions)  {\r\n            for (let item of this.props.suggestions) {\r\n                let itemValue = this.props.field ? ObjectUtils.resolveFieldData(item, this.props.field) : item;\r\n                if (itemValue && inputValue === itemValue.trim()) {\r\n                    valid = true;\r\n                    this.selectItem(event, item, true);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!valid) {\r\n            this.inputEl.value = '';\r\n            this.updateModel(event, null);\r\n\r\n            if (this.props.onClear) {\r\n                this.props.onClear(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onInputBlur(event) {\r\n        event.persist();\r\n\r\n        this.setState({ focused: false }, () => {\r\n            if (this.props.forceSelection) {\r\n                this.forceItemSelection(event);\r\n            }\r\n\r\n            if (this.props.onBlur) {\r\n                this.props.onBlur(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    onMultiContainerClick(event) {\r\n        this.inputEl.focus();\r\n\r\n        if (this.props.onClick) {\r\n            this.props.onClick(event);\r\n        }\r\n    }\r\n\r\n    onMultiInputFocus(event) {\r\n        this.onInputFocus(event);\r\n        DomHandler.addClass(this.multiContainer, 'p-focus');\r\n    }\r\n\r\n    onMultiInputBlur(event) {\r\n        this.onInputBlur(event);\r\n        DomHandler.removeClass(this.multiContainer, 'p-focus');\r\n    }\r\n\r\n    isSelected(val) {\r\n        let selected = false;\r\n        if (this.props.value && this.props.value.length) {\r\n            for (let i = 0; i < this.props.value.length; i++) {\r\n                if (ObjectUtils.equals(this.props.value[i], val)) {\r\n                    selected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    findOptionIndex(option) {\r\n        let index = -1;\r\n        if (this.props.suggestions) {\r\n            for (let i = 0; i < this.props.suggestions.length; i++) {\r\n                if (ObjectUtils.equals(option, this.props.suggestions[i])) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = (event) => {\r\n                if (event.which === 3) { // right click\r\n                    return;\r\n                }\r\n\r\n                if (this.state.overlayVisible && this.isOutsideClicked(event)) {\r\n                    this.hideOverlay();\r\n                }\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.container, () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hideOverlay();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    bindResizeListener() {\r\n        if (!this.resizeListener) {\r\n            this.resizeListener = () => {\r\n                if (this.state.overlayVisible) {\r\n                    this.hideOverlay();\r\n                }\r\n            };\r\n            window.addEventListener('resize', this.resizeListener);\r\n        }\r\n    }\r\n\r\n    unbindResizeListener() {\r\n        if (this.resizeListener) {\r\n            window.removeEventListener('resize', this.resizeListener);\r\n            this.resizeListener = null;\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(event) {\r\n        return this.container && (this.overlayRef && this.overlayRef.current && !this.overlayRef.current.contains(event.target)) && !this.isInputClicked(event);\r\n    }\r\n\r\n    isInputClicked(event) {\r\n        if (this.props.multiple)\r\n            return event.target === this.multiContainer || this.multiContainer.contains(event.target);\r\n        else\r\n            return event.target === this.inputEl;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.autoFocus && this.inputEl) {\r\n            this.inputEl.focus();\r\n        }\r\n\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.suggestions !== this.props.suggestions && this.state.searching) {\r\n            if (this.props.suggestions && this.props.suggestions.length) {\r\n                this.alignOverlay()\r\n                this.showOverlay();\r\n            }\r\n            else {\r\n                this.hideOverlay();\r\n            }\r\n\r\n            this.setState({ searching: false });\r\n        }\r\n\r\n        if (this.inputEl && !this.props.multiple) {\r\n            this.updateInputField(this.props.value);\r\n        }\r\n\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindResizeListener();\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n\r\n        if (this.timeout) {\r\n            clearTimeout(this.timeout);\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.container,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    renderSimpleAutoComplete() {\r\n        const inputClassName = classNames('p-autocomplete-input', this.props.inputClassName, {\r\n            'p-autocomplete-dd-input': this.props.dropdown\r\n        });\r\n\r\n        return (\r\n            <InputText ref={(el) => this.inputEl = el} id={this.props.inputId} type={this.props.type} name={this.props.name}\r\n                defaultValue={this.formatValue(this.props.value)} role=\"searchbox\" aria-autocomplete=\"list\" aria-controls={this.listId}\r\n                aria-labelledby={this.props.ariaLabelledBy} className={inputClassName} style={this.props.inputStyle} autoComplete=\"off\"\r\n                readOnly={this.props.readOnly} disabled={this.props.disabled} placeholder={this.props.placeholder} size={this.props.size}\r\n                maxLength={this.props.maxlength} tabIndex={this.props.tabIndex}\r\n                onBlur={this.onInputBlur} onFocus={this.onInputFocus} onChange={this.onInputChange}\r\n                onMouseDown={this.props.onMouseDown} onKeyUp={this.props.onKeyUp} onKeyDown={this.onInputKeyDown}\r\n                onKeyPress={this.props.onKeyPress} onContextMenu={this.props.onContextMenu}\r\n                onClick={this.props.onClick} onDoubleClick={this.props.onDblClick} />\r\n        );\r\n    }\r\n\r\n    renderChips() {\r\n        if (this.props.value && this.props.value.length) {\r\n            return this.props.value.map((val, index) => {\r\n                return (\r\n                    <li key={index + 'multi-item'} className=\"p-autocomplete-token p-highlight\">\r\n                        <span className=\"p-autocomplete-token-label\">{this.formatValue(val)}</span>\r\n                        {!this.props.disabled && <span className=\"p-autocomplete-token-icon pi pi-times-circle\" onClick={(e) => this.removeItem(e, index)}></span>}\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderMultiInput() {\r\n        return (\r\n            <li className=\"p-autocomplete-input-token\">\r\n                <input ref={(el) => this.inputEl = el} type={this.props.type} disabled={this.props.disabled} placeholder={this.props.placeholder}\r\n                    role=\"searchbox\" aria-autocomplete=\"list\" aria-controls={this.listId} aria-labelledby={this.props.ariaLabelledBy}\r\n                    autoComplete=\"off\" tabIndex={this.props.tabIndex} onChange={this.onInputChange} id={this.props.inputId} name={this.props.name}\r\n                    style={this.props.inputStyle} className={this.props.inputClassName} maxLength={this.props.maxlength}\r\n                    onKeyUp={this.props.onKeyUp} onKeyDown={this.onInputKeyDown} onKeyPress={this.props.onKeyPress}\r\n                    onFocus={this.onMultiInputFocus} onBlur={this.onMultiInputBlur} />\r\n            </li>\r\n        );\r\n    }\r\n\r\n    renderMultipleAutoComplete() {\r\n        let multiContainerClass = classNames('p-autocomplete-multiple-container p-component p-inputtext', {\r\n            'p-disabled': this.props.disabled\r\n        });\r\n        let tokens = this.renderChips();\r\n        let input = this.renderMultiInput();\r\n\r\n        return (\r\n            <ul ref={(el) => { this.multiContainer = el }} className={multiContainerClass} onContextMenu={this.props.onContextMenu} onMouseDown={this.props.onMouseDown}\r\n                onClick={this.onMultiContainerClick} onDoubleClick={this.props.onDblClick} >\r\n                {tokens}\r\n                {input}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    renderDropdown() {\r\n        return <Button ref={(el) => this.dropdownButton = el} type=\"button\" icon=\"pi pi-chevron-down\" className=\"p-autocomplete-dropdown\" disabled={this.props.disabled} onClick={this.onDropdownClick} />\r\n    }\r\n\r\n    renderLoader() {\r\n        if (this.state.searching) {\r\n            return <i className=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i>;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let input, dropdown;\r\n        let className = classNames('p-autocomplete p-component p-inputwrapper', this.props.className, {\r\n            'p-autocomplete-dd': this.props.dropdown,\r\n            'p-autocomplete-multiple': this.props.multiple,\r\n            'p-inputwrapper-filled': this.props.value,\r\n            'p-inputwrapper-focus': this.state.focused\r\n        });\r\n        let loader = this.renderLoader();\r\n\r\n        if (this.props.multiple)\r\n            input = this.renderMultipleAutoComplete();\r\n        else\r\n            input = this.renderSimpleAutoComplete();\r\n\r\n        if (this.props.dropdown) {\r\n            dropdown = this.renderDropdown();\r\n        }\r\n\r\n        return (\r\n            <span ref={(el) => this.container = el} id={this.id} style={this.props.style} className={className} aria-haspopup=\"listbox\"\r\n                aria-expanded={this.state.overlayVisible} aria-owns={this.listId}>\r\n                {input}\r\n                {loader}\r\n                {dropdown}\r\n                <AutoCompletePanel ref={this.overlayRef} suggestions={this.props.suggestions} field={this.props.field} listId={this.listId}\r\n                    appendTo={this.props.appendTo} itemTemplate={this.props.itemTemplate} onItemClick={this.selectItem} ariaSelected={this.ariaSelected}\r\n                    panelStyle={this.props.panelStyle} panelClassName={this.props.panelClassName} onClick={this.onPanelClick}\r\n                    in={this.state.overlayVisible} onEnter={this.onOverlayEnter} onEntering={this.onOverlayEntering} onEntered={this.onOverlayEntered} onExit={this.onOverlayExit} />\r\n            </span>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}