{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\togglebutton\\\\ToggleButton.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport { tip } from '../tooltip/Tooltip';\nimport { Ripple } from '../ripple/Ripple';\nexport var ToggleButton = /*#__PURE__*/function (_Component) {\n  _inherits(ToggleButton, _Component);\n\n  var _super = _createSuper(ToggleButton);\n\n  function ToggleButton(props) {\n    var _this;\n\n    _classCallCheck(this, ToggleButton);\n\n    _this = _super.call(this, props);\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ToggleButton, [{\n    key: \"toggle\",\n    value: function toggle(e) {\n      if (!this.props.disabled && this.props.onChange) {\n        this.props.onChange({\n          originalEvent: e,\n          value: !this.props.checked,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.props.id,\n            value: !this.props.checked\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      if (event.key === 'Enter') {\n        this.toggle(event);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"hasLabel\",\n    value: function hasLabel() {\n      return this.props.onLabel && this.props.onLabel.length > 0 && this.props.offLabel && this.props.offLabel.length > 0;\n    }\n  }, {\n    key: \"hasIcon\",\n    value: function hasIcon() {\n      return this.props.onIcon && this.props.onIcon.length > 0 && this.props.offIcon && this.props.offIcon.length > 0;\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.hasLabel() ? this.props.checked ? this.props.onLabel : this.props.offLabel : '&nbsp;';\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.container,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = classNames('p-button p-togglebutton p-component', {\n        'p-button-icon-only': this.hasIcon() && !this.hasLabel(),\n        'p-highlight': this.props.checked,\n        'p-disabled': this.props.disabled\n      }, this.props.className),\n          iconClassName = null;\n      var hasIcon = this.hasIcon();\n      var label = this.getLabel();\n\n      if (hasIcon) {\n        iconClassName = classNames('p-button-icon p-c', {\n          'p-button-icon-left': this.props.iconPos === 'left' && label,\n          'p-button-icon-right': this.props.iconPos === 'right' && label\n        }, this.props.checked ? this.props.onIcon : this.props.offIcon);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this2.container = el;\n        },\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        onClick: this.toggle,\n        onFocus: this.props.onFocus,\n        onBlur: this.props.onBlur,\n        onKeyDown: this.onKeyDown,\n        tabIndex: !this.props.disabled && this.props.tabIndex,\n        \"aria-labelledby\": this.props.ariaLabelledBy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, hasIcon && /*#__PURE__*/React.createElement(\"span\", {\n        className: iconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-button-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, label), /*#__PURE__*/React.createElement(Ripple, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ToggleButton;\n}(Component);\nToggleButton.defaultProps = {\n  id: null,\n  onIcon: null,\n  offIcon: null,\n  onLabel: 'Yes',\n  offLabel: 'No',\n  iconPos: 'left',\n  style: null,\n  className: null,\n  checked: false,\n  tabIndex: 0,\n  tooltip: null,\n  tooltipOptions: null,\n  ariaLabelledBy: null,\n  onChange: null,\n  onFocus: null,\n  onBlur: null\n};\nToggleButton.propTypes = {\n  id: PropTypes.string,\n  onIcon: PropTypes.string,\n  offIcon: PropTypes.string,\n  onLabel: PropTypes.string,\n  offLabel: PropTypes.string,\n  iconPos: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  checked: PropTypes.bool,\n  tabIndex: PropTypes.number,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  ariaLabelledBy: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/togglebutton/ToggleButton.js"],"names":["React","Component","PropTypes","classNames","tip","Ripple","ToggleButton","props","toggle","bind","onKeyDown","e","disabled","onChange","originalEvent","value","checked","stopPropagation","preventDefault","target","name","id","event","key","onLabel","length","offLabel","onIcon","offIcon","hasLabel","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","container","options","className","hasIcon","iconClassName","label","getLabel","iconPos","el","style","onFocus","onBlur","tabIndex","ariaLabelledBy","defaultProps","propTypes","string","object","bool","number","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { tip } from '../tooltip/Tooltip';\r\nimport { Ripple } from '../ripple/Ripple';\r\n\r\nexport class ToggleButton extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        onIcon: null,\r\n        offIcon: null,\r\n        onLabel: 'Yes',\r\n        offLabel: 'No',\r\n        iconPos: 'left',\r\n        style: null,\r\n        className: null,\r\n        checked: false,\r\n        tabIndex: 0,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        ariaLabelledBy: null,\r\n        onChange: null,\r\n        onFocus: null,\r\n        onBlur: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        onIcon: PropTypes.string,\r\n        offIcon: PropTypes.string,\r\n        onLabel: PropTypes.string,\r\n        offLabel: PropTypes.string,\r\n        iconPos: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        checked: PropTypes.bool,\r\n        tabIndex: PropTypes.number,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        ariaLabelledBy: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n    }\r\n\r\n    toggle(e) {\r\n        if (!this.props.disabled && this.props.onChange) {\r\n            this.props.onChange({\r\n                originalEvent: e,\r\n                value: !this.props.checked,\r\n                stopPropagation : () =>{},\r\n                preventDefault : () =>{},\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.props.id,\r\n                    value: !this.props.checked,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (event.key === 'Enter') {\r\n            this.toggle(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    hasLabel() {\r\n        return this.props.onLabel && this.props.onLabel.length > 0 && this.props.offLabel && this.props.offLabel.length > 0;\r\n    }\r\n\r\n    hasIcon() {\r\n        return this.props.onIcon && this.props.onIcon.length > 0 && this.props.offIcon && this.props.offIcon.length > 0;\r\n    }\r\n\r\n    getLabel() {\r\n        return this.hasLabel() ? (this.props.checked ? this.props.onLabel : this.props.offLabel): '&nbsp;';\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.container,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-button p-togglebutton p-component', {\r\n            'p-button-icon-only': this.hasIcon() && !this.hasLabel(),\r\n            'p-highlight': this.props.checked,\r\n            'p-disabled': this.props.disabled,\r\n        }, this.props.className),\r\n        iconClassName = null;\r\n\r\n        const hasIcon = this.hasIcon();\r\n        const label = this.getLabel();\r\n\r\n        if (hasIcon) {\r\n            iconClassName = classNames('p-button-icon p-c', {\r\n                'p-button-icon-left': this.props.iconPos === 'left' && label,\r\n                'p-button-icon-right': this.props.iconPos === 'right' && label\r\n            }, this.props.checked ? this.props.onIcon : this.props.offIcon);\r\n        }\r\n\r\n        return (\r\n            <div ref={(el) => this.container = el} id={this.props.id} className={className} style={this.props.style}\r\n                onClick={this.toggle} onFocus={this.props.onFocus} onBlur={this.props.onBlur} onKeyDown={this.onKeyDown}\r\n                tabIndex={!this.props.disabled && this.props.tabIndex} aria-labelledby={this.props.ariaLabelledBy}>\r\n\r\n                {hasIcon && <span className={iconClassName}></span>}\r\n                <span className=\"p-button-label\">{label}</span>\r\n                <Ripple />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}