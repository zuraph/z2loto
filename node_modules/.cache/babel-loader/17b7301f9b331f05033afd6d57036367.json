{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\overlaypanel\\\\OverlayPanel.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { classNames } from '../utils/ClassNames';\nimport DomHandler from '../utils/DomHandler';\nimport { CSSTransition } from 'react-transition-group';\nimport { Ripple } from '../ripple/Ripple';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport var OverlayPanel = /*#__PURE__*/function (_Component) {\n  _inherits(OverlayPanel, _Component);\n\n  var _super = _createSuper(OverlayPanel);\n\n  function OverlayPanel(props) {\n    var _this;\n\n    _classCallCheck(this, OverlayPanel);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: false\n    };\n    _this.onCloseClick = _this.onCloseClick.bind(_assertThisInitialized(_this));\n    _this.onPanelClick = _this.onPanelClick.bind(_assertThisInitialized(_this));\n    _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));\n    _this.onEntered = _this.onEntered.bind(_assertThisInitialized(_this));\n    _this.onExit = _this.onExit.bind(_assertThisInitialized(_this));\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.overlayRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(OverlayPanel, [{\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this2 = this;\n\n      if (!this.documentClickListener && this.props.dismissable) {\n        this.documentClickListener = function (event) {\n          if (!_this2.isPanelClicked && _this2.isOutsideClicked(event.target)) {\n            _this2.hide();\n          }\n\n          _this2.isPanelClicked = false;\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this3 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, function () {\n          if (_this3.state.visible) {\n            _this3.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"bindResizeListener\",\n    value: function bindResizeListener() {\n      var _this4 = this;\n\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this4.state.visible) {\n            _this4.hide();\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    }\n  }, {\n    key: \"unbindResizeListener\",\n    value: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(target) {\n      return this.overlayRef && this.overlayRef.current && !(this.overlayRef.current.isSameNode(target) || this.overlayRef.current.contains(target));\n    }\n  }, {\n    key: \"hasTargetChanged\",\n    value: function hasTargetChanged(event, target) {\n      return this.target != null && this.target !== (target || event.currentTarget || event.target);\n    }\n  }, {\n    key: \"onCloseClick\",\n    value: function onCloseClick(event) {\n      this.hide();\n      event.preventDefault();\n    }\n  }, {\n    key: \"onPanelClick\",\n    value: function onPanelClick(event) {\n      this.isPanelClicked = true;\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.target\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event, target) {\n      var _this5 = this;\n\n      if (this.state.visible) {\n        this.hide();\n\n        if (this.hasTargetChanged(event, target)) {\n          this.target = target || event.currentTarget || event.target;\n          setTimeout(function () {\n            _this5.show(event, _this5.target);\n          }, 200);\n        }\n      } else {\n        this.show(event, target);\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(event, target) {\n      var _this6 = this;\n\n      this.target = target || event.currentTarget || event.target;\n\n      if (this.state.visible) {\n        this.align();\n      } else {\n        this.setState({\n          visible: true\n        }, function () {\n          OverlayEventBus.on('overlay-click', function (e) {\n            if (!_this6.isOutsideClicked(e.target)) {\n              _this6.isPanelClicked = true;\n            }\n          });\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this7 = this;\n\n      this.setState({\n        visible: false\n      }, function () {\n        OverlayEventBus.off('overlay-click');\n\n        if (_this7.props.onHide) {\n          _this7.props.onHide();\n        }\n      });\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\n      this.align();\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered() {\n      this.bindDocumentClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n    }\n  }, {\n    key: \"onExit\",\n    value: function onExit() {\n      this.unbindDocumentClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n    }\n  }, {\n    key: \"align\",\n    value: function align() {\n      if (this.target) {\n        DomHandler.absolutePosition(this.overlayRef.current, this.target);\n        var containerOffset = DomHandler.getOffset(this.overlayRef.current);\n        var targetOffset = DomHandler.getOffset(this.target);\n        var arrowLeft = 0;\n\n        if (containerOffset.left < targetOffset.left) {\n          arrowLeft = targetOffset.left - containerOffset.left;\n        }\n\n        this.overlayRef.current.style.setProperty('--overlayArrowLeft', \"\".concat(arrowLeft, \"px\"));\n\n        if (containerOffset.top < targetOffset.top) {\n          DomHandler.addClass(this.overlayRef.current, 'p-overlaypanel-flipped');\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentClickListener();\n      this.unbindResizeListener();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n    }\n  }, {\n    key: \"renderCloseIcon\",\n    value: function renderCloseIcon() {\n      if (this.props.showCloseIcon) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"p-overlaypanel-close p-link\",\n          onClick: this.onCloseClick,\n          \"aria-label\": this.props.ariaCloseLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-overlaypanel-close-icon pi pi-times\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Ripple, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement() {\n      var className = classNames('p-overlaypanel p-component', this.props.className);\n      var closeIcon = this.renderCloseIcon();\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.overlayRef,\n        classNames: \"p-overlaypanel\",\n        in: this.state.visible,\n        timeout: {\n          enter: 120,\n          exit: 100\n        },\n        unmountOnExit: true,\n        onEnter: this.onEnter,\n        onEntered: this.onEntered,\n        onExit: this.onExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.overlayRef,\n        id: this.id,\n        className: className,\n        style: this.props.style,\n        onClick: this.onPanelClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-overlaypanel-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      }, this.props.children), closeIcon));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderElement();\n\n      if (this.props.appendTo) {\n        return ReactDOM.createPortal(element, this.props.appendTo);\n      } else {\n        return element;\n      }\n    }\n  }]);\n\n  return OverlayPanel;\n}(Component);\nOverlayPanel.defaultProps = {\n  id: null,\n  dismissable: true,\n  showCloseIcon: false,\n  style: null,\n  className: null,\n  appendTo: null,\n  ariaCloseLabel: 'close',\n  onHide: null\n};\nOverlayPanel.propTypes = {\n  id: PropTypes.string,\n  dismissable: PropTypes.bool,\n  showCloseIcon: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  appendTo: PropTypes.any,\n  ariaCloseLabel: PropTypes.string,\n  onHide: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/overlaypanel/OverlayPanel.js"],"names":["React","Component","PropTypes","ReactDOM","classNames","DomHandler","CSSTransition","Ripple","UniqueComponentId","ConnectedOverlayScrollHandler","OverlayEventBus","OverlayPanel","props","state","visible","onCloseClick","bind","onPanelClick","onEnter","onEntered","onExit","id","overlayRef","createRef","documentClickListener","dismissable","event","isPanelClicked","isOutsideClicked","target","hide","document","addEventListener","removeEventListener","scrollHandler","bindScrollListener","unbindScrollListener","resizeListener","window","current","isSameNode","contains","currentTarget","preventDefault","emit","originalEvent","hasTargetChanged","setTimeout","show","align","setState","on","e","off","onHide","style","zIndex","String","generateZIndex","bindDocumentClickListener","bindResizeListener","unbindDocumentClickListener","unbindResizeListener","absolutePosition","containerOffset","getOffset","targetOffset","arrowLeft","left","setProperty","top","addClass","destroy","showCloseIcon","ariaCloseLabel","className","closeIcon","renderCloseIcon","enter","exit","children","element","renderElement","appendTo","createPortal","defaultProps","propTypes","string","bool","object","any","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Ripple } from '../ripple/Ripple';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport class OverlayPanel extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        dismissable: true,\r\n        showCloseIcon: false,\r\n        style: null,\r\n        className: null,\r\n        appendTo: null,\r\n        ariaCloseLabel: 'close',\r\n        onHide: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        dismissable: PropTypes.bool,\r\n        showCloseIcon: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        appendTo: PropTypes.any,\r\n        ariaCloseLabel: PropTypes.string,\r\n        onHide: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n\r\n        this.onCloseClick = this.onCloseClick.bind(this);\r\n        this.onPanelClick = this.onPanelClick.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.onEntered = this.onEntered.bind(this);\r\n        this.onExit = this.onExit.bind(this);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.overlayRef = React.createRef();\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if(!this.documentClickListener && this.props.dismissable) {\r\n            this.documentClickListener = (event) => {\r\n                if (!this.isPanelClicked && this.isOutsideClicked(event.target)) {\r\n                    this.hide();\r\n                }\r\n\r\n                this.isPanelClicked = false;\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if(this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, () => {\r\n                if (this.state.visible) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    bindResizeListener() {\r\n        if (!this.resizeListener) {\r\n            this.resizeListener = () => {\r\n                if (this.state.visible) {\r\n                    this.hide();\r\n                }\r\n            };\r\n            window.addEventListener('resize', this.resizeListener);\r\n        }\r\n    }\r\n\r\n    unbindResizeListener() {\r\n        if (this.resizeListener) {\r\n            window.removeEventListener('resize', this.resizeListener);\r\n            this.resizeListener = null;\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(target) {\r\n        return this.overlayRef && this.overlayRef.current && !(this.overlayRef.current.isSameNode(target) || this.overlayRef.current.contains(target));\r\n    }\r\n\r\n    hasTargetChanged(event, target) {\r\n        return this.target != null && this.target !== (target||event.currentTarget||event.target);\r\n    }\r\n\r\n    onCloseClick(event) {\r\n        this.hide();\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    onPanelClick(event) {\r\n        this.isPanelClicked = true;\r\n\r\n        OverlayEventBus.emit('overlay-click', {\r\n            originalEvent: event,\r\n            target: this.target\r\n        });\r\n    }\r\n\r\n    toggle(event, target) {\r\n        if (this.state.visible) {\r\n            this.hide();\r\n\r\n            if (this.hasTargetChanged(event, target)) {\r\n                this.target = target||event.currentTarget||event.target;\r\n\r\n                setTimeout(() => {\r\n                    this.show(event, this.target);\r\n                }, 200);\r\n            }\r\n        }\r\n        else {\r\n            this.show(event, target);\r\n        }\r\n    }\r\n\r\n    show(event, target) {\r\n        this.target = target||event.currentTarget||event.target;\r\n\r\n        if (this.state.visible) {\r\n            this.align();\r\n        }\r\n        else {\r\n            this.setState({ visible: true }, () => {\r\n                OverlayEventBus.on('overlay-click', (e) => {\r\n                    if (!this.isOutsideClicked(e.target)) {\r\n                        this.isPanelClicked = true;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.setState({ visible: false }, () => {\r\n            OverlayEventBus.off('overlay-click');\r\n\r\n            if (this.props.onHide) {\r\n                this.props.onHide();\r\n            }\r\n        });\r\n    }\r\n\r\n    onEnter() {\r\n        this.overlayRef.current.style.zIndex = String(DomHandler.generateZIndex());\r\n        this.align();\r\n    }\r\n\r\n    onEntered() {\r\n        this.bindDocumentClickListener();\r\n        this.bindScrollListener();\r\n        this.bindResizeListener();\r\n    }\r\n\r\n    onExit() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindScrollListener();\r\n        this.unbindResizeListener();\r\n    }\r\n\r\n    align() {\r\n        if (this.target) {\r\n            DomHandler.absolutePosition(this.overlayRef.current, this.target);\r\n\r\n            const containerOffset = DomHandler.getOffset(this.overlayRef.current);\r\n            const targetOffset = DomHandler.getOffset(this.target);\r\n            let arrowLeft = 0;\r\n\r\n            if (containerOffset.left < targetOffset.left) {\r\n                arrowLeft = targetOffset.left - containerOffset.left;\r\n            }\r\n            this.overlayRef.current.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\r\n\r\n            if (containerOffset.top < targetOffset.top) {\r\n                DomHandler.addClass(this.overlayRef.current, 'p-overlaypanel-flipped');\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindResizeListener();\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n    }\r\n\r\n    renderCloseIcon() {\r\n        if(this.props.showCloseIcon) {\r\n            return (\r\n                <button type=\"button\" className=\"p-overlaypanel-close p-link\" onClick={this.onCloseClick} aria-label={this.props.ariaCloseLabel}>\r\n                    <span className=\"p-overlaypanel-close-icon pi pi-times\"></span>\r\n                    <Ripple />\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderElement() {\r\n        let className = classNames('p-overlaypanel p-component', this.props.className);\r\n        let closeIcon = this.renderCloseIcon();\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.overlayRef} classNames=\"p-overlaypanel\" in={this.state.visible} timeout={{ enter: 120, exit: 100 }}\r\n                unmountOnExit onEnter={this.onEnter} onEntered={this.onEntered} onExit={this.onExit}>\r\n                <div ref={this.overlayRef} id={this.id} className={className} style={this.props.style} onClick={this.onPanelClick}>\r\n                    <div className=\"p-overlaypanel-content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                    {closeIcon}\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let element = this.renderElement();\r\n\r\n        if (this.props.appendTo) {\r\n            return ReactDOM.createPortal(element, this.props.appendTo);\r\n        }\r\n        else {\r\n            return element;\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}