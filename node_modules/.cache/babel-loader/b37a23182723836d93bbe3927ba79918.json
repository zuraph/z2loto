{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var SelectButtonDoc=/*#__PURE__*/function(_Component){_inherits(SelectButtonDoc,_Component);var _super=_createSuper(SelectButtonDoc);function SelectButtonDoc(props){var _this;_classCallCheck(this,SelectButtonDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { SelectButton } from 'primereact/selectbutton';\\n\\nexport class SelectButtonDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            value1: 'Off',\\n            value2: null,\\n            value3: null,\\n        };\\n\\n        this.options = ['Off', 'On'];\\n        this.paymentOptions = [\\n            {name: 'Option 1', value: 1},\\n            {name: 'Option 2', value: 2},\\n            {name: 'Option 3', value: 3}\\n        ];\\n        this.justifyOptions = [\\n            {icon: 'pi pi-align-left', value: 'left'},\\n            {icon: 'pi pi-align-right', value: 'Right'},\\n            {icon: 'pi pi-align-center', value: 'Center'},\\n            {icon: 'pi pi-align-justify', value: 'Justify'}\\n        ];\\n\\n        this.justifyTemplate = this.justifyTemplate.bind(this);\\n    }\\n\\n    justifyTemplate(option) {\\n        return <i className={option.icon}></i>;\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Single Selection</h5>\\n                    <SelectButton value={this.state.value1} options={this.options} onChange={(e) => this.setState({ value1: e.value })} />\\n\\n                    <h5>Multiple Selection</h5>\\n                    <SelectButton value={this.state.value2} options={this.paymentOptions} onChange={(e) => this.setState({ value2: e.value })} optionLabel=\\\"name\\\" multiple />\\n\\n                    <h5>Custom Content</h5>\\n                    <SelectButton value={this.state.value3} options={this.justifyOptions} onChange={(e) => this.setState({ value3: e.value })} itemTemplate={this.justifyTemplate} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { SelectButton } from 'primereact/selectbutton';\\n\\nconst SelectButtonDemo = () => {\\n    const [value1, setValue1] = useState('Off');\\n    const [value2, setValue2] = useState(null);\\n    const [value3, setValue3] = useState(null);\\n    const options = ['Off', 'On'];\\n    const paymentOptions = [\\n        {name: 'Option 1', value: 1},\\n        {name: 'Option 2', value: 2},\\n        {name: 'Option 3', value: 3}\\n    ];\\n    const justifyOptions = [\\n        {icon: 'pi pi-align-left', value: 'left'},\\n        {icon: 'pi pi-align-right', value: 'Right'},\\n        {icon: 'pi pi-align-center', value: 'Center'},\\n        {icon: 'pi pi-align-justify', value: 'Justify'}\\n    ];\\n\\n    const justifyTemplate = (option) => {\\n        return <i className={option.icon}></i>;\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Selection</h5>\\n                <SelectButton value={value1} options={options} onChange={(e) => setValue1(e.value)} />\\n\\n                <h5>Multiple Selection</h5>\\n                <SelectButton value={value2} options={paymentOptions} onChange={(e) => setValue2(e.value)} optionLabel=\\\"name\\\" multiple />\\n\\n                <h5>Custom Content</h5>\\n                <SelectButton value={value3} options={justifyOptions} onChange={(e) => setValue3(e.value)} itemTemplate={justifyTemplate} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { SelectButton } from 'primereact/selectbutton';\\n\\nconst SelectButtonDemo = () => {\\n    const [value1, setValue1] = useState('Off');\\n    const [value2, setValue2] = useState(null);\\n    const [value3, setValue3] = useState(null);\\n    const options = ['Off', 'On'];\\n    const paymentOptions = [\\n        {name: 'Option 1', value: 1},\\n        {name: 'Option 2', value: 2},\\n        {name: 'Option 3', value: 3}\\n    ];\\n    const justifyOptions = [\\n        {icon: 'pi pi-align-left', value: 'left'},\\n        {icon: 'pi pi-align-right', value: 'Right'},\\n        {icon: 'pi pi-align-center', value: 'Center'},\\n        {icon: 'pi pi-align-justify', value: 'Justify'}\\n    ];\\n\\n    const justifyTemplate = (option) => {\\n        return <i className={option.icon}></i>;\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Single Selection</h5>\\n                <SelectButton value={value1} options={options} onChange={(e) => setValue1(e.value)} />\\n\\n                <h5>Multiple Selection</h5>\\n                <SelectButton value={value2} options={paymentOptions} onChange={(e) => setValue2(e.value)} optionLabel=\\\"name\\\" multiple />\\n\\n                <h5>Custom Content</h5>\\n                <SelectButton value={value3} options={justifyOptions} onChange={(e) => setValue3(e.value)} itemTemplate={justifyTemplate} />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this;}_createClass(SelectButtonDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { SelectButton } from 'primereact/selectbutton';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"Dropdown is used as a controlled component with \",/*#__PURE__*/React.createElement(\"i\",null,\"value\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"onChange\"),\" properties along with the options collection. There are two alternatives of how to define the options property; One way is providing a collection of \",/*#__PURE__*/React.createElement(\"i\",null,\"SelectItem\"),\" instances having label-value pairs whereas other way is providing an array of arbitrary objects along with the \",/*#__PURE__*/React.createElement(\"i\",null,\"optionLabel\"),\" and \",/*#__PURE__*/React.createElement(\"i\",null,\"optionValue\"),\" properties to specify the label/value field pair. In addition, options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Options as SelectItems\")),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst citySelectItems = [\\n    {label: 'New York', value: 'NY'},\\n    {label: 'Rome', value: 'RM'},\\n    {label: 'London', value: 'LDN'},\\n    {label: 'Istanbul', value: 'IST'},\\n    {label: 'Paris', value: 'PRS'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<SelectButton value={city} options={citySelectItems} onChange={(e) => setValue(e.value)}></SelectButton>\\n\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Options as any type\")),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst cities = [\\n    {name: 'New York', code: 'NY'},\\n    {name: 'Rome', code: 'RM'},\\n    {name: 'London', code: 'LDN'},\\n    {name: 'Istanbul', code: 'IST'},\\n    {name: 'Paris', code: 'PRS'}\\n];\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<SelectButton optionLabel=\\\"name\\\" value={city} options={cities} onChange={(e) => setValue(e.value)}></SelectButton>\\n<SelectButton optionLabel=\\\"name\\\" optionValue=\\\"code\\\" value={city} options={cities} onChange={(e) => setValue(e.value)}></SelectButton>\\n\"),/*#__PURE__*/React.createElement(\"p\",null,\"When \",/*#__PURE__*/React.createElement(\"i\",null,\"optionValue\"),\" is not defined, value of an option refers to the option object itself.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Multiple\"),/*#__PURE__*/React.createElement(\"p\",null,\"SelectButton allows selecting only one item by default and setting \",/*#__PURE__*/React.createElement(\"i\",null,\"multiple\"),\" option enables choosing more than one item. In multiple case, model property should be an array.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Custom Content\"),/*#__PURE__*/React.createElement(\"p\",null,\"Options support templating using the \",/*#__PURE__*/React.createElement(\"i\",null,\"itemTemplate\"),\" property that references a function to render the content. Notice the usage of optionLabel, although it is not rendered visually, it is still required to be used as the list key.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<SelectButton optionLabel=\\\"name\\\" optionValue=\\\"code\\\" value={city} options={cities} onChange={(e) => setValue(e.value)} itemTemplate={itemTemplate} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nconst itemTemplate = (option) => {\\n    // custom item content\\n}\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"SelectItem API\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"label\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"ClassName of the option.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"title\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Tooltip text of the option. (Not supported)\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether the option is disabled or not.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"options\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"An array of objects to display as the available options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"optionLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the label field of an option when an arbitrary objects instead of SelectItems are used as options.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"optionValue\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the value field of an option when arbitrary objects are used as options instead of SelectItems.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"optionDisabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tabIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Index of the element in tabbing order.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"multiple\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When specified, allows selecting multiple values.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the element should be disabled.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"dataKey\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"A property to uniquely match the value in options for better performance.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaLabelledBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Establishes relationships between the component and label(s) where its value should be one or more element IDs.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"itemTemplate\"),/*#__PURE__*/React.createElement(\"td\",null,\"function\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Function that gets the option and returns the content.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: browser event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.value: Single value or an array of values that are selected.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke on value change.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'SelectButtonDemo',sources:this.sources})));}}]);return SelectButtonDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/selectbutton/SelectButtonDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","SelectButtonDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class SelectButtonDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { SelectButton } from 'primereact/selectbutton';\r\n\r\nexport class SelectButtonDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value1: 'Off',\r\n            value2: null,\r\n            value3: null,\r\n        };\r\n\r\n        this.options = ['Off', 'On'];\r\n        this.paymentOptions = [\r\n            {name: 'Option 1', value: 1},\r\n            {name: 'Option 2', value: 2},\r\n            {name: 'Option 3', value: 3}\r\n        ];\r\n        this.justifyOptions = [\r\n            {icon: 'pi pi-align-left', value: 'left'},\r\n            {icon: 'pi pi-align-right', value: 'Right'},\r\n            {icon: 'pi pi-align-center', value: 'Center'},\r\n            {icon: 'pi pi-align-justify', value: 'Justify'}\r\n        ];\r\n\r\n        this.justifyTemplate = this.justifyTemplate.bind(this);\r\n    }\r\n\r\n    justifyTemplate(option) {\r\n        return <i className={option.icon}></i>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Single Selection</h5>\r\n                    <SelectButton value={this.state.value1} options={this.options} onChange={(e) => this.setState({ value1: e.value })} />\r\n\r\n                    <h5>Multiple Selection</h5>\r\n                    <SelectButton value={this.state.value2} options={this.paymentOptions} onChange={(e) => this.setState({ value2: e.value })} optionLabel=\"name\" multiple />\r\n\r\n                    <h5>Custom Content</h5>\r\n                    <SelectButton value={this.state.value3} options={this.justifyOptions} onChange={(e) => this.setState({ value3: e.value })} itemTemplate={this.justifyTemplate} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { SelectButton } from 'primereact/selectbutton';\r\n\r\nconst SelectButtonDemo = () => {\r\n    const [value1, setValue1] = useState('Off');\r\n    const [value2, setValue2] = useState(null);\r\n    const [value3, setValue3] = useState(null);\r\n    const options = ['Off', 'On'];\r\n    const paymentOptions = [\r\n        {name: 'Option 1', value: 1},\r\n        {name: 'Option 2', value: 2},\r\n        {name: 'Option 3', value: 3}\r\n    ];\r\n    const justifyOptions = [\r\n        {icon: 'pi pi-align-left', value: 'left'},\r\n        {icon: 'pi pi-align-right', value: 'Right'},\r\n        {icon: 'pi pi-align-center', value: 'Center'},\r\n        {icon: 'pi pi-align-justify', value: 'Justify'}\r\n    ];\r\n\r\n    const justifyTemplate = (option) => {\r\n        return <i className={option.icon}></i>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Selection</h5>\r\n                <SelectButton value={value1} options={options} onChange={(e) => setValue1(e.value)} />\r\n\r\n                <h5>Multiple Selection</h5>\r\n                <SelectButton value={value2} options={paymentOptions} onChange={(e) => setValue2(e.value)} optionLabel=\"name\" multiple />\r\n\r\n                <h5>Custom Content</h5>\r\n                <SelectButton value={value3} options={justifyOptions} onChange={(e) => setValue3(e.value)} itemTemplate={justifyTemplate} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { SelectButton } from 'primereact/selectbutton';\r\n\r\nconst SelectButtonDemo = () => {\r\n    const [value1, setValue1] = useState('Off');\r\n    const [value2, setValue2] = useState(null);\r\n    const [value3, setValue3] = useState(null);\r\n    const options = ['Off', 'On'];\r\n    const paymentOptions = [\r\n        {name: 'Option 1', value: 1},\r\n        {name: 'Option 2', value: 2},\r\n        {name: 'Option 3', value: 3}\r\n    ];\r\n    const justifyOptions = [\r\n        {icon: 'pi pi-align-left', value: 'left'},\r\n        {icon: 'pi pi-align-right', value: 'Right'},\r\n        {icon: 'pi pi-align-center', value: 'Center'},\r\n        {icon: 'pi pi-align-justify', value: 'Justify'}\r\n    ];\r\n\r\n    const justifyTemplate = (option) => {\r\n        return <i className={option.icon}></i>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Single Selection</h5>\r\n                <SelectButton value={value1} options={options} onChange={(e) => setValue1(e.value)} />\r\n\r\n                <h5>Multiple Selection</h5>\r\n                <SelectButton value={value2} options={paymentOptions} onChange={(e) => setValue2(e.value)} optionLabel=\"name\" multiple />\r\n\r\n                <h5>Custom Content</h5>\r\n                <SelectButton value={value3} options={justifyOptions} onChange={(e) => setValue3(e.value)} itemTemplate={justifyTemplate} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n    <TabView>\r\n        <TabPanel header=\"Documentation\">\r\n            <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { SelectButton } from 'primereact/selectbutton';\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>Getting Started</h5>\r\n            <p>Dropdown is used as a controlled component with <i>value</i> and <i>onChange</i> properties along with the options collection. There are two alternatives\r\n            of how to define the options property; One way is providing a collection of <i>SelectItem</i> instances having label-value pairs\r\n            whereas other way is providing an array of arbitrary objects along with the <i>optionLabel</i> and <i>optionValue</i> properties to specify the label/value field pair. In addition,\r\n            options can be simple primitive values such as a string array, in this case no optionLabel or optionValue is necessary.</p>\r\n\r\n            <p><b>Options as SelectItems</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst citySelectItems = [\r\n    {label: 'New York', value: 'NY'},\r\n    {label: 'Rome', value: 'RM'},\r\n    {label: 'London', value: 'LDN'},\r\n    {label: 'Istanbul', value: 'IST'},\r\n    {label: 'Paris', value: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<SelectButton value={city} options={citySelectItems} onChange={(e) => setValue(e.value)}></SelectButton>\r\n`}\r\n</CodeHighlight>\r\n\r\n            <p><b>Options as any type</b></p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst cities = [\r\n    {name: 'New York', code: 'NY'},\r\n    {name: 'Rome', code: 'RM'},\r\n    {name: 'London', code: 'LDN'},\r\n    {name: 'Istanbul', code: 'IST'},\r\n    {name: 'Paris', code: 'PRS'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight>\r\n{`\r\n<SelectButton optionLabel=\"name\" value={city} options={cities} onChange={(e) => setValue(e.value)}></SelectButton>\r\n<SelectButton optionLabel=\"name\" optionValue=\"code\" value={city} options={cities} onChange={(e) => setValue(e.value)}></SelectButton>\r\n`}\r\n            </CodeHighlight>\r\n            <p>When <i>optionValue</i> is not defined, value of an option refers to the option object itself.</p>\r\n\r\n            <h5>Multiple</h5>\r\n            <p>SelectButton allows selecting only one item by default and setting <i>multiple</i> option enables choosing more than one item. In multiple case, model property should be an array.</p>\r\n\r\n            <h5>Custom Content</h5>\r\n            <p>Options support templating using the <i>itemTemplate</i> property that references a function to render the content. Notice\r\n            the usage of optionLabel, although it is not rendered visually, it is still required to be used as the list key.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<SelectButton optionLabel=\"name\" optionValue=\"code\" value={city} options={cities} onChange={(e) => setValue(e.value)} itemTemplate={itemTemplate} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst itemTemplate = (option) => {\r\n    // custom item content\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n            <h5>SelectItem API</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Default</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>label</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Label of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>value</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Value of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>ClassName of the option.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>title</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Tooltip text of the option. (Not supported)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>Whether the option is disabled or not.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Properties</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Default</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>id</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Unique identifier of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>value</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Value of the component.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>options</td>\r\n                            <td>array</td>\r\n                            <td>null</td>\r\n                            <td>An array of objects to display as the available options.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>optionLabel</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the label field of an option when an arbitrary objects instead of SelectItems are used as options.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>optionValue</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Name of the value field of an option when arbitrary objects are used as options instead of SelectItems.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>optionDisabled</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tabIndex</td>\r\n                            <td>number</td>\r\n                            <td>null</td>\r\n                            <td>Index of the element in tabbing order.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>multiple</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When specified, allows selecting multiple values.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>disabled</td>\r\n                            <td>boolean</td>\r\n                            <td>false</td>\r\n                            <td>When present, it specifies that the element should be disabled.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>style</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Inline style of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>className</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Style class of the element.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>dataKey</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>A property to uniquely match the value in options for better performance.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltip</td>\r\n                            <td>any</td>\r\n                            <td>null</td>\r\n                            <td>Content of the tooltip.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>tooltipOptions</td>\r\n                            <td>object</td>\r\n                            <td>null</td>\r\n                            <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ariaLabelledBy</td>\r\n                            <td>string</td>\r\n                            <td>null</td>\r\n                            <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>itemTemplate</td>\r\n                            <td>function</td>\r\n                            <td>null</td>\r\n                            <td>Function that gets the option and returns the content.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Events</h5>\r\n            <div className=\"doc-tablewrapper\">\r\n                <table className=\"doc-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Parameters</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>onChange</td>\r\n                            <td>event.originalEvent: browser event <br />\r\n                                event.value: Single value or an array of values that are selected.</td>\r\n                            <td>Callback to invoke on value change.</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <h5>Dependencies</h5>\r\n            <p>None.</p>\r\n        </TabPanel>\r\n\r\n        {\r\n            useLiveEditorTabs({ name: 'SelectButtonDemo', sources: this.sources })\r\n        }\r\n    </TabView>\r\n</div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}