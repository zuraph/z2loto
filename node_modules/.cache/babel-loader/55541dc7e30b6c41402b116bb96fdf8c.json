{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\datatable\\\\DataTableSelectionDemo.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from '../../components/datatable/DataTable';\nimport { Column } from '../../components/column/Column';\nimport ProductService from '../service/ProductService';\nimport { Toast } from '../../components/toast/Toast';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var DataTableSelectionDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableSelectionDemo, _Component);\n\n  var _super = _createSuper(DataTableSelectionDemo);\n\n  function DataTableSelectionDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableSelectionDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      products: [],\n      selectedProduct1: null,\n      selectedProduct2: null,\n      selectedProduct3: null,\n      selectedProducts1: null,\n      selectedProducts2: null,\n      selectedProducts3: null\n    };\n    _this.productService = new ProductService();\n    _this.onRowSelect = _this.onRowSelect.bind(_assertThisInitialized(_this));\n    _this.onRowUnselect = _this.onRowUnselect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataTableSelectionDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.productService.getProductsSmall().then(function (data) {\n        return _this2.setState({\n          products: data\n        });\n      });\n    }\n  }, {\n    key: \"onRowSelect\",\n    value: function onRowSelect(event) {\n      this.toast.show({\n        severity: 'info',\n        summary: 'Product Selected',\n        detail: 'Name: ' + event.data.name,\n        life: 3000\n      });\n    }\n  }, {\n    key: \"onRowUnselect\",\n    value: function onRowUnselect(event) {\n      this.toast.show({\n        severity: 'warn',\n        summary: 'Product Unselected',\n        detail: 'Name: ' + event.data.name,\n        life: 3000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, \"DataTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }\n      }, \"Selection\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, \"DataTable provides single and multiple selection modes on click of a row. Selected rows are bound to the selection property and onRowSelect-onRowUnselect events are provided as optional callbacks. In addition built-in radio button and checkbox based selections are available as alternatives.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        ref: function ref(el) {\n          return _this3.toast = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, \"Single\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"In single mode, a row is selected on click event of a row. If the row is already selected then the row gets unselected.\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        selection: this.state.selectedProduct1,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this3.setState({\n            selectedProduct1: e.value\n          });\n        },\n        selectionMode: \"single\",\n        dataKey: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, \"Multiple\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by tapping and for other devices metakey or shiftkey are required. Setting metaKeySelection property as false enables multiple selection without meta key.\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        header: \"Multiple Selection with MetaKey\",\n        selection: this.state.selectedProducts1,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this3.setState({\n            selectedProducts1: e.value\n          });\n        },\n        selectionMode: \"multiple\",\n        dataKey: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        header: \"Multiple Selection without MetaKey\",\n        selection: this.state.selectedProducts2,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this3.setState({\n            selectedProducts2: e.value\n          });\n        },\n        selectionMode: \"multiple\",\n        dataKey: \"id\",\n        metaKeySelection: false,\n        style: {\n          marginTop: '2em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, \"row-select and row-unselects are available as selection events.\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        selection: this.state.selectedProduct2,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this3.setState({\n            selectedProduct2: e.value\n          });\n        },\n        selectionMode: \"single\",\n        dataKey: \"id\",\n        onRowSelect: this.onRowSelect,\n        onRowUnselect: this.onRowUnselect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, \"RadioButton\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, \"Single selection can also be handled using radio buttons by enabling the selectionMode property of column as \\\"single\\\".\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        selection: this.state.selectedProduct3,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this3.setState({\n            selectedProduct3: e.value\n          });\n        },\n        dataKey: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        selectionMode: \"single\",\n        headerStyle: {\n          width: '3em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"Checkbox\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        selection: this.state.selectedProducts3,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this3.setState({\n            selectedProducts3: e.value\n          });\n        },\n        dataKey: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        selectionMode: \"multiple\",\n        headerStyle: {\n          width: '3em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(DataTableSelectionDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataTableSelectionDemo;\n}(Component);\nexport var DataTableSelectionDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataTableSelectionDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataTableSelectionDemoDoc);\n\n  function DataTableSelectionDemoDoc(props) {\n    var _this4;\n\n    _classCallCheck(this, DataTableSelectionDemoDoc);\n\n    _this4 = _super2.call(this, props);\n    _this4.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Toast } from 'primereact/toast';\\n\\nexport class DataTableSelectionDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: [],\\n            selectedProduct1: null,\\n            selectedProduct2: null,\\n            selectedProduct3: null,\\n            selectedProducts1: null,\\n            selectedProducts2: null,\\n            selectedProducts3: null\\n        };\\n\\n        this.productService = new ProductService();\\n        this.onRowSelect = this.onRowSelect.bind(this);\\n        this.onRowUnselect = this.onRowUnselect.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    onRowSelect(event) {\\n        this.toast.show({ severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000 });\\n    }\\n\\n    onRowUnselect(event) {\\n        this.toast.show({ severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000 });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => this.toast = el} />\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Single</h5>\\n                    <p>In single mode, a row is selected on click event of a row. If the row is already selected then the row gets unselected.</p>\\n                    <DataTable value={this.state.products} selection={this.state.selectedProduct1} onSelectionChange={e => this.setState({ selectedProduct1: e.value })} selectionMode=\\\"single\\\" dataKey=\\\"id\\\">\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multiple</h5>\\n                    <p>In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by tapping and for other devices metakey or shiftkey are required.\\n                    Setting metaKeySelection property as false enables multiple selection without meta key.</p>\\n                    <DataTable value={this.state.products} header=\\\"Multiple Selection with MetaKey\\\" selection={this.state.selectedProducts1} onSelectionChange={e => this.setState({ selectedProducts1: e.value })} selectionMode=\\\"multiple\\\" dataKey=\\\"id\\\">\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                    </DataTable>\\n\\n                    <DataTable value={this.state.products} header=\\\"Multiple Selection without MetaKey\\\" selection={this.state.selectedProducts2} onSelectionChange={e => this.setState({ selectedProducts2: e.value })} selectionMode=\\\"multiple\\\" dataKey=\\\"id\\\" metaKeySelection={false} style={{ marginTop: '2em' }}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Events</h5>\\n                    <p>row-select and row-unselects are available as selection events.</p>\\n                    <DataTable value={this.state.products} selection={this.state.selectedProduct2} onSelectionChange={e => this.setState({ selectedProduct2: e.value })} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                        onRowSelect={this.onRowSelect} onRowUnselect={this.onRowUnselect}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>RadioButton</h5>\\n                    <p>Single selection can also be handled using radio buttons by enabling the selectionMode property of column as \\\"single\\\".</p>\\n                    <DataTable value={this.state.products} selection={this.state.selectedProduct3} onSelectionChange={e => this.setState({ selectedProduct3: e.value })} dataKey=\\\"id\\\">\\n                        <Column selectionMode=\\\"single\\\" headerStyle={{width: '3em'}}></Column>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                    </DataTable>\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Checkbox</h5>\\n\\n                    <DataTable value={this.state.products} selection={this.state.selectedProducts3} onSelectionChange={e => this.setState({ selectedProducts3: e.value })} dataKey=\\\"id\\\">\\n                        <Column selectionMode=\\\"multiple\\\" headerStyle={{width: '3em'}}></Column>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                        <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Toast } from 'primereact/toast';\\n\\nconst DataTableSelectionDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [selectedProduct1, setSelectedProduct1] = useState(null);\\n    const [selectedProduct2, setSelectedProduct2] = useState(null);\\n    const [selectedProduct3, setSelectedProduct3] = useState(null);\\n    const [selectedProducts1, setSelectedProducts1] = useState(null);\\n    const [selectedProducts2, setSelectedProducts2] = useState(null);\\n    const [selectedProducts3, setSelectedProducts3] = useState(null);\\n    const toast = useRef(null);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onRowSelect = (event) => {\\n        toast.current.show({ severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000 });\\n    }\\n\\n    const onRowUnselect = (event) => {\\n        toast.current.show({ severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000 });\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <h5>Single</h5>\\n                <p>In single mode, a row is selected on click event of a row. If the row is already selected then the row gets unselected.</p>\\n                <DataTable value={products} selection={selectedProduct1} onSelectionChange={e => setSelectedProduct1(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\">\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple</h5>\\n                <p>In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by tapping and for other devices metakey or shiftkey are required.\\n                Setting metaKeySelection property as false enables multiple selection without meta key.</p>\\n                <DataTable value={products} header=\\\"Multiple Selection with MetaKey\\\" selection={selectedProducts1} onSelectionChange={e => setSelectedProducts1(e.value)} selectionMode=\\\"multiple\\\" dataKey=\\\"id\\\">\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n\\n                <DataTable value={products} header=\\\"Multiple Selection without MetaKey\\\" selection={selectedProducts2} onSelectionChange={e => setSelectedProducts2(e.value)} selectionMode=\\\"multiple\\\" dataKey=\\\"id\\\" metaKeySelection={false} style={{ marginTop: '2em' }}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Events</h5>\\n                <p>row-select and row-unselects are available as selection events.</p>\\n                <DataTable value={products} selection={selectedProduct2} onSelectionChange={e => setSelectedProduct2(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                    onRowSelect={onRowSelect} onRowUnselect={onRowUnselect}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>RadioButton</h5>\\n                <p>Single selection can also be handled using radio buttons by enabling the selectionMode property of column as \\\"single\\\".</p>\\n                <DataTable value={products} selection={selectedProduct3} onSelectionChange={e => setSelectedProduct3(e.value)} dataKey=\\\"id\\\">\\n                    <Column selectionMode=\\\"single\\\" headerStyle={{width: '3em'}}></Column>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Checkbox</h5>\\n\\n                <DataTable value={products} selection={selectedProducts3} onSelectionChange={e => setSelectedProducts3(e.value)} dataKey=\\\"id\\\">\\n                    <Column selectionMode=\\\"multiple\\\" headerStyle={{width: '3em'}}></Column>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Toast } from 'primereact/toast';\\n\\nconst DataTableSelectionDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [selectedProduct1, setSelectedProduct1] = useState(null);\\n    const [selectedProduct2, setSelectedProduct2] = useState(null);\\n    const [selectedProduct3, setSelectedProduct3] = useState(null);\\n    const [selectedProducts1, setSelectedProducts1] = useState(null);\\n    const [selectedProducts2, setSelectedProducts2] = useState(null);\\n    const [selectedProducts3, setSelectedProducts3] = useState(null);\\n    const toast = useRef(null);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onRowSelect = (event) => {\\n        toast.current.show({ severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000 });\\n    }\\n\\n    const onRowUnselect = (event) => {\\n        toast.current.show({ severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000 });\\n    }\\n\\n    return (\\n        <div>\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <h5>Single</h5>\\n                <p>In single mode, a row is selected on click event of a row. If the row is already selected then the row gets unselected.</p>\\n                <DataTable value={products} selection={selectedProduct1} onSelectionChange={e => setSelectedProduct1(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\">\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Multiple</h5>\\n                <p>In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by tapping and for other devices metakey or shiftkey are required.\\n                Setting metaKeySelection property as false enables multiple selection without meta key.</p>\\n                <DataTable value={products} header=\\\"Multiple Selection with MetaKey\\\" selection={selectedProducts1} onSelectionChange={e => setSelectedProducts1(e.value)} selectionMode=\\\"multiple\\\" dataKey=\\\"id\\\">\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n\\n                <DataTable value={products} header=\\\"Multiple Selection without MetaKey\\\" selection={selectedProducts2} onSelectionChange={e => setSelectedProducts2(e.value)} selectionMode=\\\"multiple\\\" dataKey=\\\"id\\\" metaKeySelection={false} style={{ marginTop: '2em' }}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Events</h5>\\n                <p>row-select and row-unselects are available as selection events.</p>\\n                <DataTable value={products} selection={selectedProduct2} onSelectionChange={e => setSelectedProduct2(e.value)} selectionMode=\\\"single\\\" dataKey=\\\"id\\\"\\n                    onRowSelect={onRowSelect} onRowUnselect={onRowUnselect}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>RadioButton</h5>\\n                <p>Single selection can also be handled using radio buttons by enabling the selectionMode property of column as \\\"single\\\".</p>\\n                <DataTable value={products} selection={selectedProduct3} onSelectionChange={e => setSelectedProduct3(e.value)} dataKey=\\\"id\\\">\\n                    <Column selectionMode=\\\"single\\\" headerStyle={{width: '3em'}}></Column>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Checkbox</h5>\\n\\n                <DataTable value={products} selection={selectedProducts3} onSelectionChange={e => setSelectedProducts3(e.value)} dataKey=\\\"id\\\">\\n                    <Column selectionMode=\\\"multiple\\\" headerStyle={{width: '3em'}}></Column>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                    <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this4;\n  }\n\n  _createClass(DataTableSelectionDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataTableSelectionDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products-small'\n      })));\n    }\n  }]);\n\n  return DataTableSelectionDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/datatable/DataTableSelectionDemo.js"],"names":["React","Component","DataTable","Column","ProductService","Toast","TabView","useLiveEditorTabs","AppInlineHeader","DataTableSelectionDemo","props","state","products","selectedProduct1","selectedProduct2","selectedProduct3","selectedProducts1","selectedProducts2","selectedProducts3","productService","onRowSelect","bind","onRowUnselect","getProductsSmall","then","data","setState","event","toast","show","severity","summary","detail","name","life","el","e","value","marginTop","width","DataTableSelectionDemoDoc","sources","tabName","content","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableSelectionDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            selectedProduct1: null,\r\n            selectedProduct2: null,\r\n            selectedProduct3: null,\r\n            selectedProducts1: null,\r\n            selectedProducts2: null,\r\n            selectedProducts3: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.onRowSelect = this.onRowSelect.bind(this);\r\n        this.onRowUnselect = this.onRowUnselect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onRowSelect(event) {\r\n        this.toast.show({ severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000 });\r\n    }\r\n\r\n    onRowUnselect(event) {\r\n        this.toast.show({ severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Selection</span></h1>\r\n                        <p>DataTable provides single and multiple selection modes on click of a row. Selected rows are bound to the selection property and onRowSelect-onRowUnselect\r\n                            events are provided as optional callbacks. In addition built-in radio button and checkbox based selections are available as alternatives.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <Toast ref={(el) => this.toast = el} />\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Single</h5>\r\n                        <p>In single mode, a row is selected on click event of a row. If the row is already selected then the row gets unselected.</p>\r\n                        <DataTable value={this.state.products} selection={this.state.selectedProduct1} onSelectionChange={e => this.setState({ selectedProduct1: e.value })} selectionMode=\"single\" dataKey=\"id\">\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Multiple</h5>\r\n                        <p>In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by tapping and for other devices metakey or shiftkey are required.\r\n                        Setting metaKeySelection property as false enables multiple selection without meta key.</p>\r\n                        <DataTable value={this.state.products} header=\"Multiple Selection with MetaKey\" selection={this.state.selectedProducts1} onSelectionChange={e => this.setState({ selectedProducts1: e.value })} selectionMode=\"multiple\" dataKey=\"id\">\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n\r\n                        <DataTable value={this.state.products} header=\"Multiple Selection without MetaKey\" selection={this.state.selectedProducts2} onSelectionChange={e => this.setState({ selectedProducts2: e.value })} selectionMode=\"multiple\" dataKey=\"id\" metaKeySelection={false} style={{ marginTop: '2em' }}>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Events</h5>\r\n                        <p>row-select and row-unselects are available as selection events.</p>\r\n                        <DataTable value={this.state.products} selection={this.state.selectedProduct2} onSelectionChange={e => this.setState({ selectedProduct2: e.value })} selectionMode=\"single\" dataKey=\"id\"\r\n                            onRowSelect={this.onRowSelect} onRowUnselect={this.onRowUnselect}>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>RadioButton</h5>\r\n                        <p>Single selection can also be handled using radio buttons by enabling the selectionMode property of column as \"single\".</p>\r\n                        <DataTable value={this.state.products} selection={this.state.selectedProduct3} onSelectionChange={e => this.setState({ selectedProduct3: e.value })} dataKey=\"id\">\r\n                            <Column selectionMode=\"single\" headerStyle={{width: '3em'}}></Column>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <h5>Checkbox</h5>\r\n\r\n                        <DataTable value={this.state.products} selection={this.state.selectedProducts3} onSelectionChange={e => this.setState({ selectedProducts3: e.value })} dataKey=\"id\">\r\n                            <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableSelectionDemoDoc></DataTableSelectionDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableSelectionDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nexport class DataTableSelectionDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            selectedProduct1: null,\r\n            selectedProduct2: null,\r\n            selectedProduct3: null,\r\n            selectedProducts1: null,\r\n            selectedProducts2: null,\r\n            selectedProducts3: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.onRowSelect = this.onRowSelect.bind(this);\r\n        this.onRowUnselect = this.onRowUnselect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onRowSelect(event) {\r\n        this.toast.show({ severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000 });\r\n    }\r\n\r\n    onRowUnselect(event) {\r\n        this.toast.show({ severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => this.toast = el} />\r\n\r\n                <div className=\"card\">\r\n                    <h5>Single</h5>\r\n                    <p>In single mode, a row is selected on click event of a row. If the row is already selected then the row gets unselected.</p>\r\n                    <DataTable value={this.state.products} selection={this.state.selectedProduct1} onSelectionChange={e => this.setState({ selectedProduct1: e.value })} selectionMode=\"single\" dataKey=\"id\">\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multiple</h5>\r\n                    <p>In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by tapping and for other devices metakey or shiftkey are required.\r\n                    Setting metaKeySelection property as false enables multiple selection without meta key.</p>\r\n                    <DataTable value={this.state.products} header=\"Multiple Selection with MetaKey\" selection={this.state.selectedProducts1} onSelectionChange={e => this.setState({ selectedProducts1: e.value })} selectionMode=\"multiple\" dataKey=\"id\">\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                    </DataTable>\r\n\r\n                    <DataTable value={this.state.products} header=\"Multiple Selection without MetaKey\" selection={this.state.selectedProducts2} onSelectionChange={e => this.setState({ selectedProducts2: e.value })} selectionMode=\"multiple\" dataKey=\"id\" metaKeySelection={false} style={{ marginTop: '2em' }}>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Events</h5>\r\n                    <p>row-select and row-unselects are available as selection events.</p>\r\n                    <DataTable value={this.state.products} selection={this.state.selectedProduct2} onSelectionChange={e => this.setState({ selectedProduct2: e.value })} selectionMode=\"single\" dataKey=\"id\"\r\n                        onRowSelect={this.onRowSelect} onRowUnselect={this.onRowUnselect}>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>RadioButton</h5>\r\n                    <p>Single selection can also be handled using radio buttons by enabling the selectionMode property of column as \"single\".</p>\r\n                    <DataTable value={this.state.products} selection={this.state.selectedProduct3} onSelectionChange={e => this.setState({ selectedProduct3: e.value })} dataKey=\"id\">\r\n                        <Column selectionMode=\"single\" headerStyle={{width: '3em'}}></Column>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Checkbox</h5>\r\n\r\n                    <DataTable value={this.state.products} selection={this.state.selectedProducts3} onSelectionChange={e => this.setState({ selectedProducts3: e.value })} dataKey=\"id\">\r\n                        <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n                        <Column field=\"code\" header=\"Code\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"category\" header=\"Category\"></Column>\r\n                        <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst DataTableSelectionDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [selectedProduct1, setSelectedProduct1] = useState(null);\r\n    const [selectedProduct2, setSelectedProduct2] = useState(null);\r\n    const [selectedProduct3, setSelectedProduct3] = useState(null);\r\n    const [selectedProducts1, setSelectedProducts1] = useState(null);\r\n    const [selectedProducts2, setSelectedProducts2] = useState(null);\r\n    const [selectedProducts3, setSelectedProducts3] = useState(null);\r\n    const toast = useRef(null);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onRowSelect = (event) => {\r\n        toast.current.show({ severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000 });\r\n    }\r\n\r\n    const onRowUnselect = (event) => {\r\n        toast.current.show({ severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000 });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <h5>Single</h5>\r\n                <p>In single mode, a row is selected on click event of a row. If the row is already selected then the row gets unselected.</p>\r\n                <DataTable value={products} selection={selectedProduct1} onSelectionChange={e => setSelectedProduct1(e.value)} selectionMode=\"single\" dataKey=\"id\">\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple</h5>\r\n                <p>In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by tapping and for other devices metakey or shiftkey are required.\r\n                Setting metaKeySelection property as false enables multiple selection without meta key.</p>\r\n                <DataTable value={products} header=\"Multiple Selection with MetaKey\" selection={selectedProducts1} onSelectionChange={e => setSelectedProducts1(e.value)} selectionMode=\"multiple\" dataKey=\"id\">\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n\r\n                <DataTable value={products} header=\"Multiple Selection without MetaKey\" selection={selectedProducts2} onSelectionChange={e => setSelectedProducts2(e.value)} selectionMode=\"multiple\" dataKey=\"id\" metaKeySelection={false} style={{ marginTop: '2em' }}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Events</h5>\r\n                <p>row-select and row-unselects are available as selection events.</p>\r\n                <DataTable value={products} selection={selectedProduct2} onSelectionChange={e => setSelectedProduct2(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                    onRowSelect={onRowSelect} onRowUnselect={onRowUnselect}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>RadioButton</h5>\r\n                <p>Single selection can also be handled using radio buttons by enabling the selectionMode property of column as \"single\".</p>\r\n                <DataTable value={products} selection={selectedProduct3} onSelectionChange={e => setSelectedProduct3(e.value)} dataKey=\"id\">\r\n                    <Column selectionMode=\"single\" headerStyle={{width: '3em'}}></Column>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Checkbox</h5>\r\n\r\n                <DataTable value={products} selection={selectedProducts3} onSelectionChange={e => setSelectedProducts3(e.value)} dataKey=\"id\">\r\n                    <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst DataTableSelectionDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [selectedProduct1, setSelectedProduct1] = useState(null);\r\n    const [selectedProduct2, setSelectedProduct2] = useState(null);\r\n    const [selectedProduct3, setSelectedProduct3] = useState(null);\r\n    const [selectedProducts1, setSelectedProducts1] = useState(null);\r\n    const [selectedProducts2, setSelectedProducts2] = useState(null);\r\n    const [selectedProducts3, setSelectedProducts3] = useState(null);\r\n    const toast = useRef(null);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onRowSelect = (event) => {\r\n        toast.current.show({ severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000 });\r\n    }\r\n\r\n    const onRowUnselect = (event) => {\r\n        toast.current.show({ severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000 });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <h5>Single</h5>\r\n                <p>In single mode, a row is selected on click event of a row. If the row is already selected then the row gets unselected.</p>\r\n                <DataTable value={products} selection={selectedProduct1} onSelectionChange={e => setSelectedProduct1(e.value)} selectionMode=\"single\" dataKey=\"id\">\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Multiple</h5>\r\n                <p>In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by tapping and for other devices metakey or shiftkey are required.\r\n                Setting metaKeySelection property as false enables multiple selection without meta key.</p>\r\n                <DataTable value={products} header=\"Multiple Selection with MetaKey\" selection={selectedProducts1} onSelectionChange={e => setSelectedProducts1(e.value)} selectionMode=\"multiple\" dataKey=\"id\">\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n\r\n                <DataTable value={products} header=\"Multiple Selection without MetaKey\" selection={selectedProducts2} onSelectionChange={e => setSelectedProducts2(e.value)} selectionMode=\"multiple\" dataKey=\"id\" metaKeySelection={false} style={{ marginTop: '2em' }}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Events</h5>\r\n                <p>row-select and row-unselects are available as selection events.</p>\r\n                <DataTable value={products} selection={selectedProduct2} onSelectionChange={e => setSelectedProduct2(e.value)} selectionMode=\"single\" dataKey=\"id\"\r\n                    onRowSelect={onRowSelect} onRowUnselect={onRowUnselect}>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>RadioButton</h5>\r\n                <p>Single selection can also be handled using radio buttons by enabling the selectionMode property of column as \"single\".</p>\r\n                <DataTable value={products} selection={selectedProduct3} onSelectionChange={e => setSelectedProduct3(e.value)} dataKey=\"id\">\r\n                    <Column selectionMode=\"single\" headerStyle={{width: '3em'}}></Column>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <h5>Checkbox</h5>\r\n\r\n                <DataTable value={products} selection={selectedProducts3} onSelectionChange={e => setSelectedProducts3(e.value)} dataKey=\"id\">\r\n                    <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n                    <Column field=\"code\" header=\"Code\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"category\" header=\"Category\"></Column>\r\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableSelectionDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}