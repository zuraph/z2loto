{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\datatable\\\\DataTableRowExpansionDemo.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from '../../components/datatable/DataTable';\nimport { Column } from '../../components/column/Column';\nimport ProductService from '../service/ProductService';\nimport { Rating } from '../../components/rating/Rating';\nimport { Button } from '../../components/button/Button';\nimport { Toast } from '../../components/toast/Toast';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport './DataTableDemo.scss';\nexport var DataTableRowExpansionDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableRowExpansionDemo, _Component);\n\n  var _super = _createSuper(DataTableRowExpansionDemo);\n\n  function DataTableRowExpansionDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableRowExpansionDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      products: [],\n      expandedRows: null\n    };\n    _this.productService = new ProductService();\n    _this.amountBodyTemplate = _this.amountBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.rowExpansionTemplate = _this.rowExpansionTemplate.bind(_assertThisInitialized(_this));\n    _this.searchBodyTemplate = _this.searchBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.imageBodyTemplate = _this.imageBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.priceBodyTemplate = _this.priceBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.ratingBodyTemplate = _this.ratingBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.statusBodyTemplate = _this.statusBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.statusOrderBodyTemplate = _this.statusOrderBodyTemplate.bind(_assertThisInitialized(_this));\n    _this.onRowExpand = _this.onRowExpand.bind(_assertThisInitialized(_this));\n    _this.onRowCollapse = _this.onRowCollapse.bind(_assertThisInitialized(_this));\n    _this.expandAll = _this.expandAll.bind(_assertThisInitialized(_this));\n    _this.collapseAll = _this.collapseAll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataTableRowExpansionDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.productService.getProductsWithOrdersSmall().then(function (data) {\n        return _this2.setState({\n          products: data\n        });\n      });\n    }\n  }, {\n    key: \"onRowExpand\",\n    value: function onRowExpand(event) {\n      this.toast.show({\n        severity: 'info',\n        summary: 'Product Expanded',\n        detail: event.data.name,\n        life: 3000\n      });\n    }\n  }, {\n    key: \"onRowCollapse\",\n    value: function onRowCollapse(event) {\n      this.toast.show({\n        severity: 'success',\n        summary: 'Product Collapsed',\n        detail: event.data.name,\n        life: 3000\n      });\n    }\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this3 = this;\n\n      var expandedRows = {};\n      this.state.products.forEach(function (p) {\n        return expandedRows[\"\".concat(p.id)] = true;\n      });\n      this.setState({\n        expandedRows: expandedRows\n      }, function () {\n        _this3.toast.show({\n          severity: 'success',\n          summary: 'All Rows Expanded',\n          life: 3000\n        });\n      });\n    }\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this4 = this;\n\n      this.setState({\n        expandedRows: null\n      }, function () {\n        _this4.toast.show({\n          severity: 'success',\n          summary: 'All Rows Collapsed',\n          life: 3000\n        });\n      });\n    }\n  }, {\n    key: \"formatCurrency\",\n    value: function formatCurrency(value) {\n      return value.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      });\n    }\n  }, {\n    key: \"amountBodyTemplate\",\n    value: function amountBodyTemplate(rowData) {\n      return this.formatCurrency(rowData.amount);\n    }\n  }, {\n    key: \"statusOrderBodyTemplate\",\n    value: function statusOrderBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"order-badge order-\".concat(rowData.status.toLowerCase()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }\n      }, rowData.status);\n    }\n  }, {\n    key: \"searchBodyTemplate\",\n    value: function searchBodyTemplate() {\n      return /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"imageBodyTemplate\",\n    value: function imageBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: \"showcase/demo/images/product/\".concat(rowData.image),\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        alt: rowData.image,\n        className: \"product-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"priceBodyTemplate\",\n    value: function priceBodyTemplate(rowData) {\n      return this.formatCurrency(rowData.price);\n    }\n  }, {\n    key: \"ratingBodyTemplate\",\n    value: function ratingBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(Rating, {\n        value: rowData.rating,\n        readOnly: true,\n        cancel: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"statusBodyTemplate\",\n    value: function statusBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"product-badge status-\".concat(rowData.inventoryStatus.toLowerCase()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }\n      }, rowData.inventoryStatus);\n    }\n  }, {\n    key: \"rowExpansionTemplate\",\n    value: function rowExpansionTemplate(data) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"orders-subtable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, \"Orders for \", data.name), /*#__PURE__*/React.createElement(DataTable, {\n        value: data.orders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"id\",\n        header: \"Id\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"customer\",\n        header: \"Customer\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"date\",\n        header: \"Date\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"amount\",\n        header: \"Amount\",\n        body: this.amountBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"status\",\n        header: \"Status\",\n        body: this.statusOrderBodyTemplate,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        headerStyle: {\n          width: '4rem'\n        },\n        body: this.searchBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-header-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-plus\",\n        label: \"Expand All\",\n        onClick: this.expandAll,\n        className: \"p-mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-minus\",\n        label: \"Collapse All\",\n        onClick: this.collapseAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, \"DataTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 39\n        }\n      }, \"Row Expansion\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, \"A row can be expanded to display extra content by enabling expandableRows property and providing a row ng-template.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation datatable-rowexpansion-demo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toast, {\n        ref: function ref(el) {\n          return _this5.toast = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        expandedRows: this.state.expandedRows,\n        onRowToggle: function onRowToggle(e) {\n          return _this5.setState({\n            expandedRows: e.data\n          });\n        },\n        onRowExpand: this.onRowExpand,\n        onRowCollapse: this.onRowCollapse,\n        rowExpansionTemplate: this.rowExpansionTemplate,\n        dataKey: \"id\",\n        header: header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        expander: true,\n        style: {\n          width: '3em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        header: \"Image\",\n        body: this.imageBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"price\",\n        header: \"Price\",\n        sortable: true,\n        body: this.priceBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"category\",\n        header: \"Category\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"rating\",\n        header: \"Reviews\",\n        sortable: true,\n        body: this.ratingBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"inventoryStatus\",\n        header: \"Status\",\n        sortable: true,\n        body: this.statusBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(DataTableRowExpansionDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataTableRowExpansionDemo;\n}(Component);\nexport var DataTableRowExpansionDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataTableRowExpansionDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataTableRowExpansionDemoDoc);\n\n  function DataTableRowExpansionDemoDoc(props) {\n    var _this6;\n\n    _classCallCheck(this, DataTableRowExpansionDemoDoc);\n\n    _this6 = _super2.call(this, props);\n    _this6.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport './DataTableDemo.css';\\n\\nexport class DataTableRowExpansionDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            products: [],\\n            expandedRows: null\\n        };\\n\\n        this.productService = new ProductService();\\n        this.amountBodyTemplate = this.amountBodyTemplate.bind(this);\\n        this.rowExpansionTemplate = this.rowExpansionTemplate.bind(this);\\n        this.searchBodyTemplate = this.searchBodyTemplate.bind(this);\\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\\n        this.statusOrderBodyTemplate = this.statusOrderBodyTemplate.bind(this);\\n        this.onRowExpand = this.onRowExpand.bind(this);\\n        this.onRowCollapse = this.onRowCollapse.bind(this);\\n        this.expandAll = this.expandAll.bind(this);\\n        this.collapseAll = this.collapseAll.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsWithOrdersSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    onRowExpand(event) {\\n        this.toast.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\\n    }\\n\\n    onRowCollapse(event) {\\n        this.toast.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\\n    }\\n\\n    expandAll() {\\n        let expandedRows = {};\\n        this.state.products.forEach(p => expandedRows[`${p.id}`] = true);\\n\\n        this.setState({\\n            expandedRows\\n        }, () => {\\n            this.toast.show({severity: 'success', summary: 'All Rows Expanded', life: 3000});\\n        });\\n    }\\n\\n    collapseAll() {\\n        this.setState({\\n            expandedRows: null\\n        }, () => {\\n            this.toast.show({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\\n        });\\n    }\\n\\n    formatCurrency(value) {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    amountBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.amount);\\n    }\\n\\n    statusOrderBodyTemplate(rowData) {\\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\\n    }\\n\\n    searchBodyTemplate() {\\n        return <Button icon=\\\"pi pi-search\\\" />;\\n    }\\n\\n    imageBodyTemplate(rowData) {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />;\\n    }\\n\\n    priceBodyTemplate(rowData) {\\n        return this.formatCurrency(rowData.price);\\n    }\\n\\n    ratingBodyTemplate(rowData) {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    statusBodyTemplate(rowData) {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    rowExpansionTemplate(data) {\\n        return (\\n            <div className=\\\"orders-subtable\\\">\\n                <h5>Orders for {data.name}</h5>\\n                <DataTable value={data.orders}>\\n                    <Column field=\\\"id\\\" header=\\\"Id\\\" sortable></Column>\\n                    <Column field=\\\"customer\\\" header=\\\"Customer\\\" sortable></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\" sortable></Column>\\n                    <Column field=\\\"amount\\\" header=\\\"Amount\\\" body={this.amountBodyTemplate} sortable></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={this.statusOrderBodyTemplate} sortable></Column>\\n                    <Column headerStyle={{ width: '4rem'}} body={this.searchBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        const header = (\\n            <div className=\\\"table-header-container\\\">\\n                <Button icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={this.expandAll} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={this.collapseAll} />\\n            </div>\\n        );\\n\\n        return (\\n            <div className=\\\"datatable-rowexpansion-demo\\\">\\n                <Toast ref={(el) => this.toast = el} />\\n\\n                <div className=\\\"card\\\">\\n                    <DataTable value={this.state.products} expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\\n                        onRowExpand={this.onRowExpand} onRowCollapse={this.onRowCollapse}\\n                        rowExpansionTemplate={this.rowExpansionTemplate} dataKey=\\\"id\\\" header={header}>\\n                        <Column expander style={{ width: '3em' }} />\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                        <Column header=\\\"Image\\\" body={this.imageBodyTemplate} />\\n                        <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={this.priceBodyTemplate} />\\n                        <Column field=\\\"category\\\" header=\\\"Category\\\" sortable />\\n                        <Column field=\\\"rating\\\" header=\\\"Reviews\\\" sortable body={this.ratingBodyTemplate} />\\n                        <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" sortable body={this.statusBodyTemplate} />\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport './DataTableDemo.css';\\n\\nconst DataTableRowExpansionDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [expandedRows, setExpandedRows] = useState(null);\\n    const toast = useRef(null);\\n    const isMounted = useRef(false);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        if (isMounted.current) {\\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\\n            toast.current.show({severity: 'success', summary: `${summary}`, life: 3000});\\n        }\\n    }, [expandedRows]);\\n\\n    useEffect(() => {\\n        isMounted.current = true;\\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onRowExpand = (event) => {\\n        toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\\n    }\\n\\n    const onRowCollapse = (event) => {\\n        toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\\n    }\\n\\n    const expandAll = () => {\\n        let _expandedRows = {};\\n        products.forEach(p => _expandedRows[`${p.id}`] = true);\\n\\n        setExpandedRows(_expandedRows);\\n    }\\n\\n    const collapseAll = () => {\\n        setExpandedRows(null);\\n    }\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const amountBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.amount);\\n    }\\n\\n    const statusOrderBodyTemplate = (rowData) => {\\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\\n    }\\n\\n    const searchBodyTemplate = () => {\\n        return <Button icon=\\\"pi pi-search\\\" />;\\n    }\\n\\n    const imageBodyTemplate = (rowData) => {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />;\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    const ratingBodyTemplate = (rowData) => {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    const rowExpansionTemplate = (data) => {\\n        return (\\n            <div className=\\\"orders-subtable\\\">\\n                <h5>Orders for {data.name}</h5>\\n                <DataTable value={data.orders}>\\n                    <Column field=\\\"id\\\" header=\\\"Id\\\" sortable></Column>\\n                    <Column field=\\\"customer\\\" header=\\\"Customer\\\" sortable></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\" sortable></Column>\\n                    <Column field=\\\"amount\\\" header=\\\"Amount\\\" body={amountBodyTemplate} sortable></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusOrderBodyTemplate} sortable></Column>\\n                    <Column headerStyle={{ width: '4rem'}} body={searchBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n        );\\n    }\\n\\n    const header = (\\n        <div className=\\\"table-header-container\\\">\\n            <Button icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={expandAll} className=\\\"p-mr-2\\\" />\\n            <Button icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={collapseAll} />\\n        </div>\\n    );\\n\\n    return (\\n        <div className=\\\"datatable-rowexpansion-demo\\\">\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\\n                    onRowExpand={onRowExpand} onRowCollapse={onRowCollapse}\\n                    rowExpansionTemplate={rowExpansionTemplate} dataKey=\\\"id\\\" header={header}>\\n                    <Column expander style={{ width: '3em' }} />\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                    <Column header=\\\"Image\\\" body={imageBodyTemplate} />\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={priceBodyTemplate} />\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable />\\n                    <Column field=\\\"rating\\\" header=\\\"Reviews\\\" sortable body={ratingBodyTemplate} />\\n                    <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" sortable body={statusBodyTemplate} />\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect, useRef } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { Rating } from 'primereact/rating';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\nimport './DataTableDemo.css';\\n\\nconst DataTableRowExpansionDemo = () => {\\n    const [products, setProducts] = useState([]);\\n    const [expandedRows, setExpandedRows] = useState(null);\\n    const toast = useRef(null);\\n    const isMounted = useRef(false);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        if (isMounted.current) {\\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\\n            toast.current.show({severity: 'success', summary: `${summary}`, life: 3000});\\n        }\\n    }, [expandedRows]);\\n\\n    useEffect(() => {\\n        isMounted.current = true;\\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onRowExpand = (event) => {\\n        toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\\n    }\\n\\n    const onRowCollapse = (event) => {\\n        toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\\n    }\\n\\n    const expandAll = () => {\\n        let _expandedRows = {};\\n        products.forEach(p => _expandedRows[`${p.id}`] = true);\\n\\n        setExpandedRows(_expandedRows);\\n    }\\n\\n    const collapseAll = () => {\\n        setExpandedRows(null);\\n    }\\n\\n    const formatCurrency = (value) => {\\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\\n    }\\n\\n    const amountBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.amount);\\n    }\\n\\n    const statusOrderBodyTemplate = (rowData) => {\\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\\n    }\\n\\n    const searchBodyTemplate = () => {\\n        return <Button icon=\\\"pi pi-search\\\" />;\\n    }\\n\\n    const imageBodyTemplate = (rowData) => {\\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\\\"product-image\\\" />;\\n    }\\n\\n    const priceBodyTemplate = (rowData) => {\\n        return formatCurrency(rowData.price);\\n    }\\n\\n    const ratingBodyTemplate = (rowData) => {\\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\\n    }\\n\\n    const statusBodyTemplate = (rowData) => {\\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\\n    }\\n\\n    const rowExpansionTemplate = (data) => {\\n        return (\\n            <div className=\\\"orders-subtable\\\">\\n                <h5>Orders for {data.name}</h5>\\n                <DataTable value={data.orders}>\\n                    <Column field=\\\"id\\\" header=\\\"Id\\\" sortable></Column>\\n                    <Column field=\\\"customer\\\" header=\\\"Customer\\\" sortable></Column>\\n                    <Column field=\\\"date\\\" header=\\\"Date\\\" sortable></Column>\\n                    <Column field=\\\"amount\\\" header=\\\"Amount\\\" body={amountBodyTemplate} sortable></Column>\\n                    <Column field=\\\"status\\\" header=\\\"Status\\\" body={statusOrderBodyTemplate} sortable></Column>\\n                    <Column headerStyle={{ width: '4rem'}} body={searchBodyTemplate}></Column>\\n                </DataTable>\\n            </div>\\n        );\\n    }\\n\\n    const header = (\\n        <div className=\\\"table-header-container\\\">\\n            <Button icon=\\\"pi pi-plus\\\" label=\\\"Expand All\\\" onClick={expandAll} className=\\\"p-mr-2\\\" />\\n            <Button icon=\\\"pi pi-minus\\\" label=\\\"Collapse All\\\" onClick={collapseAll} />\\n        </div>\\n    );\\n\\n    return (\\n        <div className=\\\"datatable-rowexpansion-demo\\\">\\n            <Toast ref={toast} />\\n\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\\n                    onRowExpand={onRowExpand} onRowCollapse={onRowCollapse}\\n                    rowExpansionTemplate={rowExpansionTemplate} dataKey=\\\"id\\\" header={header}>\\n                    <Column expander style={{ width: '3em' }} />\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" sortable />\\n                    <Column header=\\\"Image\\\" body={imageBodyTemplate} />\\n                    <Column field=\\\"price\\\" header=\\\"Price\\\" sortable body={priceBodyTemplate} />\\n                    <Column field=\\\"category\\\" header=\\\"Category\\\" sortable />\\n                    <Column field=\\\"rating\\\" header=\\\"Reviews\\\" sortable body={ratingBodyTemplate} />\\n                    <Column field=\\\"inventoryStatus\\\" header=\\\"Status\\\" sortable body={statusBodyTemplate} />\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    _this6.extFiles = {\n      'src/demo/DataTableDemo.css': {\n        content: \"\\n.datatable-rowexpansion-demo .product-image {\\n    width: 100px;\\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n}\\n\\n.datatable-rowexpansion-demo .orders-subtable {\\n    padding: 1rem;\\n}\\n                \"\n      }\n    };\n    return _this6;\n  }\n\n  _createClass(DataTableRowExpansionDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataTableRowExpansionDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products-orders-small',\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return DataTableRowExpansionDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/datatable/DataTableRowExpansionDemo.js"],"names":["React","Component","DataTable","Column","ProductService","Rating","Button","Toast","TabView","useLiveEditorTabs","AppInlineHeader","DataTableRowExpansionDemo","props","state","products","expandedRows","productService","amountBodyTemplate","bind","rowExpansionTemplate","searchBodyTemplate","imageBodyTemplate","priceBodyTemplate","ratingBodyTemplate","statusBodyTemplate","statusOrderBodyTemplate","onRowExpand","onRowCollapse","expandAll","collapseAll","getProductsWithOrdersSmall","then","data","setState","event","toast","show","severity","summary","detail","name","life","forEach","p","id","value","toLocaleString","style","currency","rowData","formatCurrency","amount","status","toLowerCase","image","e","target","src","price","rating","inventoryStatus","orders","width","header","el","DataTableRowExpansionDemoDoc","sources","tabName","content","extFiles","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from '../../components/rating/Rating';\r\nimport { Button } from '../../components/button/Button';\r\nimport { Toast } from '../../components/toast/Toast';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './DataTableDemo.scss';\r\n\r\nexport class DataTableRowExpansionDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            expandedRows: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.amountBodyTemplate = this.amountBodyTemplate.bind(this);\r\n        this.rowExpansionTemplate = this.rowExpansionTemplate.bind(this);\r\n        this.searchBodyTemplate = this.searchBodyTemplate.bind(this);\r\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.statusOrderBodyTemplate = this.statusOrderBodyTemplate.bind(this);\r\n        this.onRowExpand = this.onRowExpand.bind(this);\r\n        this.onRowCollapse = this.onRowCollapse.bind(this);\r\n        this.expandAll = this.expandAll.bind(this);\r\n        this.collapseAll = this.collapseAll.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsWithOrdersSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onRowExpand(event) {\r\n        this.toast.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    onRowCollapse(event) {\r\n        this.toast.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    expandAll() {\r\n        let expandedRows = {};\r\n        this.state.products.forEach(p => expandedRows[`${p.id}`] = true);\r\n\r\n        this.setState({\r\n            expandedRows\r\n        }, () => {\r\n            this.toast.show({severity: 'success', summary: 'All Rows Expanded', life: 3000});\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.setState({\r\n            expandedRows: null\r\n        }, () => {\r\n            this.toast.show({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\r\n        });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    amountBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.amount);\r\n    }\r\n\r\n    statusOrderBodyTemplate(rowData) {\r\n        return <span className={`order-badge order-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\r\n    }\r\n\r\n    searchBodyTemplate() {\r\n        return <Button icon=\"pi pi-search\" />;\r\n    }\r\n\r\n    imageBodyTemplate(rowData) {\r\n        return <img src={`showcase/demo/images/product/${rowData.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />;\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    ratingBodyTemplate(rowData) {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={`product-badge status-${rowData.inventoryStatus.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    rowExpansionTemplate(data) {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                    <Column field=\"amount\" header=\"Amount\" body={this.amountBodyTemplate} sortable></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={this.statusOrderBodyTemplate} sortable></Column>\r\n                    <Column headerStyle={{ width: '4rem'}} body={this.searchBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header-container\">\r\n                <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={this.expandAll} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={this.collapseAll} />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Row Expansion</span></h1>\r\n                        <p>A row can be expanded to display extra content by enabling expandableRows property and providing a row ng-template.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation datatable-rowexpansion-demo\">\r\n                    <Toast ref={(el) => this.toast = el} />\r\n\r\n                    <div className=\"card\">\r\n                        <DataTable value={this.state.products} expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\r\n                            onRowExpand={this.onRowExpand} onRowCollapse={this.onRowCollapse}\r\n                            rowExpansionTemplate={this.rowExpansionTemplate} dataKey=\"id\" header={header}>\r\n                            <Column expander style={{ width: '3em' }} />\r\n                            <Column field=\"name\" header=\"Name\" sortable />\r\n                            <Column header=\"Image\" body={this.imageBodyTemplate} />\r\n                            <Column field=\"price\" header=\"Price\" sortable body={this.priceBodyTemplate} />\r\n                            <Column field=\"category\" header=\"Category\" sortable />\r\n                            <Column field=\"rating\" header=\"Reviews\" sortable body={this.ratingBodyTemplate} />\r\n                            <Column field=\"inventoryStatus\" header=\"Status\" sortable body={this.statusBodyTemplate} />\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableRowExpansionDemoDoc></DataTableRowExpansionDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableRowExpansionDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport './DataTableDemo.css';\r\n\r\nexport class DataTableRowExpansionDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            expandedRows: null\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.amountBodyTemplate = this.amountBodyTemplate.bind(this);\r\n        this.rowExpansionTemplate = this.rowExpansionTemplate.bind(this);\r\n        this.searchBodyTemplate = this.searchBodyTemplate.bind(this);\r\n        this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\r\n        this.priceBodyTemplate = this.priceBodyTemplate.bind(this);\r\n        this.ratingBodyTemplate = this.ratingBodyTemplate.bind(this);\r\n        this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.statusOrderBodyTemplate = this.statusOrderBodyTemplate.bind(this);\r\n        this.onRowExpand = this.onRowExpand.bind(this);\r\n        this.onRowCollapse = this.onRowCollapse.bind(this);\r\n        this.expandAll = this.expandAll.bind(this);\r\n        this.collapseAll = this.collapseAll.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsWithOrdersSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onRowExpand(event) {\r\n        this.toast.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    onRowCollapse(event) {\r\n        this.toast.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    expandAll() {\r\n        let expandedRows = {};\r\n        this.state.products.forEach(p => expandedRows[\\`\\${p.id}\\`] = true);\r\n\r\n        this.setState({\r\n            expandedRows\r\n        }, () => {\r\n            this.toast.show({severity: 'success', summary: 'All Rows Expanded', life: 3000});\r\n        });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.setState({\r\n            expandedRows: null\r\n        }, () => {\r\n            this.toast.show({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\r\n        });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    amountBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.amount);\r\n    }\r\n\r\n    statusOrderBodyTemplate(rowData) {\r\n        return <span className={\\`order-badge order-\\${rowData.status.toLowerCase()}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    searchBodyTemplate() {\r\n        return <Button icon=\"pi pi-search\" />;\r\n    }\r\n\r\n    imageBodyTemplate(rowData) {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />;\r\n    }\r\n\r\n    priceBodyTemplate(rowData) {\r\n        return this.formatCurrency(rowData.price);\r\n    }\r\n\r\n    ratingBodyTemplate(rowData) {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    statusBodyTemplate(rowData) {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    rowExpansionTemplate(data) {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                    <Column field=\"amount\" header=\"Amount\" body={this.amountBodyTemplate} sortable></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={this.statusOrderBodyTemplate} sortable></Column>\r\n                    <Column headerStyle={{ width: '4rem'}} body={this.searchBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header-container\">\r\n                <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={this.expandAll} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={this.collapseAll} />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"datatable-rowexpansion-demo\">\r\n                <Toast ref={(el) => this.toast = el} />\r\n\r\n                <div className=\"card\">\r\n                    <DataTable value={this.state.products} expandedRows={this.state.expandedRows} onRowToggle={(e) => this.setState({ expandedRows: e.data })}\r\n                        onRowExpand={this.onRowExpand} onRowCollapse={this.onRowCollapse}\r\n                        rowExpansionTemplate={this.rowExpansionTemplate} dataKey=\"id\" header={header}>\r\n                        <Column expander style={{ width: '3em' }} />\r\n                        <Column field=\"name\" header=\"Name\" sortable />\r\n                        <Column header=\"Image\" body={this.imageBodyTemplate} />\r\n                        <Column field=\"price\" header=\"Price\" sortable body={this.priceBodyTemplate} />\r\n                        <Column field=\"category\" header=\"Category\" sortable />\r\n                        <Column field=\"rating\" header=\"Reviews\" sortable body={this.ratingBodyTemplate} />\r\n                        <Column field=\"inventoryStatus\" header=\"Status\" sortable body={this.statusBodyTemplate} />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableRowExpansionDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState(null);\r\n    const toast = useRef(null);\r\n    const isMounted = useRef(false);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\r\n            toast.current.show({severity: 'success', summary: \\`\\${summary}\\`, life: 3000});\r\n        }\r\n    }, [expandedRows]);\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onRowExpand = (event) => {\r\n        toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const onRowCollapse = (event) => {\r\n        toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const expandAll = () => {\r\n        let _expandedRows = {};\r\n        products.forEach(p => _expandedRows[\\`\\${p.id}\\`] = true);\r\n\r\n        setExpandedRows(_expandedRows);\r\n    }\r\n\r\n    const collapseAll = () => {\r\n        setExpandedRows(null);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const amountBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.amount);\r\n    }\r\n\r\n    const statusOrderBodyTemplate = (rowData) => {\r\n        return <span className={\\`order-badge order-\\${rowData.status.toLowerCase()}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const searchBodyTemplate = () => {\r\n        return <Button icon=\"pi pi-search\" />;\r\n    }\r\n\r\n    const imageBodyTemplate = (rowData) => {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />;\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    const ratingBodyTemplate = (rowData) => {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    const rowExpansionTemplate = (data) => {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                    <Column field=\"amount\" header=\"Amount\" body={amountBodyTemplate} sortable></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusOrderBodyTemplate} sortable></Column>\r\n                    <Column headerStyle={{ width: '4rem'}} body={searchBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header-container\">\r\n            <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={expandAll} className=\"p-mr-2\" />\r\n            <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={collapseAll} />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-rowexpansion-demo\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    onRowExpand={onRowExpand} onRowCollapse={onRowCollapse}\r\n                    rowExpansionTemplate={rowExpansionTemplate} dataKey=\"id\" header={header}>\r\n                    <Column expander style={{ width: '3em' }} />\r\n                    <Column field=\"name\" header=\"Name\" sortable />\r\n                    <Column header=\"Image\" body={imageBodyTemplate} />\r\n                    <Column field=\"price\" header=\"Price\" sortable body={priceBodyTemplate} />\r\n                    <Column field=\"category\" header=\"Category\" sortable />\r\n                    <Column field=\"rating\" header=\"Reviews\" sortable body={ratingBodyTemplate} />\r\n                    <Column field=\"inventoryStatus\" header=\"Status\" sortable body={statusBodyTemplate} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { Rating } from 'primereact/rating';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport './DataTableDemo.css';\r\n\r\nconst DataTableRowExpansionDemo = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [expandedRows, setExpandedRows] = useState(null);\r\n    const toast = useRef(null);\r\n    const isMounted = useRef(false);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        if (isMounted.current) {\r\n            const summary = expandedRows !== null ? 'All Rows Expanded' : 'All Rows Collapsed';\r\n            toast.current.show({severity: 'success', summary: \\`\\${summary}\\`, life: 3000});\r\n        }\r\n    }, [expandedRows]);\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n        productService.getProductsWithOrdersSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onRowExpand = (event) => {\r\n        toast.current.show({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const onRowCollapse = (event) => {\r\n        toast.current.show({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n    }\r\n\r\n    const expandAll = () => {\r\n        let _expandedRows = {};\r\n        products.forEach(p => _expandedRows[\\`\\${p.id}\\`] = true);\r\n\r\n        setExpandedRows(_expandedRows);\r\n    }\r\n\r\n    const collapseAll = () => {\r\n        setExpandedRows(null);\r\n    }\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const amountBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.amount);\r\n    }\r\n\r\n    const statusOrderBodyTemplate = (rowData) => {\r\n        return <span className={\\`order-badge order-\\${rowData.status.toLowerCase()}\\`}>{rowData.status}</span>;\r\n    }\r\n\r\n    const searchBodyTemplate = () => {\r\n        return <Button icon=\"pi pi-search\" />;\r\n    }\r\n\r\n    const imageBodyTemplate = (rowData) => {\r\n        return <img src={\\`showcase/demo/images/product/\\${rowData.image}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={rowData.image} className=\"product-image\" />;\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.price);\r\n    }\r\n\r\n    const ratingBodyTemplate = (rowData) => {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData) => {\r\n        return <span className={\\`product-badge status-\\${rowData.inventoryStatus.toLowerCase()}\\`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    const rowExpansionTemplate = (data) => {\r\n        return (\r\n            <div className=\"orders-subtable\">\r\n                <h5>Orders for {data.name}</h5>\r\n                <DataTable value={data.orders}>\r\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\r\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\r\n                    <Column field=\"amount\" header=\"Amount\" body={amountBodyTemplate} sortable></Column>\r\n                    <Column field=\"status\" header=\"Status\" body={statusOrderBodyTemplate} sortable></Column>\r\n                    <Column headerStyle={{ width: '4rem'}} body={searchBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header-container\">\r\n            <Button icon=\"pi pi-plus\" label=\"Expand All\" onClick={expandAll} className=\"p-mr-2\" />\r\n            <Button icon=\"pi pi-minus\" label=\"Collapse All\" onClick={collapseAll} />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-rowexpansion-demo\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"card\">\r\n                <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    onRowExpand={onRowExpand} onRowCollapse={onRowCollapse}\r\n                    rowExpansionTemplate={rowExpansionTemplate} dataKey=\"id\" header={header}>\r\n                    <Column expander style={{ width: '3em' }} />\r\n                    <Column field=\"name\" header=\"Name\" sortable />\r\n                    <Column header=\"Image\" body={imageBodyTemplate} />\r\n                    <Column field=\"price\" header=\"Price\" sortable body={priceBodyTemplate} />\r\n                    <Column field=\"category\" header=\"Category\" sortable />\r\n                    <Column field=\"rating\" header=\"Reviews\" sortable body={ratingBodyTemplate} />\r\n                    <Column field=\"inventoryStatus\" header=\"Status\" sortable body={statusBodyTemplate} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        };\r\n\r\n        this.extFiles = {\r\n            'src/demo/DataTableDemo.css': {\r\n                content: `\r\n.datatable-rowexpansion-demo .product-image {\r\n    width: 100px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n.datatable-rowexpansion-demo .orders-subtable {\r\n    padding: 1rem;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableRowExpansionDemo', sources: this.sources, service: 'ProductService', data: 'products-orders-small', extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}