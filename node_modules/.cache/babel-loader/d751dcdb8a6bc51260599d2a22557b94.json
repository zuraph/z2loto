{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\treetable\\\\TreeTableResponsiveDemo.js\";\nimport React, { Component } from 'react';\nimport { TreeTable } from '../../components/treetable/TreeTable';\nimport { Column } from '../../components/column/Column';\nimport { NodeService } from '../service/NodeService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport './TreeTableDemo.scss';\nexport var TreeTableResponsiveDemo = /*#__PURE__*/function (_Component) {\n  _inherits(TreeTableResponsiveDemo, _Component);\n\n  var _super = _createSuper(TreeTableResponsiveDemo);\n\n  function TreeTableResponsiveDemo(props) {\n    var _this;\n\n    _classCallCheck(this, TreeTableResponsiveDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      nodes: []\n    };\n    _this.nodeservice = new NodeService();\n    _this.nameTemplate = _this.nameTemplate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TreeTableResponsiveDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.nodeservice.getTreeTableNodes().then(function (data) {\n        return _this2.setState({\n          nodes: data\n        });\n      });\n    }\n  }, {\n    key: \"nameTemplate\",\n    value: function nameTemplate(node) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, node.data.name), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sm-visible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, \" \", node.data.size), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sm-visible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \" \", node.data.type));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"treeTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, \"TreeTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 39\n        }\n      }, \"Responsive\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"TreeTable columns are displayed as stacked in responsive mode if the screen size becomes smaller than a certain breakpoint value.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation treetable-responsive-demo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TreeTable, {\n        value: this.state.nodes,\n        header: \"Responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        body: this.nameTemplate,\n        expander: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        headerClassName: \"sm-invisible\",\n        bodyClassName: \"sm-invisible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        headerClassName: \"sm-invisible\",\n        bodyClassName: \"sm-invisible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(TreeTableResponsiveDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return TreeTableResponsiveDemo;\n}(Component);\n\nvar TreeTableResponsiveDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(TreeTableResponsiveDemoDoc, _Component2);\n\n  var _super2 = _createSuper(TreeTableResponsiveDemoDoc);\n\n  function TreeTableResponsiveDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, TreeTableResponsiveDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\nimport './TreeTableDemo.css';\\n\\nexport class TreeTableResponsiveDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes: []\\n        };\\n        this.nodeservice = new NodeService();\\n        this.nameTemplate = this.nameTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({nodes: data}));\\n    }\\n\\n    nameTemplate(node) {\\n        return (\\n            <React.Fragment>\\n                <span>{node.data.name}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.size}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.type}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"treetable-responsive-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <TreeTable value={this.state.nodes} header=\\\"Responsive\\\">\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" body={this.nameTemplate} expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\nimport './TreeTableDemo.css';\\n\\nconst TreeTableResponsiveDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const nameTemplate = (node) => {\\n        return (\\n            <React.Fragment>\\n                <span>{node.data.name}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.size}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.type}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    return (\\n        <div className=\\\"treetable-responsive-demo\\\">\\n            <div className=\\\"card\\\">\\n                <TreeTable value={nodes} header=\\\"Responsive\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" body={nameTemplate} expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { NodeService } from '../service/NodeService';\\nimport './TreeTableDemo.css';\\n\\nconst TreeTableResponsiveDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const nameTemplate = (node) => {\\n        return (\\n            <React.Fragment>\\n                <span>{node.data.name}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.size}</span>\\n                <span className=\\\"sm-visible\\\"> {node.data.type}</span>\\n            </React.Fragment>\\n        )\\n    }\\n\\n    return (\\n        <div className=\\\"treetable-responsive-demo\\\">\\n            <div className=\\\"card\\\">\\n                <TreeTable value={nodes} header=\\\"Responsive\\\">\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" body={nameTemplate} expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\" headerClassName=\\\"sm-invisible\\\" bodyClassName=\\\"sm-invisible\\\"></Column>\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    _this3.extFiles = {\n      'src/demo/TreeTableDemo.css': {\n        content: \"\\n.treetable-responsive-demo .sm-visible {\\n    display: none;\\n}\\n\\n@media screen and (max-width: 40em) {\\n    .treetable-responsive-demo .sm-invisible {\\n        display: none;\\n    }\\n\\n    .treetable-responsive-demo .sm-visible {\\n        display: inline;\\n        margin-right: .5rem;\\n    }\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(TreeTableResponsiveDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'TreeTableResponsiveDemo',\n        sources: this.sources,\n        service: 'NodeService',\n        data: 'treetablenodes',\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return TreeTableResponsiveDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/treetable/TreeTableResponsiveDemo.js"],"names":["React","Component","TreeTable","Column","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableResponsiveDemo","props","state","nodes","nodeservice","nameTemplate","bind","getTreeTableNodes","then","data","setState","node","name","size","type","TreeTableResponsiveDemoDoc","sources","tabName","content","extFiles","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './TreeTableDemo.scss';\r\n\r\nexport class TreeTableResponsiveDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n        this.nameTemplate = this.nameTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({nodes: data}));\r\n    }\r\n\r\n    nameTemplate(node) {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{node.data.name}</span>\r\n                <span className=\"sm-visible\"> {node.data.size}</span>\r\n                <span className=\"sm-visible\"> {node.data.type}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Responsive</span></h1>\r\n                        <p>TreeTable columns are displayed as stacked in responsive mode if the screen size becomes smaller than a certain breakpoint value.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation treetable-responsive-demo\">\r\n                    <div className=\"card\">\r\n                        <TreeTable value={this.state.nodes} header=\"Responsive\">\r\n                            <Column field=\"name\" header=\"Name\" body={this.nameTemplate} expander></Column>\r\n                            <Column field=\"size\" header=\"Size\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                            <Column field=\"type\" header=\"Type\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableResponsiveDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TreeTableResponsiveDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport './TreeTableDemo.css';\r\n\r\nexport class TreeTableResponsiveDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n        this.nameTemplate = this.nameTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({nodes: data}));\r\n    }\r\n\r\n    nameTemplate(node) {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{node.data.name}</span>\r\n                <span className=\"sm-visible\"> {node.data.size}</span>\r\n                <span className=\"sm-visible\"> {node.data.type}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"treetable-responsive-demo\">\r\n                <div className=\"card\">\r\n                    <TreeTable value={this.state.nodes} header=\"Responsive\">\r\n                        <Column field=\"name\" header=\"Name\" body={this.nameTemplate} expander></Column>\r\n                        <Column field=\"size\" header=\"Size\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                        <Column field=\"type\" header=\"Type\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport './TreeTableDemo.css';\r\n\r\nconst TreeTableResponsiveDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const nameTemplate = (node) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{node.data.name}</span>\r\n                <span className=\"sm-visible\"> {node.data.size}</span>\r\n                <span className=\"sm-visible\"> {node.data.type}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"treetable-responsive-demo\">\r\n            <div className=\"card\">\r\n                <TreeTable value={nodes} header=\"Responsive\">\r\n                    <Column field=\"name\" header=\"Name\" body={nameTemplate} expander></Column>\r\n                    <Column field=\"size\" header=\"Size\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { NodeService } from '../service/NodeService';\r\nimport './TreeTableDemo.css';\r\n\r\nconst TreeTableResponsiveDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const nameTemplate = (node) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{node.data.name}</span>\r\n                <span className=\"sm-visible\"> {node.data.size}</span>\r\n                <span className=\"sm-visible\"> {node.data.type}</span>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"treetable-responsive-demo\">\r\n            <div className=\"card\">\r\n                <TreeTable value={nodes} header=\"Responsive\">\r\n                    <Column field=\"name\" header=\"Name\" body={nameTemplate} expander></Column>\r\n                    <Column field=\"size\" header=\"Size\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                    <Column field=\"type\" header=\"Type\" headerClassName=\"sm-invisible\" bodyClassName=\"sm-invisible\"></Column>\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/TreeTableDemo.css': {\r\n                content: `\r\n.treetable-responsive-demo .sm-visible {\r\n    display: none;\r\n}\r\n\r\n@media screen and (max-width: 40em) {\r\n    .treetable-responsive-demo .sm-invisible {\r\n        display: none;\r\n    }\r\n\r\n    .treetable-responsive-demo .sm-visible {\r\n        display: inline;\r\n        margin-right: .5rem;\r\n    }\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableResponsiveDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes', extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}