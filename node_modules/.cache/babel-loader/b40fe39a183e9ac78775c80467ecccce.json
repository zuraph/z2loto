{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\autocomplete\\\\AutoCompleteDemo.js\";\nimport React, { Component } from 'react';\nimport { AutoComplete } from '../../components/autocomplete/AutoComplete';\nimport { CountryService } from '../service/CountryService';\nimport { AutoCompleteDoc } from './AutoCompleteDoc';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var AutoCompleteDemo = /*#__PURE__*/function (_Component) {\n  _inherits(AutoCompleteDemo, _Component);\n\n  var _super = _createSuper(AutoCompleteDemo);\n\n  function AutoCompleteDemo(props) {\n    var _this;\n\n    _classCallCheck(this, AutoCompleteDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      countries: [],\n      selectedCountry1: null,\n      selectedCountry2: null,\n      selectedCountries: null,\n      filteredCountries: null\n    };\n    _this.searchCountry = _this.searchCountry.bind(_assertThisInitialized(_this));\n    _this.itemTemplate = _this.itemTemplate.bind(_assertThisInitialized(_this));\n    _this.countryservice = new CountryService();\n    return _this;\n  }\n\n  _createClass(AutoCompleteDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.countryservice.getCountries().then(function (data) {\n        return _this2.setState({\n          countries: data\n        });\n      });\n    }\n  }, {\n    key: \"searchCountry\",\n    value: function searchCountry(event) {\n      var _this3 = this;\n\n      setTimeout(function () {\n        var filteredCountries;\n\n        if (!event.query.trim().length) {\n          filteredCountries = _toConsumableArray(_this3.state.countries);\n        } else {\n          filteredCountries = _this3.state.countries.filter(function (country) {\n            return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n          });\n        }\n\n        _this3.setState({\n          filteredCountries: filteredCountries\n        });\n      }, 250);\n    }\n  }, {\n    key: \"itemTemplate\",\n    value: function itemTemplate(item) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"country-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: item.name,\n        src: \"showcase/demo/images/flag_placeholder.png\",\n        onError: function onError(e) {\n          return e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png';\n        },\n        className: \"flag flag-\".concat(item.code.toLowerCase()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, item.name));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"autoComplete\",\n        showInputStyle: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"AutoComplete\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"AutoComplete is an input component that provides real-time suggestions when being typed.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"Basic\"), /*#__PURE__*/React.createElement(AutoComplete, {\n        value: this.state.selectedCountry1,\n        suggestions: this.state.filteredCountries,\n        completeMethod: this.searchCountry,\n        field: \"name\",\n        onChange: function onChange(e) {\n          return _this4.setState({\n            selectedCountry1: e.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, \"Dropdown, Templating and Force Selection\"), /*#__PURE__*/React.createElement(AutoComplete, {\n        value: this.state.selectedCountry2,\n        suggestions: this.state.filteredCountries,\n        completeMethod: this.searchCountry,\n        field: \"name\",\n        dropdown: true,\n        forceSelection: true,\n        itemTemplate: this.itemTemplate,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            selectedCountry2: e.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, \"Multiple\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(AutoComplete, {\n        value: this.state.selectedCountries,\n        suggestions: this.state.filteredCountries,\n        completeMethod: this.searchCountry,\n        field: \"name\",\n        multiple: true,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            selectedCountries: e.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(AutoCompleteDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return AutoCompleteDemo;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/autocomplete/AutoCompleteDemo.js"],"names":["React","Component","AutoComplete","CountryService","AutoCompleteDoc","AppInlineHeader","AutoCompleteDemo","props","state","countries","selectedCountry1","selectedCountry2","selectedCountries","filteredCountries","searchCountry","bind","itemTemplate","countryservice","getCountries","then","data","setState","event","setTimeout","query","trim","length","filter","country","name","toLowerCase","startsWith","item","e","target","src","code","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { AutoComplete } from '../../components/autocomplete/AutoComplete';\r\nimport { CountryService } from '../service/CountryService';\r\nimport { AutoCompleteDoc } from './AutoCompleteDoc';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class AutoCompleteDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            countries: [],\r\n            selectedCountry1: null,\r\n            selectedCountry2: null,\r\n            selectedCountries: null,\r\n            filteredCountries: null\r\n        };\r\n\r\n        this.searchCountry = this.searchCountry.bind(this);\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.countryservice = new CountryService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.countryservice.getCountries().then(data => this.setState({ countries: data }));\r\n    }\r\n\r\n    searchCountry(event) {\r\n        setTimeout(() => {\r\n            let filteredCountries;\r\n            if (!event.query.trim().length) {\r\n                filteredCountries = [...this.state.countries];\r\n            }\r\n            else {\r\n                filteredCountries = this.state.countries.filter((country) => {\r\n                    return country.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n\r\n            this.setState({ filteredCountries });\r\n        }, 250);\r\n    }\r\n\r\n    itemTemplate(item) {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <img alt={item.name} src={`showcase/demo/images/flag_placeholder.png`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} className={`flag flag-${item.code.toLowerCase()}`} />\r\n                <div>{item.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"autoComplete\" showInputStyle>\r\n                        <h1>AutoComplete</h1>\r\n                        <p>AutoComplete is an input component that provides real-time suggestions when being typed.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Basic</h5>\r\n                        <AutoComplete value={this.state.selectedCountry1} suggestions={this.state.filteredCountries} completeMethod={this.searchCountry} field=\"name\" onChange={(e) => this.setState({ selectedCountry1: e.value })} />\r\n\r\n                        <h5>Dropdown, Templating and Force Selection</h5>\r\n                        <AutoComplete value={this.state.selectedCountry2} suggestions={this.state.filteredCountries} completeMethod={this.searchCountry} field=\"name\" dropdown forceSelection itemTemplate={this.itemTemplate} onChange={(e) => this.setState({ selectedCountry2: e.value })} />\r\n\r\n                        <h5>Multiple</h5>\r\n                        <span className=\"p-fluid\">\r\n                            <AutoComplete value={this.state.selectedCountries} suggestions={this.state.filteredCountries} completeMethod={this.searchCountry} field=\"name\" multiple onChange={(e) => this.setState({ selectedCountries: e.value })} />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <AutoCompleteDoc></AutoCompleteDoc>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}