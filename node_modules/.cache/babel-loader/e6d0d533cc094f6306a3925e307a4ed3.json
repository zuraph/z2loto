{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\organizationchart\\\\OrganizationChart.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nexport var OrganizationChartNode = /*#__PURE__*/function (_Component) {\n  _inherits(OrganizationChartNode, _Component);\n\n  var _super = _createSuper(OrganizationChartNode);\n\n  function OrganizationChartNode(props) {\n    var _this;\n\n    _classCallCheck(this, OrganizationChartNode);\n\n    _this = _super.call(this, props);\n    _this.node = _this.props.node;\n    _this.state = {\n      expanded: _this.node.expanded\n    };\n    return _this;\n  }\n\n  _createClass(OrganizationChartNode, [{\n    key: \"getLeaf\",\n    value: function getLeaf() {\n      return this.node.leaf === false ? false : !(this.node.children && this.node.children.length);\n    }\n  }, {\n    key: \"getColspan\",\n    value: function getColspan() {\n      return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n    }\n  }, {\n    key: \"onNodeClick\",\n    value: function onNodeClick(event, node) {\n      this.props.onNodeClick(event, node);\n    }\n  }, {\n    key: \"toggleNode\",\n    value: function toggleNode(event, node) {\n      this.setState(function (prevState) {\n        return {\n          expanded: !prevState.expanded\n        };\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected() {\n      return this.props.isSelected(this.node);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.node = this.props.node;\n      var colspan = this.getColspan();\n      var nodeClassName = classNames('p-organizationchart-node-content', this.node.className, {\n        'p-organizationchart-selectable-node': this.props.selectionMode && this.node.selectable !== false,\n        'p-highlight': this.isSelected()\n      }),\n          nodeLabel = this.props.nodeTemplate && this.props.nodeTemplate(this.node) ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 91\n        }\n      }, this.props.nodeTemplate(this.node)) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 141\n        }\n      }, this.node.label),\n          toggleIcon = classNames('p-node-toggler-icon', {\n        'pi pi-chevron-down': this.state.expanded,\n        'pi pi-chevron-up': !this.state.expanded\n      }),\n          nodeContent = /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: colspan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: nodeClassName,\n        onClick: function onClick(e) {\n          return _this2.onNodeClick(e, _this2.node);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, nodeLabel,\n      /* eslint-disable */\n      !this.getLeaf() && /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        className: \"p-node-toggler\",\n        onClick: function onClick(e) {\n          return _this2.toggleNode(e, _this2.node);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: toggleIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }))\n      /* eslint-enable */\n      )));\n\n      var _visibility = !this.getLeaf() && this.state.expanded ? 'inherit' : 'hidden',\n          linesDown = /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          visibility: _visibility\n        },\n        className: \"p-organizationchart-lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: colspan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-organizationchart-line-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }))),\n          nodeChildLength = this.node.children && this.node.children.length,\n          linesMiddle = /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          visibility: _visibility\n        },\n        className: \"p-organizationchart-lines\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 28\n        }\n      }, this.node.children && this.node.children.length === 1 && /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: this.getColspan(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-organizationchart-line-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 41\n        }\n      })), this.node.children && this.node.children.length > 1 && this.node.children.map(function (item, index) {\n        var leftClass = classNames('p-organizationchart-line-left', {\n          'p-organizationchart-line-top': index !== 0\n        }),\n            rightClass = classNames('p-organizationchart-line-right', {\n          'p-organizationchart-line-top': index !== nodeChildLength - 1\n        });\n        return [/*#__PURE__*/React.createElement(\"td\", {\n          key: index + '_lineleft',\n          className: leftClass,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 49\n          }\n        }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n          key: index + '_lineright',\n          className: rightClass,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 114\n          }\n        }, \"\\xA0\")];\n      })),\n          childNodes = /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          visibility: _visibility\n        },\n        className: \"p-organizationchart-nodes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }\n      }, this.node.children && this.node.children.map(function (child, index) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          colSpan: \"2\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(OrganizationChartNode, {\n          node: child,\n          nodeTemplate: _this2.props.nodeTemplate,\n          selectionMode: _this2.props.selectionMode,\n          onNodeClick: _this2.props.onNodeClick,\n          isSelected: _this2.props.isSelected,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 37\n          }\n        }));\n      }));\n\n      return /*#__PURE__*/React.createElement(\"table\", {\n        className: \"p-organizationchart-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, nodeContent, linesDown, linesMiddle, childNodes));\n    }\n  }]);\n\n  return OrganizationChartNode;\n}(Component);\nOrganizationChartNode.defaultProps = {\n  node: null,\n  nodeTemplate: null,\n  root: false,\n  first: false,\n  last: false,\n  selectionMode: null,\n  onNodeClick: null,\n  isSelected: null\n};\nOrganizationChartNode.propTypes = {\n  node: PropTypes.any,\n  nodeTemplate: PropTypes.any,\n  root: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  selectionMode: PropTypes.string,\n  onNodeClick: PropTypes.func,\n  isSelected: PropTypes.func\n};\nexport var OrganizationChart = /*#__PURE__*/function (_Component2) {\n  _inherits(OrganizationChart, _Component2);\n\n  var _super2 = _createSuper(OrganizationChart);\n\n  function OrganizationChart(props) {\n    var _this3;\n\n    _classCallCheck(this, OrganizationChart);\n\n    _this3 = _super2.call(this, props);\n    _this3.root = _this3.props.value && _this3.props.value.length ? _this3.props.value[0] : null;\n    _this3.onNodeClick = _this3.onNodeClick.bind(_assertThisInitialized(_this3));\n    _this3.isSelected = _this3.isSelected.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(OrganizationChart, [{\n    key: \"onNodeClick\",\n    value: function onNodeClick(event, node) {\n      if (this.props.selectionMode) {\n        var eventTarget = event.target;\n\n        if (eventTarget.className && (eventTarget.className.indexOf('p-node-toggler') !== -1 || eventTarget.className.indexOf('p-node-toggler-icon') !== -1)) {\n          return;\n        }\n\n        if (node.selectable === false) {\n          return;\n        }\n\n        var index = this.findIndexInSelection(node);\n        var selected = index >= 0;\n        var selection;\n\n        if (this.props.selectionMode === 'single') {\n          if (selected) {\n            selection = null;\n\n            if (this.props.onNodeUnselect) {\n              this.props.onNodeUnselect({\n                originalEvent: event,\n                node: node\n              });\n            }\n          } else {\n            selection = node;\n\n            if (this.props.onNodeSelect) {\n              this.props.onNodeSelect({\n                originalEvent: event,\n                node: node\n              });\n            }\n          }\n        } else if (this.props.selectionMode === 'multiple') {\n          if (selected) {\n            selection = this.props.selection.filter(function (val, i) {\n              return i !== index;\n            });\n\n            if (this.props.onNodeUnselect) {\n              this.props.onNodeUnselect({\n                originalEvent: event,\n                node: node\n              });\n            }\n          } else {\n            selection = [].concat(_toConsumableArray(this.props.selection || []), [node]);\n\n            if (this.props.onNodeSelect) {\n              this.props.onNodeSelect({\n                originalEvent: event,\n                node: node\n              });\n            }\n          }\n        }\n\n        if (this.props.onSelectionChange) {\n          this.props.onSelectionChange({\n            originalEvent: event,\n            data: selection\n          });\n        }\n      }\n    }\n  }, {\n    key: \"findIndexInSelection\",\n    value: function findIndexInSelection(node) {\n      var index = -1;\n\n      if (this.props.selectionMode && this.props.selection) {\n        if (this.props.selectionMode === 'single') {\n          index = this.props.selection === node ? 0 : -1;\n        } else if (this.props.selectionMode === 'multiple') {\n          for (var i = 0; i < this.props.selection.length; i++) {\n            if (this.props.selection[i] === node) {\n              index = i;\n              break;\n            }\n          }\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(node) {\n      return this.findIndexInSelection(node) !== -1;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.root = this.props.value && this.props.value.length ? this.props.value[0] : null;\n      var className = classNames('p-organizationchart p-component', this.props.className);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        style: this.props.style,\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(OrganizationChartNode, {\n        node: this.root,\n        nodeTemplate: this.props.nodeTemplate,\n        selectionMode: this.props.selectionMode,\n        onNodeClick: this.onNodeClick,\n        isSelected: this.isSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return OrganizationChart;\n}(Component);\nOrganizationChart.defaultProps = {\n  id: null,\n  value: null,\n  style: null,\n  className: null,\n  selectionMode: null,\n  selection: null,\n  nodeTemplate: null,\n  onSelectionChange: null,\n  onNodeSelect: null,\n  onNodeUnselect: null\n};\nOrganizationChart.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.any,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  selectionMode: PropTypes.string,\n  selection: PropTypes.any,\n  nodeTemplate: PropTypes.any,\n  onSelectionChange: PropTypes.func,\n  onNodeSelect: PropTypes.func,\n  onNodeUnselect: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/organizationchart/OrganizationChart.js"],"names":["React","Component","PropTypes","classNames","OrganizationChartNode","props","node","state","expanded","leaf","children","length","event","onNodeClick","setState","prevState","preventDefault","isSelected","colspan","getColspan","nodeClassName","className","selectionMode","selectable","nodeLabel","nodeTemplate","label","toggleIcon","nodeContent","e","getLeaf","toggleNode","_visibility","linesDown","visibility","nodeChildLength","linesMiddle","map","item","index","leftClass","rightClass","childNodes","child","defaultProps","root","first","last","propTypes","any","bool","string","func","OrganizationChart","value","bind","eventTarget","target","indexOf","findIndexInSelection","selected","selection","onNodeUnselect","originalEvent","onNodeSelect","filter","val","i","onSelectionChange","data","id","style","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\n\r\nexport class OrganizationChartNode extends Component {\r\n\r\n    static defaultProps = {\r\n        node: null,\r\n        nodeTemplate: null,\r\n        root: false,\r\n        first: false,\r\n        last: false,\r\n        selectionMode: null,\r\n        onNodeClick: null,\r\n        isSelected: null\r\n    }\r\n\r\n    static propTypes = {\r\n        node: PropTypes.any,\r\n        nodeTemplate: PropTypes.any,\r\n        root: PropTypes.bool,\r\n        first: PropTypes.bool,\r\n        last: PropTypes.bool,\r\n        selectionMode: PropTypes.string,\r\n        onNodeClick: PropTypes.func,\r\n        isSelected: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.node = this.props.node;\r\n        this.state = {expanded: this.node.expanded};\r\n    }\r\n\r\n    getLeaf() {\r\n        return this.node.leaf === false ? false : !(this.node.children&&this.node.children.length);\r\n    }\r\n\r\n    getColspan() {\r\n        return (this.node.children && this.node.children.length) ? this.node.children.length * 2: null;\r\n    }\r\n\r\n    onNodeClick(event, node) {\r\n        this.props.onNodeClick(event, node)\r\n    }\r\n\r\n    toggleNode(event, node) {\r\n        this.setState((prevState) => ({\r\n            expanded: !prevState.expanded\r\n        }));\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    isSelected() {\r\n        return this.props.isSelected(this.node);\r\n    }\r\n\r\n    render() {\r\n        this.node = this.props.node;\r\n\r\n        let colspan = this.getColspan();\r\n        let nodeClassName = classNames('p-organizationchart-node-content', this.node.className, {\r\n                'p-organizationchart-selectable-node': this.props.selectionMode && this.node.selectable !== false,\r\n                'p-highlight': this.isSelected()\r\n            }),\r\n            nodeLabel = (this.props.nodeTemplate && this.props.nodeTemplate(this.node)) ? <div>{this.props.nodeTemplate(this.node)}</div> : <div>{this.node.label}</div>,\r\n            toggleIcon = classNames('p-node-toggler-icon', {'pi pi-chevron-down': this.state.expanded, 'pi pi-chevron-up': !this.state.expanded}),\r\n            nodeContent = (<tr>\r\n                <td colSpan={colspan}>\r\n                    <div className={nodeClassName} onClick={(e) => this.onNodeClick(e, this.node)}>\r\n                        {nodeLabel}\r\n                        {\r\n                            /* eslint-disable */\r\n                            !this.getLeaf() && <a href=\"#\" className=\"p-node-toggler\" onClick={(e) => this.toggleNode(e, this.node)}>\r\n                                <i className={toggleIcon}></i>\r\n                            </a>\r\n                            /* eslint-enable */\r\n                        }\r\n                    </div>\r\n                </td>\r\n            </tr>);\r\n\r\n        let _visibility = (!this.getLeaf() && this.state.expanded) ? 'inherit' : 'hidden',\r\n            linesDown = (<tr style={{visibility: _visibility}} className=\"p-organizationchart-lines\">\r\n                <td colSpan={colspan}>\r\n                    <div className=\"p-organizationchart-line-down\"></div>\r\n                </td>\r\n            </tr>),\r\n            nodeChildLength = this.node.children && this.node.children.length,\r\n            linesMiddle = (<tr style={{visibility: _visibility}} className=\"p-organizationchart-lines\">\r\n                {\r\n                    this.node.children && this.node.children.length === 1 && (\r\n                                    <td colSpan={this.getColspan()}>\r\n                                        <div className=\"p-organizationchart-line-down\"></div>\r\n                                    </td>\r\n                    )\r\n                }\r\n                {\r\n                    this.node.children && this.node.children.length > 1 && (\r\n                                    this.node.children.map((item, index) => {\r\n                                        let leftClass = classNames('p-organizationchart-line-left', {'p-organizationchart-line-top': index !== 0}),\r\n                                        rightClass = classNames('p-organizationchart-line-right', {'p-organizationchart-line-top': index !== nodeChildLength - 1});\r\n\r\n                                        return [<td key={index + '_lineleft'} className={leftClass}>&nbsp;</td>, <td key={index + '_lineright'} className={rightClass}>&nbsp;</td>];\r\n                                    })\r\n                                )\r\n                }\r\n            </tr>),\r\n            childNodes = (<tr style={{visibility: _visibility}} className=\"p-organizationchart-nodes\">\r\n                    {\r\n                        this.node.children && this.node.children.map((child, index) => {\r\n                            return (<td key={index} colSpan=\"2\">\r\n                                    <OrganizationChartNode node={child} nodeTemplate={this.props.nodeTemplate} selectionMode={this.props.selectionMode}\r\n                                        onNodeClick={this.props.onNodeClick} isSelected={this.props.isSelected}/>\r\n                                </td>)\r\n                        })\r\n                    }\r\n            </tr>);\r\n\r\n\r\n        return (\r\n            <table className=\"p-organizationchart-table\">\r\n                <tbody>\r\n                    {nodeContent}\r\n                    {linesDown}\r\n                    {linesMiddle}\r\n                    {childNodes}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport class OrganizationChart extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        style: null,\r\n        className: null,\r\n        selectionMode: null,\r\n        selection: null,\r\n        nodeTemplate: null,\r\n        onSelectionChange: null,\r\n        onNodeSelect: null,\r\n        onNodeUnselect: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.any,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        selectionMode: PropTypes.string,\r\n        selection: PropTypes.any,\r\n        nodeTemplate: PropTypes.any,\r\n        onSelectionChange: PropTypes.func,\r\n        onNodeSelect: PropTypes.func,\r\n        onNodeUnselect: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.root = this.props.value && this.props.value.length ? this.props.value[0] : null;\r\n        this.onNodeClick = this.onNodeClick.bind(this);\r\n        this.isSelected = this.isSelected.bind(this);\r\n    }\r\n\r\n    onNodeClick(event, node) {\r\n        if (this.props.selectionMode) {\r\n            let eventTarget = (event.target);\r\n            if (eventTarget.className && (eventTarget.className.indexOf('p-node-toggler') !== -1 || eventTarget.className.indexOf('p-node-toggler-icon') !== -1)) {\r\n                return;\r\n            }\r\n\r\n            if (node.selectable === false) {\r\n                return;\r\n            }\r\n\r\n            let index = this.findIndexInSelection(node);\r\n            let selected = (index >= 0);\r\n            let selection;\r\n\r\n            if (this.props.selectionMode === 'single') {\r\n                if (selected) {\r\n                    selection = null;\r\n                    if (this.props.onNodeUnselect) {\r\n                        this.props.onNodeUnselect({originalEvent: event, node: node});\r\n                    }\r\n                }\r\n                else {\r\n                    selection = node;\r\n                    if (this.props.onNodeSelect) {\r\n                        this.props.onNodeSelect({originalEvent: event, node: node});\r\n                    }\r\n                }\r\n            }\r\n            else if (this.props.selectionMode === 'multiple') {\r\n                if (selected) {\r\n                    selection = this.props.selection.filter((val,i) => i !== index);\r\n                    if (this.props.onNodeUnselect) {\r\n                        this.props.onNodeUnselect({originalEvent: event, node: node});\r\n                    }\r\n                }\r\n                else {\r\n                    selection = [...this.props.selection||[], node];\r\n                    if(this.props.onNodeSelect) {\r\n                        this.props.onNodeSelect({originalEvent: event, node: node});\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.props.onSelectionChange) {\r\n                this.props.onSelectionChange({\r\n                    originalEvent: event,\r\n                    data: selection\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    findIndexInSelection(node) {\r\n        let index = -1;\r\n\r\n        if(this.props.selectionMode && this.props.selection) {\r\n            if(this.props.selectionMode === 'single') {\r\n                index = (this.props.selection === node) ? 0 : - 1;\r\n            }\r\n            else if(this.props.selectionMode === 'multiple') {\r\n                for(let i = 0; i  < this.props.selection.length; i++) {\r\n                    if(this.props.selection[i] === node) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    isSelected(node) {\r\n        return this.findIndexInSelection(node) !== -1;\r\n    }\r\n\r\n    render() {\r\n        this.root = this.props.value && this.props.value.length ? this.props.value[0] : null;\r\n\r\n        const className = classNames('p-organizationchart p-component', this.props.className);\r\n\r\n        return (\r\n            <div id={this.props.id} style={this.props.style} className={className}>\r\n                <OrganizationChartNode node={this.root} nodeTemplate={this.props.nodeTemplate} selectionMode={this.props.selectionMode}\r\n                        onNodeClick={this.onNodeClick} isSelected={this.isSelected}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}