{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\dialog\\\\Dialog.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport DomHandler from '../utils/DomHandler';\nimport { classNames } from '../utils/ClassNames';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport { CSSTransition } from 'react-transition-group';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { Ripple } from '../ripple/Ripple';\nexport var Dialog = /*#__PURE__*/function (_Component) {\n  _inherits(Dialog, _Component);\n\n  var _super = _createSuper(Dialog);\n\n  function Dialog(props) {\n    var _this;\n\n    _classCallCheck(this, Dialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      maskVisible: props.visible,\n      visible: false\n    };\n\n    if (!_this.props.onMaximize) {\n      _this.state.maximized = props.maximized;\n    }\n\n    _this.onClose = _this.onClose.bind(_assertThisInitialized(_this));\n    _this.toggleMaximize = _this.toggleMaximize.bind(_assertThisInitialized(_this));\n    _this.onDragStart = _this.onDragStart.bind(_assertThisInitialized(_this));\n    _this.onResizeStart = _this.onResizeStart.bind(_assertThisInitialized(_this));\n    _this.onMaskClick = _this.onMaskClick.bind(_assertThisInitialized(_this));\n    _this.onEntered = _this.onEntered.bind(_assertThisInitialized(_this));\n    _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.dialogRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Dialog, [{\n    key: \"onClose\",\n    value: function onClose(event) {\n      this.props.onHide();\n      event.preventDefault();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var activeElement = document.activeElement;\n      var isActiveElementInDialog = activeElement && this.dialogRef && this.dialogRef.current.contains(activeElement);\n\n      if (!isActiveElementInDialog && this.props.closable) {\n        this.closeElement.focus();\n      }\n    }\n  }, {\n    key: \"onMaskClick\",\n    value: function onMaskClick(event) {\n      if (this.props.dismissableMask && this.props.modal && this.mask === event.target) {\n        this.onClose(event);\n      }\n    }\n  }, {\n    key: \"toggleMaximize\",\n    value: function toggleMaximize(event) {\n      var maximized = !this.maximized;\n\n      if (this.props.onMaximize) {\n        this.props.onMaximize({\n          originalEvent: event,\n          maximized: maximized\n        });\n      } else {\n        this.setState({\n          maximized: maximized\n        }, this.changeScrollOnMaximizable);\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(event) {\n      if (DomHandler.hasClass(event.target, 'p-dialog-header-icon') || DomHandler.hasClass(event.target.parentElement, 'p-dialog-header-icon')) {\n        return;\n      }\n\n      if (this.props.draggable) {\n        this.dragging = true;\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n        this.dialogEl.style.margin = '0';\n        DomHandler.addClass(document.body, 'p-unselectable-text');\n\n        if (this.props.onDragStart) {\n          this.props.onDragStart(event);\n        }\n      }\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(event) {\n      if (this.dragging) {\n        var width = DomHandler.getOuterWidth(this.dialogEl);\n        var height = DomHandler.getOuterHeight(this.dialogEl);\n        var deltaX = event.pageX - this.lastPageX;\n        var deltaY = event.pageY - this.lastPageY;\n        var offset = DomHandler.getOffset(this.dialogEl);\n        var leftPos = offset.left + deltaX;\n        var topPos = offset.top + deltaY;\n        var viewport = DomHandler.getViewport();\n        this.dialogEl.style.position = 'fixed';\n\n        if (this.props.keepInViewport) {\n          if (leftPos >= this.props.minX && leftPos + width < viewport.width) {\n            this.lastPageX = event.pageX;\n            this.dialogEl.style.left = leftPos + 'px';\n          }\n\n          if (topPos >= this.props.minY && topPos + height < viewport.height) {\n            this.lastPageY = event.pageY;\n            this.dialogEl.style.top = topPos + 'px';\n          }\n        } else {\n          this.lastPageX = event.pageX;\n          this.dialogEl.style.left = leftPos + 'px';\n          this.lastPageY = event.pageY;\n          this.dialogEl.style.top = topPos + 'px';\n        }\n\n        if (this.props.onDrag) {\n          this.props.onDrag(event);\n        }\n      }\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(event) {\n      if (this.dragging) {\n        this.dragging = false;\n        DomHandler.removeClass(document.body, 'p-unselectable-text');\n\n        if (this.props.onDragEnd) {\n          this.props.onDragEnd(event);\n        }\n      }\n    }\n  }, {\n    key: \"onResizeStart\",\n    value: function onResizeStart(event) {\n      if (this.props.resizable) {\n        this.resizing = true;\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n        DomHandler.addClass(document.body, 'p-unselectable-text');\n\n        if (this.props.onResizeStart) {\n          this.props.onResizeStart(event);\n        }\n      }\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(event) {\n      if (this.resizing) {\n        var deltaX = event.pageX - this.lastPageX;\n        var deltaY = event.pageY - this.lastPageY;\n        var width = DomHandler.getOuterWidth(this.dialogEl);\n        var height = DomHandler.getOuterHeight(this.dialogEl);\n        var contentHeight = DomHandler.getOuterHeight(this.contentEl);\n        var newWidth = width + deltaX;\n        var newHeight = height + deltaY;\n        var minWidth = this.dialogEl.style.minWidth;\n        var minHeight = this.dialogEl.style.minHeight;\n        var offset = DomHandler.getOffset(this.dialogEl);\n        var viewport = DomHandler.getViewport();\n        var hasBeenDragged = !parseInt(this.dialogEl.style.top) || !parseInt(this.dialogEl.style.left);\n\n        if (hasBeenDragged) {\n          newWidth += deltaX;\n          newHeight += deltaY;\n        }\n\n        if ((!minWidth || newWidth > parseInt(minWidth)) && offset.left + newWidth < viewport.width) {\n          this.dialogEl.style.width = newWidth + 'px';\n        }\n\n        if ((!minHeight || newHeight > parseInt(minHeight)) && offset.top + newHeight < viewport.height) {\n          this.contentEl.style.height = contentHeight + newHeight - height + 'px';\n          this.dialogEl.style.height = newHeight + 'px';\n        }\n\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n\n        if (this.props.onResize) {\n          this.props.onResize(event);\n        }\n      }\n    }\n  }, {\n    key: \"onResizeEnd\",\n    value: function onResizeEnd(event) {\n      if (this.resizing) {\n        this.resizing = false;\n        DomHandler.removeClass(document.body, 'p-unselectable-text');\n\n        if (this.props.onResizeEnd) {\n          this.props.onResizeEnd(event);\n        }\n      }\n    }\n  }, {\n    key: \"resetPosition\",\n    value: function resetPosition() {\n      this.dialogEl.style.position = '';\n      this.dialogEl.style.left = '';\n      this.dialogEl.style.top = '';\n      this.dialogEl.style.margin = '';\n    }\n  }, {\n    key: \"getPositionClass\",\n    value: function getPositionClass() {\n      var _this2 = this;\n\n      var positions = ['center', 'left', 'right', 'top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right'];\n      var pos = positions.find(function (item) {\n        return item === _this2.props.position || item.replace('-', '') === _this2.props.position;\n      });\n      return pos ? \"p-dialog-\".concat(pos) : '';\n    }\n  }, {\n    key: \"zIndex\",\n    get: function get() {\n      return this.props.baseZIndex + DomHandler.generateZIndex();\n    }\n  }, {\n    key: \"maximized\",\n    get: function get() {\n      return this.props.onMaximize ? this.props.maximized : this.state.maximized;\n    }\n  }, {\n    key: \"dialogEl\",\n    get: function get() {\n      return this.dialogRef.current;\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered() {\n      if (this.props.onShow) {\n        this.props.onShow();\n      }\n\n      if (this.props.focusOnShow) {\n        this.focus();\n      }\n\n      this.enableDocumentSettings();\n    }\n  }, {\n    key: \"onExited\",\n    value: function onExited() {\n      this.dragging = false;\n      this.setState({\n        maskVisible: false\n      });\n      this.disableDocumentSettings();\n    }\n  }, {\n    key: \"enableDocumentSettings\",\n    value: function enableDocumentSettings() {\n      this.bindGlobalListeners();\n\n      if (this.props.blockScroll || this.props.maximizable && this.maximized) {\n        DomHandler.addClass(document.body, 'p-overflow-hidden');\n      }\n    }\n  }, {\n    key: \"disableDocumentSettings\",\n    value: function disableDocumentSettings() {\n      this.unbindGlobalListeners();\n\n      if (this.props.modal) {\n        var hasBlockScroll = document.primeDialogParams && document.primeDialogParams.some(function (param) {\n          return param.hasBlockScroll;\n        });\n\n        if (!hasBlockScroll) {\n          DomHandler.removeClass(document.body, 'p-overflow-hidden');\n        }\n      } else if (this.props.blockScroll || this.props.maximizable && this.maximized) {\n        DomHandler.removeClass(document.body, 'p-overflow-hidden');\n      }\n    }\n  }, {\n    key: \"bindGlobalListeners\",\n    value: function bindGlobalListeners() {\n      if (this.props.draggable) {\n        this.bindDocumentDragListener();\n      }\n\n      if (this.props.resizable) {\n        this.bindDocumentResizeListeners();\n      }\n\n      if (this.props.closeOnEscape && this.props.closable) {\n        this.bindDocumentKeyDownListener();\n      }\n    }\n  }, {\n    key: \"unbindGlobalListeners\",\n    value: function unbindGlobalListeners() {\n      this.unbindDocumentDragListener();\n      this.unbindDocumentResizeListeners();\n      this.unbindDocumentKeyDownListener();\n    }\n  }, {\n    key: \"bindDocumentDragListener\",\n    value: function bindDocumentDragListener() {\n      this.documentDragListener = this.onDrag.bind(this);\n      this.documentDragEndListener = this.onDragEnd.bind(this);\n      window.document.addEventListener('mousemove', this.documentDragListener);\n      window.document.addEventListener('mouseup', this.documentDragEndListener);\n    }\n  }, {\n    key: \"unbindDocumentDragListener\",\n    value: function unbindDocumentDragListener() {\n      if (this.documentDragListener && this.documentDragEndListener) {\n        window.document.removeEventListener('mousemove', this.documentDragListener);\n        window.document.removeEventListener('mouseup', this.documentDragEndListener);\n        this.documentDragListener = null;\n        this.documentDragEndListener = null;\n      }\n    }\n  }, {\n    key: \"bindDocumentResizeListeners\",\n    value: function bindDocumentResizeListeners() {\n      this.documentResizeListener = this.onResize.bind(this);\n      this.documentResizeEndListener = this.onResizeEnd.bind(this);\n      window.document.addEventListener('mousemove', this.documentResizeListener);\n      window.document.addEventListener('mouseup', this.documentResizeEndListener);\n    }\n  }, {\n    key: \"unbindDocumentResizeListeners\",\n    value: function unbindDocumentResizeListeners() {\n      if (this.documentResizeListener && this.documentResizeEndListener) {\n        window.document.removeEventListener('mousemove', this.documentResizeListener);\n        window.document.removeEventListener('mouseup', this.documentResizeEndListener);\n        this.documentResizeListener = null;\n        this.documentResizeEndListener = null;\n      }\n    }\n  }, {\n    key: \"bindDocumentKeyDownListener\",\n    value: function bindDocumentKeyDownListener() {\n      var _this3 = this;\n\n      this.documentKeyDownListener = function (event) {\n        var currentTarget = event.currentTarget;\n\n        if (currentTarget && currentTarget.primeDialogParams) {\n          var params = currentTarget.primeDialogParams;\n          var paramLength = params.length;\n          var dialogId = params[paramLength - 1].id;\n\n          if (dialogId === _this3.id) {\n            var dialog = document.getElementById(dialogId);\n\n            if (event.which === 27) {\n              _this3.onClose(event);\n\n              event.stopImmediatePropagation();\n              params.splice(paramLength - 1, 1);\n            } else if (event.which === 9) {\n              event.preventDefault();\n              var focusableElements = DomHandler.getFocusableElements(dialog);\n\n              if (focusableElements && focusableElements.length > 0) {\n                if (!document.activeElement) {\n                  focusableElements[0].focus();\n                } else {\n                  var focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                  if (event.shiftKey) {\n                    if (focusedIndex === -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();\n                  } else {\n                    if (focusedIndex === -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();\n                  }\n                }\n              }\n            }\n          }\n        }\n      };\n\n      var newParam = {\n        id: this.id,\n        hasBlockScroll: this.props.blockScroll\n      };\n      document.primeDialogParams = document.primeDialogParams ? [].concat(_toConsumableArray(document.primeDialogParams), [newParam]) : [newParam];\n      document.addEventListener('keydown', this.documentKeyDownListener);\n    }\n  }, {\n    key: \"unbindDocumentKeyDownListener\",\n    value: function unbindDocumentKeyDownListener() {\n      var _this4 = this;\n\n      if (this.documentKeyDownListener) {\n        document.removeEventListener('keydown', this.documentKeyDownListener);\n        document.primeDialogParams = document.primeDialogParams && document.primeDialogParams.filter(function (param) {\n          return param.id !== _this4.id;\n        });\n        this.documentKeyDownListener = null;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      if (this.props.visible) {\n        this.setState({\n          visible: true\n        }, function () {\n          _this5.mask.style.zIndex = String(_this5.zIndex);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this6 = this;\n\n      if (this.props.visible && !this.state.maskVisible) {\n        this.setState({\n          maskVisible: true\n        }, function () {\n          _this6.mask.style.zIndex = String(_this6.zIndex);\n        });\n      }\n\n      if (this.props.visible !== this.state.visible && this.state.maskVisible) {\n        this.setState({\n          visible: this.props.visible\n        });\n      }\n\n      if (prevProps.maximized !== this.props.maximized && this.props.onMaximize) {\n        this.changeScrollOnMaximizable();\n      }\n    }\n  }, {\n    key: \"changeScrollOnMaximizable\",\n    value: function changeScrollOnMaximizable() {\n      if (!this.props.blockScroll) {\n        var funcName = this.maximized ? 'addClass' : 'removeClass';\n        DomHandler[funcName](document.body, 'p-overflow-hidden');\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.disableDocumentSettings();\n    }\n  }, {\n    key: \"renderCloseIcon\",\n    value: function renderCloseIcon() {\n      var _this7 = this;\n\n      if (this.props.closable) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          ref: function ref(el) {\n            return _this7.closeElement = el;\n          },\n          type: \"button\",\n          className: \"p-dialog-header-icon p-dialog-header-close p-link\",\n          \"aria-label\": this.props.ariaCloseIconLabel,\n          onClick: this.onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-dialog-header-close-icon pi pi-times\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Ripple, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderMaximizeIcon\",\n    value: function renderMaximizeIcon() {\n      var iconClassName = classNames('p-dialog-header-maximize-icon pi', {\n        'pi-window-maximize': !this.maximized,\n        'pi-window-minimize': this.maximized\n      });\n\n      if (this.props.maximizable) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"p-dialog-header-icon p-dialog-header-maximize p-link\",\n          onClick: this.toggleMaximize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: iconClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Ripple, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this8 = this;\n\n      if (this.props.showHeader) {\n        var closeIcon = this.renderCloseIcon();\n        var maximizeIcon = this.renderMaximizeIcon();\n        var icons = ObjectUtils.getJSXElement(this.props.icons, this.props);\n        var header = ObjectUtils.getJSXElement(this.props.header, this.props);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: function ref(el) {\n            return _this8.headerEl = el;\n          },\n          className: \"p-dialog-header\",\n          onMouseDown: this.onDragStart,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          id: this.id + '_header',\n          className: \"p-dialog-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 21\n          }\n        }, header), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-dialog-header-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 21\n          }\n        }, icons, maximizeIcon, closeIcon));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this9 = this;\n\n      var contentClassName = classNames('p-dialog-content', this.props.contentClassName);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.id + '_content',\n        ref: function ref(el) {\n          return _this9.contentEl = el;\n        },\n        className: contentClassName,\n        style: this.props.contentStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }\n      }, this.props.children);\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var _this10 = this;\n\n      var footer = ObjectUtils.getJSXElement(this.props.footer, this.props);\n      return footer && /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this10.footerElement = el;\n        },\n        className: \"p-dialog-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 26\n        }\n      }, footer);\n    }\n  }, {\n    key: \"renderResizer\",\n    value: function renderResizer() {\n      if (this.props.resizable) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-resizable-handle\",\n          style: {\n            zIndex: 90\n          },\n          onMouseDown: this.onResizeStart,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement() {\n      var _this11 = this;\n\n      var className = classNames('p-dialog p-component', this.props.className, {\n        'p-dialog-rtl': this.props.rtl,\n        'p-dialog-maximized': this.maximized\n      });\n      var maskClassName = classNames('p-dialog-mask', {\n        'p-component-overlay': this.props.modal,\n        'p-dialog-visible': this.state.maskVisible,\n        'p-dialog-draggable': this.props.draggable,\n        'p-dialog-resizable': this.props.resizable\n      }, this.props.maskClassName, this.getPositionClass());\n      var header = this.renderHeader();\n      var content = this.renderContent();\n      var footer = this.renderFooter();\n      var resizer = this.renderResizer();\n      var transitionTimeout = {\n        enter: this.props.position === 'center' ? 150 : 300,\n        exit: this.props.position === 'center' ? 150 : 300\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this11.mask = el;\n        },\n        className: maskClassName,\n        onClick: this.onMaskClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.dialogRef,\n        classNames: \"p-dialog\",\n        timeout: transitionTimeout,\n        in: this.state.visible,\n        unmountOnExit: true,\n        onEntered: this.onEntered,\n        onExited: this.onExited,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.dialogRef,\n        id: this.id,\n        className: className,\n        style: this.props.style,\n        role: \"dialog\",\n        \"aria-labelledby\": this.id + '_header',\n        \"aria-describedby\": this.id + '_content',\n        \"aria-modal\": this.props.modal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }\n      }, header, content, footer, resizer)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.maskVisible) {\n        var element = this.renderElement();\n        if (this.props.appendTo) return ReactDOM.createPortal(element, this.props.appendTo);else return element;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Dialog;\n}(Component);\nDialog.defaultProps = {\n  id: null,\n  header: null,\n  footer: null,\n  visible: false,\n  position: 'center',\n  draggable: true,\n  resizable: true,\n  modal: true,\n  onHide: null,\n  onShow: null,\n  contentStyle: null,\n  contentClassName: null,\n  closeOnEscape: true,\n  dismissableMask: false,\n  rtl: false,\n  closable: true,\n  style: null,\n  className: null,\n  maskClassName: null,\n  showHeader: true,\n  appendTo: null,\n  baseZIndex: 0,\n  maximizable: false,\n  blockScroll: false,\n  icons: null,\n  ariaCloseIconLabel: 'Close',\n  focusOnShow: true,\n  minX: 0,\n  minY: 0,\n  keepInViewport: true,\n  maximized: false,\n  onMaximize: null,\n  onDragStart: null,\n  onDrag: null,\n  onDragEnd: null,\n  onResizeStart: null,\n  onResize: null,\n  onResizeEnd: null\n};\nDialog.propTypes = {\n  id: PropTypes.string,\n  header: PropTypes.any,\n  footer: PropTypes.any,\n  visible: PropTypes.bool,\n  position: PropTypes.string,\n  draggable: PropTypes.bool,\n  resizable: PropTypes.bool,\n  modal: PropTypes.bool,\n  onHide: PropTypes.func.isRequired,\n  onShow: PropTypes.func,\n  contentStyle: PropTypes.object,\n  contentClassName: PropTypes.string,\n  closeOnEscape: PropTypes.bool,\n  dismissableMask: PropTypes.bool,\n  rtl: PropTypes.bool,\n  closable: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  maskClassName: PropTypes.string,\n  showHeader: PropTypes.bool,\n  appendTo: PropTypes.object,\n  baseZIndex: PropTypes.number,\n  maximizable: PropTypes.bool,\n  blockScroll: PropTypes.bool,\n  icons: PropTypes.any,\n  ariaCloseIconLabel: PropTypes.string,\n  focusOnShow: PropTypes.bool,\n  minX: PropTypes.number,\n  minY: PropTypes.number,\n  keepInViewport: PropTypes.bool,\n  maximized: PropTypes.bool,\n  onMaximize: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDrag: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeEnd: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/dialog/Dialog.js"],"names":["React","Component","ReactDOM","PropTypes","DomHandler","classNames","UniqueComponentId","CSSTransition","ObjectUtils","Ripple","Dialog","props","state","maskVisible","visible","onMaximize","maximized","onClose","bind","toggleMaximize","onDragStart","onResizeStart","onMaskClick","onEntered","onExited","id","dialogRef","createRef","event","onHide","preventDefault","activeElement","document","isActiveElementInDialog","current","contains","closable","closeElement","focus","dismissableMask","modal","mask","target","originalEvent","setState","changeScrollOnMaximizable","hasClass","parentElement","draggable","dragging","lastPageX","pageX","lastPageY","pageY","dialogEl","style","margin","addClass","body","width","getOuterWidth","height","getOuterHeight","deltaX","deltaY","offset","getOffset","leftPos","left","topPos","top","viewport","getViewport","position","keepInViewport","minX","minY","onDrag","removeClass","onDragEnd","resizable","resizing","contentHeight","contentEl","newWidth","newHeight","minWidth","minHeight","hasBeenDragged","parseInt","onResize","onResizeEnd","positions","pos","find","item","replace","baseZIndex","generateZIndex","onShow","focusOnShow","enableDocumentSettings","disableDocumentSettings","bindGlobalListeners","blockScroll","maximizable","unbindGlobalListeners","hasBlockScroll","primeDialogParams","some","param","bindDocumentDragListener","bindDocumentResizeListeners","closeOnEscape","bindDocumentKeyDownListener","unbindDocumentDragListener","unbindDocumentResizeListeners","unbindDocumentKeyDownListener","documentDragListener","documentDragEndListener","window","addEventListener","removeEventListener","documentResizeListener","documentResizeEndListener","documentKeyDownListener","currentTarget","params","paramLength","length","dialogId","dialog","getElementById","which","stopImmediatePropagation","splice","focusableElements","getFocusableElements","focusedIndex","indexOf","shiftKey","newParam","filter","zIndex","String","prevProps","funcName","el","ariaCloseIconLabel","iconClassName","showHeader","closeIcon","renderCloseIcon","maximizeIcon","renderMaximizeIcon","icons","getJSXElement","header","headerEl","contentClassName","contentStyle","children","footer","footerElement","className","rtl","maskClassName","getPositionClass","renderHeader","content","renderContent","renderFooter","resizer","renderResizer","transitionTimeout","enter","exit","element","renderElement","appendTo","createPortal","defaultProps","propTypes","string","any","bool","func","isRequired","object","number"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { Ripple } from '../ripple/Ripple';\r\n\r\nexport class Dialog extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        header: null,\r\n        footer: null,\r\n        visible: false,\r\n        position: 'center',\r\n        draggable: true,\r\n        resizable: true,\r\n        modal: true,\r\n        onHide: null,\r\n        onShow: null,\r\n        contentStyle: null,\r\n        contentClassName: null,\r\n        closeOnEscape: true,\r\n        dismissableMask: false,\r\n        rtl: false,\r\n        closable: true,\r\n        style: null,\r\n        className: null,\r\n        maskClassName: null,\r\n        showHeader: true,\r\n        appendTo: null,\r\n        baseZIndex: 0,\r\n        maximizable: false,\r\n        blockScroll: false,\r\n        icons: null,\r\n        ariaCloseIconLabel: 'Close',\r\n        focusOnShow: true,\r\n        minX: 0,\r\n        minY: 0,\r\n        keepInViewport: true,\r\n        maximized: false,\r\n        onMaximize: null,\r\n        onDragStart: null,\r\n        onDrag: null,\r\n        onDragEnd: null,\r\n        onResizeStart: null,\r\n        onResize: null,\r\n        onResizeEnd: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        header: PropTypes.any,\r\n        footer: PropTypes.any,\r\n        visible: PropTypes.bool,\r\n        position: PropTypes.string,\r\n        draggable: PropTypes.bool,\r\n        resizable: PropTypes.bool,\r\n        modal: PropTypes.bool,\r\n        onHide: PropTypes.func.isRequired,\r\n        onShow: PropTypes.func,\r\n        contentStyle: PropTypes.object,\r\n        contentClassName: PropTypes.string,\r\n        closeOnEscape: PropTypes.bool,\r\n        dismissableMask: PropTypes.bool,\r\n        rtl: PropTypes.bool,\r\n        closable: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        maskClassName: PropTypes.string,\r\n        showHeader: PropTypes.bool,\r\n        appendTo: PropTypes.object,\r\n        baseZIndex: PropTypes.number,\r\n        maximizable: PropTypes.bool,\r\n        blockScroll: PropTypes.bool,\r\n        icons: PropTypes.any,\r\n        ariaCloseIconLabel: PropTypes.string,\r\n        focusOnShow: PropTypes.bool,\r\n        minX: PropTypes.number,\r\n        minY: PropTypes.number,\r\n        keepInViewport: PropTypes.bool,\r\n        maximized: PropTypes.bool,\r\n        onMaximize: PropTypes.func,\r\n        onDragStart: PropTypes.func,\r\n        onDrag: PropTypes.func,\r\n        onDragEnd: PropTypes.func,\r\n        onResizeStart: PropTypes.func,\r\n        onResize: PropTypes.func,\r\n        onResizeEnd: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            maskVisible: props.visible,\r\n            visible: false\r\n        };\r\n\r\n        if (!this.props.onMaximize) {\r\n            this.state.maximized = props.maximized;\r\n        }\r\n\r\n        this.onClose = this.onClose.bind(this);\r\n        this.toggleMaximize = this.toggleMaximize.bind(this);\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n        this.onResizeStart = this.onResizeStart.bind(this);\r\n        this.onMaskClick = this.onMaskClick.bind(this);\r\n        this.onEntered = this.onEntered.bind(this);\r\n        this.onExited = this.onExited.bind(this);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.dialogRef = React.createRef();\r\n    }\r\n\r\n    onClose(event) {\r\n        this.props.onHide();\r\n        event.preventDefault();\r\n    }\r\n\r\n    focus() {\r\n        let activeElement = document.activeElement;\r\n        let isActiveElementInDialog = activeElement && this.dialogRef && this.dialogRef.current.contains(activeElement);\r\n        if (!isActiveElementInDialog && this.props.closable) {\r\n            this.closeElement.focus();\r\n        }\r\n    }\r\n\r\n    onMaskClick(event) {\r\n        if (this.props.dismissableMask && this.props.modal && this.mask === event.target) {\r\n            this.onClose(event);\r\n        }\r\n    }\r\n\r\n    toggleMaximize(event) {\r\n        let maximized = !this.maximized;\r\n\r\n        if (this.props.onMaximize) {\r\n            this.props.onMaximize({\r\n                originalEvent: event,\r\n                maximized\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                maximized\r\n            }, this.changeScrollOnMaximizable);\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragStart(event) {\r\n        if (DomHandler.hasClass(event.target, 'p-dialog-header-icon') || DomHandler.hasClass(event.target.parentElement, 'p-dialog-header-icon')) {\r\n            return;\r\n        }\r\n\r\n        if (this.props.draggable) {\r\n            this.dragging = true;\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n\r\n            this.dialogEl.style.margin = '0';\r\n            DomHandler.addClass(document.body, 'p-unselectable-text');\r\n\r\n            if (this.props.onDragStart) {\r\n                this.props.onDragStart(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDrag(event) {\r\n        if (this.dragging) {\r\n            let width = DomHandler.getOuterWidth(this.dialogEl);\r\n            let height = DomHandler.getOuterHeight(this.dialogEl);\r\n            let deltaX = event.pageX - this.lastPageX;\r\n            let deltaY = event.pageY - this.lastPageY;\r\n            let offset = DomHandler.getOffset(this.dialogEl);\r\n            let leftPos = offset.left + deltaX;\r\n            let topPos = offset.top + deltaY;\r\n            let viewport = DomHandler.getViewport();\r\n\r\n            this.dialogEl.style.position = 'fixed';\r\n\r\n            if (this.props.keepInViewport) {\r\n                if (leftPos >= this.props.minX && (leftPos + width) < viewport.width) {\r\n                    this.lastPageX = event.pageX;\r\n                    this.dialogEl.style.left = leftPos + 'px';\r\n                }\r\n\r\n                if (topPos >= this.props.minY && (topPos + height) < viewport.height) {\r\n                    this.lastPageY = event.pageY;\r\n                    this.dialogEl.style.top = topPos + 'px';\r\n                }\r\n            }\r\n            else {\r\n                this.lastPageX = event.pageX;\r\n                this.dialogEl.style.left = leftPos + 'px';\r\n                this.lastPageY = event.pageY;\r\n                this.dialogEl.style.top = topPos + 'px';\r\n            }\r\n\r\n            if (this.props.onDrag) {\r\n                this.props.onDrag(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDragEnd(event) {\r\n        if (this.dragging) {\r\n            this.dragging = false;\r\n            DomHandler.removeClass(document.body, 'p-unselectable-text');\r\n\r\n            if (this.props.onDragEnd) {\r\n                this.props.onDragEnd(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onResizeStart(event) {\r\n        if (this.props.resizable) {\r\n            this.resizing = true;\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n            DomHandler.addClass(document.body, 'p-unselectable-text');\r\n\r\n            if (this.props.onResizeStart) {\r\n                this.props.onResizeStart(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onResize(event) {\r\n        if (this.resizing) {\r\n            let deltaX = event.pageX - this.lastPageX;\r\n            let deltaY = event.pageY - this.lastPageY;\r\n            let width = DomHandler.getOuterWidth(this.dialogEl);\r\n            let height = DomHandler.getOuterHeight(this.dialogEl);\r\n            let contentHeight = DomHandler.getOuterHeight(this.contentEl);\r\n            let newWidth = width + deltaX;\r\n            let newHeight = height + deltaY;\r\n            let minWidth = this.dialogEl.style.minWidth;\r\n            let minHeight = this.dialogEl.style.minHeight;\r\n            let offset = DomHandler.getOffset(this.dialogEl);\r\n            let viewport = DomHandler.getViewport();\r\n            let hasBeenDragged = !parseInt(this.dialogEl.style.top) || !parseInt(this.dialogEl.style.left);\r\n\r\n            if (hasBeenDragged) {\r\n                newWidth += deltaX;\r\n                newHeight += deltaY;\r\n            }\r\n\r\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\r\n                this.dialogEl.style.width = newWidth + 'px';\r\n            }\r\n\r\n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\r\n                this.contentEl.style.height = contentHeight + newHeight - height + 'px';\r\n                this.dialogEl.style.height = newHeight + 'px';\r\n            }\r\n\r\n            this.lastPageX = event.pageX;\r\n            this.lastPageY = event.pageY;\r\n\r\n            if (this.props.onResize) {\r\n                this.props.onResize(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onResizeEnd(event) {\r\n        if (this.resizing) {\r\n            this.resizing = false;\r\n            DomHandler.removeClass(document.body, 'p-unselectable-text');\r\n\r\n            if (this.props.onResizeEnd) {\r\n                this.props.onResizeEnd(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    resetPosition() {\r\n        this.dialogEl.style.position = '';\r\n        this.dialogEl.style.left = '';\r\n        this.dialogEl.style.top = '';\r\n        this.dialogEl.style.margin = '';\r\n    }\r\n\r\n    getPositionClass() {\r\n        const positions = ['center', 'left', 'right', 'top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right'];\r\n        const pos = positions.find(item => item === this.props.position || item.replace('-', '') === this.props.position);\r\n\r\n        return pos ? `p-dialog-${pos}` : '';\r\n    }\r\n\r\n    get zIndex() {\r\n        return this.props.baseZIndex + DomHandler.generateZIndex();\r\n    }\r\n\r\n    get maximized() {\r\n        return this.props.onMaximize ? this.props.maximized : this.state.maximized;\r\n    }\r\n\r\n    get dialogEl() {\r\n        return this.dialogRef.current;\r\n    }\r\n\r\n    onEntered() {\r\n        if (this.props.onShow) {\r\n            this.props.onShow();\r\n        }\r\n\r\n        if (this.props.focusOnShow) {\r\n            this.focus();\r\n        }\r\n\r\n        this.enableDocumentSettings();\r\n    }\r\n\r\n    onExited() {\r\n        this.dragging = false;\r\n        this.setState({ maskVisible: false });\r\n        this.disableDocumentSettings();\r\n    }\r\n\r\n    enableDocumentSettings() {\r\n        this.bindGlobalListeners();\r\n\r\n        if (this.props.blockScroll || (this.props.maximizable && this.maximized)) {\r\n            DomHandler.addClass(document.body, 'p-overflow-hidden');\r\n        }\r\n    }\r\n\r\n    disableDocumentSettings() {\r\n        this.unbindGlobalListeners();\r\n\r\n        if (this.props.modal) {\r\n            let hasBlockScroll = document.primeDialogParams && document.primeDialogParams.some(param => param.hasBlockScroll);\r\n            if (!hasBlockScroll) {\r\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n            }\r\n        }\r\n        else if (this.props.blockScroll || (this.props.maximizable && this.maximized)) {\r\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n        }\r\n    }\r\n\r\n    bindGlobalListeners() {\r\n        if (this.props.draggable) {\r\n            this.bindDocumentDragListener();\r\n        }\r\n\r\n        if (this.props.resizable) {\r\n            this.bindDocumentResizeListeners();\r\n        }\r\n\r\n        if (this.props.closeOnEscape && this.props.closable) {\r\n            this.bindDocumentKeyDownListener();\r\n        }\r\n    }\r\n\r\n    unbindGlobalListeners() {\r\n        this.unbindDocumentDragListener();\r\n        this.unbindDocumentResizeListeners();\r\n        this.unbindDocumentKeyDownListener();\r\n    }\r\n\r\n    bindDocumentDragListener() {\r\n        this.documentDragListener = this.onDrag.bind(this);\r\n        this.documentDragEndListener = this.onDragEnd.bind(this);\r\n        window.document.addEventListener('mousemove', this.documentDragListener);\r\n        window.document.addEventListener('mouseup', this.documentDragEndListener);\r\n    }\r\n\r\n    unbindDocumentDragListener() {\r\n        if (this.documentDragListener && this.documentDragEndListener) {\r\n            window.document.removeEventListener('mousemove', this.documentDragListener);\r\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\r\n            this.documentDragListener = null;\r\n            this.documentDragEndListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentResizeListeners() {\r\n        this.documentResizeListener = this.onResize.bind(this);\r\n        this.documentResizeEndListener = this.onResizeEnd.bind(this);\r\n        window.document.addEventListener('mousemove', this.documentResizeListener);\r\n        window.document.addEventListener('mouseup', this.documentResizeEndListener);\r\n    }\r\n\r\n    unbindDocumentResizeListeners() {\r\n        if (this.documentResizeListener && this.documentResizeEndListener) {\r\n            window.document.removeEventListener('mousemove', this.documentResizeListener);\r\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\r\n            this.documentResizeListener = null;\r\n            this.documentResizeEndListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentKeyDownListener() {\r\n        this.documentKeyDownListener = (event) => {\r\n            let currentTarget = event.currentTarget;\r\n\r\n            if (currentTarget && currentTarget.primeDialogParams) {\r\n                let params = currentTarget.primeDialogParams;\r\n                let paramLength = params.length;\r\n                let dialogId = params[paramLength - 1].id;\r\n\r\n                if (dialogId === this.id) {\r\n                    let dialog = document.getElementById(dialogId);\r\n\r\n                    if (event.which === 27) {\r\n                        this.onClose(event);\r\n                        event.stopImmediatePropagation();\r\n\r\n                        params.splice(paramLength - 1, 1);\r\n                    }\r\n                    else if (event.which === 9) {\r\n                        event.preventDefault();\r\n                        let focusableElements = DomHandler.getFocusableElements(dialog);\r\n                        if (focusableElements && focusableElements.length > 0) {\r\n                            if (!document.activeElement) {\r\n                                focusableElements[0].focus();\r\n                            }\r\n                            else {\r\n                                let focusedIndex = focusableElements.indexOf(document.activeElement);\r\n                                if (event.shiftKey) {\r\n                                    if (focusedIndex === -1 || focusedIndex === 0)\r\n                                        focusableElements[focusableElements.length - 1].focus();\r\n                                    else\r\n                                        focusableElements[focusedIndex - 1].focus();\r\n                                }\r\n                                else {\r\n                                    if (focusedIndex === -1 || focusedIndex === (focusableElements.length - 1))\r\n                                        focusableElements[0].focus();\r\n                                    else\r\n                                        focusableElements[focusedIndex + 1].focus();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        let newParam = { id: this.id, hasBlockScroll: this.props.blockScroll };\r\n        document.primeDialogParams = document.primeDialogParams ? [ ...document.primeDialogParams, newParam ] : [ newParam ];\r\n\r\n        document.addEventListener('keydown', this.documentKeyDownListener);\r\n    }\r\n\r\n    unbindDocumentKeyDownListener() {\r\n        if (this.documentKeyDownListener) {\r\n            document.removeEventListener('keydown', this.documentKeyDownListener);\r\n            document.primeDialogParams = document.primeDialogParams && document.primeDialogParams.filter(param => param.id !== this.id);\r\n            this.documentKeyDownListener = null;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.visible) {\r\n            this.setState({ visible: true }, () => {\r\n                this.mask.style.zIndex = String(this.zIndex);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.visible && !this.state.maskVisible) {\r\n            this.setState({ maskVisible: true }, () => {\r\n                this.mask.style.zIndex = String(this.zIndex);\r\n            });\r\n        }\r\n\r\n        if (this.props.visible !== this.state.visible && this.state.maskVisible) {\r\n            this.setState({\r\n                visible: this.props.visible\r\n            });\r\n        }\r\n\r\n        if (prevProps.maximized !== this.props.maximized && this.props.onMaximize) {\r\n            this.changeScrollOnMaximizable();\r\n        }\r\n    }\r\n\r\n    changeScrollOnMaximizable() {\r\n        if (!this.props.blockScroll) {\r\n            let funcName = this.maximized ? 'addClass' : 'removeClass';\r\n            DomHandler[funcName](document.body, 'p-overflow-hidden');\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disableDocumentSettings();\r\n    }\r\n\r\n    renderCloseIcon() {\r\n        if (this.props.closable) {\r\n            return (\r\n                <button ref={(el) => this.closeElement = el} type=\"button\" className=\"p-dialog-header-icon p-dialog-header-close p-link\" aria-label={this.props.ariaCloseIconLabel} onClick={this.onClose}>\r\n                    <span className=\"p-dialog-header-close-icon pi pi-times\"></span>\r\n                    <Ripple />\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderMaximizeIcon() {\r\n        const iconClassName = classNames('p-dialog-header-maximize-icon pi', {'pi-window-maximize': !this.maximized, 'pi-window-minimize': this.maximized});\r\n\r\n        if (this.props.maximizable) {\r\n            return (\r\n                <button type=\"button\" className=\"p-dialog-header-icon p-dialog-header-maximize p-link\" onClick={this.toggleMaximize}>\r\n                    <span className={iconClassName}></span>\r\n                    <Ripple />\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderHeader() {\r\n        if (this.props.showHeader) {\r\n            const closeIcon = this.renderCloseIcon();\r\n            const maximizeIcon = this.renderMaximizeIcon();\r\n            const icons = ObjectUtils.getJSXElement(this.props.icons, this.props);\r\n            const header = ObjectUtils.getJSXElement(this.props.header, this.props);\r\n\r\n            return (\r\n                <div ref={el => this.headerEl = el} className=\"p-dialog-header\" onMouseDown={this.onDragStart}>\r\n                    <span id={this.id + '_header'} className=\"p-dialog-title\">{header}</span>\r\n                    <div className=\"p-dialog-header-icons\">\r\n                        {icons}\r\n                        {maximizeIcon}\r\n                        {closeIcon}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderContent() {\r\n        let contentClassName = classNames('p-dialog-content', this.props.contentClassName)\r\n\r\n        return (\r\n            <div id={this.id + '_content'} ref={el => this.contentEl = el} className={contentClassName} style={this.props.contentStyle}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderFooter() {\r\n        const footer = ObjectUtils.getJSXElement(this.props.footer, this.props);\r\n\r\n        return footer && <div ref={el => this.footerElement = el} className=\"p-dialog-footer\">{footer}</div>\r\n    }\r\n\r\n    renderResizer() {\r\n        if (this.props.resizable) {\r\n            return <div className=\"p-resizable-handle\" style={{zIndex: 90}} onMouseDown={this.onResizeStart}></div>\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderElement() {\r\n        const className = classNames('p-dialog p-component', this.props.className, {\r\n            'p-dialog-rtl': this.props.rtl,\r\n            'p-dialog-maximized': this.maximized\r\n        });\r\n\r\n        const maskClassName = classNames('p-dialog-mask', {\r\n            'p-component-overlay': this.props.modal,\r\n            'p-dialog-visible': this.state.maskVisible,\r\n            'p-dialog-draggable': this.props.draggable,\r\n            'p-dialog-resizable': this.props.resizable,\r\n        }, this.props.maskClassName, this.getPositionClass());\r\n\r\n        const header = this.renderHeader();\r\n        const content = this.renderContent();\r\n        const footer = this.renderFooter();\r\n        const resizer = this.renderResizer();\r\n\r\n        let transitionTimeout = {\r\n            enter: this.props.position === 'center' ? 150 : 300,\r\n            exit: this.props.position === 'center' ? 150 : 300\r\n        };\r\n\r\n        return (\r\n            <div ref={(el) => this.mask = el} className={maskClassName} onClick={this.onMaskClick}>\r\n                <CSSTransition nodeRef={this.dialogRef} classNames=\"p-dialog\" timeout={transitionTimeout} in={this.state.visible} unmountOnExit\r\n                    onEntered={this.onEntered} onExited={this.onExited}>\r\n                    <div ref={this.dialogRef} id={this.id} className={className} style={this.props.style}\r\n                        role=\"dialog\" aria-labelledby={this.id + '_header'} aria-describedby={this.id + '_content'} aria-modal={this.props.modal}>\r\n                        {header}\r\n                        {content}\r\n                        {footer}\r\n                        {resizer}\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.maskVisible) {\r\n            const element = this.renderElement();\r\n\r\n            if (this.props.appendTo)\r\n                return ReactDOM.createPortal(element, this.props.appendTo);\r\n            else\r\n                return element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}