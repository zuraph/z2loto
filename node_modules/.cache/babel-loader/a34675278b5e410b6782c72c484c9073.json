{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\datatable\\\\DataTableColTogglerDemo.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from '../../components/datatable/DataTable';\nimport { Column } from '../../components/column/Column';\nimport ProductService from '../service/ProductService';\nimport { MultiSelect } from '../../components/multiselect/MultiSelect';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var DataTableColTogglerDemo = /*#__PURE__*/function (_Component) {\n  _inherits(DataTableColTogglerDemo, _Component);\n\n  var _super = _createSuper(DataTableColTogglerDemo);\n\n  function DataTableColTogglerDemo(props) {\n    var _this;\n\n    _classCallCheck(this, DataTableColTogglerDemo);\n\n    _this = _super.call(this, props);\n    _this.columns = [{\n      field: 'name',\n      header: 'Name'\n    }, {\n      field: 'category',\n      header: 'Category'\n    }, {\n      field: 'quantity',\n      header: 'Quantity'\n    }];\n    _this.state = {\n      selectedColumns: _this.columns,\n      products: []\n    };\n    _this.productService = new ProductService();\n    _this.onColumnToggle = _this.onColumnToggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataTableColTogglerDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.productService.getProductsSmall().then(function (data) {\n        return _this2.setState({\n          products: data\n        });\n      });\n    }\n  }, {\n    key: \"onColumnToggle\",\n    value: function onColumnToggle(event) {\n      var selectedColumns = event.value;\n      var orderedSelectedColumns = this.columns.filter(function (col) {\n        return selectedColumns.some(function (sCol) {\n          return sCol.field === col.field;\n        });\n      });\n      this.setState({\n        selectedColumns: orderedSelectedColumns\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MultiSelect, {\n        value: this.state.selectedColumns,\n        options: this.columns,\n        optionLabel: \"header\",\n        onChange: this.onColumnToggle,\n        style: {\n          width: '20em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }));\n      var columnComponents = this.state.selectedColumns.map(function (col) {\n        return /*#__PURE__*/React.createElement(Column, {\n          key: col.field,\n          field: col.field,\n          header: col.header,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"dataTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"DataTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 39\n        }\n      }, \"Column Toggler\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"MultiSelect component can be used to implement column toggler functionality.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.products,\n        header: header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"code\",\n        header: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }), columnComponents))), /*#__PURE__*/React.createElement(DataTableColTogglerDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DataTableColTogglerDemo;\n}(Component);\nexport var DataTableColTogglerDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(DataTableColTogglerDemoDoc, _Component2);\n\n  var _super2 = _createSuper(DataTableColTogglerDemoDoc);\n\n  function DataTableColTogglerDemoDoc(props) {\n    var _this4;\n\n    _classCallCheck(this, DataTableColTogglerDemoDoc);\n\n    _this4 = _super2.call(this, props);\n    _this4.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { MultiSelect } from 'primereact/multiselect';\\n\\nexport class DataTableColTogglerDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.columns = [\\n            {field: 'name', header: 'Name'},\\n            {field: 'category', header: 'Category'},\\n            {field: 'quantity', header: 'Quantity'}\\n        ];\\n\\n        this.state = {\\n            selectedColumns: this.columns,\\n            products: []\\n        }\\n\\n        this.productService = new ProductService();\\n        this.onColumnToggle = this.onColumnToggle.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    onColumnToggle(event) {\\n        let selectedColumns = event.value;\\n        let orderedSelectedColumns = this.columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\\n        this.setState({ selectedColumns: orderedSelectedColumns });\\n    }\\n\\n    render() {\\n        const header = (\\n            <div style={{ textAlign:'left' }}>\\n                <MultiSelect value={this.state.selectedColumns} options={this.columns} optionLabel=\\\"header\\\" onChange={this.onColumnToggle} style={{width:'20em'}}/>\\n            </div>\\n        );\\n\\n        const columnComponents = this.state.selectedColumns.map(col=> {\\n            return <Column key={col.field} field={col.field} header={col.header} />;\\n        });\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <DataTable value={this.state.products} header={header}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" />\\n                        {columnComponents}\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { MultiSelect } from 'primereact/multiselect';\\n\\nconst DataTableColTogglerDemo = () => {\\n    const columns = [\\n        {field: 'name', header: 'Name'},\\n        {field: 'category', header: 'Category'},\\n        {field: 'quantity', header: 'Quantity'}\\n    ];\\n\\n    const [selectedColumns, setSelectedColumns] = useState(columns);\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onColumnToggle = (event) => {\\n        let selectedColumns = event.value;\\n        let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\\n        setSelectedColumns(orderedSelectedColumns);\\n    }\\n\\n    const header = (\\n        <div style={{ textAlign:'left' }}>\\n            <MultiSelect value={selectedColumns} options={columns} optionLabel=\\\"header\\\" onChange={onColumnToggle} style={{width:'20em'}}/>\\n        </div>\\n    );\\n\\n    const columnComponents = selectedColumns.map(col=> {\\n        return <Column key={col.field} field={col.field} header={col.header} />;\\n    });\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} header={header}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" />\\n                    {columnComponents}\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { MultiSelect } from 'primereact/multiselect';\\n\\nconst DataTableColTogglerDemo = () => {\\n    const columns = [\\n        {field: 'name', header: 'Name'},\\n        {field: 'category', header: 'Category'},\\n        {field: 'quantity', header: 'Quantity'}\\n    ];\\n\\n    const [selectedColumns, setSelectedColumns] = useState(columns);\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onColumnToggle = (event) => {\\n        let selectedColumns = event.value;\\n        let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\\n        setSelectedColumns(orderedSelectedColumns);\\n    }\\n\\n    const header = (\\n        <div style={{ textAlign:'left' }}>\\n            <MultiSelect value={selectedColumns} options={columns} optionLabel=\\\"header\\\" onChange={onColumnToggle} style={{width:'20em'}}/>\\n        </div>\\n    );\\n\\n    const columnComponents = selectedColumns.map(col=> {\\n        return <Column key={col.field} field={col.field} header={col.header} />;\\n    });\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} header={header}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" />\\n                    {columnComponents}\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this4;\n  }\n\n  _createClass(DataTableColTogglerDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'DataTableColTogglerDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products-small'\n      })));\n    }\n  }]);\n\n  return DataTableColTogglerDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datatable/DataTableColTogglerDemo.js"],"names":["React","Component","DataTable","Column","ProductService","MultiSelect","TabView","useLiveEditorTabs","AppInlineHeader","DataTableColTogglerDemo","props","columns","field","header","state","selectedColumns","products","productService","onColumnToggle","bind","getProductsSmall","then","data","setState","event","value","orderedSelectedColumns","filter","col","some","sCol","textAlign","width","columnComponents","map","DataTableColTogglerDemoDoc","sources","tabName","content","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { MultiSelect } from '../../components/multiselect/MultiSelect';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableColTogglerDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {field: 'name', header: 'Name'},\r\n            {field: 'category', header: 'Category'},\r\n            {field: 'quantity', header: 'Quantity'}\r\n        ];\r\n\r\n        this.state = {\r\n            selectedColumns: this.columns,\r\n            products: []\r\n        }\r\n\r\n        this.productService = new ProductService();\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = this.columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\r\n        this.setState({ selectedColumns: orderedSelectedColumns });\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div style={{ textAlign:'left' }}>\r\n                <MultiSelect value={this.state.selectedColumns} options={this.columns} optionLabel=\"header\" onChange={this.onColumnToggle} style={{width:'20em'}}/>\r\n            </div>\r\n        );\r\n\r\n        const columnComponents = this.state.selectedColumns.map(col=> {\r\n            return <Column key={col.field} field={col.field} header={col.header} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Column Toggler</span></h1>\r\n                        <p>MultiSelect component can be used to implement column toggler functionality.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <DataTable value={this.state.products} header={header}>\r\n                            <Column field=\"code\" header=\"Code\" />\r\n                            {columnComponents}\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableColTogglerDemoDoc></DataTableColTogglerDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableColTogglerDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\n\r\nexport class DataTableColTogglerDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {field: 'name', header: 'Name'},\r\n            {field: 'category', header: 'Category'},\r\n            {field: 'quantity', header: 'Quantity'}\r\n        ];\r\n\r\n        this.state = {\r\n            selectedColumns: this.columns,\r\n            products: []\r\n        }\r\n\r\n        this.productService = new ProductService();\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = this.columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\r\n        this.setState({ selectedColumns: orderedSelectedColumns });\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div style={{ textAlign:'left' }}>\r\n                <MultiSelect value={this.state.selectedColumns} options={this.columns} optionLabel=\"header\" onChange={this.onColumnToggle} style={{width:'20em'}}/>\r\n            </div>\r\n        );\r\n\r\n        const columnComponents = this.state.selectedColumns.map(col=> {\r\n            return <Column key={col.field} field={col.field} header={col.header} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={this.state.products} header={header}>\r\n                        <Column field=\"code\" header=\"Code\" />\r\n                        {columnComponents}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\n\r\nconst DataTableColTogglerDemo = () => {\r\n    const columns = [\r\n        {field: 'name', header: 'Name'},\r\n        {field: 'category', header: 'Category'},\r\n        {field: 'quantity', header: 'Quantity'}\r\n    ];\r\n\r\n    const [selectedColumns, setSelectedColumns] = useState(columns);\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onColumnToggle = (event) => {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\r\n        setSelectedColumns(orderedSelectedColumns);\r\n    }\r\n\r\n    const header = (\r\n        <div style={{ textAlign:'left' }}>\r\n            <MultiSelect value={selectedColumns} options={columns} optionLabel=\"header\" onChange={onColumnToggle} style={{width:'20em'}}/>\r\n        </div>\r\n    );\r\n\r\n    const columnComponents = selectedColumns.map(col=> {\r\n        return <Column key={col.field} field={col.field} header={col.header} />;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable value={products} header={header}>\r\n                    <Column field=\"code\" header=\"Code\" />\r\n                    {columnComponents}\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\n\r\nconst DataTableColTogglerDemo = () => {\r\n    const columns = [\r\n        {field: 'name', header: 'Name'},\r\n        {field: 'category', header: 'Category'},\r\n        {field: 'quantity', header: 'Quantity'}\r\n    ];\r\n\r\n    const [selectedColumns, setSelectedColumns] = useState(columns);\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onColumnToggle = (event) => {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\r\n        setSelectedColumns(orderedSelectedColumns);\r\n    }\r\n\r\n    const header = (\r\n        <div style={{ textAlign:'left' }}>\r\n            <MultiSelect value={selectedColumns} options={columns} optionLabel=\"header\" onChange={onColumnToggle} style={{width:'20em'}}/>\r\n        </div>\r\n    );\r\n\r\n    const columnComponents = selectedColumns.map(col=> {\r\n        return <Column key={col.field} field={col.field} header={col.header} />;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable value={products} header={header}>\r\n                    <Column field=\"code\" header=\"Code\" />\r\n                    {columnComponents}\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableColTogglerDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}