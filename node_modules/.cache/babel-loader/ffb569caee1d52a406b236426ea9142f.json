{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nvar events = {};\n\nvar EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(name, listener) {\n      if (!events[name]) {\n        events[name] = [];\n      }\n\n      events[name].push(listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(name, listenerToRemove) {\n      if (!events[name]) {\n        throw new Error(\"Can't remove a listener. Event \\\"\".concat(name, \"\\\" doesn't exits.\"));\n      }\n\n      var filterListeners = function filterListeners(listener) {\n        return listener !== listenerToRemove;\n      };\n\n      events[name] = events[name].filter(filterListeners);\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(name, data) {\n      if (!events[name]) {\n        throw new Error(\"Can't emit an event. Event \\\"\".concat(name, \"\\\" doesn't exits.\"));\n      }\n\n      var fireCallbacks = function fireCallbacks(callback) {\n        callback(data);\n      };\n\n      events[name].forEach(fireCallbacks);\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nexport { EventEmitter as default };","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/core/utils/eventEmitter.js"],"names":["events","EventEmitter","name","listener","push","listenerToRemove","Error","filterListeners","filter","data","fireCallbacks","callback","forEach"],"mappings":";;AAAA,IAAIA,MAAM,GAAG,EAAb;;IACqBC,Y;;;;;;;WACjB,YAAGC,IAAH,EAASC,QAAT,EAAmB;AACf,UAAI,CAACH,MAAM,CAACE,IAAD,CAAX,EAAmB;AACfF,QAAAA,MAAM,CAACE,IAAD,CAAN,GAAe,EAAf;AACH;;AACDF,MAAAA,MAAM,CAACE,IAAD,CAAN,CAAaE,IAAb,CAAkBD,QAAlB;AACH;;;WAED,wBAAeD,IAAf,EAAqBG,gBAArB,EAAuC;AACnC,UAAI,CAACL,MAAM,CAACE,IAAD,CAAX,EAAmB;AACf,cAAM,IAAII,KAAJ,4CAA6CJ,IAA7C,uBAAN;AACH;;AAED,UAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,QAAD;AAAA,eAAcA,QAAQ,KAAKE,gBAA3B;AAAA,OAAxB;;AAEAL,MAAAA,MAAM,CAACE,IAAD,CAAN,GAAeF,MAAM,CAACE,IAAD,CAAN,CAAaM,MAAb,CAAoBD,eAApB,CAAf;AACH;;;WAED,cAAKL,IAAL,EAAWO,IAAX,EAAiB;AACb,UAAI,CAACT,MAAM,CAACE,IAAD,CAAX,EAAmB;AACf,cAAM,IAAII,KAAJ,wCAAyCJ,IAAzC,uBAAN;AACH;;AAED,UAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AAChCA,QAAAA,QAAQ,CAACF,IAAD,CAAR;AACH,OAFD;;AAIAT,MAAAA,MAAM,CAACE,IAAD,CAAN,CAAaU,OAAb,CAAqBF,aAArB;AACH;;;;;;SA5BgBT,Y","sourcesContent":["var events = {};\r\nexport default class EventEmitter {\r\n    on(name, listener) {\r\n        if (!events[name]) {\r\n            events[name] = [];\r\n        }\r\n        events[name].push(listener);\r\n    }\r\n\r\n    removeListener(name, listenerToRemove) {\r\n        if (!events[name]) {\r\n            throw new Error(`Can't remove a listener. Event \"${name}\" doesn't exits.`);\r\n        }\r\n\r\n        const filterListeners = (listener) => listener !== listenerToRemove;\r\n\r\n        events[name] = events[name].filter(filterListeners);\r\n    }\r\n\r\n    emit(name, data) {\r\n        if (!events[name]) {\r\n            throw new Error(`Can't emit an event. Event \"${name}\" doesn't exits.`);\r\n        }\r\n\r\n        const fireCallbacks = (callback) => {\r\n            callback(data);\r\n        };\r\n\r\n        events[name].forEach(fireCallbacks);\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}