{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\AppMain.js\";\n\nimport React, { useEffect, useState, Suspense, useRef } from \"react\";\nimport App from \"./App\";\nimport Login from \"./views/login/login\";\nimport { useUser } from \"./core/hooks/useUser\";\nimport { Actions, EventEmitter } from \"./core\";\nimport { useDispatch } from \"react-redux\";\nimport { Toast } from \"./components/toast/Toast\";\n\nvar AppMain = function AppMain() {\n  var _useUser = useUser(),\n      User = _useUser.User;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loader = _useState2[0],\n      setLoader = _useState2[1];\n\n  var eventEmitter = new EventEmitter();\n  var toast = useRef(null);\n  useEffect(function () {\n    if (toast) {\n      eventEmitter.on(\"httpError\", function (e) {\n        console.log(e);\n        toast.current.show(e);\n      });\n      ping().then(function (r) {\n        setLoader(false);\n      });\n    }\n\n    return function () {\n      eventEmitter.removeListener(\"httpError\", function () {\n        return console.log(\"removeListener\");\n      });\n    };\n  }, []);\n\n  var ping = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(Actions.User.ping());\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function ping() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var renderView = function renderView() {\n    return User.isLogged ? /*#__PURE__*/React.createElement(App, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 32\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 41\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toast, {\n    ref: toast,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), loader ? null : renderView());\n};\n\nexport default AppMain;","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/AppMain.js"],"names":["React","useEffect","useState","Suspense","useRef","App","Login","useUser","Actions","EventEmitter","useDispatch","Toast","AppMain","User","dispatch","loader","setLoader","eventEmitter","toast","on","e","console","log","current","show","ping","then","r","removeListener","renderView","isLogged"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,EAA8CC,MAA9C,QAA2D,OAA3D;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,SAAQC,OAAR,EAAiBC,YAAjB,QAAoC,QAApC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,KAAR,QAAoB,0BAApB;;AAEA,IAAMC,OAAO,GAAI,SAAXA,OAAW,GAAM;AACnB,iBAAeL,OAAO,EAAtB;AAAA,MAAOM,IAAP,YAAOA,IAAP;;AACA,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,kBAAyBR,QAAQ,CAAC,IAAD,CAAjC;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAcC,SAAd;;AACA,MAAMC,YAAY,GAAG,IAAIR,YAAJ,EAArB;AACA,MAAMS,KAAK,GAAGd,MAAM,CAAC,IAAD,CAApB;AACAH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGiB,KAAH,EAAS;AAELD,MAAAA,YAAY,CAACE,EAAb,CAAgB,WAAhB,EAA4B,UAAAC,CAAC,EAAE;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAF,QAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBJ,CAAnB;AACH,OAHD;AAIAK,MAAAA,IAAI,GAAGC,IAAP,CAAY,UAAAC,CAAC,EAAI;AACbX,QAAAA,SAAS,CAAC,KAAD,CAAT;AACH,OAFD;AAGH;;AACD,WAAO,YAAI;AACPC,MAAAA,YAAY,CAACW,cAAb,CAA4B,WAA5B,EAAwC;AAAA,eAAIP,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAJ;AAAA,OAAxC;AACH,KAFD;AAGH,GAdQ,EAcN,EAdM,CAAT;;AAiBA,MAAMG,IAAI;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBX,QAAQ,CAACN,OAAO,CAACK,IAAR,CAAaY,IAAb,EAAD,CAA1B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJA,IAAI;AAAA;AAAA;AAAA,KAAV;;AAEA,MAAMI,UAAU,GAAC,SAAXA,UAAW,GAAK;AAClB,WAAOhB,IAAI,CAACiB,QAAL,gBAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,gBAAyB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC;AACH,GAFD;;AAIA,sBAAQ,uDACJ,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,EAEHH,MAAM,GAAE,IAAF,GAAQc,UAAU,EAFrB,CAAR;AAKH,CAlCD;;AAmCA,eAAejB,OAAf","sourcesContent":["import React, {useEffect, useState, Suspense, useRef} from \"react\";\r\nimport App from \"./App\";\r\nimport Login from \"./views/login/login\";\r\nimport {useUser} from \"./core/hooks/useUser\";\r\nimport {Actions, EventEmitter} from \"./core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Toast} from \"./components/toast/Toast\";\r\n\r\nconst AppMain =  () => {\r\n    const {User} = useUser();\r\n    const dispatch = useDispatch();\r\n    const [loader,setLoader]=useState(true)\r\n    const eventEmitter = new EventEmitter();\r\n    const toast = useRef(null);\r\n    useEffect(() => {\r\n        if(toast){\r\n\r\n            eventEmitter.on(\"httpError\",e=>{\r\n                console.log(e)\r\n                toast.current.show(e)\r\n            })\r\n            ping().then(r => {\r\n                setLoader(false)\r\n            })\r\n        }\r\n        return ()=>{\r\n            eventEmitter.removeListener(\"httpError\",()=>console.log(\"removeListener\"))\r\n        }\r\n    }, [])\r\n\r\n\r\n    const ping = async () => await dispatch(Actions.User.ping())\r\n\r\n    const renderView=()=> {\r\n        return User.isLogged ? <App/> : <Login/>;\r\n    }\r\n\r\n    return  <>\r\n        <Toast ref={toast} />\r\n        {loader? null: renderView()}\r\n    </>\r\n\r\n}\r\nexport default AppMain;\r\n"]},"metadata":{},"sourceType":"module"}