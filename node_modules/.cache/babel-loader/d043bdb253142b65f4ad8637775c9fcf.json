{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\selectbutton\\\\SelectButton.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { SelectButtonItem } from './SelectButtonItem';\nimport { tip } from '../tooltip/Tooltip';\nexport var SelectButton = /*#__PURE__*/function (_Component) {\n  _inherits(SelectButton, _Component);\n\n  var _super = _createSuper(SelectButton);\n\n  function SelectButton(props) {\n    var _this;\n\n    _classCallCheck(this, SelectButton);\n\n    _this = _super.call(this, props);\n    _this.onOptionClick = _this.onOptionClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SelectButton, [{\n    key: \"onOptionClick\",\n    value: function onOptionClick(event) {\n      var _this2 = this;\n\n      if (this.props.disabled || this.isOptionDisabled(event.option)) {\n        return;\n      }\n\n      var selected = this.isSelected(event.option);\n      var optionValue = this.getOptionValue(event.option);\n      var newValue;\n\n      if (this.props.multiple) {\n        var currentValue = this.props.value ? _toConsumableArray(this.props.value) : [];\n        if (selected) newValue = currentValue.filter(function (val) {\n          return !ObjectUtils.equals(val, optionValue, _this2.props.dataKey);\n        });else newValue = [].concat(_toConsumableArray(currentValue), [optionValue]);\n      } else {\n        if (selected) newValue = null;else newValue = optionValue;\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange({\n          originalEvent: event.originalEvent,\n          value: newValue,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.props.id,\n            value: newValue\n          }\n        });\n      }\n    }\n  }, {\n    key: \"getOptionLabel\",\n    value: function getOptionLabel(option) {\n      return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : option['label'] !== undefined ? option['label'] : option;\n    }\n  }, {\n    key: \"getOptionValue\",\n    value: function getOptionValue(option) {\n      return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : option['value'] !== undefined ? option['value'] : option;\n    }\n  }, {\n    key: \"isOptionDisabled\",\n    value: function isOptionDisabled(option) {\n      return this.props.optionDisabled ? ObjectUtils.resolveFieldData(option, this.props.optionDisabled) : !!option['disabled'];\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(option) {\n      var selected = false;\n      var optionValue = this.getOptionValue(option);\n\n      if (this.props.multiple) {\n        if (this.props.value && this.props.value.length) {\n          var _iterator = _createForOfIteratorHelper(this.props.value),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var val = _step.value;\n\n              if (ObjectUtils.equals(val, optionValue, this.props.dataKey)) {\n                selected = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      } else {\n        selected = ObjectUtils.equals(this.props.value, optionValue, this.props.dataKey);\n      }\n\n      return selected;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\n        if (this.tooltip) this.tooltip.update(_objectSpread({\n          content: this.props.tooltip\n        }, this.props.tooltipOptions || {}));else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = tip({\n        target: this.element,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this3 = this;\n\n      if (this.props.options && this.props.options.length) {\n        return this.props.options.map(function (option, index) {\n          var isDisabled = _this3.props.disabled || _this3.isOptionDisabled(option);\n\n          var optionLabel = _this3.getOptionLabel(option);\n\n          var tabIndex = isDisabled ? null : 0;\n          return /*#__PURE__*/React.createElement(SelectButtonItem, {\n            key: \"\".concat(optionLabel, \"_\").concat(index),\n            label: optionLabel,\n            className: option.className,\n            option: option,\n            onClick: _this3.onOptionClick,\n            template: _this3.props.itemTemplate,\n            selected: _this3.isSelected(option),\n            tabIndex: tabIndex,\n            disabled: isDisabled,\n            ariaLabelledBy: _this3.props.ariaLabelledBy,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 24\n            }\n          });\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var className = classNames('p-selectbutton p-buttonset p-component', this.props.className);\n      var items = this.renderItems();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        ref: function ref(el) {\n          return _this4.element = el;\n        },\n        className: className,\n        style: this.props.style,\n        role: \"group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }\n      }, items);\n    }\n  }]);\n\n  return SelectButton;\n}(Component);\nSelectButton.defaultProps = {\n  id: null,\n  value: null,\n  options: null,\n  optionLabel: null,\n  optionValue: null,\n  optionDisabled: null,\n  tabIndex: null,\n  multiple: null,\n  disabled: null,\n  style: null,\n  className: null,\n  dataKey: null,\n  tooltip: null,\n  tooltipOptions: null,\n  ariaLabelledBy: null,\n  itemTemplate: null,\n  onChange: null\n};\nSelectButton.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.any,\n  options: PropTypes.array,\n  optionLabel: PropTypes.string,\n  optionValue: PropTypes.string,\n  optionDisabled: PropTypes.string,\n  tabIndex: PropTypes.number,\n  multiple: PropTypes.bool,\n  disabled: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  dataKey: PropTypes.string,\n  tooltip: PropTypes.string,\n  tooltipOptions: PropTypes.object,\n  ariaLabelledBy: PropTypes.string,\n  itemTemplate: PropTypes.func,\n  onChange: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/selectbutton/SelectButton.js"],"names":["React","Component","PropTypes","classNames","ObjectUtils","SelectButtonItem","tip","SelectButton","props","onOptionClick","bind","event","disabled","isOptionDisabled","option","selected","isSelected","optionValue","getOptionValue","newValue","multiple","currentValue","value","filter","val","equals","dataKey","onChange","originalEvent","stopPropagation","preventDefault","target","name","id","optionLabel","resolveFieldData","undefined","optionDisabled","length","tooltip","renderTooltip","prevProps","tooltipOptions","update","content","destroy","element","options","map","index","isDisabled","getOptionLabel","tabIndex","className","itemTemplate","ariaLabelledBy","items","renderItems","el","style","defaultProps","propTypes","string","any","array","number","bool","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { SelectButtonItem } from './SelectButtonItem';\r\nimport { tip } from '../tooltip/Tooltip';\r\n\r\nexport class SelectButton extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        options: null,\r\n        optionLabel: null,\r\n        optionValue: null,\r\n        optionDisabled: null,\r\n        tabIndex: null,\r\n        multiple: null,\r\n        disabled: null,\r\n        style: null,\r\n        className: null,\r\n        dataKey: null,\r\n        tooltip: null,\r\n        tooltipOptions: null,\r\n        ariaLabelledBy: null,\r\n        itemTemplate: null,\r\n        onChange: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.any,\r\n        options: PropTypes.array,\r\n        optionLabel: PropTypes.string,\r\n        optionValue: PropTypes.string,\r\n        optionDisabled: PropTypes.string,\r\n        tabIndex: PropTypes.number,\r\n        multiple: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        dataKey: PropTypes.string,\r\n        tooltip: PropTypes.string,\r\n        tooltipOptions: PropTypes.object,\r\n        ariaLabelledBy: PropTypes.string,\r\n        itemTemplate: PropTypes.func,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onOptionClick = this.onOptionClick.bind(this);\r\n    }\r\n\r\n    onOptionClick(event) {\r\n        if (this.props.disabled || this.isOptionDisabled(event.option)) {\r\n            return;\r\n        }\r\n\r\n        let selected = this.isSelected(event.option);\r\n        let optionValue = this.getOptionValue(event.option);\r\n        let newValue;\r\n\r\n        if (this.props.multiple) {\r\n            let currentValue = this.props.value ? [...this.props.value] : [];\r\n\r\n            if (selected)\r\n                newValue = currentValue.filter((val) => !ObjectUtils.equals(val, optionValue, this.props.dataKey));\r\n            else\r\n                newValue = [...currentValue, optionValue];\r\n        }\r\n        else {\r\n            if (selected)\r\n                newValue = null;\r\n            else\r\n                newValue = optionValue;\r\n        }\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange({\r\n                originalEvent: event.originalEvent,\r\n                value: newValue,\r\n                stopPropagation: () => { },\r\n                preventDefault: () => { },\r\n                target: {\r\n                    name: this.props.name,\r\n                    id: this.props.id,\r\n                    value: newValue,\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getOptionLabel(option) {\r\n        return this.props.optionLabel ? ObjectUtils.resolveFieldData(option, this.props.optionLabel) : (option['label'] !== undefined ? option['label'] : option);\r\n    }\r\n\r\n    getOptionValue(option) {\r\n        return this.props.optionValue ? ObjectUtils.resolveFieldData(option, this.props.optionValue) : (option['value'] !== undefined ? option['value'] : option);\r\n    }\r\n\r\n    isOptionDisabled(option) {\r\n        return this.props.optionDisabled ? ObjectUtils.resolveFieldData(option, this.props.optionDisabled) : !!option['disabled'];\r\n    }\r\n\r\n    isSelected(option) {\r\n        let selected = false;\r\n        let optionValue = this.getOptionValue(option);\r\n\r\n        if (this.props.multiple) {\r\n            if (this.props.value && this.props.value.length) {\r\n                for (let val of this.props.value) {\r\n                    if (ObjectUtils.equals(val, optionValue, this.props.dataKey)) {\r\n                        selected = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            selected = ObjectUtils.equals(this.props.value, optionValue, this.props.dataKey);\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.tooltip) {\r\n            this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.tooltip !== this.props.tooltip || prevProps.tooltipOptions !== this.props.tooltipOptions) {\r\n            if (this.tooltip)\r\n                this.tooltip.update({ content: this.props.tooltip, ...(this.props.tooltipOptions || {}) });\r\n            else\r\n                this.renderTooltip();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.tooltip) {\r\n            this.tooltip.destroy();\r\n            this.tooltip = null;\r\n        }\r\n    }\r\n\r\n    renderTooltip() {\r\n        this.tooltip = tip({\r\n            target: this.element,\r\n            content: this.props.tooltip,\r\n            options: this.props.tooltipOptions\r\n        });\r\n    }\r\n\r\n    renderItems() {\r\n        if (this.props.options && this.props.options.length) {\r\n            return this.props.options.map((option, index) => {\r\n                const isDisabled = this.props.disabled || this.isOptionDisabled(option);\r\n                const optionLabel = this.getOptionLabel(option);\r\n                const tabIndex = isDisabled ? null : 0;\r\n\r\n                return <SelectButtonItem key={`${optionLabel}_${index}`} label={optionLabel} className={option.className} option={option} onClick={this.onOptionClick} template={this.props.itemTemplate}\r\n                    selected={this.isSelected(option)} tabIndex={tabIndex} disabled={isDisabled} ariaLabelledBy={this.props.ariaLabelledBy} />;\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-selectbutton p-buttonset p-component', this.props.className);\r\n        let items = this.renderItems();\r\n\r\n        return (\r\n            <div id={this.props.id} ref={(el) => this.element = el} className={className} style={this.props.style} role=\"group\">\r\n                {items}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}