{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\galleria\\\\GalleriaAdvancedDemo.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { PhotoService } from '../service/PhotoService';\nimport { Button } from '../../components/button/Button';\nimport { Galleria } from '../../components/galleria/Galleria';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport './GalleriaDemo.scss';\nexport var GalleriaAdvancedDemo = /*#__PURE__*/function (_Component) {\n  _inherits(GalleriaAdvancedDemo, _Component);\n\n  var _super = _createSuper(GalleriaAdvancedDemo);\n\n  function GalleriaAdvancedDemo(props) {\n    var _this;\n\n    _classCallCheck(this, GalleriaAdvancedDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      images: null,\n      activeIndex: 0,\n      showThumbnails: false,\n      isAutoPlayActive: true,\n      isFullScreen: false\n    };\n    _this.responsiveOptions = [{\n      breakpoint: '1024px',\n      numVisible: 5\n    }, {\n      breakpoint: '960px',\n      numVisible: 4\n    }, {\n      breakpoint: '768px',\n      numVisible: 3\n    }, {\n      breakpoint: '560px',\n      numVisible: 1\n    }];\n    _this.galleriaService = new PhotoService();\n    _this.itemTemplate = _this.itemTemplate.bind(_assertThisInitialized(_this));\n    _this.thumbnailTemplate = _this.thumbnailTemplate.bind(_assertThisInitialized(_this));\n    _this.onThumbnailChange = _this.onThumbnailChange.bind(_assertThisInitialized(_this));\n    _this.onItemChange = _this.onItemChange.bind(_assertThisInitialized(_this));\n    _this.onFullScreenChange = _this.onFullScreenChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(GalleriaAdvancedDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.galleriaService.getImages().then(function (data) {\n        return _this2.setState({\n          images: data\n        });\n      });\n      this.bindDocumentListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.isAutoPlayActive !== this.galleria.isAutoPlayActive()) {\n        this.setState({\n          isAutoPlayActive: this.galleria.isAutoPlayActive()\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentListeners();\n    }\n  }, {\n    key: \"onThumbnailChange\",\n    value: function onThumbnailChange(event) {\n      this.setState({\n        activeIndex: event.index\n      });\n    }\n  }, {\n    key: \"onItemChange\",\n    value: function onItemChange(event) {\n      this.setState({\n        activeIndex: event.index\n      });\n    }\n  }, {\n    key: \"toggleFullScreen\",\n    value: function toggleFullScreen() {\n      if (this.state.isFullScreen) {\n        this.closeFullScreen();\n      } else {\n        this.openFullScreen();\n      }\n    }\n  }, {\n    key: \"onFullScreenChange\",\n    value: function onFullScreenChange() {\n      this.setState(function (prevState) {\n        return {\n          isFullScreen: !prevState.isFullScreen\n        };\n      });\n    }\n  }, {\n    key: \"openFullScreen\",\n    value: function openFullScreen() {\n      var elem = document.querySelector('.custom-galleria');\n\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.mozRequestFullScreen) {\n        /* Firefox */\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        /* Chrome, Safari & Opera */\n        elem.webkitRequestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        /* IE/Edge */\n        elem.msRequestFullscreen();\n      }\n    }\n  }, {\n    key: \"closeFullScreen\",\n    value: function closeFullScreen() {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    }\n  }, {\n    key: \"bindDocumentListeners\",\n    value: function bindDocumentListeners() {\n      document.addEventListener(\"fullscreenchange\", this.onFullScreenChange);\n      document.addEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\n      document.addEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\n      document.addEventListener(\"msfullscreenchange\", this.onFullScreenChange);\n    }\n  }, {\n    key: \"unbindDocumentListeners\",\n    value: function unbindDocumentListeners() {\n      document.removeEventListener(\"fullscreenchange\", this.onFullScreenChange);\n      document.removeEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\n      document.removeEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\n      document.removeEventListener(\"msfullscreenchange\", this.onFullScreenChange);\n    }\n  }, {\n    key: \"thumbnailTemplate\",\n    value: function thumbnailTemplate(item) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-grid p-nogutter p-justify-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.thumbnailImageSrc,\n        alt: item.alt,\n        style: {\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"itemTemplate\",\n    value: function itemTemplate(item) {\n      if (this.state.isFullScreen) {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: item.itemImageSrc,\n          alt: item.alt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: item.itemImageSrc,\n        alt: item.alt,\n        style: {\n          width: '100%',\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var _this3 = this;\n\n      var autoPlayClassName = classNames('pi', {\n        'pi-play': !this.state.isAutoPlayActive,\n        'pi-pause': this.state.isAutoPlayActive\n      });\n      var fullScreenClassName = classNames('pi', {\n        'pi-window-maximize': !this.state.isFullScreen,\n        'pi-window-minimize': this.state.isFullScreen\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-galleria-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-list\",\n        onClick: function onClick() {\n          return _this3.setState({\n            showThumbnails: !_this3.state.showThumbnails\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        icon: autoPlayClassName,\n        onClick: function onClick() {\n          if (!_this3.state.isAutoPlayActive) {\n            _this3.galleria.startSlideShow();\n\n            _this3.setState({\n              isAutoPlayActive: true\n            });\n          } else {\n            _this3.galleria.stopSlideShow();\n\n            _this3.setState({\n              isAutoPlayActive: false\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }), this.state.images && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      }, this.state.activeIndex + 1, \"/\", this.state.images.length), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }\n      }, this.state.images[this.state.activeIndex].title), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }, this.state.images[this.state.activeIndex].alt)), /*#__PURE__*/React.createElement(Button, {\n        icon: fullScreenClassName,\n        onClick: function onClick() {\n          return _this3.toggleFullScreen();\n        },\n        className: \"fullscreen-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var footer = this.renderFooter();\n      var galleriaClassName = classNames('custom-galleria', {\n        'fullscreen': this.state.isFullScreen\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"galleria\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, \"Galleria \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 38\n        }\n      }, \"Advanced\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }\n      }, \"Galleria can be extended further to implement complex requirements.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation galleria-demo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Galleria, {\n        ref: function ref(el) {\n          return _this4.galleria = el;\n        },\n        value: this.state.images,\n        activeIndex: this.state.activeIndex,\n        onItemChange: this.onItemChange,\n        showThumbnails: this.state.showThumbnails,\n        showItemNavigators: true,\n        showItemNavigatorsOnHover: true,\n        numVisible: 5,\n        circular: true,\n        autoPlay: true,\n        transitionInterval: 3000,\n        responsiveOptions: this.responsiveOptions,\n        item: this.itemTemplate,\n        thumbnail: this.thumbnailTemplate,\n        footer: footer,\n        style: {\n          maxWidth: '640px'\n        },\n        className: galleriaClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(GalleriaAdvancedDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return GalleriaAdvancedDemo;\n}(Component);\nexport var GalleriaAdvancedDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(GalleriaAdvancedDemoDoc, _Component2);\n\n  var _super2 = _createSuper(GalleriaAdvancedDemoDoc);\n\n  function GalleriaAdvancedDemoDoc() {\n    _classCallCheck(this, GalleriaAdvancedDemoDoc);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(GalleriaAdvancedDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Source\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 1\n        }\n      }, \"\\nimport React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport classNames from 'classnames';\\nimport { PhotoService } from '../service/PhotoService';\\nimport { Button } from 'primereact/button';\\nimport { Galleria } from 'primereact/galleria';\\nimport './GalleriaDemo.scss';\\n\\nexport class GalleriaAdvancedDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            images: null,\\n            activeIndex: 0,\\n            showThumbnails: false,\\n            isAutoPlayActive: true,\\n            isFullScreen: false\\n        };\\n\\n        this.responsiveOptions = [\\n            {\\n                breakpoint: '1024px',\\n                numVisible: 5\\n            },\\n            {\\n                breakpoint: '960px',\\n                numVisible: 4\\n            },\\n            {\\n                breakpoint: '768px',\\n                numVisible: 3\\n            },\\n            {\\n                breakpoint: '560px',\\n                numVisible: 1\\n            }\\n        ];\\n\\n        this.galleriaService = new PhotoService();\\n        this.itemTemplate = this.itemTemplate.bind(this);\\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\\n        this.onThumbnailChange = this.onThumbnailChange.bind(this);\\n        this.onItemChange = this.onItemChange.bind(this);\\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\\n        this.bindDocumentListeners();\\n    }\\n\\n    componentDidUpdate(prevProps, prevState) {\\n        if (prevState.isAutoPlayActive !== this.galleria.isAutoPlayActive()) {\\n            this.setState({\\n                isAutoPlayActive: this.galleria.isAutoPlayActive()\\n            });\\n        }\\n    }\\n\\n    componentWillUnmount() {\\n        this.unbindDocumentListeners();\\n    }\\n\\n    onThumbnailChange(event) {\\n        this.setState({ activeIndex: event.index });\\n    }\\n\\n    onItemChange(event) {\\n        this.setState({ activeIndex: event.index });\\n    }\\n\\n    toggleFullScreen() {\\n        if (this.state.isFullScreen) {\\n            this.closeFullScreen();\\n        }\\n        else {\\n            this.openFullScreen();\\n        }\\n    }\\n\\n    onFullScreenChange() {\\n        this.setState((prevState) => ({ isFullScreen: !prevState.isFullScreen }));\\n    }\\n\\n    openFullScreen() {\\n        let elem = document.querySelector('.custom-galleria');\\n        if (elem.requestFullscreen) {\\n            elem.requestFullscreen();\\n        }\\n        else if (elem.mozRequestFullScreen) { /* Firefox */\\n            elem.mozRequestFullScreen();\\n        }\\n        else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\\n            elem.webkitRequestFullscreen();\\n        }\\n        else if (elem.msRequestFullscreen) { /* IE/Edge */\\n            elem.msRequestFullscreen();\\n        }\\n    }\\n\\n    closeFullScreen() {\\n        if (document.exitFullscreen) {\\n            document.exitFullscreen();\\n        }\\n        else if (document.mozCancelFullScreen) {\\n            document.mozCancelFullScreen();\\n        }\\n        else if (document.webkitExitFullscreen) {\\n            document.webkitExitFullscreen();\\n        }\\n        else if (document.msExitFullscreen) {\\n            document.msExitFullscreen();\\n        }\\n    }\\n\\n    bindDocumentListeners() {\\n        document.addEventListener(\\\"fullscreenchange\\\", this.onFullScreenChange);\\n        document.addEventListener(\\\"mozfullscreenchange\\\", this.onFullScreenChange);\\n        document.addEventListener(\\\"webkitfullscreenchange\\\", this.onFullScreenChange);\\n        document.addEventListener(\\\"msfullscreenchange\\\", this.onFullScreenChange);\\n    }\\n\\n    unbindDocumentListeners() {\\n        document.removeEventListener(\\\"fullscreenchange\\\", this.onFullScreenChange);\\n        document.removeEventListener(\\\"mozfullscreenchange\\\", this.onFullScreenChange);\\n        document.removeEventListener(\\\"webkitfullscreenchange\\\", this.onFullScreenChange);\\n        document.removeEventListener(\\\"msfullscreenchange\\\", this.onFullScreenChange);\\n    }\\n\\n    thumbnailTemplate(item) {\\n        return (\\n            <div className=\\\"p-grid p-nogutter p-justify-center\\\">\\n                <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />\\n            </div>\\n        );\\n    }\\n\\n    itemTemplate(item) {\\n        if (this.state.isFullScreen) {\\n            return <img src={item.itemImageSrc} alt={item.alt} />\\n        }\\n\\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />\\n    }\\n\\n    renderFooter() {\\n        let autoPlayClassName = classNames('pi', {\\n            'pi-play': !this.state.isAutoPlayActive,\\n            'pi-pause': this.state.isAutoPlayActive\\n        });\\n\\n        let fullScreenClassName = classNames('pi', {\\n            'pi-window-maximize': !this.state.isFullScreen,\\n            'pi-window-minimize': this.state.isFullScreen\\n        });\\n\\n        return (\\n            <div className=\\\"custom-galleria-footer\\\">\\n                <Button icon=\\\"pi pi-list\\\" onClick={() => this.setState({ showThumbnails: !this.state.showThumbnails })} />\\n                <Button icon={autoPlayClassName} onClick={() => {\\n                    if (!this.state.isAutoPlayActive) {\\n                        this.galleria.startSlideShow();\\n                        this.setState({ isAutoPlayActive: true });\\n                    }\\n                    else {\\n                        this.galleria.stopSlideShow();\\n                        this.setState({ isAutoPlayActive: false });\\n                    }\\n                }} />\\n                {\\n                    this.state.images && (\\n                        <span className=\\\"title-container\\\">\\n                            <span>{this.state.activeIndex + 1}/{this.state.images.length}</span>\\n                            <span className=\\\"title\\\">{this.state.images[this.state.activeIndex].title}</span>\\n                            <span>{this.state.images[this.state.activeIndex].alt}</span>\\n                        </span>\\n                    )\\n                }\\n                <Button icon={fullScreenClassName} onClick={() => this.toggleFullScreen()} className=\\\"fullscreen-button\\\" />\\n            </div>\\n        );\\n    }\\n\\n    render() {\\n        const footer = this.renderFooter();\\n        const galleriaClassName = classNames('custom-galleria', {\\n            'fullscreen': this.state.isFullScreen\\n        });\\n\\n        return (\\n            <div className=\\\"galleria-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <Galleria ref={(el) => this.galleria = el} value={this.state.images} activeIndex={this.state.activeIndex} onItemChange={this.onItemChange}\\n                        showThumbnails={this.state.showThumbnails} showItemNavigators showItemNavigatorsOnHover\\n                        numVisible={5} circular autoPlay transitionInterval={3000} responsiveOptions={this.responsiveOptions}\\n                        item={this.itemTemplate} thumbnail={this.thumbnailTemplate} footer={footer}\\n                        style={{ maxWidth: '640px' }} className={galleriaClassName} />\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"scss\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 1\n        }\n      }, \"\\n.galleria-demo {\\n    .custom-galleria {\\n        &.fullscreen {\\n            display: flex;\\n            flex-direction: column;\\n\\n            .p-galleria-content {\\n                flex-grow: 1;\\n                justify-content: center;\\n            }\\n        }\\n\\n        .p-galleria-content {\\n            position: relative;\\n        }\\n\\n        .p-galleria-thumbnail-wrapper {\\n            position: absolute;\\n            bottom: 0;\\n            left: 0;\\n            width: 100%;\\n        }\\n\\n        .p-galleria-thumbnail-items-container {\\n            width: 100%;\\n        }\\n\\n        .custom-galleria-footer {\\n            display: flex;\\n            align-items: center;\\n            background-color: rgba(0, 0, 0, .9);\\n            color: #ffffff;\\n\\n            > button {\\n                background-color: transparent;\\n                color: #ffffff;\\n                border: 0 none;\\n                border-radius: 0;\\n                margin: .2rem 0;\\n\\n                &.fullscreen-button {\\n                    margin-left: auto;\\n                }\\n\\n                &:hover {\\n                    background-color: rgba(255, 255, 255, 0.1);\\n                }\\n            }\\n        }\\n\\n        .title-container {\\n            > span {\\n                font-size: .9rem;\\n                padding-left: .829rem;\\n\\n                &.title {\\n                    font-weight: bold;\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n\"))));\n    }\n  }]);\n\n  return GalleriaAdvancedDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/galleria/GalleriaAdvancedDemo.js"],"names":["React","Component","classNames","PhotoService","Button","Galleria","TabView","TabPanel","CodeHighlight","AppInlineHeader","GalleriaAdvancedDemo","props","state","images","activeIndex","showThumbnails","isAutoPlayActive","isFullScreen","responsiveOptions","breakpoint","numVisible","galleriaService","itemTemplate","bind","thumbnailTemplate","onThumbnailChange","onItemChange","onFullScreenChange","getImages","then","data","setState","bindDocumentListeners","prevProps","prevState","galleria","unbindDocumentListeners","event","index","closeFullScreen","openFullScreen","elem","document","querySelector","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","addEventListener","removeEventListener","item","thumbnailImageSrc","alt","display","itemImageSrc","width","autoPlayClassName","fullScreenClassName","startSlideShow","stopSlideShow","length","title","toggleFullScreen","footer","renderFooter","galleriaClassName","el","maxWidth","GalleriaAdvancedDemoDoc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { PhotoService } from '../service/PhotoService';\r\nimport { Button } from '../../components/button/Button';\r\nimport { Galleria } from '../../components/galleria/Galleria';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport './GalleriaDemo.scss';\r\n\r\nexport class GalleriaAdvancedDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            images: null,\r\n            activeIndex: 0,\r\n            showThumbnails: false,\r\n            isAutoPlayActive: true,\r\n            isFullScreen: false\r\n        };\r\n\r\n        this.responsiveOptions = [\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 5\r\n            },\r\n            {\r\n                breakpoint: '960px',\r\n                numVisible: 4\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 3\r\n            },\r\n            {\r\n                breakpoint: '560px',\r\n                numVisible: 1\r\n            }\r\n        ];\r\n\r\n        this.galleriaService = new PhotoService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\r\n        this.onThumbnailChange = this.onThumbnailChange.bind(this);\r\n        this.onItemChange = this.onItemChange.bind(this);\r\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\r\n        this.bindDocumentListeners();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.isAutoPlayActive !== this.galleria.isAutoPlayActive()) {\r\n            this.setState({\r\n                isAutoPlayActive: this.galleria.isAutoPlayActive()\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentListeners();\r\n    }\r\n\r\n    onThumbnailChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    onItemChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        if (this.state.isFullScreen) {\r\n            this.closeFullScreen();\r\n        }\r\n        else {\r\n            this.openFullScreen();\r\n        }\r\n    }\r\n\r\n    onFullScreenChange() {\r\n        this.setState((prevState) => ({ isFullScreen: !prevState.isFullScreen }));\r\n    }\r\n\r\n    openFullScreen() {\r\n        let elem = document.querySelector('.custom-galleria');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        }\r\n        else if (elem.mozRequestFullScreen) { /* Firefox */\r\n            elem.mozRequestFullScreen();\r\n        }\r\n        else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\r\n            elem.webkitRequestFullscreen();\r\n        }\r\n        else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n            elem.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    closeFullScreen() {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        }\r\n        else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        }\r\n        else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n        else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        }\r\n    }\r\n\r\n    bindDocumentListeners() {\r\n        document.addEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    unbindDocumentListeners() {\r\n        document.removeEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    thumbnailTemplate(item) {\r\n        return (\r\n            <div className=\"p-grid p-nogutter p-justify-center\">\r\n                <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    itemTemplate(item) {\r\n        if (this.state.isFullScreen) {\r\n            return <img src={item.itemImageSrc} alt={item.alt} />\r\n        }\r\n\r\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />\r\n    }\r\n\r\n    renderFooter() {\r\n        let autoPlayClassName = classNames('pi', {\r\n            'pi-play': !this.state.isAutoPlayActive,\r\n            'pi-pause': this.state.isAutoPlayActive\r\n        });\r\n\r\n        let fullScreenClassName = classNames('pi', {\r\n            'pi-window-maximize': !this.state.isFullScreen,\r\n            'pi-window-minimize': this.state.isFullScreen\r\n        });\r\n\r\n        return (\r\n            <div className=\"custom-galleria-footer\">\r\n                <Button icon=\"pi pi-list\" onClick={() => this.setState({ showThumbnails: !this.state.showThumbnails })} />\r\n                <Button icon={autoPlayClassName} onClick={() => {\r\n                    if (!this.state.isAutoPlayActive) {\r\n                        this.galleria.startSlideShow();\r\n                        this.setState({ isAutoPlayActive: true });\r\n                    }\r\n                    else {\r\n                        this.galleria.stopSlideShow();\r\n                        this.setState({ isAutoPlayActive: false });\r\n                    }\r\n                }} />\r\n                {\r\n                    this.state.images && (\r\n                        <span className=\"title-container\">\r\n                            <span>{this.state.activeIndex + 1}/{this.state.images.length}</span>\r\n                            <span className=\"title\">{this.state.images[this.state.activeIndex].title}</span>\r\n                            <span>{this.state.images[this.state.activeIndex].alt}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n                <Button icon={fullScreenClassName} onClick={() => this.toggleFullScreen()} className=\"fullscreen-button\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const footer = this.renderFooter();\r\n        const galleriaClassName = classNames('custom-galleria', {\r\n            'fullscreen': this.state.isFullScreen\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"galleria\">\r\n                        <h1>Galleria <span>Advanced</span></h1>\r\n                        <p>Galleria can be extended further to implement complex requirements.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation galleria-demo\">\r\n                    <div className=\"card\">\r\n                        <Galleria ref={(el) => this.galleria = el} value={this.state.images} activeIndex={this.state.activeIndex} onItemChange={this.onItemChange}\r\n                            showThumbnails={this.state.showThumbnails} showItemNavigators showItemNavigatorsOnHover\r\n                            numVisible={5} circular autoPlay transitionInterval={3000} responsiveOptions={this.responsiveOptions}\r\n                            item={this.itemTemplate} thumbnail={this.thumbnailTemplate} footer={footer}\r\n                            style={{ maxWidth: '640px' }} className={galleriaClassName} />\r\n                    </div>\r\n                </div>\r\n\r\n                <GalleriaAdvancedDemoDoc />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class GalleriaAdvancedDemoDoc extends Component {\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Source\">\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport { PhotoService } from '../service/PhotoService';\r\nimport { Button } from 'primereact/button';\r\nimport { Galleria } from 'primereact/galleria';\r\nimport './GalleriaDemo.scss';\r\n\r\nexport class GalleriaAdvancedDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            images: null,\r\n            activeIndex: 0,\r\n            showThumbnails: false,\r\n            isAutoPlayActive: true,\r\n            isFullScreen: false\r\n        };\r\n\r\n        this.responsiveOptions = [\r\n            {\r\n                breakpoint: '1024px',\r\n                numVisible: 5\r\n            },\r\n            {\r\n                breakpoint: '960px',\r\n                numVisible: 4\r\n            },\r\n            {\r\n                breakpoint: '768px',\r\n                numVisible: 3\r\n            },\r\n            {\r\n                breakpoint: '560px',\r\n                numVisible: 1\r\n            }\r\n        ];\r\n\r\n        this.galleriaService = new PhotoService();\r\n        this.itemTemplate = this.itemTemplate.bind(this);\r\n        this.thumbnailTemplate = this.thumbnailTemplate.bind(this);\r\n        this.onThumbnailChange = this.onThumbnailChange.bind(this);\r\n        this.onItemChange = this.onItemChange.bind(this);\r\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.galleriaService.getImages().then(data => this.setState({ images: data }));\r\n        this.bindDocumentListeners();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.isAutoPlayActive !== this.galleria.isAutoPlayActive()) {\r\n            this.setState({\r\n                isAutoPlayActive: this.galleria.isAutoPlayActive()\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentListeners();\r\n    }\r\n\r\n    onThumbnailChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    onItemChange(event) {\r\n        this.setState({ activeIndex: event.index });\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        if (this.state.isFullScreen) {\r\n            this.closeFullScreen();\r\n        }\r\n        else {\r\n            this.openFullScreen();\r\n        }\r\n    }\r\n\r\n    onFullScreenChange() {\r\n        this.setState((prevState) => ({ isFullScreen: !prevState.isFullScreen }));\r\n    }\r\n\r\n    openFullScreen() {\r\n        let elem = document.querySelector('.custom-galleria');\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        }\r\n        else if (elem.mozRequestFullScreen) { /* Firefox */\r\n            elem.mozRequestFullScreen();\r\n        }\r\n        else if (elem.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\r\n            elem.webkitRequestFullscreen();\r\n        }\r\n        else if (elem.msRequestFullscreen) { /* IE/Edge */\r\n            elem.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    closeFullScreen() {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        }\r\n        else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        }\r\n        else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n        else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        }\r\n    }\r\n\r\n    bindDocumentListeners() {\r\n        document.addEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.addEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    unbindDocumentListeners() {\r\n        document.removeEventListener(\"fullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"mozfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"webkitfullscreenchange\", this.onFullScreenChange);\r\n        document.removeEventListener(\"msfullscreenchange\", this.onFullScreenChange);\r\n    }\r\n\r\n    thumbnailTemplate(item) {\r\n        return (\r\n            <div className=\"p-grid p-nogutter p-justify-center\">\r\n                <img src={item.thumbnailImageSrc} alt={item.alt} style={{ display: 'block' }} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    itemTemplate(item) {\r\n        if (this.state.isFullScreen) {\r\n            return <img src={item.itemImageSrc} alt={item.alt} />\r\n        }\r\n\r\n        return <img src={item.itemImageSrc} alt={item.alt} style={{ width: '100%', display: 'block' }} />\r\n    }\r\n\r\n    renderFooter() {\r\n        let autoPlayClassName = classNames('pi', {\r\n            'pi-play': !this.state.isAutoPlayActive,\r\n            'pi-pause': this.state.isAutoPlayActive\r\n        });\r\n\r\n        let fullScreenClassName = classNames('pi', {\r\n            'pi-window-maximize': !this.state.isFullScreen,\r\n            'pi-window-minimize': this.state.isFullScreen\r\n        });\r\n\r\n        return (\r\n            <div className=\"custom-galleria-footer\">\r\n                <Button icon=\"pi pi-list\" onClick={() => this.setState({ showThumbnails: !this.state.showThumbnails })} />\r\n                <Button icon={autoPlayClassName} onClick={() => {\r\n                    if (!this.state.isAutoPlayActive) {\r\n                        this.galleria.startSlideShow();\r\n                        this.setState({ isAutoPlayActive: true });\r\n                    }\r\n                    else {\r\n                        this.galleria.stopSlideShow();\r\n                        this.setState({ isAutoPlayActive: false });\r\n                    }\r\n                }} />\r\n                {\r\n                    this.state.images && (\r\n                        <span className=\"title-container\">\r\n                            <span>{this.state.activeIndex + 1}/{this.state.images.length}</span>\r\n                            <span className=\"title\">{this.state.images[this.state.activeIndex].title}</span>\r\n                            <span>{this.state.images[this.state.activeIndex].alt}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n                <Button icon={fullScreenClassName} onClick={() => this.toggleFullScreen()} className=\"fullscreen-button\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const footer = this.renderFooter();\r\n        const galleriaClassName = classNames('custom-galleria', {\r\n            'fullscreen': this.state.isFullScreen\r\n        });\r\n\r\n        return (\r\n            <div className=\"galleria-demo\">\r\n                <div className=\"card\">\r\n                    <Galleria ref={(el) => this.galleria = el} value={this.state.images} activeIndex={this.state.activeIndex} onItemChange={this.onItemChange}\r\n                        showThumbnails={this.state.showThumbnails} showItemNavigators showItemNavigatorsOnHover\r\n                        numVisible={5} circular autoPlay transitionInterval={3000} responsiveOptions={this.responsiveOptions}\r\n                        item={this.itemTemplate} thumbnail={this.thumbnailTemplate} footer={footer}\r\n                        style={{ maxWidth: '640px' }} className={galleriaClassName} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n`}\r\n</CodeHighlight>\r\n<CodeHighlight lang=\"scss\">\r\n{`\r\n.galleria-demo {\r\n    .custom-galleria {\r\n        &.fullscreen {\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            .p-galleria-content {\r\n                flex-grow: 1;\r\n                justify-content: center;\r\n            }\r\n        }\r\n\r\n        .p-galleria-content {\r\n            position: relative;\r\n        }\r\n\r\n        .p-galleria-thumbnail-wrapper {\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 100%;\r\n        }\r\n\r\n        .p-galleria-thumbnail-items-container {\r\n            width: 100%;\r\n        }\r\n\r\n        .custom-galleria-footer {\r\n            display: flex;\r\n            align-items: center;\r\n            background-color: rgba(0, 0, 0, .9);\r\n            color: #ffffff;\r\n\r\n            > button {\r\n                background-color: transparent;\r\n                color: #ffffff;\r\n                border: 0 none;\r\n                border-radius: 0;\r\n                margin: .2rem 0;\r\n\r\n                &.fullscreen-button {\r\n                    margin-left: auto;\r\n                }\r\n\r\n                &:hover {\r\n                    background-color: rgba(255, 255, 255, 0.1);\r\n                }\r\n            }\r\n        }\r\n\r\n        .title-container {\r\n            > span {\r\n                font-size: .9rem;\r\n                padding-left: .829rem;\r\n\r\n                &.title {\r\n                    font-weight: bold;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n`}\r\n</CodeHighlight>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}