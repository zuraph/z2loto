{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\tieredmenu\\\\TieredMenu.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport DomHandler from '../utils/DomHandler';\nimport { TieredMenuSub } from './TieredMenuSub';\nimport { CSSTransition } from 'react-transition-group';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nexport var TieredMenu = /*#__PURE__*/function (_Component) {\n  _inherits(TieredMenu, _Component);\n\n  var _super = _createSuper(TieredMenu);\n\n  function TieredMenu(props) {\n    var _this;\n\n    _classCallCheck(this, TieredMenu);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: !props.popup\n    };\n    _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));\n    _this.onEntered = _this.onEntered.bind(_assertThisInitialized(_this));\n    _this.onExit = _this.onExit.bind(_assertThisInitialized(_this));\n    _this.onPanelClick = _this.onPanelClick.bind(_assertThisInitialized(_this));\n    _this.id = _this.props.id || UniqueComponentId();\n    _this.menuRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(TieredMenu, [{\n    key: \"onPanelClick\",\n    value: function onPanelClick(event) {\n      if (this.props.popup) {\n        OverlayEventBus.emit('overlay-click', {\n          originalEvent: event,\n          target: this.target\n        });\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (this.props.popup) {\n        if (this.state.visible) this.hide(event);else this.show(event);\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show(event) {\n      var _this2 = this;\n\n      this.target = event.currentTarget;\n      var currentEvent = event;\n      this.setState({\n        visible: true\n      }, function () {\n        if (_this2.props.onShow) {\n          _this2.props.onShow(currentEvent);\n        }\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(event) {\n      var _this3 = this;\n\n      var currentEvent = event;\n      this.setState({\n        visible: false\n      }, function () {\n        if (_this3.props.onHide) {\n          _this3.props.onHide(currentEvent);\n        }\n      });\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      if (this.props.autoZIndex) {\n        this.menuRef.current.style.zIndex = String(this.props.baseZIndex + DomHandler.generateZIndex());\n      }\n\n      DomHandler.absolutePosition(this.menuRef.current, this.target);\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered() {\n      this.bindDocumentListeners();\n      this.bindScrollListener();\n    }\n  }, {\n    key: \"onExit\",\n    value: function onExit() {\n      this.target = null;\n      this.unbindDocumentListeners();\n      this.unbindScrollListener();\n    }\n  }, {\n    key: \"bindDocumentListeners\",\n    value: function bindDocumentListeners() {\n      this.bindDocumentClickListener();\n      this.bindDocumentResizeListener();\n    }\n  }, {\n    key: \"unbindDocumentListeners\",\n    value: function unbindDocumentListeners() {\n      this.unbindDocumentClickListener();\n      this.unbindDocumentResizeListener();\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this4 = this;\n\n      if (!this.documentClickListener) {\n        this.documentClickListener = function (event) {\n          if (_this4.props.popup && _this4.state.visible && _this4.menuRef.current && !_this4.menuRef.current.contains(event.target)) {\n            _this4.hide(event);\n          }\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      var _this5 = this;\n\n      if (!this.documentResizeListener) {\n        this.documentResizeListener = function (event) {\n          if (_this5.state.visible) {\n            _this5.hide(event);\n          }\n        };\n\n        window.addEventListener('resize', this.documentResizeListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this6 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, function (event) {\n          if (_this6.state.visible) {\n            _this6.hide(event);\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentListeners();\n\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement() {\n      var className = classNames('p-tieredmenu p-component', {\n        'p-tieredmenu-overlay': this.props.popup\n      }, this.props.className);\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.menuRef,\n        classNames: \"p-connected-overlay\",\n        in: this.state.visible,\n        timeout: {\n          enter: 120,\n          exit: 100\n        },\n        unmountOnExit: true,\n        onEnter: this.onEnter,\n        onEntered: this.onEntered,\n        onExit: this.onExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.menuRef,\n        id: this.id,\n        className: className,\n        style: this.props.style,\n        onClick: this.onPanelClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TieredMenuSub, {\n        model: this.props.model,\n        root: true,\n        popup: this.props.popup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderElement();\n      if (this.props.appendTo) return ReactDOM.createPortal(element, this.props.appendTo);else return element;\n    }\n  }]);\n\n  return TieredMenu;\n}(Component);\nTieredMenu.defaultProps = {\n  id: null,\n  model: null,\n  popup: false,\n  style: null,\n  className: null,\n  autoZIndex: true,\n  baseZIndex: 0,\n  appendTo: null,\n  onShow: null,\n  onHide: null\n};\nTieredMenu.propTypes = {\n  id: PropTypes.string,\n  model: PropTypes.array,\n  popup: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  autoZIndex: PropTypes.bool,\n  baseZIndex: PropTypes.number,\n  appendTo: PropTypes.any,\n  onShow: PropTypes.func,\n  onHide: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/tieredmenu/TieredMenu.js"],"names":["React","Component","ReactDOM","PropTypes","classNames","DomHandler","TieredMenuSub","CSSTransition","UniqueComponentId","ConnectedOverlayScrollHandler","OverlayEventBus","TieredMenu","props","state","visible","popup","onEnter","bind","onEntered","onExit","onPanelClick","id","menuRef","createRef","event","emit","originalEvent","target","hide","show","currentTarget","currentEvent","setState","onShow","onHide","autoZIndex","current","style","zIndex","String","baseZIndex","generateZIndex","absolutePosition","bindDocumentListeners","bindScrollListener","unbindDocumentListeners","unbindScrollListener","bindDocumentClickListener","bindDocumentResizeListener","unbindDocumentClickListener","unbindDocumentResizeListener","documentClickListener","contains","document","addEventListener","removeEventListener","documentResizeListener","window","scrollHandler","destroy","className","enter","exit","model","element","renderElement","appendTo","createPortal","defaultProps","propTypes","string","array","bool","object","number","any","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { TieredMenuSub } from './TieredMenuSub';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport ConnectedOverlayScrollHandler from '../utils/ConnectedOverlayScrollHandler';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\n\r\nexport class TieredMenu extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        model: null,\r\n        popup: false,\r\n        style: null,\r\n        className: null,\r\n        autoZIndex: true,\r\n        baseZIndex: 0,\r\n        appendTo: null,\r\n        onShow: null,\r\n        onHide: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        model: PropTypes.array,\r\n        popup: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        autoZIndex: PropTypes.bool,\r\n        baseZIndex: PropTypes.number,\r\n        appendTo: PropTypes.any,\r\n        onShow: PropTypes.func,\r\n        onHide: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: !props.popup\r\n        };\r\n\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.onEntered = this.onEntered.bind(this);\r\n        this.onExit = this.onExit.bind(this);\r\n        this.onPanelClick = this.onPanelClick.bind(this);\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n        this.menuRef = React.createRef();\r\n    }\r\n\r\n    onPanelClick(event) {\r\n        if (this.props.popup) {\r\n            OverlayEventBus.emit('overlay-click', {\r\n                originalEvent: event,\r\n                target: this.target\r\n            });\r\n        }\r\n    }\r\n\r\n    toggle(event) {\r\n        if (this.props.popup) {\r\n            if (this.state.visible)\r\n                this.hide(event);\r\n            else\r\n                this.show(event);\r\n        }\r\n    }\r\n\r\n    show(event) {\r\n        this.target = event.currentTarget;\r\n        let currentEvent = event;\r\n\r\n        this.setState({ visible: true }, () => {\r\n            if (this.props.onShow) {\r\n                this.props.onShow(currentEvent);\r\n            }\r\n        });\r\n    }\r\n\r\n    hide(event) {\r\n        let currentEvent = event;\r\n        this.setState({ visible: false }, () => {\r\n            if (this.props.onHide) {\r\n                this.props.onHide(currentEvent);\r\n            }\r\n        });\r\n    }\r\n\r\n    onEnter() {\r\n        if (this.props.autoZIndex) {\r\n            this.menuRef.current.style.zIndex = String(this.props.baseZIndex + DomHandler.generateZIndex());\r\n        }\r\n        DomHandler.absolutePosition(this.menuRef.current, this.target);\r\n    }\r\n\r\n    onEntered() {\r\n        this.bindDocumentListeners();\r\n        this.bindScrollListener();\r\n    }\r\n\r\n    onExit() {\r\n        this.target = null;\r\n        this.unbindDocumentListeners();\r\n        this.unbindScrollListener();\r\n    }\r\n\r\n    bindDocumentListeners() {\r\n        this.bindDocumentClickListener();\r\n        this.bindDocumentResizeListener();\r\n    }\r\n\r\n    unbindDocumentListeners() {\r\n        this.unbindDocumentClickListener();\r\n        this.unbindDocumentResizeListener();\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (!this.documentClickListener) {\r\n            this.documentClickListener = (event) => {\r\n                if (this.props.popup && this.state.visible && this.menuRef.current && !this.menuRef.current.contains(event.target)) {\r\n                    this.hide(event);\r\n                }\r\n            };\r\n\r\n            document.addEventListener('click', this.documentClickListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            document.removeEventListener('click', this.documentClickListener);\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentResizeListener() {\r\n        if (!this.documentResizeListener) {\r\n            this.documentResizeListener = (event) => {\r\n                if (this.state.visible) {\r\n                    this.hide(event);\r\n                }\r\n            };\r\n\r\n            window.addEventListener('resize', this.documentResizeListener);\r\n        }\r\n    }\r\n\r\n    unbindDocumentResizeListener() {\r\n        if (this.documentResizeListener) {\r\n            window.removeEventListener('resize', this.documentResizeListener);\r\n            this.documentResizeListener = null;\r\n        }\r\n    }\r\n\r\n    bindScrollListener() {\r\n        if (!this.scrollHandler) {\r\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, (event) => {\r\n                if (this.state.visible) {\r\n                    this.hide(event);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.scrollHandler.bindScrollListener();\r\n    }\r\n\r\n    unbindScrollListener() {\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.unbindScrollListener();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentListeners();\r\n        if (this.scrollHandler) {\r\n            this.scrollHandler.destroy();\r\n            this.scrollHandler = null;\r\n        }\r\n    }\r\n\r\n    renderElement() {\r\n        const className = classNames('p-tieredmenu p-component', { 'p-tieredmenu-overlay': this.props.popup }, this.props.className);\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.menuRef} classNames=\"p-connected-overlay\" in={this.state.visible} timeout={{ enter: 120, exit: 100 }}\r\n                unmountOnExit onEnter={this.onEnter} onEntered={this.onEntered} onExit={this.onExit}>\r\n                <div ref={this.menuRef} id={this.id} className={className} style={this.props.style} onClick={this.onPanelClick}>\r\n                    <TieredMenuSub model={this.props.model} root popup={this.props.popup} />\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const element = this.renderElement();\r\n\r\n        if (this.props.appendTo)\r\n            return ReactDOM.createPortal(element, this.props.appendTo);\r\n        else\r\n            return element;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}