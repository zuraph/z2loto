{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var RadioButtonDoc=/*#__PURE__*/function(_Component){_inherits(RadioButtonDoc,_Component);var _super=_createSuper(RadioButtonDoc);function RadioButtonDoc(props){var _this;_classCallCheck(this,RadioButtonDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { RadioButton } from 'primereact/radiobutton';\\n\\nexport class RadioButtonDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.categories = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\\n\\n        this.state = {\\n            city: null,\\n            selectedCategory: this.categories[1]\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Basic</h5>\\n                    <div className=\\\"p-field-radiobutton\\\">\\n                        <RadioButton inputId=\\\"city1\\\" name=\\\"city\\\" value=\\\"Chicago\\\" onChange={(e) => this.setState({city: e.value})} checked={this.state.city === 'Chicago'} />\\n                        <label htmlFor=\\\"city1\\\">Chicago</label>\\n                    </div>\\n                    <div className=\\\"p-field-radiobutton\\\">\\n                        <RadioButton inputId=\\\"city2\\\" name=\\\"city\\\" value=\\\"Los Angeles\\\" onChange={(e) => this.setState({city: e.value})} checked={this.state.city === 'Los Angeles'} />\\n                        <label htmlFor=\\\"city2\\\">Los Angeles</label>\\n                    </div>\\n                    <div className=\\\"p-field-radiobutton\\\">\\n                        <RadioButton inputId=\\\"city3\\\" name=\\\"city\\\" value=\\\"New York\\\" onChange={(e) => this.setState({city: e.value})} checked={this.state.city === 'New York'} />\\n                        <label htmlFor=\\\"city3\\\">New York</label>\\n                    </div>\\n                    <div className=\\\"p-field-radiobutton\\\">\\n                        <RadioButton inputId=\\\"city4\\\" name=\\\"city\\\" value=\\\"San Francisco\\\" onChange={(e) => this.setState({city: e.value})} checked={this.state.city === 'San Francisco'} />\\n                        <label htmlFor=\\\"city4\\\">San Francisco</label>\\n                    </div>\\n\\n                    <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\\n                    {\\n                        this.categories.map((category) => {\\n                            return (\\n                                <div key={category.key} className=\\\"p-field-radiobutton\\\">\\n                                    <RadioButton inputId={category.key} name=\\\"category\\\" value={category} onChange={(e) => this.setState({selectedCategory: e.value})}  checked={this.state.selectedCategory.key === category.key} disabled={category.key === 'R'} />\\n                                    <label htmlFor={category.key}>{category.name}</label>\\n                                </div>\\n                            )\\n                        })\\n                    }\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { RadioButton } from 'primereact/radiobutton';\\n\\nconst RadioButtonDemo = () => {\\n    const categories = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\\n    const [city, setCity] = useState(null);\\n    const [selectedCategory, setSelectedCategory] = useState(categories[1]);\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <div className=\\\"p-field-radiobutton\\\">\\n                    <RadioButton inputId=\\\"city1\\\" name=\\\"city\\\" value=\\\"Chicago\\\" onChange={(e) => setCity(e.value)} checked={city === 'Chicago'} />\\n                    <label htmlFor=\\\"city1\\\">Chicago</label>\\n                </div>\\n                <div className=\\\"p-field-radiobutton\\\">\\n                    <RadioButton inputId=\\\"city2\\\" name=\\\"city\\\" value=\\\"Los Angeles\\\" onChange={(e) => setCity(e.value)} checked={city === 'Los Angeles'} />\\n                    <label htmlFor=\\\"city2\\\">Los Angeles</label>\\n                </div>\\n                <div className=\\\"p-field-radiobutton\\\">\\n                    <RadioButton inputId=\\\"city3\\\" name=\\\"city\\\" value=\\\"New York\\\" onChange={(e) => setCity(e.value)} checked={city === 'New York'} />\\n                    <label htmlFor=\\\"city3\\\">New York</label>\\n                </div>\\n                <div className=\\\"p-field-radiobutton\\\">\\n                    <RadioButton inputId=\\\"city4\\\" name=\\\"city\\\" value=\\\"San Francisco\\\" onChange={(e) => setCity(e.value)} checked={city === 'San Francisco'} />\\n                    <label htmlFor=\\\"city4\\\">San Francisco</label>\\n                </div>\\n\\n                <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\\n                {\\n                    categories.map((category) => {\\n                        return (\\n                            <div key={category.key} className=\\\"p-field-radiobutton\\\">\\n                                <RadioButton inputId={category.key} name=\\\"category\\\" value={category} onChange={(e) => setSelectedCategory(e.value)}  checked={selectedCategory.key === category.key} disabled={category.key === 'R'} />\\n                                <label htmlFor={category.key}>{category.name}</label>\\n                            </div>\\n                        )\\n                    })\\n                }\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { RadioButton } from 'primereact/radiobutton';\\n\\nconst RadioButtonDemo = () => {\\n    const categories = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\\n    const [city, setCity] = useState(null);\\n    const [selectedCategory, setSelectedCategory] = useState(categories[1]);\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Basic</h5>\\n                <div className=\\\"p-field-radiobutton\\\">\\n                    <RadioButton inputId=\\\"city1\\\" name=\\\"city\\\" value=\\\"Chicago\\\" onChange={(e) => setCity(e.value)} checked={city === 'Chicago'} />\\n                    <label htmlFor=\\\"city1\\\">Chicago</label>\\n                </div>\\n                <div className=\\\"p-field-radiobutton\\\">\\n                    <RadioButton inputId=\\\"city2\\\" name=\\\"city\\\" value=\\\"Los Angeles\\\" onChange={(e) => setCity(e.value)} checked={city === 'Los Angeles'} />\\n                    <label htmlFor=\\\"city2\\\">Los Angeles</label>\\n                </div>\\n                <div className=\\\"p-field-radiobutton\\\">\\n                    <RadioButton inputId=\\\"city3\\\" name=\\\"city\\\" value=\\\"New York\\\" onChange={(e) => setCity(e.value)} checked={city === 'New York'} />\\n                    <label htmlFor=\\\"city3\\\">New York</label>\\n                </div>\\n                <div className=\\\"p-field-radiobutton\\\">\\n                    <RadioButton inputId=\\\"city4\\\" name=\\\"city\\\" value=\\\"San Francisco\\\" onChange={(e) => setCity(e.value)} checked={city === 'San Francisco'} />\\n                    <label htmlFor=\\\"city4\\\">San Francisco</label>\\n                </div>\\n\\n                <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\\n                {\\n                    categories.map((category) => {\\n                        return (\\n                            <div key={category.key} className=\\\"p-field-radiobutton\\\">\\n                                <RadioButton inputId={category.key} name=\\\"category\\\" value={category} onChange={(e) => setSelectedCategory(e.value)}  checked={selectedCategory.key === category.key} disabled={category.key === 'R'} />\\n                                <label htmlFor={category.key}>{category.name}</label>\\n                            </div>\\n                        )\\n                    })\\n                }\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this;}_createClass(RadioButtonDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { RadioButton } from 'primereact/radiobutton';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"RadioButton is used as a controlled input with checked and onChange properties.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<RadioButton value=\\\"val1\\\" name=\\\"city\\\" onChange={(e) => setValue(e.value)} checked={value === 'val1'} />\\n<RadioButton value=\\\"val2\\\" name=\\\"city\\\" onChange={(e) => setValue(e.value)} checked={value === 'val2'} />\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"inputId\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the inner native radiobutton.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"name\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Name of the checkbox element .\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"value\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Value of the radiobutton.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"checked\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Specifies whether a radiobutton should be checked or not.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"disabled\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that the element value cannot be altered.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"required\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"When present, it specifies that an input field must be filled out before submitting the form.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltip\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Content of the tooltip.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"tooltipOptions\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Configuration of the tooltip, refer to the tooltip documentation for more information.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaLabelledBy\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Establishes relationships between the component and label(s) where its value should be one or more element IDs.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onChange\"),/*#__PURE__*/React.createElement(\"td\",null,\"event.originalEvent: Original event \",/*#__PURE__*/React.createElement(\"br\",null),\"event.value: Value of the radiobutton \",/*#__PURE__*/React.createElement(\"br\",null),\"event.checked: Checked state as a boolean.\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke on radio button click.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\"theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-radiobutton\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-radiobutton-box\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container of icon.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-radiobutton-icon\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-radiobutton-label\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label element.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'RadioButtonDemo',sources:this.sources})));}}]);return RadioButtonDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/radiobutton/RadioButtonDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","RadioButtonDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView,TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class RadioButtonDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\n\r\nexport class RadioButtonDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.categories = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\r\n\r\n        this.state = {\r\n            city: null,\r\n            selectedCategory: this.categories[1]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Basic</h5>\r\n                    <div className=\"p-field-radiobutton\">\r\n                        <RadioButton inputId=\"city1\" name=\"city\" value=\"Chicago\" onChange={(e) => this.setState({city: e.value})} checked={this.state.city === 'Chicago'} />\r\n                        <label htmlFor=\"city1\">Chicago</label>\r\n                    </div>\r\n                    <div className=\"p-field-radiobutton\">\r\n                        <RadioButton inputId=\"city2\" name=\"city\" value=\"Los Angeles\" onChange={(e) => this.setState({city: e.value})} checked={this.state.city === 'Los Angeles'} />\r\n                        <label htmlFor=\"city2\">Los Angeles</label>\r\n                    </div>\r\n                    <div className=\"p-field-radiobutton\">\r\n                        <RadioButton inputId=\"city3\" name=\"city\" value=\"New York\" onChange={(e) => this.setState({city: e.value})} checked={this.state.city === 'New York'} />\r\n                        <label htmlFor=\"city3\">New York</label>\r\n                    </div>\r\n                    <div className=\"p-field-radiobutton\">\r\n                        <RadioButton inputId=\"city4\" name=\"city\" value=\"San Francisco\" onChange={(e) => this.setState({city: e.value})} checked={this.state.city === 'San Francisco'} />\r\n                        <label htmlFor=\"city4\">San Francisco</label>\r\n                    </div>\r\n\r\n                    <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\r\n                    {\r\n                        this.categories.map((category) => {\r\n                            return (\r\n                                <div key={category.key} className=\"p-field-radiobutton\">\r\n                                    <RadioButton inputId={category.key} name=\"category\" value={category} onChange={(e) => this.setState({selectedCategory: e.value})}  checked={this.state.selectedCategory.key === category.key} disabled={category.key === 'R'} />\r\n                                    <label htmlFor={category.key}>{category.name}</label>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\n\r\nconst RadioButtonDemo = () => {\r\n    const categories = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\r\n    const [city, setCity] = useState(null);\r\n    const [selectedCategory, setSelectedCategory] = useState(categories[1]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"city1\" name=\"city\" value=\"Chicago\" onChange={(e) => setCity(e.value)} checked={city === 'Chicago'} />\r\n                    <label htmlFor=\"city1\">Chicago</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"city2\" name=\"city\" value=\"Los Angeles\" onChange={(e) => setCity(e.value)} checked={city === 'Los Angeles'} />\r\n                    <label htmlFor=\"city2\">Los Angeles</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"city3\" name=\"city\" value=\"New York\" onChange={(e) => setCity(e.value)} checked={city === 'New York'} />\r\n                    <label htmlFor=\"city3\">New York</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"city4\" name=\"city\" value=\"San Francisco\" onChange={(e) => setCity(e.value)} checked={city === 'San Francisco'} />\r\n                    <label htmlFor=\"city4\">San Francisco</label>\r\n                </div>\r\n\r\n                <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\r\n                {\r\n                    categories.map((category) => {\r\n                        return (\r\n                            <div key={category.key} className=\"p-field-radiobutton\">\r\n                                <RadioButton inputId={category.key} name=\"category\" value={category} onChange={(e) => setSelectedCategory(e.value)}  checked={selectedCategory.key === category.key} disabled={category.key === 'R'} />\r\n                                <label htmlFor={category.key}>{category.name}</label>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\n\r\nconst RadioButtonDemo = () => {\r\n    const categories = [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}];\r\n    const [city, setCity] = useState(null);\r\n    const [selectedCategory, setSelectedCategory] = useState(categories[1]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Basic</h5>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"city1\" name=\"city\" value=\"Chicago\" onChange={(e) => setCity(e.value)} checked={city === 'Chicago'} />\r\n                    <label htmlFor=\"city1\">Chicago</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"city2\" name=\"city\" value=\"Los Angeles\" onChange={(e) => setCity(e.value)} checked={city === 'Los Angeles'} />\r\n                    <label htmlFor=\"city2\">Los Angeles</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"city3\" name=\"city\" value=\"New York\" onChange={(e) => setCity(e.value)} checked={city === 'New York'} />\r\n                    <label htmlFor=\"city3\">New York</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"city4\" name=\"city\" value=\"San Francisco\" onChange={(e) => setCity(e.value)} checked={city === 'San Francisco'} />\r\n                    <label htmlFor=\"city4\">San Francisco</label>\r\n                </div>\r\n\r\n                <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\r\n                {\r\n                    categories.map((category) => {\r\n                        return (\r\n                            <div key={category.key} className=\"p-field-radiobutton\">\r\n                                <RadioButton inputId={category.key} name=\"category\" value={category} onChange={(e) => setSelectedCategory(e.value)}  checked={selectedCategory.key === category.key} disabled={category.key === 'R'} />\r\n                                <label htmlFor={category.key}>{category.name}</label>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { RadioButton } from 'primereact/radiobutton';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>RadioButton is used as a controlled input with checked and onChange properties.</p>\r\n<CodeHighlight>\r\n{`\r\n<RadioButton value=\"val1\" name=\"city\" onChange={(e) => setValue(e.value)} checked={value === 'val1'} />\r\n<RadioButton value=\"val2\" name=\"city\" onChange={(e) => setValue(e.value)} checked={value === 'val2'} />\r\n`}\r\n</CodeHighlight>\r\n\r\n                    <h5>Properties</h5>\r\n                    <div className=\"doc-tablewrapper\">\r\n                        <table className=\"doc-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Type</th>\r\n                                    <th>Default</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>id</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Unique identifier of the element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>inputId</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Unique identifier of the inner native radiobutton.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>name</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Name of the checkbox element .</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>value</td>\r\n                                    <td>any</td>\r\n                                    <td>null</td>\r\n                                    <td>Value of the radiobutton.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>checked</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>Specifies whether a radiobutton should be checked or not.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>style</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Inline style of the element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>className</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Style class of the element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>disabled</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>When present, it specifies that the element value cannot be altered.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>required</td>\r\n                                    <td>boolean</td>\r\n                                    <td>false</td>\r\n                                    <td>When present, it specifies that an input field must be filled out before submitting the form.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>tooltip</td>\r\n                                    <td>any</td>\r\n                                    <td>null</td>\r\n                                    <td>Content of the tooltip.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>tooltipOptions</td>\r\n                                    <td>object</td>\r\n                                    <td>null</td>\r\n                                    <td>Configuration of the tooltip, refer to the tooltip documentation for more information.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>ariaLabelledBy</td>\r\n                                    <td>string</td>\r\n                                    <td>null</td>\r\n                                    <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <h5>Events</h5>\r\n                    <div className=\"doc-tablewrapper\">\r\n                        <table className=\"doc-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Parameters</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>onChange</td>\r\n                                    <td>event.originalEvent: Original event <br />\r\n                                        event.value: Value of the radiobutton <br />\r\n                                        event.checked: Checked state as a boolean.</td>\r\n                                    <td>Callback to invoke on radio button click.</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <h5>Styling</h5>\r\n                    <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\">theming</Link> page.</p>\r\n                    <div className=\"doc-tablewrapper\">\r\n                        <table className=\"doc-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Element</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>p-radiobutton</td>\r\n                                    <td>Container element</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-radiobutton-box</td>\r\n                                    <td>Container of icon.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-radiobutton-icon</td>\r\n                                    <td>Icon element.</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>p-radiobutton-label</td>\r\n                                    <td>Label element.</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <h5>Dependencies</h5>\r\n                    <p>None.</p>\r\n                </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'RadioButtonDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}