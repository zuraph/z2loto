{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\chart\\\\RadarChartDemo.js\";\nimport React, { Component } from 'react';\nimport { TabView } from '../../components/tabview/TabView';\nimport { Chart } from '../../components/chart/Chart';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport AppContentContext from '../../AppContentContext';\nexport var RadarChartDemo = /*#__PURE__*/function (_Component) {\n  _inherits(RadarChartDemo, _Component);\n\n  var _super = _createSuper(RadarChartDemo);\n\n  function RadarChartDemo(props) {\n    var _this;\n\n    _classCallCheck(this, RadarChartDemo);\n\n    _this = _super.call(this, props);\n    _this.chartData = {\n      labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgba(179,181,198,0.2)',\n        borderColor: 'rgba(179,181,198,1)',\n        pointBackgroundColor: 'rgba(179,181,198,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(179,181,198,1)',\n        data: [65, 59, 90, 81, 56, 55, 40]\n      }, {\n        label: 'My Second dataset',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        pointBackgroundColor: 'rgba(255,99,132,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(255,99,132,1)',\n        data: [28, 48, 40, 19, 96, 27, 100]\n      }]\n    };\n    _this.lightOptions = {\n      legend: {\n        labels: {\n          fontColor: '#495057'\n        }\n      },\n      scale: {\n        pointLabels: {\n          fontColor: '#495057'\n        },\n        gridLines: {\n          color: '#ebedef'\n        }\n      }\n    };\n    _this.darkOptions = {\n      legend: {\n        labels: {\n          fontColor: '#ebedef'\n        }\n      },\n      scale: {\n        pointLabels: {\n          fontColor: '#ebedef'\n        },\n        gridLines: {\n          color: 'rgba(255,255,255,0.2)'\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(RadarChartDemo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, \"RadarChart\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, \"A radar chart is a graphical method of displaying multivariate data in the form of a two-dimensional chart of three or more quantitative variables represented on axes starting from the same point.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AppContentContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, function (context) {\n        var options = context.darkTheme ? _this2.darkOptions : _this2.lightOptions;\n        return /*#__PURE__*/React.createElement(Chart, {\n          type: \"radar\",\n          data: _this2.chartData,\n          options: options,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 44\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(RadarChartDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return RadarChartDemo;\n}(Component);\nexport var RadarChartDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(RadarChartDemoDoc, _Component2);\n\n  var _super2 = _createSuper(RadarChartDemoDoc);\n\n  function RadarChartDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, RadarChartDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class RadarChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.chartData = {\\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\\n            datasets: [\\n                {\\n                    label: 'My First dataset',\\n                    backgroundColor: 'rgba(179,181,198,0.2)',\\n                    borderColor: 'rgba(179,181,198,1)',\\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\\n                    pointBorderColor: '#fff',\\n                    pointHoverBackgroundColor: '#fff',\\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\\n                    data: [65, 59, 90, 81, 56, 55, 40]\\n                },\\n                {\\n                    label: 'My Second dataset',\\n                    backgroundColor: 'rgba(255,99,132,0.2)',\\n                    borderColor: 'rgba(255,99,132,1)',\\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\\n                    pointBorderColor: '#fff',\\n                    pointHoverBackgroundColor: '#fff',\\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\\n                    data: [28, 48, 40, 19, 96, 27, 100]\\n                }\\n            ]\\n        };\\n\\n        this.lightOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scale: {\\n                pointLabels: {\\n                    fontColor: '#495057'\\n                },\\n                gridLines: {\\n                    color: '#ebedef'\\n                }\\n            }\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"card\\\">\\n                <Chart type=\\\"radar\\\" data={this.chartData} options={this.lightOptions} />\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst RadarChartDemo = () => {\\n    const chartData = {\\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\\n        datasets: [\\n            {\\n                label: 'My First dataset',\\n                backgroundColor: 'rgba(179,181,198,0.2)',\\n                borderColor: 'rgba(179,181,198,1)',\\n                pointBackgroundColor: 'rgba(179,181,198,1)',\\n                pointBorderColor: '#fff',\\n                pointHoverBackgroundColor: '#fff',\\n                pointHoverBorderColor: 'rgba(179,181,198,1)',\\n                data: [65, 59, 90, 81, 56, 55, 40]\\n            },\\n            {\\n                label: 'My Second dataset',\\n                backgroundColor: 'rgba(255,99,132,0.2)',\\n                borderColor: 'rgba(255,99,132,1)',\\n                pointBackgroundColor: 'rgba(255,99,132,1)',\\n                pointBorderColor: '#fff',\\n                pointHoverBackgroundColor: '#fff',\\n                pointHoverBorderColor: 'rgba(255,99,132,1)',\\n                data: [28, 48, 40, 19, 96, 27, 100]\\n            }\\n        ]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scale: {\\n            pointLabels: {\\n                fontColor: '#495057'\\n            },\\n            gridLines: {\\n                color: '#ebedef'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"radar\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst RadarChartDemo = () => {\\n    const chartData = {\\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\\n        datasets: [\\n            {\\n                label: 'My First dataset',\\n                backgroundColor: 'rgba(179,181,198,0.2)',\\n                borderColor: 'rgba(179,181,198,1)',\\n                pointBackgroundColor: 'rgba(179,181,198,1)',\\n                pointBorderColor: '#fff',\\n                pointHoverBackgroundColor: '#fff',\\n                pointHoverBorderColor: 'rgba(179,181,198,1)',\\n                data: [65, 59, 90, 81, 56, 55, 40]\\n            },\\n            {\\n                label: 'My Second dataset',\\n                backgroundColor: 'rgba(255,99,132,0.2)',\\n                borderColor: 'rgba(255,99,132,1)',\\n                pointBackgroundColor: 'rgba(255,99,132,1)',\\n                pointBorderColor: '#fff',\\n                pointHoverBackgroundColor: '#fff',\\n                pointHoverBorderColor: 'rgba(255,99,132,1)',\\n                data: [28, 48, 40, 19, 96, 27, 100]\\n            }\\n        ]\\n    };\\n\\n    const lightOptions = {\\n        legend: {\\n            labels: {\\n                fontColor: '#495057'\\n            }\\n        },\\n        scale: {\\n            pointLabels: {\\n                fontColor: '#495057'\\n            },\\n            gridLines: {\\n                color: '#ebedef'\\n            }\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"card\\\">\\n            <Chart type=\\\"radar\\\" data={chartData} options={lightOptions} />\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(RadarChartDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'RadarChartDemo',\n        sources: this.sources,\n        dependencies: {\n          'chart.js': '2.7.3'\n        }\n      })));\n    }\n  }]);\n\n  return RadarChartDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/chart/RadarChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","RadarChartDemo","props","chartData","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","data","lightOptions","legend","fontColor","scale","pointLabels","gridLines","color","darkOptions","context","options","darkTheme","RadarChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class RadarChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: 'rgba(179,181,198,0.2)',\r\n                    borderColor: 'rgba(179,181,198,1)',\r\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                    data: [65, 59, 90, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: 'rgba(255,99,132,0.2)',\r\n                    borderColor: 'rgba(255,99,132,1)',\r\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                    data: [28, 48, 40, 19, 96, 27, 100]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scale: {\r\n                pointLabels: {\r\n                    fontColor: '#495057'\r\n                },\r\n                gridLines: {\r\n                    color: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        this.darkOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scale: {\r\n                pointLabels: {\r\n                    fontColor: '#ebedef'\r\n                },\r\n                gridLines: {\r\n                    color: 'rgba(255,255,255,0.2)'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>RadarChart</h1>\r\n                        <p>A radar chart is a graphical method of displaying multivariate data in the form of a two-dimensional chart of three or more quantitative variables represented on axes starting from the same point.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <AppContentContext.Consumer>\r\n                            {\r\n                                context => {\r\n                                    let options = context.darkTheme ? this.darkOptions : this.lightOptions;\r\n\r\n                                    return <Chart type=\"radar\" data={this.chartData} options={options} />\r\n                                }\r\n                            }\r\n                        </AppContentContext.Consumer>\r\n                    </div>\r\n                </div>\r\n\r\n                <RadarChartDemoDoc></RadarChartDemoDoc>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class RadarChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class RadarChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.chartData = {\r\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: 'rgba(179,181,198,0.2)',\r\n                    borderColor: 'rgba(179,181,198,1)',\r\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                    data: [65, 59, 90, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: 'rgba(255,99,132,0.2)',\r\n                    borderColor: 'rgba(255,99,132,1)',\r\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                    data: [28, 48, 40, 19, 96, 27, 100]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.lightOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scale: {\r\n                pointLabels: {\r\n                    fontColor: '#495057'\r\n                },\r\n                gridLines: {\r\n                    color: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <Chart type=\"radar\" data={this.chartData} options={this.lightOptions} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst RadarChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                backgroundColor: 'rgba(179,181,198,0.2)',\r\n                borderColor: 'rgba(179,181,198,1)',\r\n                pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                pointBorderColor: '#fff',\r\n                pointHoverBackgroundColor: '#fff',\r\n                pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                data: [65, 59, 90, 81, 56, 55, 40]\r\n            },\r\n            {\r\n                label: 'My Second dataset',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                pointBorderColor: '#fff',\r\n                pointHoverBackgroundColor: '#fff',\r\n                pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [28, 48, 40, 19, 96, 27, 100]\r\n            }\r\n        ]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scale: {\r\n            pointLabels: {\r\n                fontColor: '#495057'\r\n            },\r\n            gridLines: {\r\n                color: '#ebedef'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"radar\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst RadarChartDemo = () => {\r\n    const chartData = {\r\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                backgroundColor: 'rgba(179,181,198,0.2)',\r\n                borderColor: 'rgba(179,181,198,1)',\r\n                pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                pointBorderColor: '#fff',\r\n                pointHoverBackgroundColor: '#fff',\r\n                pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                data: [65, 59, 90, 81, 56, 55, 40]\r\n            },\r\n            {\r\n                label: 'My Second dataset',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                pointBorderColor: '#fff',\r\n                pointHoverBackgroundColor: '#fff',\r\n                pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [28, 48, 40, 19, 96, 27, 100]\r\n            }\r\n        ]\r\n    };\r\n\r\n    const lightOptions = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scale: {\r\n            pointLabels: {\r\n                fontColor: '#495057'\r\n            },\r\n            gridLines: {\r\n                color: '#ebedef'\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Chart type=\"radar\" data={chartData} options={lightOptions} />\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'RadarChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}