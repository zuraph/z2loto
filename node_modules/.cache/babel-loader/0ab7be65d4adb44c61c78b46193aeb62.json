{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\showcase\\\\organizationchart\\\\OrganizationChartDoc.js\";\nimport React, { Component } from 'react';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var OrganizationChartDoc = /*#__PURE__*/function (_Component) {\n  _inherits(OrganizationChartDoc, _Component);\n\n  var _super = _createSuper(OrganizationChartDoc);\n\n  function OrganizationChartDoc(props) {\n    var _this;\n\n    _classCallCheck(this, OrganizationChartDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { OrganizationChart } from 'primereact/organizationchart';\\nimport './OrganizationChartDemo.css';\\n\\nexport class OrganizationChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            selection: []\\n        };\\n\\n        this.data1 = [{\\n            label: 'CEO',\\n            type: 'person',\\n            className: 'p-person',\\n            expanded: true,\\n            data: { name: 'Walter White', 'avatar': 'walter.jpg' },\\n            children: [\\n                {\\n                    label: 'CFO',\\n                    type: 'person',\\n                    className: 'p-person',\\n                    expanded: true,\\n                    data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\\n                    children: [{\\n                        label: 'Tax',\\n                        className: 'department-cfo'\\n                    },\\n                    {\\n                        label: 'Legal',\\n                        className: 'department-cfo'\\n                    }],\\n                },\\n                {\\n                    label: 'COO',\\n                    type: 'person',\\n                    className: 'p-person',\\n                    expanded: true,\\n                    data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\\n                    children: [{\\n                        label: 'Operations',\\n                        className: 'department-coo'\\n                    }]\\n                },\\n                {\\n                    label: 'CTO',\\n                    type: 'person',\\n                    className: 'p-person',\\n                    expanded: true,\\n                    data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\\n                    children: [{\\n                        label: 'Development',\\n                        className: 'department-cto',\\n                        expanded: true,\\n                        children: [{\\n                            label: 'Analysis',\\n                            className: 'department-cto'\\n                        },\\n                        {\\n                            label: 'Front End',\\n                            className: 'department-cto'\\n                        },\\n                        {\\n                            label: 'Back End',\\n                            className: 'department-cto'\\n                        }]\\n                    },\\n                    {\\n                        label: 'QA',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'R&D',\\n                        className: 'department-cto'\\n                    }]\\n                }\\n            ]\\n        }];\\n\\n        this.data2 = [{\\n            label: 'F.C Barcelona',\\n            expanded: true,\\n            children: [\\n                {\\n                    label: 'F.C Barcelona',\\n                    expanded: true,\\n                    children: [\\n                        {\\n                            label: 'Chelsea FC'\\n                        },\\n                        {\\n                            label: 'F.C. Barcelona'\\n                        }\\n                    ]\\n                },\\n                {\\n                    label: 'Real Madrid',\\n                    expanded: true,\\n                    children: [\\n                        {\\n                            label: 'Bayern Munich'\\n                        },\\n                        {\\n                            label: 'Real Madrid'\\n                        }\\n                    ]\\n                }\\n            ]\\n        }];\\n\\n        this.nodeTemplate = this.nodeTemplate.bind(this);\\n    }\\n\\n    nodeTemplate(node) {\\n        if (node.type === \\\"person\\\") {\\n            return (\\n                <div>\\n                    <div className=\\\"node-header\\\">{node.label}</div>\\n                    <div className=\\\"node-content\\\">\\n                        <img alt={node.data.avatar} src={`showcase/demo/images/organization/${node.data.avatar}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\\n                        <div>{node.data.name}</div>\\n                    </div>\\n                </div>\\n            );\\n        }\\n\\n        if (node.type === \\\"department\\\") {\\n            return node.label;\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"organizationchart-demo\\\">\\n                <div className=\\\"card\\\">\\n                    <h5>Advanced</h5>\\n                    <OrganizationChart value={this.data1} nodeTemplate={this.nodeTemplate} selection={this.state.selection} selectionMode=\\\"multiple\\\"\\n                        onSelectionChange={event => this.setState({ selection: event.data })} className=\\\"company\\\"></OrganizationChart>\\n\\n                    <h5>Basic</h5>\\n                    <OrganizationChart value={this.data2}></OrganizationChart>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { OrganizationChart } from 'primereact/organizationchart';\\nimport './OrganizationChartDemo.css';\\n\\nconst OrganizationChartDemo = () => {\\n    const [selection, setSelection] = useState([]);\\n    const data1 = [{\\n        label: 'CEO',\\n        type: 'person',\\n        className: 'p-person',\\n        expanded: true,\\n        data: { name: 'Walter White', 'avatar': 'walter.jpg' },\\n        children: [\\n            {\\n                label: 'CFO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\\n                children: [{\\n                    label: 'Tax',\\n                    className: 'department-cfo'\\n                },\\n                {\\n                    label: 'Legal',\\n                    className: 'department-cfo'\\n                }],\\n            },\\n            {\\n                label: 'COO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\\n                children: [{\\n                    label: 'Operations',\\n                    className: 'department-coo'\\n                }]\\n            },\\n            {\\n                label: 'CTO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\\n                children: [{\\n                    label: 'Development',\\n                    className: 'department-cto',\\n                    expanded: true,\\n                    children: [{\\n                        label: 'Analysis',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'Front End',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'Back End',\\n                        className: 'department-cto'\\n                    }]\\n                },\\n                {\\n                    label: 'QA',\\n                    className: 'department-cto'\\n                },\\n                {\\n                    label: 'R&D',\\n                    className: 'department-cto'\\n                }]\\n            }\\n        ]\\n    }];\\n\\n    const data2 = [{\\n        label: 'F.C Barcelona',\\n        expanded: true,\\n        children: [\\n            {\\n                label: 'F.C Barcelona',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Chelsea FC'\\n                    },\\n                    {\\n                        label: 'F.C. Barcelona'\\n                    }\\n                ]\\n            },\\n            {\\n                label: 'Real Madrid',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Bayern Munich'\\n                    },\\n                    {\\n                        label: 'Real Madrid'\\n                    }\\n                ]\\n            }\\n        ]\\n    }];\\n\\n    const nodeTemplate = (node) => {\\n        if (node.type === \\\"person\\\") {\\n            return (\\n                <div>\\n                    <div className=\\\"node-header\\\">{node.label}</div>\\n                    <div className=\\\"node-content\\\">\\n                        <img alt={node.data.avatar} src={`showcase/demo/images/organization/${node.data.avatar}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\\n                        <div>{node.data.name}</div>\\n                    </div>\\n                </div>\\n            );\\n        }\\n\\n        if (node.type === \\\"department\\\") {\\n            return node.label;\\n        }\\n    }\\n\\n    return (\\n        <div className=\\\"organizationchart-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Advanced</h5>\\n                <OrganizationChart value={data1} nodeTemplate={nodeTemplate} selection={selection} selectionMode=\\\"multiple\\\"\\n                    onSelectionChange={event => setSelection(event.data)} className=\\\"company\\\"></OrganizationChart>\\n\\n                <h5>Basic</h5>\\n                <OrganizationChart value={data2}></OrganizationChart>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState } from 'react';\\nimport { OrganizationChart } from 'primereact/organizationchart';\\nimport './OrganizationChartDemo.css';\\n\\nconst OrganizationChartDemo = () => {\\n    const [selection, setSelection] = useState([]);\\n    const data1 = [{\\n        label: 'CEO',\\n        type: 'person',\\n        className: 'p-person',\\n        expanded: true,\\n        data: { name: 'Walter White', 'avatar': 'walter.jpg' },\\n        children: [\\n            {\\n                label: 'CFO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\\n                children: [{\\n                    label: 'Tax',\\n                    className: 'department-cfo'\\n                },\\n                {\\n                    label: 'Legal',\\n                    className: 'department-cfo'\\n                }],\\n            },\\n            {\\n                label: 'COO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\\n                children: [{\\n                    label: 'Operations',\\n                    className: 'department-coo'\\n                }]\\n            },\\n            {\\n                label: 'CTO',\\n                type: 'person',\\n                className: 'p-person',\\n                expanded: true,\\n                data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\\n                children: [{\\n                    label: 'Development',\\n                    className: 'department-cto',\\n                    expanded: true,\\n                    children: [{\\n                        label: 'Analysis',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'Front End',\\n                        className: 'department-cto'\\n                    },\\n                    {\\n                        label: 'Back End',\\n                        className: 'department-cto'\\n                    }]\\n                },\\n                {\\n                    label: 'QA',\\n                    className: 'department-cto'\\n                },\\n                {\\n                    label: 'R&D',\\n                    className: 'department-cto'\\n                }]\\n            }\\n        ]\\n    }];\\n\\n    const data2 = [{\\n        label: 'F.C Barcelona',\\n        expanded: true,\\n        children: [\\n            {\\n                label: 'F.C Barcelona',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Chelsea FC'\\n                    },\\n                    {\\n                        label: 'F.C. Barcelona'\\n                    }\\n                ]\\n            },\\n            {\\n                label: 'Real Madrid',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Bayern Munich'\\n                    },\\n                    {\\n                        label: 'Real Madrid'\\n                    }\\n                ]\\n            }\\n        ]\\n    }];\\n\\n    const nodeTemplate = (node) => {\\n        if (node.type === \\\"person\\\") {\\n            return (\\n                <div>\\n                    <div className=\\\"node-header\\\">{node.label}</div>\\n                    <div className=\\\"node-content\\\">\\n                        <img alt={node.data.avatar} src={`showcase/demo/images/organization/${node.data.avatar}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\\n                        <div>{node.data.name}</div>\\n                    </div>\\n                </div>\\n            );\\n        }\\n\\n        if (node.type === \\\"department\\\") {\\n            return node.label;\\n        }\\n    }\\n\\n    return (\\n        <div className=\\\"organizationchart-demo\\\">\\n            <div className=\\\"card\\\">\\n                <h5>Advanced</h5>\\n                <OrganizationChart value={data1} nodeTemplate={nodeTemplate} selection={selection} selectionMode=\\\"multiple\\\"\\n                    onSelectionChange={event => setSelection(event.data)} className=\\\"company\\\"></OrganizationChart>\\n\\n                <h5>Basic</h5>\\n                <OrganizationChart value={data2}></OrganizationChart>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    _this.extFiles = {\n      'src/demo/OrganizationChartDemo.css': {\n        content: \"\\n.organizationchart-demo .p-organizationchart .p-person {\\n    padding: 0;\\n    border: 0 none;\\n}\\n\\n.organizationchart-demo .p-organizationchart .node-header, .organizationchart-demo .p-organizationchart .node-content {\\n    padding: .5em .7rem;\\n}\\n\\n.organizationchart-demo .p-organizationchart .node-header {\\n    background-color: #495ebb;\\n    color: #ffffff;\\n}\\n\\n.organizationchart-demo .p-organizationchart .node-content {\\n    text-align: center;\\n    border: 1px solid #495ebb;\\n}\\n\\n.organizationchart-demo .p-organizationchart .node-content img {\\n    border-radius: 50%;\\n}\\n\\n.organizationchart-demo .p-organizationchart .department-cfo {\\n    background-color: #7247bc;\\n    color: #ffffff;\\n}\\n\\n.organizationchart-demo .p-organizationchart .department-coo {\\n    background-color: #a534b6;\\n    color: #ffffff;\\n}\\n\\n.organizationchart-demo .p-organizationchart .department-cto {\\n    background-color: #e9286f;\\n    color: #ffffff;\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(OrganizationChartDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 1\n        }\n      }, \"\\nimport { OrganizationChart } from 'primereact/organizationchart';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      }, \"OrganizationChart requires a model of TreeNode as its value.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 1\n        }\n      }, \"\\nexport const OrganizationChartDemo = () => {\\n\\n    const data = [{\\n        label: 'F.C Barcelona',\\n        expanded: true,\\n        children: [\\n            {\\n                label: 'F.C Barcelona',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Chelsea FC'\\n                    },\\n                    {\\n                        label: 'F.C. Barcelona'\\n                    }\\n                ]\\n            },\\n            {\\n                label: 'Real Madrid',\\n                expanded: true,\\n                children: [\\n                    {\\n                        label: 'Bayern Munich'\\n                    },\\n                    {\\n                        label: 'Real Madrid'\\n                    }\\n                ]\\n            }\\n        ]\\n    }];\\n\\n    return (\\n        <OrganizationChart value={data}></OrganizationChart>\\n    )\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }\n      }, \"Templating\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 25\n        }\n      }, \"Label of the treenode is displayed inside the node content by default and templating enables further customization.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 1\n        }\n      }, \"\\n<OrganizationChart value={data} nodeTemplate={nodeTemplate}></OrganizationChart>\\n\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 1\n        }\n      }, \"\\n\\nconst nodeTemplate = (node) => {\\n    if (node.type === \\\"person\\\") {\\n        return (\\n            <div>\\n                <div className=\\\"node-header\\\">{node.label}</div>\\n                    <div className=\\\"node-content\\\">\\n                        <img alt={node.data.avatar} src={`showcase/demo/images/organization/${node.data.avatar}`} style={{ width: '32px' }}/>\\n                    <div>{node.data.name}</div>\\n                </div>\\n            </div>\\n        );\\n    }\\n\\n    if (node.type === \\\"department\\\") {\\n        return node.label;\\n    }\\n}\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 25\n        }\n      }, \"Expand/Collapse State\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 25\n        }\n      }, \"In order to display a treenode as expanded by default, set \\\"expanded\\\" property as true in your model.\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 25\n        }\n      }, \"Selection\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 25\n        }\n      }, \"OrganizationChart supports two selection methods; single or multiple. Selection is enabled by setting \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 130\n        }\n      }, \"selectionMode\"), \" property to the corresponding mode, defining \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 196\n        }\n      }, \"selection\"), \" property along with \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 233\n        }\n      }, \"selectionChange\"), \" callback.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 1\n        }\n      }, \"\\n<OrganizationChart value={data} selectionMode=\\\"single\\\" selection={selectedNode} onSelectionChange={event => setSelectedNode(event.data)}></OrganizationChart>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 41\n        }\n      }, \"id\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 41\n        }\n      }, \"Unique identifier of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 41\n        }\n      }, \"value\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 41\n        }\n      }, \"array\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 41\n        }\n      }, \"An array of nested TreeNodes.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 41\n        }\n      }, \"Inline style of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 41\n        }\n      }, \"Style class of the component.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 41\n        }\n      }, \"selectionMode\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 41\n        }\n      }, \"Defines the selection mode, valid values \\\"single\\\" and \\\"multiple\\\".\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 41\n        }\n      }, \"selection\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 41\n        }\n      }, \"any\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 41\n        }\n      }, \"A single treenode instance or an array to refer to the selections.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 41\n        }\n      }, \"nodeTemplate\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 41\n        }\n      }, \"function\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 41\n        }\n      }, \"Template function that gets a node as a parameter and returns a content.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 41\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 41\n        }\n      }, \"onNodeSelect\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 80\n        }\n      }), \"event.node: Selected node instance.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is selected.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 41\n        }\n      }, \"onNodeUnselect\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 80\n        }\n      }), \"event.node: Unselected node instance.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when a node is unselected.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 41\n        }\n      }, \"onSelectionChange\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 80\n        }\n      }), \"event.data: New selection.\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when node selection changes.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 25\n        }\n      }, \"Following is the list of structural style classes.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 41\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 41\n        }\n      }, \"p-organizationchart\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 41\n        }\n      }, \"Container element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 41\n        }\n      }, \"p-organizationchart-table\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 41\n        }\n      }, \"Table container of a node.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 41\n        }\n      }, \"p-organizationchart-lines\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 41\n        }\n      }, \"Connector lines container.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 41\n        }\n      }, \"p-organizationchart-nodes\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 41\n        }\n      }, \"Contained of node children.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 41\n        }\n      }, \"p-organizationchart-line-right\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 41\n        }\n      }, \"Right side line of a node connector.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 41\n        }\n      }, \"p-organizationchart-line-left\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 41\n        }\n      }, \"Left side line of a node connector.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 41\n        }\n      }, \"p-organizationchart-line-top\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 41\n        }\n      }, \"Top side line of a node connector.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 25\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 25\n        }\n      }, \"None.\")), useLiveEditorTabs({\n        name: 'OrganizationChartDemo',\n        sources: this.sources,\n        extFiles: this.extFiles\n      })));\n    }\n  }]);\n\n  return OrganizationChartDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/organizationchart/OrganizationChartDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","OrganizationChartDoc","props","sources","tabName","content","extFiles","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class OrganizationChartDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { OrganizationChart } from 'primereact/organizationchart';\r\nimport './OrganizationChartDemo.css';\r\n\r\nexport class OrganizationChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selection: []\r\n        };\r\n\r\n        this.data1 = [{\r\n            label: 'CEO',\r\n            type: 'person',\r\n            className: 'p-person',\r\n            expanded: true,\r\n            data: { name: 'Walter White', 'avatar': 'walter.jpg' },\r\n            children: [\r\n                {\r\n                    label: 'CFO',\r\n                    type: 'person',\r\n                    className: 'p-person',\r\n                    expanded: true,\r\n                    data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\r\n                    children: [{\r\n                        label: 'Tax',\r\n                        className: 'department-cfo'\r\n                    },\r\n                    {\r\n                        label: 'Legal',\r\n                        className: 'department-cfo'\r\n                    }],\r\n                },\r\n                {\r\n                    label: 'COO',\r\n                    type: 'person',\r\n                    className: 'p-person',\r\n                    expanded: true,\r\n                    data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\r\n                    children: [{\r\n                        label: 'Operations',\r\n                        className: 'department-coo'\r\n                    }]\r\n                },\r\n                {\r\n                    label: 'CTO',\r\n                    type: 'person',\r\n                    className: 'p-person',\r\n                    expanded: true,\r\n                    data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\r\n                    children: [{\r\n                        label: 'Development',\r\n                        className: 'department-cto',\r\n                        expanded: true,\r\n                        children: [{\r\n                            label: 'Analysis',\r\n                            className: 'department-cto'\r\n                        },\r\n                        {\r\n                            label: 'Front End',\r\n                            className: 'department-cto'\r\n                        },\r\n                        {\r\n                            label: 'Back End',\r\n                            className: 'department-cto'\r\n                        }]\r\n                    },\r\n                    {\r\n                        label: 'QA',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'R&D',\r\n                        className: 'department-cto'\r\n                    }]\r\n                }\r\n            ]\r\n        }];\r\n\r\n        this.data2 = [{\r\n            label: 'F.C Barcelona',\r\n            expanded: true,\r\n            children: [\r\n                {\r\n                    label: 'F.C Barcelona',\r\n                    expanded: true,\r\n                    children: [\r\n                        {\r\n                            label: 'Chelsea FC'\r\n                        },\r\n                        {\r\n                            label: 'F.C. Barcelona'\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    label: 'Real Madrid',\r\n                    expanded: true,\r\n                    children: [\r\n                        {\r\n                            label: 'Bayern Munich'\r\n                        },\r\n                        {\r\n                            label: 'Real Madrid'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }];\r\n\r\n        this.nodeTemplate = this.nodeTemplate.bind(this);\r\n    }\r\n\r\n    nodeTemplate(node) {\r\n        if (node.type === \"person\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"node-header\">{node.label}</div>\r\n                    <div className=\"node-content\">\r\n                        <img alt={node.data.avatar} src={\\`showcase/demo/images/organization/\\${node.data.avatar}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\r\n                        <div>{node.data.name}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (node.type === \"department\") {\r\n            return node.label;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"organizationchart-demo\">\r\n                <div className=\"card\">\r\n                    <h5>Advanced</h5>\r\n                    <OrganizationChart value={this.data1} nodeTemplate={this.nodeTemplate} selection={this.state.selection} selectionMode=\"multiple\"\r\n                        onSelectionChange={event => this.setState({ selection: event.data })} className=\"company\"></OrganizationChart>\r\n\r\n                    <h5>Basic</h5>\r\n                    <OrganizationChart value={this.data2}></OrganizationChart>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { OrganizationChart } from 'primereact/organizationchart';\r\nimport './OrganizationChartDemo.css';\r\n\r\nconst OrganizationChartDemo = () => {\r\n    const [selection, setSelection] = useState([]);\r\n    const data1 = [{\r\n        label: 'CEO',\r\n        type: 'person',\r\n        className: 'p-person',\r\n        expanded: true,\r\n        data: { name: 'Walter White', 'avatar': 'walter.jpg' },\r\n        children: [\r\n            {\r\n                label: 'CFO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\r\n                children: [{\r\n                    label: 'Tax',\r\n                    className: 'department-cfo'\r\n                },\r\n                {\r\n                    label: 'Legal',\r\n                    className: 'department-cfo'\r\n                }],\r\n            },\r\n            {\r\n                label: 'COO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\r\n                children: [{\r\n                    label: 'Operations',\r\n                    className: 'department-coo'\r\n                }]\r\n            },\r\n            {\r\n                label: 'CTO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\r\n                children: [{\r\n                    label: 'Development',\r\n                    className: 'department-cto',\r\n                    expanded: true,\r\n                    children: [{\r\n                        label: 'Analysis',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'Front End',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'Back End',\r\n                        className: 'department-cto'\r\n                    }]\r\n                },\r\n                {\r\n                    label: 'QA',\r\n                    className: 'department-cto'\r\n                },\r\n                {\r\n                    label: 'R&D',\r\n                    className: 'department-cto'\r\n                }]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    const data2 = [{\r\n        label: 'F.C Barcelona',\r\n        expanded: true,\r\n        children: [\r\n            {\r\n                label: 'F.C Barcelona',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Chelsea FC'\r\n                    },\r\n                    {\r\n                        label: 'F.C. Barcelona'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Real Madrid',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Bayern Munich'\r\n                    },\r\n                    {\r\n                        label: 'Real Madrid'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    const nodeTemplate = (node) => {\r\n        if (node.type === \"person\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"node-header\">{node.label}</div>\r\n                    <div className=\"node-content\">\r\n                        <img alt={node.data.avatar} src={\\`showcase/demo/images/organization/\\${node.data.avatar}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\r\n                        <div>{node.data.name}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (node.type === \"department\") {\r\n            return node.label;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"organizationchart-demo\">\r\n            <div className=\"card\">\r\n                <h5>Advanced</h5>\r\n                <OrganizationChart value={data1} nodeTemplate={nodeTemplate} selection={selection} selectionMode=\"multiple\"\r\n                    onSelectionChange={event => setSelection(event.data)} className=\"company\"></OrganizationChart>\r\n\r\n                <h5>Basic</h5>\r\n                <OrganizationChart value={data2}></OrganizationChart>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { OrganizationChart } from 'primereact/organizationchart';\r\nimport './OrganizationChartDemo.css';\r\n\r\nconst OrganizationChartDemo = () => {\r\n    const [selection, setSelection] = useState([]);\r\n    const data1 = [{\r\n        label: 'CEO',\r\n        type: 'person',\r\n        className: 'p-person',\r\n        expanded: true,\r\n        data: { name: 'Walter White', 'avatar': 'walter.jpg' },\r\n        children: [\r\n            {\r\n                label: 'CFO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Saul Goodman', 'avatar': 'saul.jpg' },\r\n                children: [{\r\n                    label: 'Tax',\r\n                    className: 'department-cfo'\r\n                },\r\n                {\r\n                    label: 'Legal',\r\n                    className: 'department-cfo'\r\n                }],\r\n            },\r\n            {\r\n                label: 'COO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Mike E.', 'avatar': 'mike.jpg' },\r\n                children: [{\r\n                    label: 'Operations',\r\n                    className: 'department-coo'\r\n                }]\r\n            },\r\n            {\r\n                label: 'CTO',\r\n                type: 'person',\r\n                className: 'p-person',\r\n                expanded: true,\r\n                data: { name: 'Jesse Pinkman', 'avatar': 'jesse.jpg' },\r\n                children: [{\r\n                    label: 'Development',\r\n                    className: 'department-cto',\r\n                    expanded: true,\r\n                    children: [{\r\n                        label: 'Analysis',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'Front End',\r\n                        className: 'department-cto'\r\n                    },\r\n                    {\r\n                        label: 'Back End',\r\n                        className: 'department-cto'\r\n                    }]\r\n                },\r\n                {\r\n                    label: 'QA',\r\n                    className: 'department-cto'\r\n                },\r\n                {\r\n                    label: 'R&D',\r\n                    className: 'department-cto'\r\n                }]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    const data2 = [{\r\n        label: 'F.C Barcelona',\r\n        expanded: true,\r\n        children: [\r\n            {\r\n                label: 'F.C Barcelona',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Chelsea FC'\r\n                    },\r\n                    {\r\n                        label: 'F.C. Barcelona'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Real Madrid',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Bayern Munich'\r\n                    },\r\n                    {\r\n                        label: 'Real Madrid'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    const nodeTemplate = (node) => {\r\n        if (node.type === \"person\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"node-header\">{node.label}</div>\r\n                    <div className=\"node-content\">\r\n                        <img alt={node.data.avatar} src={\\`showcase/demo/images/organization/\\${node.data.avatar}\\`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} style={{ width: '32px' }} />\r\n                        <div>{node.data.name}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (node.type === \"department\") {\r\n            return node.label;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"organizationchart-demo\">\r\n            <div className=\"card\">\r\n                <h5>Advanced</h5>\r\n                <OrganizationChart value={data1} nodeTemplate={nodeTemplate} selection={selection} selectionMode=\"multiple\"\r\n                    onSelectionChange={event => setSelection(event.data)} className=\"company\"></OrganizationChart>\r\n\r\n                <h5>Basic</h5>\r\n                <OrganizationChart value={data2}></OrganizationChart>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n\r\n        this.extFiles = {\r\n            'src/demo/OrganizationChartDemo.css': {\r\n                content: `\r\n.organizationchart-demo .p-organizationchart .p-person {\r\n    padding: 0;\r\n    border: 0 none;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .node-header, .organizationchart-demo .p-organizationchart .node-content {\r\n    padding: .5em .7rem;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .node-header {\r\n    background-color: #495ebb;\r\n    color: #ffffff;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .node-content {\r\n    text-align: center;\r\n    border: 1px solid #495ebb;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .node-content img {\r\n    border-radius: 50%;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .department-cfo {\r\n    background-color: #7247bc;\r\n    color: #ffffff;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .department-coo {\r\n    background-color: #a534b6;\r\n    color: #ffffff;\r\n}\r\n\r\n.organizationchart-demo .p-organizationchart .department-cto {\r\n    background-color: #e9286f;\r\n    color: #ffffff;\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { OrganizationChart } from 'primereact/organizationchart';\r\n`}\r\n</CodeHighlight>\r\n\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>OrganizationChart requires a model of TreeNode as its value.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nexport const OrganizationChartDemo = () => {\r\n\r\n    const data = [{\r\n        label: 'F.C Barcelona',\r\n        expanded: true,\r\n        children: [\r\n            {\r\n                label: 'F.C Barcelona',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Chelsea FC'\r\n                    },\r\n                    {\r\n                        label: 'F.C. Barcelona'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Real Madrid',\r\n                expanded: true,\r\n                children: [\r\n                    {\r\n                        label: 'Bayern Munich'\r\n                    },\r\n                    {\r\n                        label: 'Real Madrid'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }];\r\n\r\n    return (\r\n        <OrganizationChart value={data}></OrganizationChart>\r\n    )\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Templating</h5>\r\n                        <p>Label of the treenode is displayed inside the node content by default and templating enables further customization.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<OrganizationChart value={data} nodeTemplate={nodeTemplate}></OrganizationChart>\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\n\r\nconst nodeTemplate = (node) => {\r\n    if (node.type === \"person\") {\r\n        return (\r\n            <div>\r\n                <div className=\"node-header\">{node.label}</div>\r\n                    <div className=\"node-content\">\r\n                        <img alt={node.data.avatar} src={\\`showcase/demo/images/organization/\\${node.data.avatar}\\`} style={{ width: '32px' }}/>\r\n                    <div>{node.data.name}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (node.type === \"department\") {\r\n        return node.label;\r\n    }\r\n}\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Expand/Collapse State</h5>\r\n                        <p>In order to display a treenode as expanded by default, set \"expanded\" property as true in your model.</p>\r\n\r\n                        <h5>Selection</h5>\r\n                        <p>OrganizationChart supports two selection methods; single or multiple. Selection is enabled by setting <i>selectionMode</i> property to the corresponding mode, defining <i>selection</i> property along with <i>selectionChange</i> callback.</p>\r\n<CodeHighlight>\r\n{`\r\n<OrganizationChart value={data} selectionMode=\"single\" selection={selectedNode} onSelectionChange={event => setSelectedNode(event.data)}></OrganizationChart>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>value</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of nested TreeNodes.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>selectionMode</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Defines the selection mode, valid values \"single\" and \"multiple\".</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>selection</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>A single treenode instance or an array to refer to the selections.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>nodeTemplate</td>\r\n                                        <td>function</td>\r\n                                        <td>null</td>\r\n                                        <td>Template function that gets a node as a parameter and returns a content.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onNodeSelect</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                    event.node: Selected node instance.</td>\r\n                                        <td>Callback to invoke when a node is selected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onNodeUnselect</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                    event.node: Unselected node instance.</td>\r\n                                        <td>Callback to invoke when a node is unselected.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onSelectionChange</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                    event.data: New selection.</td>\r\n                                        <td>Callback to invoke when node selection changes.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-organizationchart</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-table</td>\r\n                                        <td>Table container of a node.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-lines</td>\r\n                                        <td>Connector lines container.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-nodes</td>\r\n                                        <td>Contained of node children.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-line-right</td>\r\n                                        <td>Right side line of a node connector.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-line-left</td>\r\n                                        <td>Left side line of a node connector.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-organizationchart-line-top</td>\r\n                                        <td>Top side line of a node connector.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'OrganizationChartDemo', sources: this.sources, extFiles: this.extFiles })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}