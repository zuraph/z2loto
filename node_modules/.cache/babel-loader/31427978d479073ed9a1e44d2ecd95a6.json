{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\colorpicker\\\\ColorPickerPanel.js\",\n    _this = this;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { classNames } from '../utils/ClassNames';\nimport { CSSTransition } from 'react-transition-group';\n\nvar ColorPickerPanelComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ColorPickerPanelComponent, _Component);\n\n  var _super = _createSuper(ColorPickerPanelComponent);\n\n  function ColorPickerPanelComponent() {\n    _classCallCheck(this, ColorPickerPanelComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ColorPickerPanelComponent, [{\n    key: \"renderElement\",\n    value: function renderElement() {\n      var className = classNames('p-colorpicker-panel', {\n        'p-colorpicker-overlay-panel': !this.props.inline,\n        'p-disabled': this.props.disabled\n      });\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.props.forwardRef,\n        classNames: \"p-connected-overlay\",\n        in: this.props.in,\n        timeout: {\n          enter: 120,\n          exit: 100\n        },\n        unmountOnExit: true,\n        onEnter: this.props.onEnter,\n        onEntered: this.props.onEntered,\n        onExit: this.props.onExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.props.forwardRef,\n        className: className,\n        onClick: this.props.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, this.props.children));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderElement();\n\n      if (this.props.appendTo) {\n        return ReactDOM.createPortal(element, this.props.appendTo);\n      } else {\n        return element;\n      }\n    }\n  }]);\n\n  return ColorPickerPanelComponent;\n}(Component);\n\nColorPickerPanelComponent.defaultProps = {\n  appendTo: null,\n  inline: false,\n  disabled: false,\n  onClick: null\n};\nColorPickerPanelComponent.propTypes = {\n  appendTo: PropTypes.any,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport var ColorPickerPanel = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(ColorPickerPanelComponent, Object.assign({\n    forwardRef: ref\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 66\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/colorpicker/ColorPickerPanel.js"],"names":["React","Component","PropTypes","ReactDOM","classNames","CSSTransition","ColorPickerPanelComponent","className","props","inline","disabled","forwardRef","in","enter","exit","onEnter","onEntered","onExit","onClick","children","element","renderElement","appendTo","createPortal","defaultProps","propTypes","any","bool","func","ColorPickerPanel","ref"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAEMC,yB;;;;;;;;;;;;;WAgBF,yBAAgB;AACZ,UAAIC,SAAS,GAAGH,UAAU,CAAC,qBAAD,EAAwB;AAC9C,uCAA+B,CAAC,KAAKI,KAAL,CAAWC,MADG;AAE9C,sBAAc,KAAKD,KAAL,CAAWE;AAFqB,OAAxB,CAA1B;AAKA,0BACI,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,UAAnC;AAA+C,QAAA,UAAU,EAAC,qBAA1D;AAAgF,QAAA,EAAE,EAAE,KAAKH,KAAL,CAAWI,EAA/F;AAAmG,QAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,IAAI,EAAE;AAApB,SAA5G;AACI,QAAA,aAAa,MADjB;AACkB,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OADtC;AAC+C,QAAA,SAAS,EAAE,KAAKP,KAAL,CAAWQ,SADrE;AACgF,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MADnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAK,QAAA,GAAG,EAAE,KAAKT,KAAL,CAAWG,UAArB;AAAiC,QAAA,SAAS,EAAEJ,SAA5C;AAAuD,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWU,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKV,KAAL,CAAWW,QADhB,CAFJ,CADJ;AAQH;;;WAED,kBAAS;AACL,UAAIC,OAAO,GAAG,KAAKC,aAAL,EAAd;;AAEA,UAAI,KAAKb,KAAL,CAAWc,QAAf,EAAyB;AACrB,eAAOnB,QAAQ,CAACoB,YAAT,CAAsBH,OAAtB,EAA+B,KAAKZ,KAAL,CAAWc,QAA1C,CAAP;AACH,OAFD,MAGK;AACD,eAAOF,OAAP;AACH;AACJ;;;;EAzCmCnB,S;;AAAlCK,yB,CAEKkB,Y,GAAe;AAClBF,EAAAA,QAAQ,EAAE,IADQ;AAElBb,EAAAA,MAAM,EAAE,KAFU;AAGlBC,EAAAA,QAAQ,EAAE,KAHQ;AAIlBQ,EAAAA,OAAO,EAAE;AAJS,C;AAFpBZ,yB,CASKmB,S,GAAY;AACfH,EAAAA,QAAQ,EAAEpB,SAAS,CAACwB,GADL;AAEfjB,EAAAA,MAAM,EAAEP,SAAS,CAACyB,IAFH;AAGfjB,EAAAA,QAAQ,EAAER,SAAS,CAACyB,IAHL;AAIfT,EAAAA,OAAO,EAAEhB,SAAS,CAAC0B;AAJJ,C;AAmCvB,OAAO,IAAMC,gBAAgB,GAAG7B,KAAK,CAACW,UAAN,CAAiB,UAACH,KAAD,EAAQsB,GAAR;AAAA,sBAAgB,oBAAC,yBAAD;AAA2B,IAAA,UAAU,EAAEA;AAAvC,KAAgDtB,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;AAAA,CAAjB,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass ColorPickerPanelComponent extends Component {\r\n\r\n    static defaultProps = {\r\n        appendTo: null,\r\n        inline: false,\r\n        disabled: false,\r\n        onClick: null\r\n    }\r\n\r\n    static propTypes = {\r\n        appendTo: PropTypes.any,\r\n        inline: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        onClick: PropTypes.func\r\n    }\r\n\r\n    renderElement() {\r\n        let className = classNames('p-colorpicker-panel', {\r\n            'p-colorpicker-overlay-panel': !this.props.inline,\r\n            'p-disabled': this.props.disabled\r\n        });\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.props.forwardRef} classNames=\"p-connected-overlay\" in={this.props.in} timeout={{ enter: 120, exit: 100 }}\r\n                unmountOnExit onEnter={this.props.onEnter} onEntered={this.props.onEntered} onExit={this.props.onExit}>\r\n                <div ref={this.props.forwardRef} className={className} onClick={this.props.onClick}>\r\n                    {this.props.children}\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let element = this.renderElement();\r\n\r\n        if (this.props.appendTo) {\r\n            return ReactDOM.createPortal(element, this.props.appendTo);\r\n        }\r\n        else {\r\n            return element;\r\n        }\r\n    }\r\n}\r\n\r\nexport const ColorPickerPanel = React.forwardRef((props, ref) => <ColorPickerPanelComponent forwardRef={ref} {...props} />);\r\n"]},"metadata":{},"sourceType":"module"}