{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\tree\\\\TreeDemo.js\";\nimport React, { Component } from 'react';\nimport { Tree } from '../../components/tree/Tree';\nimport { Button } from '../../components/button/Button';\nimport { NodeService } from '../service/NodeService';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nimport { TreeDoc } from './TreeDoc';\nexport var TreeDemo = /*#__PURE__*/function (_Component) {\n  _inherits(TreeDemo, _Component);\n\n  var _super = _createSuper(TreeDemo);\n\n  function TreeDemo(props) {\n    var _this;\n\n    _classCallCheck(this, TreeDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      nodes: null,\n      expandedKeys: {}\n    };\n    _this.nodeService = new NodeService();\n    _this.expandAll = _this.expandAll.bind(_assertThisInitialized(_this));\n    _this.collapseAll = _this.collapseAll.bind(_assertThisInitialized(_this));\n    _this.expandNode = _this.expandNode.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TreeDemo, [{\n    key: \"expandAll\",\n    value: function expandAll() {\n      var expandedKeys = {};\n\n      var _iterator = _createForOfIteratorHelper(this.state.nodes),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var node = _step.value;\n          this.expandNode(node, expandedKeys);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.setState({\n        expandedKeys: expandedKeys\n      });\n    }\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      this.setState({\n        expandedKeys: {}\n      });\n    }\n  }, {\n    key: \"expandNode\",\n    value: function expandNode(node, expandedKeys) {\n      if (node.children && node.children.length) {\n        expandedKeys[node.key] = true;\n\n        var _iterator2 = _createForOfIteratorHelper(node.children),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var child = _step2.value;\n            this.expandNode(child, expandedKeys);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.nodeService.getTreeNodes().then(function (data) {\n        return _this2.setState({\n          nodes: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"tree\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"Tree\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"Tree is used to display hierarchical data.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"Basic\"), /*#__PURE__*/React.createElement(Tree, {\n        value: this.state.nodes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"Programmatic Control\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        icon: \"pi pi-plus\",\n        label: \"Expand All\",\n        onClick: this.expandAll,\n        className: \"p-mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        icon: \"pi pi-minus\",\n        label: \"Collapse All\",\n        onClick: this.collapseAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Tree, {\n        value: this.state.nodes,\n        expandedKeys: this.state.expandedKeys,\n        onToggle: function onToggle(e) {\n          return _this3.setState({\n            expandedKeys: e.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(TreeDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return TreeDemo;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/tree/TreeDemo.js"],"names":["React","Component","Tree","Button","NodeService","AppInlineHeader","TreeDoc","TreeDemo","props","state","nodes","expandedKeys","nodeService","expandAll","bind","collapseAll","expandNode","node","setState","children","length","key","child","getTreeNodes","then","data","e","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Tree } from '../../components/tree/Tree';\r\nimport { Button } from '../../components/button/Button';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport { TreeDoc } from './TreeDoc';\r\n\r\nexport class TreeDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: null,\r\n            expandedKeys: {}\r\n        };\r\n\r\n        this.nodeService = new NodeService();\r\n        this.expandAll = this.expandAll.bind(this);\r\n        this.collapseAll = this.collapseAll.bind(this);\r\n        this.expandNode = this.expandNode.bind(this);\r\n    }\r\n\r\n    expandAll() {\r\n        let expandedKeys = {};\r\n        for (let node of this.state.nodes) {\r\n            this.expandNode(node, expandedKeys);\r\n        }\r\n\r\n        this.setState({ expandedKeys });\r\n    }\r\n\r\n    collapseAll() {\r\n        this.setState({ expandedKeys: {} });\r\n    }\r\n\r\n    expandNode(node, expandedKeys) {\r\n        if (node.children && node.children.length) {\r\n            expandedKeys[node.key] = true;\r\n\r\n            for (let child of node.children) {\r\n                this.expandNode(child, expandedKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeService.getTreeNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"tree\">\r\n                        <h1>Tree</h1>\r\n                        <p>Tree is used to display hierarchical data.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <h5>Basic</h5>\r\n                        <Tree value={this.state.nodes} />\r\n\r\n                        <h5>Programmatic Control</h5>\r\n                        <div className=\"p-mb-4\">\r\n                            <Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" onClick={this.expandAll} className=\"p-mr-2\" />\r\n                            <Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" onClick={this.collapseAll} />\r\n                        </div>\r\n                        <Tree value={this.state.nodes} expandedKeys={this.state.expandedKeys}\r\n                            onToggle={e => this.setState({ expandedKeys: e.value })} />\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}