{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\confirmdialog\\\\ConfirmDialog.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport { Dialog } from '../dialog/Dialog';\nimport { Button } from '../button/Button';\nimport DomHandler from '../utils/DomHandler';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { localeOption } from '../api/Locale';\nexport function confirmDialog(props) {\n  var appendTo = props.appendTo || document.body;\n  var confirmDialogWrapper = document.createDocumentFragment();\n  DomHandler.appendChild(confirmDialogWrapper, appendTo);\n  props = _objectSpread(_objectSpread({}, props), {\n    visible: props.visible === undefined ? true : props.visible\n  });\n  var confirmDialogEl = React.createElement(ConfirmDialog, props);\n  ReactDOM.render(confirmDialogEl, confirmDialogWrapper);\n\n  var updateConfirmDialog = function updateConfirmDialog(newProps) {\n    props = _objectSpread(_objectSpread({}, props), newProps);\n    ReactDOM.render(React.cloneElement(confirmDialogEl, props), confirmDialogWrapper);\n  };\n\n  return {\n    _destroy: function _destroy() {\n      ReactDOM.unmountComponentAtNode(confirmDialogWrapper);\n    },\n    show: function show() {\n      updateConfirmDialog({\n        visible: true,\n        onHide: function onHide() {\n          updateConfirmDialog({\n            visible: false\n          }); // reset\n        }\n      });\n    },\n    hide: function hide() {\n      updateConfirmDialog({\n        visible: false\n      });\n    },\n    update: function update(newProps) {\n      updateConfirmDialog(newProps);\n    }\n  };\n}\nexport var ConfirmDialog = /*#__PURE__*/function (_Component) {\n  _inherits(ConfirmDialog, _Component);\n\n  var _super = _createSuper(ConfirmDialog);\n\n  function ConfirmDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ConfirmDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: props.visible\n    };\n    _this.appendTo = props.appendTo || document.body;\n    _this.reject = _this.reject.bind(_assertThisInitialized(_this));\n    _this.accept = _this.accept.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ConfirmDialog, [{\n    key: \"acceptLabel\",\n    value: function acceptLabel() {\n      return this.props.acceptLabel || localeOption('accept');\n    }\n  }, {\n    key: \"rejectLabel\",\n    value: function rejectLabel() {\n      return this.props.rejectLabel || localeOption('reject');\n    }\n  }, {\n    key: \"accept\",\n    value: function accept() {\n      if (this.props.accept) {\n        this.props.accept();\n      }\n\n      this.hide('accept');\n    }\n  }, {\n    key: \"reject\",\n    value: function reject() {\n      if (this.props.reject) {\n        this.props.reject();\n      }\n\n      this.hide('reject');\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.setState({\n        visible: true\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(result) {\n      var _this2 = this;\n\n      this.setState({\n        visible: false\n      }, function () {\n        if (_this2.props.onHide) {\n          _this2.props.onHide(result);\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.setState({\n          visible: this.props.visible\n        });\n      }\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var acceptClassName = classNames('p-confirm-dialog-accept', this.props.acceptClassName);\n      var rejectClassName = classNames('p-confirm-dialog-reject', {\n        'p-button-text': !this.props.rejectClassName\n      }, this.props.rejectClassName);\n      return this.props.footer ? ObjectUtils.getJSXElement(this.props.footer, this.props) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        label: this.rejectLabel(),\n        icon: this.props.rejectIcon,\n        className: rejectClassName,\n        onClick: this.reject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        label: this.acceptLabel(),\n        icon: this.props.acceptIcon,\n        className: acceptClassName,\n        onClick: this.accept,\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement() {\n      var className = classNames('p-confirm-dialog', this.props.className);\n      var iconClassName = classNames('p-confirm-dialog-icon', this.props.icon);\n      var dialogProps = ObjectUtils.findDiffKeys(this.props, ConfirmDialog.defaultProps);\n      var message = ObjectUtils.getJSXElement(this.props.message, this.props);\n      var footer = this.renderFooter();\n      return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n        visible: this.state.visible\n      }, dialogProps, {\n        className: className,\n        footer: footer,\n        onHide: this.hide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: iconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-confirm-dialog-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, message));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.renderElement();\n      return ReactDOM.createPortal(element, this.appendTo);\n    }\n  }]);\n\n  return ConfirmDialog;\n}(Component);\nConfirmDialog.defaultProps = {\n  visible: false,\n  message: null,\n  rejectLabel: null,\n  acceptLabel: null,\n  icon: null,\n  rejectIcon: null,\n  acceptIcon: null,\n  rejectClassName: null,\n  acceptClassName: null,\n  className: null,\n  appendTo: null,\n  footer: null,\n  onHide: null,\n  accept: null,\n  reject: null\n};\nConfirmDialog.propTypes = {\n  visible: PropTypes.bool,\n  message: PropTypes.any,\n  rejectLabel: PropTypes.string,\n  acceptLabel: PropTypes.string,\n  icon: PropTypes.string,\n  rejectIcon: PropTypes.string,\n  acceptIcon: PropTypes.string,\n  rejectClassName: PropTypes.string,\n  acceptClassName: PropTypes.string,\n  appendTo: PropTypes.any,\n  className: PropTypes.string,\n  footer: PropTypes.any,\n  onHide: PropTypes.func,\n  accept: PropTypes.func,\n  reject: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/confirmdialog/ConfirmDialog.js"],"names":["React","Component","ReactDOM","PropTypes","classNames","Dialog","Button","DomHandler","ObjectUtils","localeOption","confirmDialog","props","appendTo","document","body","confirmDialogWrapper","createDocumentFragment","appendChild","visible","undefined","confirmDialogEl","createElement","ConfirmDialog","render","updateConfirmDialog","newProps","cloneElement","_destroy","unmountComponentAtNode","show","onHide","hide","update","state","reject","bind","accept","acceptLabel","rejectLabel","setState","result","prevProps","acceptClassName","rejectClassName","footer","getJSXElement","rejectIcon","acceptIcon","className","iconClassName","icon","dialogProps","findDiffKeys","defaultProps","message","renderFooter","element","renderElement","createPortal","propTypes","bool","any","string","func"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAN,IAAkBC,QAAQ,CAACC,IAA1C;AAEA,MAAIC,oBAAoB,GAAGF,QAAQ,CAACG,sBAAT,EAA3B;AACAT,EAAAA,UAAU,CAACU,WAAX,CAAuBF,oBAAvB,EAA6CH,QAA7C;AAEAD,EAAAA,KAAK,mCAAOA,KAAP,GAAiB;AAACO,IAAAA,OAAO,EAAEP,KAAK,CAACO,OAAN,KAAkBC,SAAlB,GAA8B,IAA9B,GAAqCR,KAAK,CAACO;AAArD,GAAjB,CAAL;AAEA,MAAIE,eAAe,GAAGpB,KAAK,CAACqB,aAAN,CAAoBC,aAApB,EAAmCX,KAAnC,CAAtB;AACAT,EAAAA,QAAQ,CAACqB,MAAT,CAAgBH,eAAhB,EAAiCL,oBAAjC;;AAEA,MAAIS,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD,EAAc;AACpCd,IAAAA,KAAK,mCAAQA,KAAR,GAAkBc,QAAlB,CAAL;AACAvB,IAAAA,QAAQ,CAACqB,MAAT,CAAgBvB,KAAK,CAAC0B,YAAN,CAAmBN,eAAnB,EAAoCT,KAApC,CAAhB,EAA4DI,oBAA5D;AACH,GAHD;;AAKA,SAAO;AACHY,IAAAA,QAAQ,EAAE,oBAAM;AACZzB,MAAAA,QAAQ,CAAC0B,sBAAT,CAAgCb,oBAAhC;AACH,KAHE;AAIHc,IAAAA,IAAI,EAAE,gBAAM;AACRL,MAAAA,mBAAmB,CAAC;AAAEN,QAAAA,OAAO,EAAE,IAAX;AAAiBY,QAAAA,MAAM,EAAE,kBAAM;AAC/CN,UAAAA,mBAAmB,CAAC;AAAEN,YAAAA,OAAO,EAAE;AAAX,WAAD,CAAnB,CAD+C,CACN;AAC5C;AAFmB,OAAD,CAAnB;AAGH,KARE;AASHa,IAAAA,IAAI,EAAE,gBAAM;AACRP,MAAAA,mBAAmB,CAAC;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAnB;AACH,KAXE;AAYHc,IAAAA,MAAM,EAAE,gBAACP,QAAD,EAAc;AAClBD,MAAAA,mBAAmB,CAACC,QAAD,CAAnB;AACH;AAdE,GAAP;AAgBH;AAED,WAAaH,aAAb;AAAA;;AAAA;;AAsCI,yBAAYX,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKsB,KAAL,GAAa;AACTf,MAAAA,OAAO,EAAEP,KAAK,CAACO;AADN,KAAb;AAIA,UAAKN,QAAL,GAAgBD,KAAK,CAACC,QAAN,IAAkBC,QAAQ,CAACC,IAA3C;AAEA,UAAKoB,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AACA,UAAKJ,IAAL,GAAY,MAAKA,IAAL,CAAUI,IAAV,+BAAZ;AAXe;AAYlB;;AAlDL;AAAA;AAAA,WAoDI,uBAAc;AACV,aAAO,KAAKxB,KAAL,CAAW0B,WAAX,IAA0B5B,YAAY,CAAC,QAAD,CAA7C;AACH;AAtDL;AAAA;AAAA,WAwDI,uBAAc;AACV,aAAO,KAAKE,KAAL,CAAW2B,WAAX,IAA0B7B,YAAY,CAAC,QAAD,CAA7C;AACH;AA1DL;AAAA;AAAA,WA4DI,kBAAS;AACL,UAAI,KAAKE,KAAL,CAAWyB,MAAf,EAAuB;AACnB,aAAKzB,KAAL,CAAWyB,MAAX;AACH;;AAED,WAAKL,IAAL,CAAU,QAAV;AACH;AAlEL;AAAA;AAAA,WAoEI,kBAAS;AACL,UAAI,KAAKpB,KAAL,CAAWuB,MAAf,EAAuB;AACnB,aAAKvB,KAAL,CAAWuB,MAAX;AACH;;AAED,WAAKH,IAAL,CAAU,QAAV;AACH;AA1EL;AAAA;AAAA,WA4EI,gBAAO;AACH,WAAKQ,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH;AA9EL;AAAA;AAAA,WAgFI,cAAKsB,MAAL,EAAa;AAAA;;AACT,WAAKD,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAkC,YAAM;AACpC,YAAI,MAAI,CAACP,KAAL,CAAWmB,MAAf,EAAuB;AACnB,UAAA,MAAI,CAACnB,KAAL,CAAWmB,MAAX,CAAkBU,MAAlB;AACH;AACJ,OAJD;AAKH;AAtFL;AAAA;AAAA,WAwFI,4BAAmBC,SAAnB,EAA8B;AAC1B,UAAIA,SAAS,CAACvB,OAAV,KAAsB,KAAKP,KAAL,CAAWO,OAArC,EAA8C;AAC1C,aAAKqB,QAAL,CAAc;AAAErB,UAAAA,OAAO,EAAE,KAAKP,KAAL,CAAWO;AAAtB,SAAd;AACH;AACJ;AA5FL;AAAA;AAAA,WA8FI,wBAAe;AACX,UAAMwB,eAAe,GAAGtC,UAAU,CAAC,yBAAD,EAA4B,KAAKO,KAAL,CAAW+B,eAAvC,CAAlC;AACA,UAAMC,eAAe,GAAGvC,UAAU,CAAC,yBAAD,EAA4B;AAC1D,yBAAiB,CAAC,KAAKO,KAAL,CAAWgC;AAD6B,OAA5B,EAE/B,KAAKhC,KAAL,CAAWgC,eAFoB,CAAlC;AAIA,aAAO,KAAKhC,KAAL,CAAWiC,MAAX,GAAoBpC,WAAW,CAACqC,aAAZ,CAA0B,KAAKlC,KAAL,CAAWiC,MAArC,EAA6C,KAAKjC,KAAlD,CAApB,gBACH,uDACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAK2B,WAAL,EAAf;AAAmC,QAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWmC,UAApD;AAAgE,QAAA,SAAS,EAAEH,eAA3E;AAA4F,QAAA,OAAO,EAAE,KAAKT,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKG,WAAL,EAAf;AAAmC,QAAA,IAAI,EAAE,KAAK1B,KAAL,CAAWoC,UAApD;AAAgE,QAAA,SAAS,EAAEL,eAA3E;AAA4F,QAAA,OAAO,EAAE,KAAKN,MAA1G;AAAkH,QAAA,SAAS,MAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;AA1GL;AAAA;AAAA,WA4GI,yBAAgB;AACZ,UAAMY,SAAS,GAAG5C,UAAU,CAAC,kBAAD,EAAqB,KAAKO,KAAL,CAAWqC,SAAhC,CAA5B;AACA,UAAMC,aAAa,GAAG7C,UAAU,CAAC,uBAAD,EAA0B,KAAKO,KAAL,CAAWuC,IAArC,CAAhC;AAEA,UAAMC,WAAW,GAAG3C,WAAW,CAAC4C,YAAZ,CAAyB,KAAKzC,KAA9B,EAAqCW,aAAa,CAAC+B,YAAnD,CAApB;AACA,UAAMC,OAAO,GAAG9C,WAAW,CAACqC,aAAZ,CAA0B,KAAKlC,KAAL,CAAW2C,OAArC,EAA8C,KAAK3C,KAAnD,CAAhB;AACA,UAAMiC,MAAM,GAAG,KAAKW,YAAL,EAAf;AAEA,0BACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWf;AAA5B,SAAyCiC,WAAzC;AAAsD,QAAA,SAAS,EAAEH,SAAjE;AAA4E,QAAA,MAAM,EAAEJ,MAApF;AAA4F,QAAA,MAAM,EAAE,KAAKb,IAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI;AAAG,QAAA,SAAS,EAAEkB,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAM,QAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CK,OAA5C,CAFJ,CADJ;AAMH;AA1HL;AAAA;AAAA,WA4HI,kBAAS;AACL,UAAME,OAAO,GAAG,KAAKC,aAAL,EAAhB;AAEA,aAAOvD,QAAQ,CAACwD,YAAT,CAAsBF,OAAtB,EAA+B,KAAK5C,QAApC,CAAP;AACH;AAhIL;;AAAA;AAAA,EAAmCX,SAAnC;AAAaqB,a,CAEF+B,Y,GAAe;AAClBnC,EAAAA,OAAO,EAAE,KADS;AAElBoC,EAAAA,OAAO,EAAE,IAFS;AAGlBhB,EAAAA,WAAW,EAAE,IAHK;AAIlBD,EAAAA,WAAW,EAAE,IAJK;AAKlBa,EAAAA,IAAI,EAAE,IALY;AAMlBJ,EAAAA,UAAU,EAAE,IANM;AAOlBC,EAAAA,UAAU,EAAE,IAPM;AAQlBJ,EAAAA,eAAe,EAAE,IARC;AASlBD,EAAAA,eAAe,EAAE,IATC;AAUlBM,EAAAA,SAAS,EAAE,IAVO;AAWlBpC,EAAAA,QAAQ,EAAE,IAXQ;AAYlBgC,EAAAA,MAAM,EAAE,IAZU;AAalBd,EAAAA,MAAM,EAAE,IAbU;AAclBM,EAAAA,MAAM,EAAE,IAdU;AAelBF,EAAAA,MAAM,EAAE;AAfU,C;AAFbZ,a,CAoBFqC,S,GAAY;AACfzC,EAAAA,OAAO,EAAEf,SAAS,CAACyD,IADJ;AAEfN,EAAAA,OAAO,EAAEnD,SAAS,CAAC0D,GAFJ;AAGfvB,EAAAA,WAAW,EAAEnC,SAAS,CAAC2D,MAHR;AAIfzB,EAAAA,WAAW,EAAElC,SAAS,CAAC2D,MAJR;AAKfZ,EAAAA,IAAI,EAAE/C,SAAS,CAAC2D,MALD;AAMfhB,EAAAA,UAAU,EAAE3C,SAAS,CAAC2D,MANP;AAOff,EAAAA,UAAU,EAAE5C,SAAS,CAAC2D,MAPP;AAQfnB,EAAAA,eAAe,EAAExC,SAAS,CAAC2D,MARZ;AASfpB,EAAAA,eAAe,EAAEvC,SAAS,CAAC2D,MATZ;AAUflD,EAAAA,QAAQ,EAAET,SAAS,CAAC0D,GAVL;AAWfb,EAAAA,SAAS,EAAE7C,SAAS,CAAC2D,MAXN;AAYflB,EAAAA,MAAM,EAAEzC,SAAS,CAAC0D,GAZH;AAaf/B,EAAAA,MAAM,EAAE3B,SAAS,CAAC4D,IAbH;AAcf3B,EAAAA,MAAM,EAAEjC,SAAS,CAAC4D,IAdH;AAef7B,EAAAA,MAAM,EAAE/B,SAAS,CAAC4D;AAfH,C","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { Dialog } from '../dialog/Dialog';\r\nimport { Button } from '../button/Button';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { localeOption } from '../api/Locale';\r\n\r\nexport function confirmDialog(props) {\r\n    let appendTo = props.appendTo || document.body;\r\n\r\n    let confirmDialogWrapper = document.createDocumentFragment();\r\n    DomHandler.appendChild(confirmDialogWrapper, appendTo);\r\n\r\n    props = {...props, ...{visible: props.visible === undefined ? true : props.visible}};\r\n\r\n    let confirmDialogEl = React.createElement(ConfirmDialog, props);\r\n    ReactDOM.render(confirmDialogEl, confirmDialogWrapper);\r\n\r\n    let updateConfirmDialog = (newProps) => {\r\n        props = { ...props, ...newProps };\r\n        ReactDOM.render(React.cloneElement(confirmDialogEl, props), confirmDialogWrapper);\r\n    };\r\n\r\n    return {\r\n        _destroy: () => {\r\n            ReactDOM.unmountComponentAtNode(confirmDialogWrapper);\r\n        },\r\n        show: () => {\r\n            updateConfirmDialog({ visible: true, onHide: () => {\r\n                updateConfirmDialog({ visible: false }); // reset\r\n            }});\r\n        },\r\n        hide: () => {\r\n            updateConfirmDialog({ visible: false });\r\n        },\r\n        update: (newProps) => {\r\n            updateConfirmDialog(newProps);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ConfirmDialog extends Component {\r\n\r\n    static defaultProps = {\r\n        visible: false,\r\n        message: null,\r\n        rejectLabel: null,\r\n        acceptLabel: null,\r\n        icon: null,\r\n        rejectIcon: null,\r\n        acceptIcon: null,\r\n        rejectClassName: null,\r\n        acceptClassName: null,\r\n        className: null,\r\n        appendTo: null,\r\n        footer: null,\r\n        onHide: null,\r\n        accept: null,\r\n        reject: null\r\n    }\r\n\r\n    static propTypes = {\r\n        visible: PropTypes.bool,\r\n        message: PropTypes.any,\r\n        rejectLabel: PropTypes.string,\r\n        acceptLabel: PropTypes.string,\r\n        icon: PropTypes.string,\r\n        rejectIcon: PropTypes.string,\r\n        acceptIcon: PropTypes.string,\r\n        rejectClassName: PropTypes.string,\r\n        acceptClassName: PropTypes.string,\r\n        appendTo: PropTypes.any,\r\n        className: PropTypes.string,\r\n        footer: PropTypes.any,\r\n        onHide: PropTypes.func,\r\n        accept: PropTypes.func,\r\n        reject: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: props.visible\r\n        };\r\n\r\n        this.appendTo = props.appendTo || document.body;\r\n\r\n        this.reject = this.reject.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.hide = this.hide.bind(this);\r\n    }\r\n\r\n    acceptLabel() {\r\n        return this.props.acceptLabel || localeOption('accept');\r\n    }\r\n\r\n    rejectLabel() {\r\n        return this.props.rejectLabel || localeOption('reject');\r\n    }\r\n\r\n    accept() {\r\n        if (this.props.accept) {\r\n            this.props.accept();\r\n        }\r\n\r\n        this.hide('accept');\r\n    }\r\n\r\n    reject() {\r\n        if (this.props.reject) {\r\n            this.props.reject();\r\n        }\r\n\r\n        this.hide('reject');\r\n    }\r\n\r\n    show() {\r\n        this.setState({ visible: true });\r\n    }\r\n\r\n    hide(result) {\r\n        this.setState({ visible: false }, () => {\r\n            if (this.props.onHide) {\r\n                this.props.onHide(result);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({ visible: this.props.visible });\r\n        }\r\n    }\r\n\r\n    renderFooter() {\r\n        const acceptClassName = classNames('p-confirm-dialog-accept', this.props.acceptClassName);\r\n        const rejectClassName = classNames('p-confirm-dialog-reject', {\r\n            'p-button-text': !this.props.rejectClassName\r\n        }, this.props.rejectClassName);\r\n\r\n        return this.props.footer ? ObjectUtils.getJSXElement(this.props.footer, this.props) : (\r\n            <>\r\n                <Button label={this.rejectLabel()} icon={this.props.rejectIcon} className={rejectClassName} onClick={this.reject} />\r\n                <Button label={this.acceptLabel()} icon={this.props.acceptIcon} className={acceptClassName} onClick={this.accept} autoFocus />\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderElement() {\r\n        const className = classNames('p-confirm-dialog', this.props.className);\r\n        const iconClassName = classNames('p-confirm-dialog-icon', this.props.icon);\r\n\r\n        const dialogProps = ObjectUtils.findDiffKeys(this.props, ConfirmDialog.defaultProps);\r\n        const message = ObjectUtils.getJSXElement(this.props.message, this.props);\r\n        const footer = this.renderFooter();\r\n\r\n        return (\r\n            <Dialog visible={this.state.visible} {...dialogProps} className={className} footer={footer} onHide={this.hide}>\r\n                <i className={iconClassName} />\r\n                <span className=\"p-confirm-dialog-message\">{message}</span>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const element = this.renderElement();\r\n\r\n        return ReactDOM.createPortal(element, this.appendTo);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}