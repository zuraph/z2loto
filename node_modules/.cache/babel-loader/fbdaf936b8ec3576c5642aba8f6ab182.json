{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var SidebarDoc=/*#__PURE__*/function(_Component){_inherits(SidebarDoc,_Component);var _super=_createSuper(SidebarDoc);function SidebarDoc(props){var _this;_classCallCheck(this,SidebarDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Sidebar } from 'primereact/sidebar';\\nimport { Button } from 'primereact/button';\\n\\nexport class SidebarDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            visibleLeft: false,\\n            visibleRight: false,\\n            visibleTop: false,\\n            visibleBottom: false,\\n            visibleFullScreen: false,\\n            visibleCustomToolbar: false\\n        };\\n    }\\n\\n    render() {\\n        const customIcons = (\\n            <React.Fragment>\\n                <button className=\\\"p-sidebar-icon p-link p-mr-1\\\">\\n                    <span className=\\\"pi pi-print\\\" />\\n                </button>\\n                <button className=\\\"p-sidebar-icon p-link p-mr-1\\\">\\n                    <span className=\\\"pi pi-arrow-right\\\" />\\n                </button>\\n            </React.Fragment>\\n        );\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <Sidebar visible={this.state.visibleLeft} baseZIndex={1000000} onHide={() => this.setState({ visibleLeft: false })}>\\n                        <h1 style={{ fontWeight: 'normal' }}>Left Sidebar</h1>\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleLeft: false })} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleLeft: false })} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                    </Sidebar>\\n\\n                    <Sidebar visible={this.state.visibleRight} position=\\\"right\\\" baseZIndex={1000000} onHide={() => this.setState({ visibleRight: false })}>\\n                        <h1 style={{ fontWeight: 'normal' }}>Right Sidebar</h1>\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleRight: false })} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleRight: false })} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                    </Sidebar>\\n\\n                    <Sidebar visible={this.state.visibleTop} position=\\\"top\\\" baseZIndex={1000000} onHide={() => this.setState({ visibleTop: false })}>\\n                        <h1 style={{ fontWeight: 'normal' }}>Top Sidebar</h1>\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleTop: false })} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleTop: false })} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                    </Sidebar>\\n\\n                    <Sidebar visible={this.state.visibleBottom} position=\\\"bottom\\\" baseZIndex={1000000} onHide={() => this.setState({ visibleBottom: false })}>\\n                        <h1 style={{ fontWeight: 'normal' }}>Bottom Sidebar</h1>\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleBottom: false })} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleBottom: false })} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                    </Sidebar>\\n\\n                    <Sidebar visible={this.state.visibleFullScreen} fullScreen baseZIndex={1000000} onHide={() => this.setState({ visibleFullScreen: false })}>\\n                        <h1 style={{ fontWeight: 'normal' }}>Full Screen Sidebar</h1>\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleFullScreen: false })} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleFullScreen: false })} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                    </Sidebar>\\n\\n                    <Sidebar visible={this.state.visibleCustomToolbar} baseZIndex={1000000} onHide={() => this.setState({ visibleCustomToolbar: false })} icons={customIcons}>\\n                        <h1 style={{ fontWeight: 'normal' }}>Sidebar with custom icons</h1>\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleCustomToolbar: false })} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                        <Button type=\\\"button\\\" onClick={() => this.setState({ visibleCustomToolbar: false })} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                    </Sidebar>\\n\\n                    <Button icon=\\\"pi pi-arrow-right\\\" onClick={() => this.setState({ visibleLeft: true })} className=\\\"p-mr-2\\\" />\\n                    <Button icon=\\\"pi pi-arrow-left\\\" onClick={() => this.setState({ visibleRight: true })} className=\\\"p-mr-2\\\" />\\n                    <Button icon=\\\"pi pi-arrow-down\\\" onClick={() => this.setState({ visibleTop: true })} className=\\\"p-mr-2\\\" />\\n                    <Button icon=\\\"pi pi-arrow-up\\\" onClick={() => this.setState({ visibleBottom: true })} className=\\\"p-mr-2\\\" />\\n                    <Button icon=\\\"pi pi-th-large\\\" onClick={() => this.setState({ visibleFullScreen: true })} className=\\\"p-mr-2\\\" />\\n                    <Button icon=\\\"pi pi-plus\\\" onClick={() => this.setState({ visibleCustomToolbar: true })} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Sidebar } from 'primereact/sidebar';\\nimport { Button } from 'primereact/button';\\n\\nconst SidebarDemo = () => {\\n    const [visibleLeft, setVisibleLeft] = useState(false);\\n    const [visibleRight, setVisibleRight] = useState(false);\\n    const [visibleTop, setVisibleTop] = useState(false);\\n    const [visibleBottom, setVisibleBottom] = useState(false);\\n    const [visibleFullScreen, setVisibleFullScreen] = useState(false);\\n    const [visibleCustomToolbar, setVisibleCustomToolbar] = useState(false);\\n\\n    const customIcons = (\\n        <React.Fragment>\\n            <button className=\\\"p-sidebar-icon p-link p-mr-1\\\">\\n                <span className=\\\"pi pi-print\\\" />\\n            </button>\\n            <button className=\\\"p-sidebar-icon p-link p-mr-1\\\">\\n                <span className=\\\"pi pi-arrow-right\\\" />\\n            </button>\\n        </React.Fragment>\\n    );\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <Sidebar visible={visibleLeft} baseZIndex={1000000} onHide={() => setVisibleLeft(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Left Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleLeft(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleLeft(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleRight} position=\\\"right\\\" baseZIndex={1000000} onHide={() => setVisibleRight(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Right Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleRight(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleRight(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleTop} position=\\\"top\\\" baseZIndex={1000000} onHide={() => setVisibleTop(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Top Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleTop(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleTop(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleBottom} position=\\\"bottom\\\" baseZIndex={1000000} onHide={() => setVisibleBottom(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Bottom Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleBottom(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleBottom(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleFullScreen} fullScreen baseZIndex={1000000} onHide={() => setVisibleFullScreen(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Full Screen Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleFullScreen(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleFullScreen(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleCustomToolbar} baseZIndex={1000000} onHide={() => setVisibleCustomToolbar(false)} icons={customIcons}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Sidebar with custom icons</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleCustomToolbar(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleCustomToolbar(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Button icon=\\\"pi pi-arrow-right\\\" onClick={() => setVisibleLeft(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-arrow-left\\\" onClick={() => setVisibleRight(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-arrow-down\\\" onClick={() => setVisibleTop(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-arrow-up\\\" onClick={() => setVisibleBottom(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-th-large\\\" onClick={() => setVisibleFullScreen(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-plus\\\" onClick={() => setVisibleCustomToolbar(true)} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState } from 'react';\\nimport { Sidebar } from 'primereact/sidebar';\\nimport { Button } from 'primereact/button';\\n\\nconst SidebarDemo = () => {\\n    const [visibleLeft, setVisibleLeft] = useState(false);\\n    const [visibleRight, setVisibleRight] = useState(false);\\n    const [visibleTop, setVisibleTop] = useState(false);\\n    const [visibleBottom, setVisibleBottom] = useState(false);\\n    const [visibleFullScreen, setVisibleFullScreen] = useState(false);\\n    const [visibleCustomToolbar, setVisibleCustomToolbar] = useState(false);\\n\\n    const customIcons = (\\n        <React.Fragment>\\n            <button className=\\\"p-sidebar-icon p-link p-mr-1\\\">\\n                <span className=\\\"pi pi-print\\\" />\\n            </button>\\n            <button className=\\\"p-sidebar-icon p-link p-mr-1\\\">\\n                <span className=\\\"pi pi-arrow-right\\\" />\\n            </button>\\n        </React.Fragment>\\n    );\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <Sidebar visible={visibleLeft} baseZIndex={1000000} onHide={() => setVisibleLeft(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Left Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleLeft(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleLeft(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleRight} position=\\\"right\\\" baseZIndex={1000000} onHide={() => setVisibleRight(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Right Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleRight(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleRight(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleTop} position=\\\"top\\\" baseZIndex={1000000} onHide={() => setVisibleTop(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Top Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleTop(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleTop(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleBottom} position=\\\"bottom\\\" baseZIndex={1000000} onHide={() => setVisibleBottom(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Bottom Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleBottom(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleBottom(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleFullScreen} fullScreen baseZIndex={1000000} onHide={() => setVisibleFullScreen(false)}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Full Screen Sidebar</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleFullScreen(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleFullScreen(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Sidebar visible={visibleCustomToolbar} baseZIndex={1000000} onHide={() => setVisibleCustomToolbar(false)} icons={customIcons}>\\n                    <h1 style={{ fontWeight: 'normal' }}>Sidebar with custom icons</h1>\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleCustomToolbar(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.25em' }} />\\n                    <Button type=\\\"button\\\" onClick={() => setVisibleCustomToolbar(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\" />\\n                </Sidebar>\\n\\n                <Button icon=\\\"pi pi-arrow-right\\\" onClick={() => setVisibleLeft(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-arrow-left\\\" onClick={() => setVisibleRight(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-arrow-down\\\" onClick={() => setVisibleTop(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-arrow-up\\\" onClick={() => setVisibleBottom(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-th-large\\\" onClick={() => setVisibleFullScreen(true)} className=\\\"p-mr-2\\\" />\\n                <Button icon=\\\"pi pi-plus\\\" onClick={() => setVisibleCustomToolbar(true)} />\\n            </div>\\n        </div>\\n    )\\n}\\n                \"}};return _this;}_createClass(SidebarDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { Sidebar } from 'primereact/sidebar';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"Sidebar is used as a container and visibility is controlled with \",/*#__PURE__*/React.createElement(\"i\",null,\"visible\"),\" property.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Sidebar visible={visible} onHide={() => setVisible(false)}>\\n    Content\\n</Sidebar>\\n\\n<Button icon=\\\"pi pi-arrow-right\\\" onClick={(e) => setVisible(true)}/>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Position\"),/*#__PURE__*/React.createElement(\"p\",null,\"Sidebar can either be located on the left (default), right, top or bottom of the screen depending on the \",/*#__PURE__*/React.createElement(\"i\",null,\"position\"),\" property.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Sidebar visible={visible} position=\\\"right\\\" onHide={() => setVisible(false)}>\\n    Content\\n</Sidebar>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Size\"),/*#__PURE__*/React.createElement(\"p\",null,\"Sidebar size can be changed using a fixed value or using one of the three predefined ones.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Sidebar visible={visible} position=\\\"right\\\" className=\\\"ui-sidebar-sm\\\" onHide={() => setVisible(false)}></Sidebar>\\n<Sidebar visible={visible} position=\\\"right\\\" className=\\\"ui-sidebar-md\\\" onHide={() => setVisible(false)}></Sidebar>\\n<Sidebar visible={visible} position=\\\"right\\\" className=\\\"ui-sidebar-lg\\\" onHide={() => setVisible(false)}></Sidebar>\\n<Sidebar visible={visible} position=\\\"right\\\" style={{width:'30em'}} onHide={() => setVisible(false)}></Sidebar>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Full Screen\"),/*#__PURE__*/React.createElement(\"p\",null,\"Full screen mode allows the sidebar to cover whole screen.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Sidebar visible={visible} fullScreen onHide={() => setVisible(false)}}>\\n    Content\\n</Sidebar>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Custom toolbar\"),/*#__PURE__*/React.createElement(\"p\",null,\"Additional content can be provided using the \",/*#__PURE__*/React.createElement(\"i\",null,\"icons\"),\" property.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Sidebar visible={visibleCustomToolbar} onHide={() => setVisibleCustomToolbar(false)} icons={() => (\\n    <React.Fragment>\\n        <button className=\\\"p-sidebar-close p-link\\\">\\n            <span className=\\\"p-sidebar-close-icon pi pi-print\\\"/>\\n        </button>\\n        <button className=\\\"p-sidebar-close p-link\\\">\\n            <span className=\\\"p-sidebar-close-icon pi pi-arrow-right\\\"/>\\n        </button>\\n    </React.Fragment>\\n)}>\\n    <h1 style={{fontWeight:'normal'}}>Sidebar with custom icons</h1>\\n    <Button type=\\\"button\\\" onClick={(e) => setVisibleCustomToolbar(false)} label=\\\"Save\\\" className=\\\"p-button-success\\\" style={{marginRight:'.25em'}} />\\n    <Button type=\\\"button\\\" onClick={(e) => setVisibleCustomToolbar(false)} label=\\\"Cancel\\\" className=\\\"p-button-secondary\\\"/>\\n</Sidebar>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"object\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"visible\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Specifies the visibility of the dialog.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"position\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"left\"),/*#__PURE__*/React.createElement(\"td\",null,\"Specifies the position of the sidebar, valid values are \\\"left\\\" and \\\"right\\\".\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"fullScreen\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Adds a close icon to the header to hide the dialog.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"blockScroll\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether to block scrolling of the document when sidebar is active.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"baseZIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"0\"),/*#__PURE__*/React.createElement(\"td\",null,\"Base zIndex value to use in layering.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"dismissable\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether clicking outside closes the panel.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"showCloseIcon\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether to display a close icon inside the panel.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"ariaCloseLabel\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"close\"),/*#__PURE__*/React.createElement(\"td\",null,\"Aria label of the close icon.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"icons\"),/*#__PURE__*/React.createElement(\"td\",null,\"any\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Custom icons template for the header.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"modal\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether to a modal layer behind the sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"closeOnEscape\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Specifies if pressing escape key should hide the sidebar.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onHide\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when sidebar gets hidden.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onShow\"),/*#__PURE__*/React.createElement(\"td\",null,\"-\"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when sidebar gets shown.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-left\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element of left sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-right\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element of right sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-top\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element of top sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-bottom\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element of bottom sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-full\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element of a full screen sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-active\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element when sidebar is visible.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-close\"),/*#__PURE__*/React.createElement(\"td\",null,\"Close anchor element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-sm\"),/*#__PURE__*/React.createElement(\"td\",null,\"Small sized sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-md\"),/*#__PURE__*/React.createElement(\"td\",null,\"Medium sized sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-lg\"),/*#__PURE__*/React.createElement(\"td\",null,\"Large sized sidebar.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-sidebar-mask\"),/*#__PURE__*/React.createElement(\"td\",null,\"Modal layer of the sidebar.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'SidebarDemo',sources:this.sources})));}}]);return SidebarDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/sidebar/SidebarDoc.js"],"names":["React","Component","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","SidebarDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class SidebarDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Sidebar } from 'primereact/sidebar';\r\nimport { Button } from 'primereact/button';\r\n\r\nexport class SidebarDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visibleLeft: false,\r\n            visibleRight: false,\r\n            visibleTop: false,\r\n            visibleBottom: false,\r\n            visibleFullScreen: false,\r\n            visibleCustomToolbar: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const customIcons = (\r\n            <React.Fragment>\r\n                <button className=\"p-sidebar-icon p-link p-mr-1\">\r\n                    <span className=\"pi pi-print\" />\r\n                </button>\r\n                <button className=\"p-sidebar-icon p-link p-mr-1\">\r\n                    <span className=\"pi pi-arrow-right\" />\r\n                </button>\r\n            </React.Fragment>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <Sidebar visible={this.state.visibleLeft} baseZIndex={1000000} onHide={() => this.setState({ visibleLeft: false })}>\r\n                        <h1 style={{ fontWeight: 'normal' }}>Left Sidebar</h1>\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleLeft: false })} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleLeft: false })} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                    </Sidebar>\r\n\r\n                    <Sidebar visible={this.state.visibleRight} position=\"right\" baseZIndex={1000000} onHide={() => this.setState({ visibleRight: false })}>\r\n                        <h1 style={{ fontWeight: 'normal' }}>Right Sidebar</h1>\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleRight: false })} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleRight: false })} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                    </Sidebar>\r\n\r\n                    <Sidebar visible={this.state.visibleTop} position=\"top\" baseZIndex={1000000} onHide={() => this.setState({ visibleTop: false })}>\r\n                        <h1 style={{ fontWeight: 'normal' }}>Top Sidebar</h1>\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleTop: false })} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleTop: false })} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                    </Sidebar>\r\n\r\n                    <Sidebar visible={this.state.visibleBottom} position=\"bottom\" baseZIndex={1000000} onHide={() => this.setState({ visibleBottom: false })}>\r\n                        <h1 style={{ fontWeight: 'normal' }}>Bottom Sidebar</h1>\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleBottom: false })} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleBottom: false })} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                    </Sidebar>\r\n\r\n                    <Sidebar visible={this.state.visibleFullScreen} fullScreen baseZIndex={1000000} onHide={() => this.setState({ visibleFullScreen: false })}>\r\n                        <h1 style={{ fontWeight: 'normal' }}>Full Screen Sidebar</h1>\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleFullScreen: false })} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleFullScreen: false })} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                    </Sidebar>\r\n\r\n                    <Sidebar visible={this.state.visibleCustomToolbar} baseZIndex={1000000} onHide={() => this.setState({ visibleCustomToolbar: false })} icons={customIcons}>\r\n                        <h1 style={{ fontWeight: 'normal' }}>Sidebar with custom icons</h1>\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleCustomToolbar: false })} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                        <Button type=\"button\" onClick={() => this.setState({ visibleCustomToolbar: false })} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                    </Sidebar>\r\n\r\n                    <Button icon=\"pi pi-arrow-right\" onClick={() => this.setState({ visibleLeft: true })} className=\"p-mr-2\" />\r\n                    <Button icon=\"pi pi-arrow-left\" onClick={() => this.setState({ visibleRight: true })} className=\"p-mr-2\" />\r\n                    <Button icon=\"pi pi-arrow-down\" onClick={() => this.setState({ visibleTop: true })} className=\"p-mr-2\" />\r\n                    <Button icon=\"pi pi-arrow-up\" onClick={() => this.setState({ visibleBottom: true })} className=\"p-mr-2\" />\r\n                    <Button icon=\"pi pi-th-large\" onClick={() => this.setState({ visibleFullScreen: true })} className=\"p-mr-2\" />\r\n                    <Button icon=\"pi pi-plus\" onClick={() => this.setState({ visibleCustomToolbar: true })} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Sidebar } from 'primereact/sidebar';\r\nimport { Button } from 'primereact/button';\r\n\r\nconst SidebarDemo = () => {\r\n    const [visibleLeft, setVisibleLeft] = useState(false);\r\n    const [visibleRight, setVisibleRight] = useState(false);\r\n    const [visibleTop, setVisibleTop] = useState(false);\r\n    const [visibleBottom, setVisibleBottom] = useState(false);\r\n    const [visibleFullScreen, setVisibleFullScreen] = useState(false);\r\n    const [visibleCustomToolbar, setVisibleCustomToolbar] = useState(false);\r\n\r\n    const customIcons = (\r\n        <React.Fragment>\r\n            <button className=\"p-sidebar-icon p-link p-mr-1\">\r\n                <span className=\"pi pi-print\" />\r\n            </button>\r\n            <button className=\"p-sidebar-icon p-link p-mr-1\">\r\n                <span className=\"pi pi-arrow-right\" />\r\n            </button>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <Sidebar visible={visibleLeft} baseZIndex={1000000} onHide={() => setVisibleLeft(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Left Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleLeft(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleLeft(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleRight} position=\"right\" baseZIndex={1000000} onHide={() => setVisibleRight(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Right Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleRight(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleRight(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleTop} position=\"top\" baseZIndex={1000000} onHide={() => setVisibleTop(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Top Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleTop(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleTop(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleBottom} position=\"bottom\" baseZIndex={1000000} onHide={() => setVisibleBottom(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Bottom Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleBottom(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleBottom(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleFullScreen} fullScreen baseZIndex={1000000} onHide={() => setVisibleFullScreen(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Full Screen Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleFullScreen(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleFullScreen(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleCustomToolbar} baseZIndex={1000000} onHide={() => setVisibleCustomToolbar(false)} icons={customIcons}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Sidebar with custom icons</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleCustomToolbar(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleCustomToolbar(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Button icon=\"pi pi-arrow-right\" onClick={() => setVisibleLeft(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-arrow-left\" onClick={() => setVisibleRight(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-arrow-down\" onClick={() => setVisibleTop(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-arrow-up\" onClick={() => setVisibleBottom(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-th-large\" onClick={() => setVisibleFullScreen(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-plus\" onClick={() => setVisibleCustomToolbar(true)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState } from 'react';\r\nimport { Sidebar } from 'primereact/sidebar';\r\nimport { Button } from 'primereact/button';\r\n\r\nconst SidebarDemo = () => {\r\n    const [visibleLeft, setVisibleLeft] = useState(false);\r\n    const [visibleRight, setVisibleRight] = useState(false);\r\n    const [visibleTop, setVisibleTop] = useState(false);\r\n    const [visibleBottom, setVisibleBottom] = useState(false);\r\n    const [visibleFullScreen, setVisibleFullScreen] = useState(false);\r\n    const [visibleCustomToolbar, setVisibleCustomToolbar] = useState(false);\r\n\r\n    const customIcons = (\r\n        <React.Fragment>\r\n            <button className=\"p-sidebar-icon p-link p-mr-1\">\r\n                <span className=\"pi pi-print\" />\r\n            </button>\r\n            <button className=\"p-sidebar-icon p-link p-mr-1\">\r\n                <span className=\"pi pi-arrow-right\" />\r\n            </button>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <Sidebar visible={visibleLeft} baseZIndex={1000000} onHide={() => setVisibleLeft(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Left Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleLeft(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleLeft(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleRight} position=\"right\" baseZIndex={1000000} onHide={() => setVisibleRight(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Right Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleRight(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleRight(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleTop} position=\"top\" baseZIndex={1000000} onHide={() => setVisibleTop(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Top Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleTop(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleTop(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleBottom} position=\"bottom\" baseZIndex={1000000} onHide={() => setVisibleBottom(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Bottom Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleBottom(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleBottom(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleFullScreen} fullScreen baseZIndex={1000000} onHide={() => setVisibleFullScreen(false)}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Full Screen Sidebar</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleFullScreen(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleFullScreen(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Sidebar visible={visibleCustomToolbar} baseZIndex={1000000} onHide={() => setVisibleCustomToolbar(false)} icons={customIcons}>\r\n                    <h1 style={{ fontWeight: 'normal' }}>Sidebar with custom icons</h1>\r\n                    <Button type=\"button\" onClick={() => setVisibleCustomToolbar(false)} label=\"Save\" className=\"p-button-success\" style={{ marginRight: '.25em' }} />\r\n                    <Button type=\"button\" onClick={() => setVisibleCustomToolbar(false)} label=\"Cancel\" className=\"p-button-secondary\" />\r\n                </Sidebar>\r\n\r\n                <Button icon=\"pi pi-arrow-right\" onClick={() => setVisibleLeft(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-arrow-left\" onClick={() => setVisibleRight(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-arrow-down\" onClick={() => setVisibleTop(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-arrow-up\" onClick={() => setVisibleBottom(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-th-large\" onClick={() => setVisibleFullScreen(true)} className=\"p-mr-2\" />\r\n                <Button icon=\"pi pi-plus\" onClick={() => setVisibleCustomToolbar(true)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Sidebar } from 'primereact/sidebar';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Sidebar is used as a container and visibility is controlled with <i>visible</i> property.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Sidebar visible={visible} onHide={() => setVisible(false)}>\r\n    Content\r\n</Sidebar>\r\n\r\n<Button icon=\"pi pi-arrow-right\" onClick={(e) => setVisible(true)}/>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Position</h5>\r\n                        <p>Sidebar can either be located on the left (default), right, top or bottom of the screen depending on the <i>position</i> property.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Sidebar visible={visible} position=\"right\" onHide={() => setVisible(false)}>\r\n    Content\r\n</Sidebar>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Size</h5>\r\n                        <p>Sidebar size can be changed using a fixed value or using one of the three predefined ones.</p>\r\n<CodeHighlight>\r\n{`\r\n<Sidebar visible={visible} position=\"right\" className=\"ui-sidebar-sm\" onHide={() => setVisible(false)}></Sidebar>\r\n<Sidebar visible={visible} position=\"right\" className=\"ui-sidebar-md\" onHide={() => setVisible(false)}></Sidebar>\r\n<Sidebar visible={visible} position=\"right\" className=\"ui-sidebar-lg\" onHide={() => setVisible(false)}></Sidebar>\r\n<Sidebar visible={visible} position=\"right\" style={{width:'30em'}} onHide={() => setVisible(false)}></Sidebar>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Full Screen</h5>\r\n                        <p>Full screen mode allows the sidebar to cover whole screen.</p>\r\n<CodeHighlight>\r\n{`\r\n<Sidebar visible={visible} fullScreen onHide={() => setVisible(false)}}>\r\n    Content\r\n</Sidebar>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Custom toolbar</h5>\r\n                        <p>Additional content can be provided using the <i>icons</i> property.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Sidebar visible={visibleCustomToolbar} onHide={() => setVisibleCustomToolbar(false)} icons={() => (\r\n    <React.Fragment>\r\n        <button className=\"p-sidebar-close p-link\">\r\n            <span className=\"p-sidebar-close-icon pi pi-print\"/>\r\n        </button>\r\n        <button className=\"p-sidebar-close p-link\">\r\n            <span className=\"p-sidebar-close-icon pi pi-arrow-right\"/>\r\n        </button>\r\n    </React.Fragment>\r\n)}>\r\n    <h1 style={{fontWeight:'normal'}}>Sidebar with custom icons</h1>\r\n    <Button type=\"button\" onClick={(e) => setVisibleCustomToolbar(false)} label=\"Save\" className=\"p-button-success\" style={{marginRight:'.25em'}} />\r\n    <Button type=\"button\" onClick={(e) => setVisibleCustomToolbar(false)} label=\"Cancel\" className=\"p-button-secondary\"/>\r\n</Sidebar>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>visible</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Specifies the visibility of the dialog.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>position</td>\r\n                                        <td>string</td>\r\n                                        <td>left</td>\r\n                                        <td>Specifies the position of the sidebar, valid values are \"left\" and \"right\".</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>fullScreen</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Adds a close icon to the header to hide the dialog.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>blockScroll</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Whether to block scrolling of the document when sidebar is active.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>baseZIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>0</td>\r\n                                        <td>Base zIndex value to use in layering.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>dismissable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether clicking outside closes the panel.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>showCloseIcon</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether to display a close icon inside the panel.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>ariaCloseLabel</td>\r\n                                        <td>string</td>\r\n                                        <td>close</td>\r\n                                        <td>Aria label of the close icon.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>icons</td>\r\n                                        <td>any</td>\r\n                                        <td>null</td>\r\n                                        <td>Custom icons template for the header.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>modal</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether to a modal layer behind the sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>closeOnEscape</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Specifies if pressing escape key should hide the sidebar.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onHide</td>\r\n                                        <td>-</td>\r\n                                        <td>Callback to invoke when sidebar gets hidden.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onShow</td>\r\n                                        <td>-</td>\r\n                                        <td>Callback to invoke when sidebar gets shown.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-sidebar</td>\r\n                                        <td>Container element</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-left</td>\r\n                                        <td>Container element of left sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-right</td>\r\n                                        <td>Container element of right sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-top</td>\r\n                                        <td>Container element of top sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-bottom</td>\r\n                                        <td>Container element of bottom sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-full</td>\r\n                                        <td>Container element of a full screen sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-active</td>\r\n                                        <td>Container element when sidebar is visible.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-close</td>\r\n                                        <td>Close anchor element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-sm</td>\r\n                                        <td>Small sized sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-md</td>\r\n                                        <td>Medium sized sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-lg</td>\r\n                                        <td>Large sized sidebar.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-sidebar-mask</td>\r\n                                        <td>Modal layer of the sidebar.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'SidebarDemo', sources: this.sources })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}