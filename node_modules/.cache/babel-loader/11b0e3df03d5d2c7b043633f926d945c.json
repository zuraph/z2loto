{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'../../components/datatable/DataTable';import{Column}from'../../components/column/Column';import ProductService from'../service/ProductService';import{MultiSelect}from'../../components/multiselect/MultiSelect';import{TabView}from'../../components/tabview/TabView';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';export var DataTableColTogglerDemo=/*#__PURE__*/function(_Component){_inherits(DataTableColTogglerDemo,_Component);var _super=_createSuper(DataTableColTogglerDemo);function DataTableColTogglerDemo(props){var _this;_classCallCheck(this,DataTableColTogglerDemo);_this=_super.call(this,props);_this.columns=[{field:'name',header:'Name'},{field:'category',header:'Category'},{field:'quantity',header:'Quantity'}];_this.state={selectedColumns:_this.columns,products:[]};_this.productService=new ProductService();_this.onColumnToggle=_this.onColumnToggle.bind(_assertThisInitialized(_this));return _this;}_createClass(DataTableColTogglerDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.productService.getProductsSmall().then(function(data){return _this2.setState({products:data});});}},{key:\"onColumnToggle\",value:function onColumnToggle(event){var selectedColumns=event.value;var orderedSelectedColumns=this.columns.filter(function(col){return selectedColumns.some(function(sCol){return sCol.field===col.field;});});this.setState({selectedColumns:orderedSelectedColumns});}},{key:\"render\",value:function render(){var header=/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'left'}},/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.selectedColumns,options:this.columns,optionLabel:\"header\",onChange:this.onColumnToggle,style:{width:'20em'}}));var columnComponents=this.state.selectedColumns.map(function(col){return/*#__PURE__*/React.createElement(Column,{key:col.field,field:col.field,header:col.header});});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"dataTable\"},/*#__PURE__*/React.createElement(\"h1\",null,\"DataTable \",/*#__PURE__*/React.createElement(\"span\",null,\"Column Toggler\")),/*#__PURE__*/React.createElement(\"p\",null,\"MultiSelect component can be used to implement column toggler functionality.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(DataTable,{value:this.state.products,header:header},/*#__PURE__*/React.createElement(Column,{field:\"code\",header:\"Code\"}),columnComponents))),/*#__PURE__*/React.createElement(DataTableColTogglerDemoDoc,null));}}]);return DataTableColTogglerDemo;}(Component);export var DataTableColTogglerDemoDoc=/*#__PURE__*/function(_Component2){_inherits(DataTableColTogglerDemoDoc,_Component2);var _super2=_createSuper(DataTableColTogglerDemoDoc);function DataTableColTogglerDemoDoc(props){var _this3;_classCallCheck(this,DataTableColTogglerDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { MultiSelect } from 'primereact/multiselect';\\n\\nexport class DataTableColTogglerDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.columns = [\\n            {field: 'name', header: 'Name'},\\n            {field: 'category', header: 'Category'},\\n            {field: 'quantity', header: 'Quantity'}\\n        ];\\n\\n        this.state = {\\n            selectedColumns: this.columns,\\n            products: []\\n        }\\n\\n        this.productService = new ProductService();\\n        this.onColumnToggle = this.onColumnToggle.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    onColumnToggle(event) {\\n        let selectedColumns = event.value;\\n        let orderedSelectedColumns = this.columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\\n        this.setState({ selectedColumns: orderedSelectedColumns });\\n    }\\n\\n    render() {\\n        const header = (\\n            <div style={{ textAlign:'left' }}>\\n                <MultiSelect value={this.state.selectedColumns} options={this.columns} optionLabel=\\\"header\\\" onChange={this.onColumnToggle} style={{width:'20em'}}/>\\n            </div>\\n        );\\n\\n        const columnComponents = this.state.selectedColumns.map(col=> {\\n            return <Column key={col.field} field={col.field} header={col.header} />;\\n        });\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <DataTable value={this.state.products} header={header}>\\n                        <Column field=\\\"code\\\" header=\\\"Code\\\" />\\n                        {columnComponents}\\n                    </DataTable>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { MultiSelect } from 'primereact/multiselect';\\n\\nconst DataTableColTogglerDemo = () => {\\n    const columns = [\\n        {field: 'name', header: 'Name'},\\n        {field: 'category', header: 'Category'},\\n        {field: 'quantity', header: 'Quantity'}\\n    ];\\n\\n    const [selectedColumns, setSelectedColumns] = useState(columns);\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onColumnToggle = (event) => {\\n        let selectedColumns = event.value;\\n        let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\\n        setSelectedColumns(orderedSelectedColumns);\\n    }\\n\\n    const header = (\\n        <div style={{ textAlign:'left' }}>\\n            <MultiSelect value={selectedColumns} options={columns} optionLabel=\\\"header\\\" onChange={onColumnToggle} style={{width:'20em'}}/>\\n        </div>\\n    );\\n\\n    const columnComponents = selectedColumns.map(col=> {\\n        return <Column key={col.field} field={col.field} header={col.header} />;\\n    });\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} header={header}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" />\\n                    {columnComponents}\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useState, useEffect } from 'react';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\nimport { MultiSelect } from 'primereact/multiselect';\\n\\nconst DataTableColTogglerDemo = () => {\\n    const columns = [\\n        {field: 'name', header: 'Name'},\\n        {field: 'category', header: 'Category'},\\n        {field: 'quantity', header: 'Quantity'}\\n    ];\\n\\n    const [selectedColumns, setSelectedColumns] = useState(columns);\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    useEffect(() => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const onColumnToggle = (event) => {\\n        let selectedColumns = event.value;\\n        let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\\n        setSelectedColumns(orderedSelectedColumns);\\n    }\\n\\n    const header = (\\n        <div style={{ textAlign:'left' }}>\\n            <MultiSelect value={selectedColumns} options={columns} optionLabel=\\\"header\\\" onChange={onColumnToggle} style={{width:'20em'}}/>\\n        </div>\\n    );\\n\\n    const columnComponents = selectedColumns.map(col=> {\\n        return <Column key={col.field} field={col.field} header={col.header} />;\\n    });\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <DataTable value={products} header={header}>\\n                    <Column field=\\\"code\\\" header=\\\"Code\\\" />\\n                    {columnComponents}\\n                </DataTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this3;}_createClass(DataTableColTogglerDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'DataTableColTogglerDemo',sources:this.sources,service:'ProductService',data:'products-small'})));}}]);return DataTableColTogglerDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/showcase/datatable/DataTableColTogglerDemo.js"],"names":["React","Component","DataTable","Column","ProductService","MultiSelect","TabView","useLiveEditorTabs","AppInlineHeader","DataTableColTogglerDemo","props","columns","field","header","state","selectedColumns","products","productService","onColumnToggle","bind","getProductsSmall","then","data","setState","event","value","orderedSelectedColumns","filter","col","some","sCol","textAlign","width","columnComponents","map","DataTableColTogglerDemoDoc","sources","tabName","content","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from '../../components/datatable/DataTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport ProductService from '../service/ProductService';\r\nimport { MultiSelect } from '../../components/multiselect/MultiSelect';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class DataTableColTogglerDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {field: 'name', header: 'Name'},\r\n            {field: 'category', header: 'Category'},\r\n            {field: 'quantity', header: 'Quantity'}\r\n        ];\r\n\r\n        this.state = {\r\n            selectedColumns: this.columns,\r\n            products: []\r\n        }\r\n\r\n        this.productService = new ProductService();\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = this.columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\r\n        this.setState({ selectedColumns: orderedSelectedColumns });\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div style={{ textAlign:'left' }}>\r\n                <MultiSelect value={this.state.selectedColumns} options={this.columns} optionLabel=\"header\" onChange={this.onColumnToggle} style={{width:'20em'}}/>\r\n            </div>\r\n        );\r\n\r\n        const columnComponents = this.state.selectedColumns.map(col=> {\r\n            return <Column key={col.field} field={col.field} header={col.header} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"dataTable\">\r\n                        <h1>DataTable <span>Column Toggler</span></h1>\r\n                        <p>MultiSelect component can be used to implement column toggler functionality.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <DataTable value={this.state.products} header={header}>\r\n                            <Column field=\"code\" header=\"Code\" />\r\n                            {columnComponents}\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <DataTableColTogglerDemoDoc></DataTableColTogglerDemoDoc>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class DataTableColTogglerDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\n\r\nexport class DataTableColTogglerDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.columns = [\r\n            {field: 'name', header: 'Name'},\r\n            {field: 'category', header: 'Category'},\r\n            {field: 'quantity', header: 'Quantity'}\r\n        ];\r\n\r\n        this.state = {\r\n            selectedColumns: this.columns,\r\n            products: []\r\n        }\r\n\r\n        this.productService = new ProductService();\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = this.columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\r\n        this.setState({ selectedColumns: orderedSelectedColumns });\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div style={{ textAlign:'left' }}>\r\n                <MultiSelect value={this.state.selectedColumns} options={this.columns} optionLabel=\"header\" onChange={this.onColumnToggle} style={{width:'20em'}}/>\r\n            </div>\r\n        );\r\n\r\n        const columnComponents = this.state.selectedColumns.map(col=> {\r\n            return <Column key={col.field} field={col.field} header={col.header} />;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={this.state.products} header={header}>\r\n                        <Column field=\"code\" header=\"Code\" />\r\n                        {columnComponents}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\n\r\nconst DataTableColTogglerDemo = () => {\r\n    const columns = [\r\n        {field: 'name', header: 'Name'},\r\n        {field: 'category', header: 'Category'},\r\n        {field: 'quantity', header: 'Quantity'}\r\n    ];\r\n\r\n    const [selectedColumns, setSelectedColumns] = useState(columns);\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onColumnToggle = (event) => {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\r\n        setSelectedColumns(orderedSelectedColumns);\r\n    }\r\n\r\n    const header = (\r\n        <div style={{ textAlign:'left' }}>\r\n            <MultiSelect value={selectedColumns} options={columns} optionLabel=\"header\" onChange={onColumnToggle} style={{width:'20em'}}/>\r\n        </div>\r\n    );\r\n\r\n    const columnComponents = selectedColumns.map(col=> {\r\n        return <Column key={col.field} field={col.field} header={col.header} />;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable value={products} header={header}>\r\n                    <Column field=\"code\" header=\"Code\" />\r\n                    {columnComponents}\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\n\r\nconst DataTableColTogglerDemo = () => {\r\n    const columns = [\r\n        {field: 'name', header: 'Name'},\r\n        {field: 'category', header: 'Category'},\r\n        {field: 'quantity', header: 'Quantity'}\r\n    ];\r\n\r\n    const [selectedColumns, setSelectedColumns] = useState(columns);\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    useEffect(() => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onColumnToggle = (event) => {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = columns.filter(col => selectedColumns.some(sCol => sCol.field === col.field));\r\n        setSelectedColumns(orderedSelectedColumns);\r\n    }\r\n\r\n    const header = (\r\n        <div style={{ textAlign:'left' }}>\r\n            <MultiSelect value={selectedColumns} options={columns} optionLabel=\"header\" onChange={onColumnToggle} style={{width:'20em'}}/>\r\n        </div>\r\n    );\r\n\r\n    const columnComponents = selectedColumns.map(col=> {\r\n        return <Column key={col.field} field={col.field} header={col.header} />;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable value={products} header={header}>\r\n                    <Column field=\"code\" header=\"Code\" />\r\n                    {columnComponents}\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'DataTableColTogglerDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}