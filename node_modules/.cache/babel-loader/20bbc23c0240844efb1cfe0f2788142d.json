{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\sidebar\\\\Sidebar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport DomHandler from '../utils/DomHandler';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport { CSSTransition } from 'react-transition-group';\nimport { Ripple } from '../ripple/Ripple';\nexport var Sidebar = /*#__PURE__*/function (_Component) {\n  _inherits(Sidebar, _Component);\n\n  var _super = _createSuper(Sidebar);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _super.call(this, props);\n    _this.onCloseClick = _this.onCloseClick.bind(_assertThisInitialized(_this));\n    _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));\n    _this.onEntered = _this.onEntered.bind(_assertThisInitialized(_this));\n    _this.onExit = _this.onExit.bind(_assertThisInitialized(_this));\n    _this.sidebarRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"onCloseClick\",\n    value: function onCloseClick(event) {\n      this.props.onHide();\n      event.preventDefault();\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      this.sidebarRef.current.style.zIndex = String(this.props.baseZIndex + DomHandler.generateZIndex());\n\n      if (this.props.modal) {\n        this.enableModality();\n      }\n    }\n  }, {\n    key: \"onEntered\",\n    value: function onEntered() {\n      if (this.props.closeOnEscape) {\n        this.bindDocumentEscapeListener();\n      }\n\n      if (this.closeIcon) {\n        this.closeIcon.focus();\n      }\n\n      if (this.props.onShow) {\n        this.props.onShow();\n      }\n    }\n  }, {\n    key: \"onExit\",\n    value: function onExit() {\n      this.unbindMaskClickListener();\n      this.unbindDocumentEscapeListener();\n\n      if (this.props.modal) {\n        this.disableModality();\n      }\n    }\n  }, {\n    key: \"enableModality\",\n    value: function enableModality() {\n      if (!this.mask) {\n        this.mask = document.createElement('div');\n        this.mask.style.zIndex = String(parseInt(this.sidebarRef.current.style.zIndex, 10) - 1);\n        var maskClassName = 'p-component-overlay p-sidebar-mask';\n\n        if (this.props.blockScroll) {\n          maskClassName += ' p-sidebar-mask-scrollblocker';\n        }\n\n        DomHandler.addMultipleClasses(this.mask, maskClassName);\n\n        if (this.props.dismissable) {\n          this.bindMaskClickListener();\n        }\n\n        document.body.appendChild(this.mask);\n\n        if (this.props.blockScroll) {\n          DomHandler.addClass(document.body, 'p-overflow-hidden');\n        }\n      }\n    }\n  }, {\n    key: \"disableModality\",\n    value: function disableModality() {\n      if (this.mask) {\n        this.unbindMaskClickListener();\n        document.body.removeChild(this.mask);\n\n        if (this.props.blockScroll) {\n          var bodyChildren = document.body.children;\n          var hasBlockerMasks;\n\n          for (var i = 0; i < bodyChildren.length; i++) {\n            var bodyChild = bodyChildren[i];\n\n            if (DomHandler.hasClass(bodyChild, 'p-sidebar-mask-scrollblocker')) {\n              hasBlockerMasks = true;\n              break;\n            }\n          }\n\n          if (!hasBlockerMasks) {\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\n          }\n        }\n\n        this.mask = null;\n      }\n    }\n  }, {\n    key: \"bindDocumentEscapeListener\",\n    value: function bindDocumentEscapeListener() {\n      var _this2 = this;\n\n      this.documentEscapeListener = function (event) {\n        if (event.which === 27) {\n          if (parseInt(_this2.sidebarRef.current.style.zIndex, 10) === DomHandler.getCurrentZIndex() + _this2.props.baseZIndex) {\n            _this2.onCloseClick(event);\n          }\n        }\n      };\n\n      document.addEventListener('keydown', this.documentEscapeListener);\n    }\n  }, {\n    key: \"unbindDocumentEscapeListener\",\n    value: function unbindDocumentEscapeListener() {\n      if (this.documentEscapeListener) {\n        document.removeEventListener('keydown', this.documentEscapeListener);\n        this.documentEscapeListener = null;\n      }\n    }\n  }, {\n    key: \"bindMaskClickListener\",\n    value: function bindMaskClickListener() {\n      var _this3 = this;\n\n      if (!this.maskClickListener) {\n        this.maskClickListener = function (event) {\n          _this3.onCloseClick(event);\n        };\n\n        this.mask.addEventListener('click', this.maskClickListener);\n      }\n    }\n  }, {\n    key: \"unbindMaskClickListener\",\n    value: function unbindMaskClickListener() {\n      if (this.maskClickListener) {\n        this.mask.removeEventListener('click', this.maskClickListener);\n        this.maskClickListener = null;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.mask && prevProps.dismissable !== this.props.dismissable) {\n        if (this.props.dismissable) {\n          this.bindMaskClickListener();\n        } else {\n          this.unbindMaskClickListener();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindMaskClickListener();\n      this.disableModality();\n    }\n  }, {\n    key: \"renderCloseIcon\",\n    value: function renderCloseIcon() {\n      var _this4 = this;\n\n      if (this.props.showCloseIcon) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          ref: function ref(el) {\n            return _this4.closeIcon = el;\n          },\n          className: \"p-sidebar-close p-sidebar-icon p-link\",\n          onClick: this.onCloseClick,\n          \"aria-label\": this.props.ariaCloseLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-sidebar-close-icon pi pi-times\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Ripple, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderIcons\",\n    value: function renderIcons() {\n      if (this.props.icons) {\n        return ObjectUtils.getJSXElement(this.props.icons, this.props);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = classNames('p-sidebar p-component', this.props.className, 'p-sidebar-' + this.props.position, {\n        'p-sidebar-active': this.props.visible,\n        'p-sidebar-full': this.props.fullScreen\n      });\n      var closeIcon = this.renderCloseIcon();\n      var icons = this.renderIcons();\n      var transitionTimeout = {\n        enter: this.props.fullScreen ? 400 : 300,\n        exit: this.props.fullScreen ? 400 : 300\n      };\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.sidebarRef,\n        classNames: \"p-sidebar\",\n        in: this.props.visible,\n        timeout: transitionTimeout,\n        unmountOnExit: true,\n        onEnter: this.onEnter,\n        onEntered: this.onEntered,\n        onExit: this.onExit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.sidebarRef,\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        role: \"complementary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-sidebar-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, icons, closeIcon), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-sidebar-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }, this.props.children)));\n    }\n  }]);\n\n  return Sidebar;\n}(Component);\nSidebar.defaultProps = {\n  id: null,\n  style: null,\n  className: null,\n  visible: false,\n  position: 'left',\n  fullScreen: false,\n  blockScroll: false,\n  baseZIndex: 0,\n  dismissable: true,\n  showCloseIcon: true,\n  ariaCloseLabel: 'close',\n  closeOnEscape: true,\n  icons: null,\n  modal: true,\n  onShow: null,\n  onHide: null\n};\nSidebar.propTypes = {\n  id: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  visible: PropTypes.bool,\n  position: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  blockScroll: PropTypes.bool,\n  baseZIndex: PropTypes.number,\n  dismissable: PropTypes.bool,\n  showCloseIcon: PropTypes.bool,\n  ariaCloseLabel: PropTypes.string,\n  closeOnEscape: PropTypes.bool,\n  icons: PropTypes.any,\n  modal: PropTypes.bool,\n  onShow: PropTypes.func,\n  onHide: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/sidebar/Sidebar.js"],"names":["React","Component","PropTypes","classNames","DomHandler","ObjectUtils","CSSTransition","Ripple","Sidebar","props","onCloseClick","bind","onEnter","onEntered","onExit","sidebarRef","createRef","event","onHide","preventDefault","current","style","zIndex","String","baseZIndex","generateZIndex","modal","enableModality","closeOnEscape","bindDocumentEscapeListener","closeIcon","focus","onShow","unbindMaskClickListener","unbindDocumentEscapeListener","disableModality","mask","document","createElement","parseInt","maskClassName","blockScroll","addMultipleClasses","dismissable","bindMaskClickListener","body","appendChild","addClass","removeChild","bodyChildren","children","hasBlockerMasks","i","length","bodyChild","hasClass","removeClass","documentEscapeListener","which","getCurrentZIndex","addEventListener","removeEventListener","maskClickListener","prevProps","prevState","showCloseIcon","el","ariaCloseLabel","icons","getJSXElement","className","position","visible","fullScreen","renderCloseIcon","renderIcons","transitionTimeout","enter","exit","id","defaultProps","propTypes","string","object","bool","number","any","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Ripple } from '../ripple/Ripple';\r\n\r\nexport class Sidebar extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        style: null,\r\n        className: null,\r\n        visible: false,\r\n        position: 'left',\r\n        fullScreen: false,\r\n        blockScroll: false,\r\n        baseZIndex: 0,\r\n        dismissable: true,\r\n        showCloseIcon: true,\r\n        ariaCloseLabel: 'close',\r\n        closeOnEscape: true,\r\n        icons: null,\r\n        modal: true,\r\n        onShow: null,\r\n        onHide: null\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        visible: PropTypes.bool,\r\n        position: PropTypes.string,\r\n        fullScreen: PropTypes.bool,\r\n        blockScroll: PropTypes.bool,\r\n        baseZIndex: PropTypes.number,\r\n        dismissable: PropTypes.bool,\r\n        showCloseIcon: PropTypes.bool,\r\n        ariaCloseLabel: PropTypes.string,\r\n        closeOnEscape: PropTypes.bool,\r\n        icons: PropTypes.any,\r\n        modal: PropTypes.bool,\r\n        onShow: PropTypes.func,\r\n        onHide: PropTypes.func.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onCloseClick = this.onCloseClick.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n        this.onEntered = this.onEntered.bind(this);\r\n        this.onExit = this.onExit.bind(this);\r\n\r\n        this.sidebarRef = React.createRef();\r\n    }\r\n\r\n    onCloseClick(event) {\r\n        this.props.onHide();\r\n        event.preventDefault();\r\n    }\r\n\r\n    onEnter() {\r\n        this.sidebarRef.current.style.zIndex = String(this.props.baseZIndex + DomHandler.generateZIndex());\r\n        if (this.props.modal) {\r\n            this.enableModality();\r\n        }\r\n    }\r\n\r\n    onEntered() {\r\n        if (this.props.closeOnEscape) {\r\n            this.bindDocumentEscapeListener();\r\n        }\r\n\r\n        if (this.closeIcon) {\r\n            this.closeIcon.focus();\r\n        }\r\n\r\n        if (this.props.onShow) {\r\n            this.props.onShow();\r\n        }\r\n    }\r\n\r\n    onExit() {\r\n        this.unbindMaskClickListener();\r\n        this.unbindDocumentEscapeListener();\r\n\r\n        if (this.props.modal) {\r\n            this.disableModality();\r\n        }\r\n    }\r\n\r\n    enableModality() {\r\n        if (!this.mask) {\r\n            this.mask = document.createElement('div');\r\n            this.mask.style.zIndex = String(parseInt(this.sidebarRef.current.style.zIndex, 10) - 1);\r\n            let maskClassName = 'p-component-overlay p-sidebar-mask';\r\n            if (this.props.blockScroll) {\r\n                maskClassName += ' p-sidebar-mask-scrollblocker';\r\n            }\r\n            DomHandler.addMultipleClasses(this.mask, maskClassName);\r\n\r\n            if (this.props.dismissable) {\r\n                this.bindMaskClickListener();\r\n            }\r\n\r\n            document.body.appendChild(this.mask);\r\n\r\n            if (this.props.blockScroll) {\r\n                DomHandler.addClass(document.body, 'p-overflow-hidden');\r\n            }\r\n        }\r\n    }\r\n\r\n    disableModality() {\r\n        if (this.mask) {\r\n            this.unbindMaskClickListener();\r\n            document.body.removeChild(this.mask);\r\n\r\n            if (this.props.blockScroll) {\r\n                let bodyChildren = document.body.children;\r\n                let hasBlockerMasks;\r\n                for (let i = 0; i < bodyChildren.length; i++) {\r\n                    let bodyChild = bodyChildren[i];\r\n                    if (DomHandler.hasClass(bodyChild, 'p-sidebar-mask-scrollblocker')) {\r\n                        hasBlockerMasks = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!hasBlockerMasks) {\r\n                    DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n                }\r\n            }\r\n            this.mask = null;\r\n        }\r\n    }\r\n\r\n    bindDocumentEscapeListener() {\r\n        this.documentEscapeListener = (event) => {\r\n            if (event.which === 27) {\r\n                if (parseInt(this.sidebarRef.current.style.zIndex, 10) === (DomHandler.getCurrentZIndex() + this.props.baseZIndex)) {\r\n                    this.onCloseClick(event);\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener('keydown', this.documentEscapeListener);\r\n    }\r\n\r\n    unbindDocumentEscapeListener() {\r\n        if (this.documentEscapeListener) {\r\n            document.removeEventListener('keydown', this.documentEscapeListener);\r\n            this.documentEscapeListener = null;\r\n        }\r\n    }\r\n\r\n    bindMaskClickListener() {\r\n        if (!this.maskClickListener) {\r\n            this.maskClickListener = (event) => {\r\n                this.onCloseClick(event);\r\n            };\r\n            this.mask.addEventListener('click', this.maskClickListener);\r\n        }\r\n    }\r\n\r\n    unbindMaskClickListener() {\r\n        if (this.maskClickListener) {\r\n            this.mask.removeEventListener('click', this.maskClickListener);\r\n            this.maskClickListener = null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.mask && prevProps.dismissable !== this.props.dismissable) {\r\n            if (this.props.dismissable) {\r\n                this.bindMaskClickListener();\r\n            }\r\n            else {\r\n                this.unbindMaskClickListener();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindMaskClickListener();\r\n        this.disableModality();\r\n    }\r\n\r\n    renderCloseIcon() {\r\n        if (this.props.showCloseIcon) {\r\n            return (\r\n                <button type=\"button\" ref={el => this.closeIcon = el} className=\"p-sidebar-close p-sidebar-icon p-link\" onClick={this.onCloseClick} aria-label={this.props.ariaCloseLabel}>\r\n                    <span className=\"p-sidebar-close-icon pi pi-times\" />\r\n                    <Ripple />\r\n                </button>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderIcons() {\r\n        if (this.props.icons) {\r\n            return ObjectUtils.getJSXElement(this.props.icons, this.props);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-sidebar p-component', this.props.className, 'p-sidebar-' + this.props.position,\r\n            { 'p-sidebar-active': this.props.visible, 'p-sidebar-full': this.props.fullScreen });\r\n        const closeIcon = this.renderCloseIcon();\r\n        const icons = this.renderIcons();\r\n\r\n        const transitionTimeout = {\r\n            enter: this.props.fullScreen ? 400 : 300,\r\n            exit: this.props.fullScreen ? 400 : 300\r\n        };\r\n\r\n        return (\r\n            <CSSTransition nodeRef={this.sidebarRef} classNames=\"p-sidebar\" in={this.props.visible} timeout={transitionTimeout}\r\n                unmountOnExit onEnter={this.onEnter} onEntered={this.onEntered} onExit={this.onExit}>\r\n                <div ref={this.sidebarRef} id={this.props.id} className={className} style={this.props.style} role=\"complementary\">\r\n                    <div className=\"p-sidebar-icons\">\r\n                        {icons}\r\n                        {closeIcon}\r\n                    </div>\r\n                    <div className=\"p-sidebar-content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}