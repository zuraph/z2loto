{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\showcase\\\\inplace\\\\InplaceDoc.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nexport var InplaceDoc = /*#__PURE__*/function (_Component) {\n  _inherits(InplaceDoc, _Component);\n\n  var _super = _createSuper(InplaceDoc);\n\n  function InplaceDoc(props) {\n    var _this;\n\n    _classCallCheck(this, InplaceDoc);\n\n    _this = _super.call(this, props);\n    _this.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { Inplace, InplaceDisplay, InplaceContent } from 'primereact/inplace';\\nimport { InputText } from 'primereact/inputtext';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nexport class InplaceDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            text: '',\\n            products: []\\n        };\\n\\n        this.productService = new ProductService();\\n        this.onOpen = this.onOpen.bind(this);\\n    }\\n\\n    onOpen() {\\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Input</h5>\\n                    <Inplace closable>\\n                        <InplaceDisplay>\\n                            {this.state.text || 'Click to Edit'}\\n                        </InplaceDisplay>\\n                        <InplaceContent>\\n                            <InputText value={this.state.text} onChange={(e) => this.setState({ text: e.target.value })} autoFocus />\\n                        </InplaceContent>\\n                    </Inplace>\\n\\n                    <h5>Image</h5>\\n                    <Inplace>\\n                        <InplaceDisplay>\\n                            <span className=\\\"p-d-inline-flex p-align-center\\\">\\n                                <span className=\\\"pi pi-search\\\"></span>\\n                                <span className=\\\"p-ml-2\\\">View Picture</span>\\n                            </span>\\n                        </InplaceDisplay>\\n                        <InplaceContent>\\n                            <img alt=\\\"Nature\\\" src=\\\"showcase/demo/images/nature/nature1.jpg\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} />\\n                        </InplaceContent>\\n                    </Inplace>\\n\\n                    <h5>Lazy Data</h5>\\n                    <Inplace onOpen={this.onOpen}>\\n                        <InplaceDisplay>\\n                            View Data\\n                    </InplaceDisplay>\\n                        <InplaceContent>\\n                            <DataTable value={this.state.products}>\\n                                <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                                <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                                <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                                <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                            </DataTable>\\n                        </InplaceContent>\\n                    </Inplace>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { Inplace, InplaceDisplay, InplaceContent } from 'primereact/inplace';\\nimport { InputText } from 'primereact/inputtext';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nconst InplaceDemo = () => {\\n    const [text, setText] = useState('');\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    const onOpen = () => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Input</h5>\\n                <Inplace closable>\\n                    <InplaceDisplay>\\n                        {text || 'Click to Edit'}\\n                    </InplaceDisplay>\\n                    <InplaceContent>\\n                        <InputText value={text} onChange={(e) => setText(e.target.value)} autoFocus />\\n                    </InplaceContent>\\n                </Inplace>\\n\\n                <h5>Image</h5>\\n                <Inplace>\\n                    <InplaceDisplay>\\n                        <span className=\\\"p-d-inline-flex p-align-center\\\">\\n                            <span className=\\\"pi pi-search\\\"></span>\\n                            <span className=\\\"p-ml-2\\\">View Picture</span>\\n                        </span>\\n                    </InplaceDisplay>\\n                    <InplaceContent>\\n                        <img alt=\\\"Nature\\\" src=\\\"showcase/demo/images/nature/nature1.jpg\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} />\\n                    </InplaceContent>\\n                </Inplace>\\n\\n                <h5>Lazy Data</h5>\\n                <Inplace onOpen={onOpen}>\\n                    <InplaceDisplay>\\n                        View Data\\n                </InplaceDisplay>\\n                    <InplaceContent>\\n                        <DataTable value={products}>\\n                            <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                            <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                            <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                            <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                        </DataTable>\\n                    </InplaceContent>\\n                </Inplace>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { Inplace, InplaceDisplay, InplaceContent } from 'primereact/inplace';\\nimport { InputText } from 'primereact/inputtext';\\nimport { DataTable } from 'primereact/datatable';\\nimport { Column } from 'primereact/column';\\nimport ProductService from '../service/ProductService';\\n\\nconst InplaceDemo = () => {\\n    const [text, setText] = useState('');\\n    const [products, setProducts] = useState([]);\\n    const productService = new ProductService();\\n\\n    const onOpen = () => {\\n        productService.getProductsSmall().then(data => setProducts(data));\\n    }\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <h5>Input</h5>\\n                <Inplace closable>\\n                    <InplaceDisplay>\\n                        {text || 'Click to Edit'}\\n                    </InplaceDisplay>\\n                    <InplaceContent>\\n                        <InputText value={text} onChange={(e) => setText(e.target.value)} autoFocus />\\n                    </InplaceContent>\\n                </Inplace>\\n\\n                <h5>Image</h5>\\n                <Inplace>\\n                    <InplaceDisplay>\\n                        <span className=\\\"p-d-inline-flex p-align-center\\\">\\n                            <span className=\\\"pi pi-search\\\"></span>\\n                            <span className=\\\"p-ml-2\\\">View Picture</span>\\n                        </span>\\n                    </InplaceDisplay>\\n                    <InplaceContent>\\n                        <img alt=\\\"Nature\\\" src=\\\"showcase/demo/images/nature/nature1.jpg\\\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} />\\n                    </InplaceContent>\\n                </Inplace>\\n\\n                <h5>Lazy Data</h5>\\n                <Inplace onOpen={onOpen}>\\n                    <InplaceDisplay>\\n                        View Data\\n                </InplaceDisplay>\\n                    <InplaceContent>\\n                        <DataTable value={products}>\\n                            <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n                            <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n                            <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n                            <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n                        </DataTable>\\n                    </InplaceContent>\\n                </Inplace>\\n            </div>\\n        </div>\\n    )\\n}\\n                \"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(InplaceDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }, \"Import\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 1\n        }\n      }, \"\\nimport { Inplace } from 'primereact/inplace';\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      }, \"Inplace requires InplaceDisplay and InplaceContent component as children to define the content to display in each state. Active state of the inplace can either be managed as a Controlled or Uncontrolled component.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, \"In controlled mode, \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 48\n        }\n      }, \"active\"), \" and \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 66\n        }\n      }, \"onToggle\"), \" properties need to be defined to control the active state.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 1\n        }\n      }, \"\\n<Inplace active={active} onToggle={(e) => setActive(e.value)}>\\n    <InplaceDisplay>\\n        Click to Edit\\n    </InplaceDisplay>\\n    <InplaceContent>\\n        <InputText />\\n    </InplaceContent>\\n</Inplace>\\n\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, \"In uncontrolled mode, no additional properties are required. Initial state can be still be provided using the \", /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 138\n        }\n      }, \"active\"), \" property in uncontrolled mode however it is evaluated at initial rendering and ignored in further updates. If you programmatically need to update the active state, prefer to use the component as controlled.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 1\n        }\n      }, \"\\n<Inplace>\\n    <InplaceDisplay>\\n        Click to Edit\\n    </InplaceDisplay>\\n    <InplaceContent>\\n        <InputText autoFocus />\\n    </InplaceContent>\\n</Inplace>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }\n      }, \"Closable\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 28\n        }\n      }, \"closable\"), \" property is handy within forms as it enables to get back to output mode after editing is completed using a button displayed next to the form field.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 1\n        }\n      }, \"\\n<Inplace closable>\\n    <InplaceDisplay>\\n        Click to Edit\\n    </InplaceDisplay>\\n    <InplaceContent>\\n        <InputText autoFocus />\\n    </InplaceContent>\\n</Inplace>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }\n      }, \"Lazy Loading\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }, \"Inplace allows lazy loading content so that the content gets initialized after getting opened instead of on load. Here is an example that loads, data of a table if the user decides to open the inplace.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n        lang: \"js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 1\n        }\n      }, \"\\nconst onOpen = () => {\\n    productService.getProductsSmall().then(data => setProducts(data));\\n}\\n\\n<Inplace onOpen={onOpen}>\\n    <InplaceDisplay>\\n        View Data\\n    </InplaceDisplay>\\n    <InplaceContent>\\n        <DataTable value={products}>\\n            <Column field=\\\"code\\\" header=\\\"Code\\\"></Column>\\n            <Column field=\\\"name\\\" header=\\\"Name\\\"></Column>\\n            <Column field=\\\"category\\\" header=\\\"Category\\\"></Column>\\n            <Column field=\\\"quantity\\\" header=\\\"Quantity\\\"></Column>\\n        </DataTable>\\n    </InplaceContent>\\n</Inplace>\\n\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }\n      }, \"Properties\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 41\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 41\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 41\n        }\n      }, \"style\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 41\n        }\n      }, \"object\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 41\n        }\n      }, \"Inline style of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 41\n        }\n      }, \"className\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 41\n        }\n      }, \"string\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 41\n        }\n      }, \"Style class of the element.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 41\n        }\n      }, \"active\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 41\n        }\n      }, \"Whether the content is displayed or not.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 41\n        }\n      }, \"closable\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 41\n        }\n      }, \"Displays a button to switch back to display mode.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 41\n        }\n      }, \"disabled\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 41\n        }\n      }, \"boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 41\n        }\n      }, \"false\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 41\n        }\n      }, \"When present, it specifies that the element should be disabled.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 41\n        }\n      }, \"tabIndex\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 41\n        }\n      }, \"number\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 41\n        }\n      }, \"null\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 41\n        }\n      }, \"Index of the element in tabbing order.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }\n      }, \"Events\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 41\n        }\n      }, \"Parameters\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 41\n        }\n      }, \"Description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 41\n        }\n      }, \"onOpen\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 41\n        }\n      }, \"event: browser event \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when inplace is opened.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 41\n        }\n      }, \"onClose\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 41\n        }\n      }, \"event: browser event \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when inplace is closed.\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 41\n        }\n      }, \"onToggle\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 41\n        }\n      }, \"event.originalEvent: browser event \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 80\n        }\n      }), \"event.value: active state as a boolean\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 41\n        }\n      }, \"Callback to invoke when inplace is opened or closed.\"))))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }\n      }, \"Styling\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 25\n        }\n      }, \"Following is the list of structural style classes, for theming classes visit \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/theming\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 105\n        }\n      }, \" theming\"), \" page.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"doc-tablewrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"doc-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 41\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 41\n        }\n      }, \"Element\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 41\n        }\n      }, \"p-inplace\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 41\n        }\n      }, \"Container element\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 41\n        }\n      }, \"p-inplace-display\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 41\n        }\n      }, \"Display container\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 41\n        }\n      }, \"p-inplace-content\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 41\n        }\n      }, \"Content container\")))), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }\n      }, \"Dependencies\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 29\n        }\n      }, \"None.\"))), useLiveEditorTabs({\n        name: 'InplaceDemo',\n        sources: this.sources,\n        service: 'ProductService',\n        data: 'products-small'\n      })));\n    }\n  }]);\n\n  return InplaceDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/showcase/inplace/InplaceDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","InplaceDoc","props","sources","tabName","content","name","service","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class InplaceDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Inplace, InplaceDisplay, InplaceContent } from 'primereact/inplace';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nexport class InplaceDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            products: []\r\n        };\r\n\r\n        this.productService = new ProductService();\r\n        this.onOpen = this.onOpen.bind(this);\r\n    }\r\n\r\n    onOpen() {\r\n        this.productService.getProductsSmall().then(data => this.setState({ products: data }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Input</h5>\r\n                    <Inplace closable>\r\n                        <InplaceDisplay>\r\n                            {this.state.text || 'Click to Edit'}\r\n                        </InplaceDisplay>\r\n                        <InplaceContent>\r\n                            <InputText value={this.state.text} onChange={(e) => this.setState({ text: e.target.value })} autoFocus />\r\n                        </InplaceContent>\r\n                    </Inplace>\r\n\r\n                    <h5>Image</h5>\r\n                    <Inplace>\r\n                        <InplaceDisplay>\r\n                            <span className=\"p-d-inline-flex p-align-center\">\r\n                                <span className=\"pi pi-search\"></span>\r\n                                <span className=\"p-ml-2\">View Picture</span>\r\n                            </span>\r\n                        </InplaceDisplay>\r\n                        <InplaceContent>\r\n                            <img alt=\"Nature\" src=\"showcase/demo/images/nature/nature1.jpg\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} />\r\n                        </InplaceContent>\r\n                    </Inplace>\r\n\r\n                    <h5>Lazy Data</h5>\r\n                    <Inplace onOpen={this.onOpen}>\r\n                        <InplaceDisplay>\r\n                            View Data\r\n                    </InplaceDisplay>\r\n                        <InplaceContent>\r\n                            <DataTable value={this.state.products}>\r\n                                <Column field=\"code\" header=\"Code\"></Column>\r\n                                <Column field=\"name\" header=\"Name\"></Column>\r\n                                <Column field=\"category\" header=\"Category\"></Column>\r\n                                <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                            </DataTable>\r\n                        </InplaceContent>\r\n                    </Inplace>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Inplace, InplaceDisplay, InplaceContent } from 'primereact/inplace';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst InplaceDemo = () => {\r\n    const [text, setText] = useState('');\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    const onOpen = () => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Input</h5>\r\n                <Inplace closable>\r\n                    <InplaceDisplay>\r\n                        {text || 'Click to Edit'}\r\n                    </InplaceDisplay>\r\n                    <InplaceContent>\r\n                        <InputText value={text} onChange={(e) => setText(e.target.value)} autoFocus />\r\n                    </InplaceContent>\r\n                </Inplace>\r\n\r\n                <h5>Image</h5>\r\n                <Inplace>\r\n                    <InplaceDisplay>\r\n                        <span className=\"p-d-inline-flex p-align-center\">\r\n                            <span className=\"pi pi-search\"></span>\r\n                            <span className=\"p-ml-2\">View Picture</span>\r\n                        </span>\r\n                    </InplaceDisplay>\r\n                    <InplaceContent>\r\n                        <img alt=\"Nature\" src=\"showcase/demo/images/nature/nature1.jpg\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} />\r\n                    </InplaceContent>\r\n                </Inplace>\r\n\r\n                <h5>Lazy Data</h5>\r\n                <Inplace onOpen={onOpen}>\r\n                    <InplaceDisplay>\r\n                        View Data\r\n                </InplaceDisplay>\r\n                    <InplaceContent>\r\n                        <DataTable value={products}>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n                    </InplaceContent>\r\n                </Inplace>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Inplace, InplaceDisplay, InplaceContent } from 'primereact/inplace';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ProductService from '../service/ProductService';\r\n\r\nconst InplaceDemo = () => {\r\n    const [text, setText] = useState('');\r\n    const [products, setProducts] = useState([]);\r\n    const productService = new ProductService();\r\n\r\n    const onOpen = () => {\r\n        productService.getProductsSmall().then(data => setProducts(data));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <h5>Input</h5>\r\n                <Inplace closable>\r\n                    <InplaceDisplay>\r\n                        {text || 'Click to Edit'}\r\n                    </InplaceDisplay>\r\n                    <InplaceContent>\r\n                        <InputText value={text} onChange={(e) => setText(e.target.value)} autoFocus />\r\n                    </InplaceContent>\r\n                </Inplace>\r\n\r\n                <h5>Image</h5>\r\n                <Inplace>\r\n                    <InplaceDisplay>\r\n                        <span className=\"p-d-inline-flex p-align-center\">\r\n                            <span className=\"pi pi-search\"></span>\r\n                            <span className=\"p-ml-2\">View Picture</span>\r\n                        </span>\r\n                    </InplaceDisplay>\r\n                    <InplaceContent>\r\n                        <img alt=\"Nature\" src=\"showcase/demo/images/nature/nature1.jpg\" onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} />\r\n                    </InplaceContent>\r\n                </Inplace>\r\n\r\n                <h5>Lazy Data</h5>\r\n                <Inplace onOpen={onOpen}>\r\n                    <InplaceDisplay>\r\n                        View Data\r\n                </InplaceDisplay>\r\n                    <InplaceContent>\r\n                        <DataTable value={products}>\r\n                            <Column field=\"code\" header=\"Code\"></Column>\r\n                            <Column field=\"name\" header=\"Name\"></Column>\r\n                            <Column field=\"category\" header=\"Category\"></Column>\r\n                            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n                        </DataTable>\r\n                    </InplaceContent>\r\n                </Inplace>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Inplace } from 'primereact/inplace';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Inplace requires InplaceDisplay and InplaceContent component as children to define the content to display in each state. Active state of the inplace\r\n                can either be managed as a Controlled or Uncontrolled component.</p>\r\n\r\n                        <p>In controlled mode, <i>active</i> and <i>onToggle</i> properties need to be defined to control the active state.</p>\r\n<CodeHighlight>\r\n{`\r\n<Inplace active={active} onToggle={(e) => setActive(e.value)}>\r\n    <InplaceDisplay>\r\n        Click to Edit\r\n    </InplaceDisplay>\r\n    <InplaceContent>\r\n        <InputText />\r\n    </InplaceContent>\r\n</Inplace>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <p>In uncontrolled mode, no additional properties are required. Initial state can be still be provided using the <i>active</i> property in uncontrolled mode however\r\n                it is evaluated at initial rendering and ignored in further updates. If you programmatically need to update the active state, prefer to use the component as controlled.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Inplace>\r\n    <InplaceDisplay>\r\n        Click to Edit\r\n    </InplaceDisplay>\r\n    <InplaceContent>\r\n        <InputText autoFocus />\r\n    </InplaceContent>\r\n</Inplace>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Closable</h5>\r\n                        <p><i>closable</i> property is handy within forms as it enables to get back to output mode after editing is completed using a button displayed next to the form field.</p>\r\n<CodeHighlight>\r\n{`\r\n<Inplace closable>\r\n    <InplaceDisplay>\r\n        Click to Edit\r\n    </InplaceDisplay>\r\n    <InplaceContent>\r\n        <InputText autoFocus />\r\n    </InplaceContent>\r\n</Inplace>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Lazy Loading</h5>\r\n                        <p>Inplace allows lazy loading content so that the content gets initialized after getting opened instead of on load. Here is an example that loads, data of a table\r\n                        if the user decides to open the inplace.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nconst onOpen = () => {\r\n    productService.getProductsSmall().then(data => setProducts(data));\r\n}\r\n\r\n<Inplace onOpen={onOpen}>\r\n    <InplaceDisplay>\r\n        View Data\r\n    </InplaceDisplay>\r\n    <InplaceContent>\r\n        <DataTable value={products}>\r\n            <Column field=\"code\" header=\"Code\"></Column>\r\n            <Column field=\"name\" header=\"Name\"></Column>\r\n            <Column field=\"category\" header=\"Category\"></Column>\r\n            <Column field=\"quantity\" header=\"Quantity\"></Column>\r\n        </DataTable>\r\n    </InplaceContent>\r\n</Inplace>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>object</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>active</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Whether the content is displayed or not.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>closable</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Displays a button to switch back to display mode.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>disabled</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>When present, it specifies that the element should be disabled.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>tabIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>null</td>\r\n                                        <td>Index of the element in tabbing order.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onOpen</td>\r\n                                        <td>event: browser event </td>\r\n                                        <td>Callback to invoke when inplace is opened.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onClose</td>\r\n                                        <td>event: browser event </td>\r\n                                        <td>Callback to invoke when inplace is closed.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onToggle</td>\r\n                                        <td>event.originalEvent: browser event <br />\r\n                                event.value: active state as a boolean\r\n                            </td>\r\n                                        <td>Callback to invoke when inplace is opened or closed.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-inplace</td>\r\n                                        <td>Container element</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-inplace-display</td>\r\n                                        <td>Display container</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-inplace-content</td>\r\n                                        <td>Content container</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <h5>Dependencies</h5>\r\n                            <p>None.</p>\r\n                        </div>\r\n\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'InplaceDemo', sources: this.sources, service: 'ProductService', data: 'products-small' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}