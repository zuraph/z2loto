{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\toast\\\\Toast.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport { ToastMessage } from './ToastMessage';\nimport DomHandler from '../utils/DomHandler';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nvar messageIdx = 0;\nexport var Toast = /*#__PURE__*/function (_Component) {\n  _inherits(Toast, _Component);\n\n  var _super = _createSuper(Toast);\n\n  function Toast(props) {\n    var _this;\n\n    _classCallCheck(this, Toast);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      messages: []\n    };\n    _this.onClose = _this.onClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Toast, [{\n    key: \"show\",\n    value: function show(value) {\n      if (value) {\n        var newMessages;\n\n        if (Array.isArray(value)) {\n          for (var i = 0; i < value.length; i++) {\n            value[i].id = messageIdx++;\n            newMessages = [].concat(_toConsumableArray(this.state.messages), _toConsumableArray(value));\n          }\n        } else {\n          value.id = messageIdx++;\n          newMessages = this.state.messages ? [].concat(_toConsumableArray(this.state.messages), [value]) : [value];\n        }\n\n        this.setState({\n          messages: newMessages\n        });\n        this.container.style.zIndex = String(this.props.baseZIndex + DomHandler.generateZIndex());\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setState({\n        messages: []\n      });\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(message) {\n      var newMessages = this.state.messages.filter(function (msg) {\n        return msg.id !== message.id;\n      });\n      this.setState({\n        messages: newMessages\n      });\n\n      if (this.props.onRemove) {\n        this.props.onRemove(message);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = classNames('p-toast p-component p-toast-' + this.props.position, this.props.className);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(el) {\n          _this2.container = el;\n        },\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TransitionGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, this.state.messages.map(function (message) {\n        var messageRef = React.createRef();\n        return /*#__PURE__*/React.createElement(CSSTransition, {\n          nodeRef: messageRef,\n          key: message.id,\n          classNames: \"p-toast-message\",\n          unmountOnExit: true,\n          timeout: {\n            enter: 300,\n            exit: 300\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(ToastMessage, {\n          ref: messageRef,\n          message: message,\n          onClick: _this2.props.onClick,\n          onClose: _this2.onClose,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return Toast;\n}(Component);\nToast.defaultProps = {\n  id: null,\n  className: null,\n  style: null,\n  baseZIndex: 0,\n  position: 'top-right',\n  onClick: null,\n  onRemove: null\n};\nToast.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  baseZIndex: PropTypes.number,\n  position: PropTypes.string,\n  onClick: PropTypes.func,\n  onRemove: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/toast/Toast.js"],"names":["React","Component","PropTypes","classNames","ToastMessage","DomHandler","CSSTransition","TransitionGroup","messageIdx","Toast","props","state","messages","onClose","bind","value","newMessages","Array","isArray","i","length","id","setState","container","style","zIndex","String","baseZIndex","generateZIndex","message","filter","msg","onRemove","className","position","el","map","messageRef","createRef","enter","exit","onClick","defaultProps","propTypes","string","object","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport { ToastMessage } from './ToastMessage';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nlet messageIdx = 0;\r\n\r\nexport class Toast extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        className: null,\r\n        style: null,\r\n        baseZIndex: 0,\r\n        position: 'top-right',\r\n        onClick: null,\r\n        onRemove: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        style: PropTypes.object,\r\n        baseZIndex: PropTypes.number,\r\n        position: PropTypes.string,\r\n        onClick: PropTypes.func,\r\n        onRemove: PropTypes.func\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            messages: []\r\n        };\r\n\r\n        this.onClose = this.onClose.bind(this);\r\n    }\r\n\r\n    show(value) {\r\n        if (value) {\r\n            let newMessages;\r\n\r\n            if (Array.isArray(value)) {\r\n                for (let i = 0; i < value.length; i++) {\r\n                    value[i].id = messageIdx++;\r\n                    newMessages = [...this.state.messages, ...value];\r\n                }\r\n            }\r\n            else {\r\n                value.id = messageIdx++;\r\n                newMessages = this.state.messages ? [...this.state.messages, value] : [value];\r\n            }\r\n\r\n            this.setState({\r\n                messages: newMessages\r\n            });\r\n\r\n            this.container.style.zIndex = String(this.props.baseZIndex + DomHandler.generateZIndex());\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            messages: []\r\n        })\r\n    }\r\n\r\n    onClose(message) {\r\n        let newMessages = this.state.messages.filter(msg => msg.id !== message.id);\r\n        this.setState({\r\n            messages: newMessages\r\n        });\r\n\r\n        if (this.props.onRemove) {\r\n            this.props.onRemove(message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = classNames('p-toast p-component p-toast-' + this.props.position, this.props.className);\r\n\r\n        return (\r\n            <div ref={(el) => { this.container = el; }} id={this.props.id} className={className} style={this.props.style}>\r\n                <TransitionGroup>\r\n                    {\r\n                        this.state.messages.map((message) => {\r\n                            const messageRef = React.createRef();\r\n\r\n                            return (\r\n                                <CSSTransition nodeRef={messageRef} key={message.id} classNames=\"p-toast-message\" unmountOnExit timeout={{ enter: 300, exit: 300 }}>\r\n                                    <ToastMessage ref={messageRef} message={message} onClick={this.props.onClick} onClose={this.onClose} />\r\n                                </CSSTransition>\r\n                            )\r\n                        })\r\n                    }\r\n                </TransitionGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}