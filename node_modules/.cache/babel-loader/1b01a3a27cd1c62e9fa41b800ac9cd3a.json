{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zz-regul\\\\src\\\\components\\\\datatable\\\\BodyCell.js\";\nimport React, { Component } from 'react';\nimport { classNames } from '../utils/ClassNames';\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport DomHandler from '../utils/DomHandler';\nimport { RowRadioButton } from './RowRadioButton';\nimport { RowCheckbox } from './RowCheckbox';\nimport { Ripple } from '../ripple/Ripple';\nexport var BodyCell = /*#__PURE__*/function (_Component) {\n  _inherits(BodyCell, _Component);\n\n  var _super = _createSuper(BodyCell);\n\n  function BodyCell(props) {\n    var _this;\n\n    _classCallCheck(this, BodyCell);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      editing: _this.props.editing\n    };\n    _this.onExpanderClick = _this.onExpanderClick.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.onEditorFocus = _this.onEditorFocus.bind(_assertThisInitialized(_this));\n    _this.eventBusKey = \"\".concat(_this.props.field, \"_\").concat(_this.props.rowIndex);\n    return _this;\n  }\n\n  _createClass(BodyCell, [{\n    key: \"onExpanderClick\",\n    value: function onExpanderClick(event) {\n      if (this.props.onRowToggle) {\n        this.props.onRowToggle({\n          originalEvent: event,\n          data: this.props.rowData\n        });\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      if (this.props.editMode !== 'row') {\n        if (event.which === 13 || event.which === 9) {\n          // tab || enter\n          this.switchCellToViewMode(event, true);\n        }\n\n        if (event.which === 27) {\n          // escape\n          this.switchCellToViewMode(event, false);\n        }\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      var _this2 = this;\n\n      if (this.props.editMode !== 'row' && this.props.editor && !this.state.editing) {\n        this.selfClick = true;\n\n        if (this.props.onBeforeEditorShow) {\n          this.props.onBeforeEditorShow({\n            originalEvent: event,\n            columnProps: this.props\n          });\n        }\n\n        this.setState({\n          editing: true\n        }, function () {\n          if (_this2.props.onEditorInit) {\n            _this2.props.onEditorInit({\n              originalEvent: event,\n              columnProps: _this2.props\n            });\n          }\n\n          if (_this2.props.editorValidatorEvent === 'click') {\n            _this2.bindDocumentEditListener();\n\n            OverlayEventBus.on('overlay-click', function (e) {\n              if (!_this2.isOutsideClicked(e.target)) {\n                _this2.selfClick = true;\n              }\n            }, _this2.eventBusKey);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      this.selfClick = false;\n\n      if (this.props.editMode !== 'row' && this.state.editing && this.props.editorValidatorEvent === 'blur') {\n        this.switchCellToViewMode(event, true);\n      }\n    }\n  }, {\n    key: \"onEditorFocus\",\n    value: function onEditorFocus(event) {\n      this.onClick(event);\n    }\n  }, {\n    key: \"bindDocumentEditListener\",\n    value: function bindDocumentEditListener() {\n      var _this3 = this;\n\n      if (!this.documentEditListener) {\n        this.documentEditListener = function (e) {\n          if (!_this3.selfClick && _this3.isOutsideClicked(e.target)) {\n            _this3.switchCellToViewMode(e, true);\n          }\n\n          _this3.selfClick = false;\n        };\n\n        document.addEventListener('click', this.documentEditListener);\n      }\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(target) {\n      return this.container && !(this.container.isSameNode(target) || this.container.contains(target));\n    }\n  }, {\n    key: \"closeCell\",\n    value: function closeCell(event) {\n      var _this4 = this;\n\n      if (this.props.onBeforeEditorHide) {\n        this.props.onBeforeEditorHide({\n          originalEvent: event,\n          columnProps: this.props\n        });\n      }\n      /* When using the 'tab' key, the focus event of the next cell is not called in IE. */\n\n\n      setTimeout(function () {\n        _this4.setState({\n          editing: false\n        }, function () {\n          _this4.unbindDocumentEditListener();\n\n          OverlayEventBus.off('overlay-click', _this4.eventBusKey);\n        });\n      }, 1);\n    }\n  }, {\n    key: \"switchCellToViewMode\",\n    value: function switchCellToViewMode(event, submit) {\n      var params = {\n        originalEvent: event,\n        columnProps: this.props\n      };\n\n      if (!submit && this.props.onEditorCancel) {\n        this.props.onEditorCancel(params);\n      }\n\n      var valid = true;\n\n      if (this.props.editorValidator) {\n        valid = this.props.editorValidator(params);\n      }\n\n      if (valid) {\n        if (submit && this.props.onEditorSubmit) {\n          this.props.onEditorSubmit(params);\n        }\n\n        this.closeCell(event);\n      }\n    }\n  }, {\n    key: \"unbindDocumentEditListener\",\n    value: function unbindDocumentEditListener() {\n      if (this.documentEditListener) {\n        document.removeEventListener('click', this.documentEditListener);\n        this.documentEditListener = null;\n        this.selfClick = false;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this5 = this;\n\n      if (this.props.editMode !== 'row' && this.container && this.props.editor) {\n        clearTimeout(this.tabindexTimeout);\n\n        if (this.state.editing) {\n          var focusable = DomHandler.findSingle(this.container, 'input');\n\n          if (focusable && document.activeElement !== focusable && !focusable.hasAttribute('data-isCellEditing')) {\n            focusable.setAttribute('data-isCellEditing', true);\n            focusable.focus();\n          }\n\n          this.keyHelper.tabIndex = -1;\n        } else {\n          this.tabindexTimeout = setTimeout(function () {\n            if (_this5.keyHelper) {\n              _this5.keyHelper.setAttribute('tabindex', 0);\n            }\n          }, 50);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentEditListener();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var content, header, editorKeyHelper;\n      var cellClassName = classNames(this.props.bodyClassName || this.props.className, {\n        'p-selection-column': this.props.selectionMode,\n        'p-editable-column': this.props.editor,\n        'p-cell-editing': this.state.editing && this.props.editor\n      });\n\n      if (this.props.expander) {\n        var iconClassName = classNames('p-row-toggler-icon pi pi-fw p-clickable', {\n          'pi-chevron-down': this.props.expanded,\n          'pi-chevron-right': !this.props.expanded\n        });\n        var ariaControls = \"\".concat(this.props.tableId ? this.props.tableId + '_' : '', \"content_\").concat(this.props.rowIndex, \"_expanded\");\n        var expanderProps = {\n          onClick: this.onExpanderClick,\n          className: 'p-row-toggler p-link',\n          iconClassName: iconClassName\n        };\n        content = /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          onClick: expanderProps.onClick,\n          className: expanderProps.className,\n          \"aria-expanded\": this.props.expanded,\n          \"aria-controls\": ariaControls,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: expanderProps.iconClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Ripple, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }\n        }));\n\n        if (this.props.body) {\n          expanderProps['element'] = content;\n          content = this.props.body(this.props.rowData, _objectSpread(_objectSpread({}, this.props), {\n            expander: expanderProps\n          }));\n        }\n      } else if (this.props.selectionMode) {\n        var showSelection = true;\n\n        if (this.props.showSelectionElement) {\n          showSelection = this.props.showSelectionElement(this.props.rowData);\n        }\n\n        if (showSelection) {\n          if (this.props.selectionMode === 'single') content = /*#__PURE__*/React.createElement(RowRadioButton, {\n            onClick: this.props.onRadioClick,\n            rowData: this.props.rowData,\n            selected: this.props.selected,\n            tableId: this.props.tableId,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 31\n            }\n          });else content = /*#__PURE__*/React.createElement(RowCheckbox, {\n            onClick: this.props.onCheckboxClick,\n            rowData: this.props.rowData,\n            selected: this.props.selected,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 31\n            }\n          });\n        }\n      } else if (this.props.rowReorder) {\n        var showReorder = true;\n\n        if (this.props.showRowReorderElement) {\n          showReorder = this.props.showRowReorderElement(this.props.rowData);\n        }\n\n        if (showReorder) {\n          var reorderIcon = classNames('p-table-reorderablerow-handle', this.props.rowReorderIcon);\n          content = /*#__PURE__*/React.createElement(\"i\", {\n            className: reorderIcon,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }\n          });\n        }\n      } else if (this.props.rowEditor) {\n        var rowEditorProps = {};\n\n        if (this.state.editing) {\n          rowEditorProps = {\n            editing: true,\n            onSaveClick: this.props.onRowEditSave,\n            saveClassName: 'p-row-editor-save p-link',\n            saveIconClassName: 'p-row-editor-save-icon pi pi-fw pi-check p-clickable',\n            onCancelClick: this.props.onRowEditCancel,\n            cancelClassName: 'p-row-editor-cancel p-link',\n            cancelIconClassName: 'p-row-editor-cancel-icon pi pi-fw pi-times p-clickable'\n          };\n          content = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            onClick: rowEditorProps.onSaveClick,\n            className: rowEditorProps.saveClassName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: rowEditorProps.saveIconClassName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(Ripple, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }\n          })), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            onClick: rowEditorProps.onCancelClick,\n            className: rowEditorProps.cancelClassName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: rowEditorProps.cancelIconClassName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(Ripple, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }\n          })));\n        } else {\n          rowEditorProps = {\n            editing: false,\n            onInitClick: this.props.onRowEditInit,\n            initClassName: 'p-row-editor-init p-link',\n            initIconClassName: 'p-row-editor-init-icon pi pi-fw pi-pencil p-clickable'\n          };\n          content = /*#__PURE__*/React.createElement(\"button\", {\n            type: \"button\",\n            onClick: rowEditorProps.onInitClick,\n            className: rowEditorProps.initClassName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: rowEditorProps.initIconClassName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Ripple, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 25\n            }\n          }));\n        }\n\n        if (this.props.body) {\n          rowEditorProps['element'] = content;\n          content = this.props.body(this.props.rowData, _objectSpread(_objectSpread({}, this.props), {\n            rowEditor: rowEditorProps\n          }));\n        }\n      } else {\n        if (this.state.editing && this.props.editor) {\n          content = this.props.editor(this.props);\n        } else {\n          if (this.props.body) content = this.props.body(this.props.rowData, this.props);else content = ObjectUtils.resolveFieldData(this.props.rowData, this.props.field);\n        }\n      }\n\n      if (this.props.editMode !== 'row') {\n        /* eslint-disable */\n        editorKeyHelper = this.props.editor && /*#__PURE__*/React.createElement(\"a\", {\n          tabIndex: \"0\",\n          ref: function ref(el) {\n            _this6.keyHelper = el;\n          },\n          className: \"p-cell-editor-key-helper p-hidden-accessible\",\n          onFocus: this.onEditorFocus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 52\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 193\n          }\n        }));\n        /* eslint-enable */\n      }\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        ref: function ref(el) {\n          _this6.container = el;\n        },\n        role: \"cell\",\n        className: cellClassName,\n        style: this.props.bodyStyle || this.props.style,\n        onClick: this.onClick,\n        onKeyDown: this.onKeyDown,\n        rowSpan: this.props.rowSpan,\n        onBlur: this.onBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }\n      }, header, editorKeyHelper, content);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.editMode === 'row' && nextProps.editing !== prevState.editing) {\n        return {\n          editing: nextProps.editing\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return BodyCell;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zz-regul/src/components/datatable/BodyCell.js"],"names":["React","Component","classNames","OverlayEventBus","ObjectUtils","DomHandler","RowRadioButton","RowCheckbox","Ripple","BodyCell","props","state","editing","onExpanderClick","bind","onClick","onBlur","onKeyDown","onEditorFocus","eventBusKey","field","rowIndex","event","onRowToggle","originalEvent","data","rowData","preventDefault","editMode","which","switchCellToViewMode","editor","selfClick","onBeforeEditorShow","columnProps","setState","onEditorInit","editorValidatorEvent","bindDocumentEditListener","on","e","isOutsideClicked","target","documentEditListener","document","addEventListener","container","isSameNode","contains","onBeforeEditorHide","setTimeout","unbindDocumentEditListener","off","submit","params","onEditorCancel","valid","editorValidator","onEditorSubmit","closeCell","removeEventListener","clearTimeout","tabindexTimeout","focusable","findSingle","activeElement","hasAttribute","setAttribute","focus","keyHelper","tabIndex","content","header","editorKeyHelper","cellClassName","bodyClassName","className","selectionMode","expander","iconClassName","expanded","ariaControls","tableId","expanderProps","body","showSelection","showSelectionElement","onRadioClick","selected","onCheckboxClick","rowReorder","showReorder","showRowReorderElement","reorderIcon","rowReorderIcon","rowEditor","rowEditorProps","onSaveClick","onRowEditSave","saveClassName","saveIconClassName","onCancelClick","onRowEditCancel","cancelClassName","cancelIconClassName","onInitClick","onRowEditInit","initClassName","initIconClassName","resolveFieldData","el","bodyStyle","style","rowSpan","nextProps","prevState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport OverlayEventBus from '../overlayeventbus/OverlayEventBus';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport { RowRadioButton } from './RowRadioButton';\r\nimport { RowCheckbox } from './RowCheckbox';\r\nimport { Ripple } from '../ripple/Ripple';\r\n\r\nexport class BodyCell extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: this.props.editing\r\n        };\r\n\r\n        this.onExpanderClick = this.onExpanderClick.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onEditorFocus = this.onEditorFocus.bind(this);\r\n\r\n        this.eventBusKey = `${this.props.field}_${this.props.rowIndex}`;\r\n    }\r\n\r\n    onExpanderClick(event) {\r\n        if (this.props.onRowToggle) {\r\n            this.props.onRowToggle({\r\n                originalEvent: event,\r\n                data: this.props.rowData\r\n            });\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        if (this.props.editMode !== 'row') {\r\n            if (event.which === 13 || event.which === 9) { // tab || enter\r\n                this.switchCellToViewMode(event, true);\r\n            }\r\n\r\n            if (event.which === 27) { // escape\r\n                this.switchCellToViewMode(event, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(event) {\r\n        if (this.props.editMode !== 'row' && this.props.editor && !this.state.editing) {\r\n            this.selfClick = true;\r\n\r\n            if (this.props.onBeforeEditorShow) {\r\n                this.props.onBeforeEditorShow({\r\n                    originalEvent: event,\r\n                    columnProps: this.props\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                editing: true\r\n            }, () => {\r\n                if (this.props.onEditorInit) {\r\n                    this.props.onEditorInit({\r\n                        originalEvent: event,\r\n                        columnProps: this.props\r\n                    });\r\n                }\r\n\r\n                if (this.props.editorValidatorEvent === 'click') {\r\n                    this.bindDocumentEditListener();\r\n\r\n                    OverlayEventBus.on('overlay-click', (e) => {\r\n                        if (!this.isOutsideClicked(e.target)) {\r\n                            this.selfClick = true;\r\n                        }\r\n                    }, this.eventBusKey);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onBlur(event) {\r\n        this.selfClick = false;\r\n\r\n        if (this.props.editMode !== 'row' && this.state.editing && this.props.editorValidatorEvent === 'blur') {\r\n            this.switchCellToViewMode(event, true);\r\n        }\r\n    }\r\n\r\n    onEditorFocus(event) {\r\n        this.onClick(event);\r\n    }\r\n\r\n    bindDocumentEditListener() {\r\n        if (!this.documentEditListener) {\r\n            this.documentEditListener = (e) => {\r\n                if (!this.selfClick && this.isOutsideClicked(e.target)) {\r\n                    this.switchCellToViewMode(e, true);\r\n                }\r\n\r\n                this.selfClick = false;\r\n            };\r\n\r\n            document.addEventListener('click', this.documentEditListener);\r\n        }\r\n    }\r\n\r\n    isOutsideClicked(target) {\r\n        return this.container && !(this.container.isSameNode(target) || this.container.contains(target));\r\n    }\r\n\r\n    closeCell(event) {\r\n        if (this.props.onBeforeEditorHide) {\r\n            this.props.onBeforeEditorHide({\r\n                originalEvent: event,\r\n                columnProps: this.props\r\n            });\r\n        }\r\n\r\n        /* When using the 'tab' key, the focus event of the next cell is not called in IE. */\r\n        setTimeout(() => {\r\n            this.setState({\r\n                editing: false\r\n            }, () => {\r\n                this.unbindDocumentEditListener();\r\n                OverlayEventBus.off('overlay-click', this.eventBusKey);\r\n            });\r\n        }, 1);\r\n    }\r\n\r\n    switchCellToViewMode(event, submit) {\r\n        const params = {\r\n            originalEvent: event,\r\n            columnProps: this.props\r\n        };\r\n\r\n        if (!submit && this.props.onEditorCancel) {\r\n            this.props.onEditorCancel(params);\r\n        }\r\n\r\n        let valid = true;\r\n        if (this.props.editorValidator) {\r\n            valid = this.props.editorValidator(params);\r\n        }\r\n\r\n        if (valid) {\r\n            if (submit && this.props.onEditorSubmit) {\r\n                this.props.onEditorSubmit(params);\r\n            }\r\n\r\n            this.closeCell(event);\r\n        }\r\n    }\r\n\r\n    unbindDocumentEditListener() {\r\n        if (this.documentEditListener) {\r\n            document.removeEventListener('click', this.documentEditListener);\r\n            this.documentEditListener = null;\r\n            this.selfClick = false;\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.editMode === 'row' && nextProps.editing !== prevState.editing) {\r\n            return {\r\n                editing: nextProps.editing\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.editMode !== 'row' && this.container && this.props.editor) {\r\n            clearTimeout(this.tabindexTimeout);\r\n            if (this.state.editing) {\r\n                let focusable = DomHandler.findSingle(this.container, 'input');\r\n                if (focusable && document.activeElement !== focusable && !focusable.hasAttribute('data-isCellEditing')) {\r\n                    focusable.setAttribute('data-isCellEditing', true);\r\n                    focusable.focus();\r\n                }\r\n\r\n                this.keyHelper.tabIndex = -1;\r\n            }\r\n            else {\r\n                this.tabindexTimeout = setTimeout(() => {\r\n                    if (this.keyHelper) {\r\n                        this.keyHelper.setAttribute('tabindex', 0);\r\n                    }\r\n                }, 50);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDocumentEditListener();\r\n    }\r\n\r\n    render() {\r\n        let content, header, editorKeyHelper;\r\n        let cellClassName = classNames(this.props.bodyClassName || this.props.className, {\r\n            'p-selection-column': this.props.selectionMode,\r\n            'p-editable-column': this.props.editor,\r\n            'p-cell-editing': this.state.editing && this.props.editor\r\n        });\r\n\r\n        if (this.props.expander) {\r\n            const iconClassName = classNames('p-row-toggler-icon pi pi-fw p-clickable', { 'pi-chevron-down': this.props.expanded, 'pi-chevron-right': !this.props.expanded });\r\n            const ariaControls = `${this.props.tableId ? this.props.tableId + '_' : ''}content_${this.props.rowIndex}_expanded`;\r\n            let expanderProps = {\r\n                onClick: this.onExpanderClick,\r\n                className: 'p-row-toggler p-link',\r\n                iconClassName\r\n            };\r\n\r\n            content = (\r\n                <button type=\"button\" onClick={expanderProps.onClick} className={expanderProps.className} aria-expanded={this.props.expanded} aria-controls={ariaControls}>\r\n                    <span className={expanderProps.iconClassName}></span>\r\n                    <Ripple />\r\n                </button>\r\n            );\r\n\r\n            if (this.props.body) {\r\n                expanderProps['element'] = content;\r\n                content = this.props.body(this.props.rowData, { ...this.props, ...{ expander: expanderProps } });\r\n            }\r\n        }\r\n        else if (this.props.selectionMode) {\r\n            let showSelection = true;\r\n            if (this.props.showSelectionElement) {\r\n                showSelection = this.props.showSelectionElement(this.props.rowData);\r\n            }\r\n\r\n            if (showSelection) {\r\n                if (this.props.selectionMode === 'single')\r\n                    content = <RowRadioButton onClick={this.props.onRadioClick} rowData={this.props.rowData} selected={this.props.selected} tableId={this.props.tableId} />;\r\n                else\r\n                    content = <RowCheckbox onClick={this.props.onCheckboxClick} rowData={this.props.rowData} selected={this.props.selected} />;\r\n            }\r\n        }\r\n        else if (this.props.rowReorder) {\r\n            let showReorder = true;\r\n            if (this.props.showRowReorderElement) {\r\n                showReorder = this.props.showRowReorderElement(this.props.rowData);\r\n            }\r\n\r\n            if (showReorder) {\r\n                let reorderIcon = classNames('p-table-reorderablerow-handle', this.props.rowReorderIcon);\r\n                content = (\r\n                    <i className={reorderIcon}></i>\r\n                );\r\n            }\r\n        }\r\n        else if (this.props.rowEditor) {\r\n            let rowEditorProps = {};\r\n\r\n            if (this.state.editing) {\r\n                rowEditorProps = {\r\n                    editing: true,\r\n                    onSaveClick: this.props.onRowEditSave,\r\n                    saveClassName: 'p-row-editor-save p-link',\r\n                    saveIconClassName: 'p-row-editor-save-icon pi pi-fw pi-check p-clickable',\r\n                    onCancelClick: this.props.onRowEditCancel,\r\n                    cancelClassName: 'p-row-editor-cancel p-link',\r\n                    cancelIconClassName: 'p-row-editor-cancel-icon pi pi-fw pi-times p-clickable'\r\n                };\r\n\r\n                content = (\r\n                    <>\r\n                        <button type=\"button\" onClick={rowEditorProps.onSaveClick} className={rowEditorProps.saveClassName}>\r\n                            <span className={rowEditorProps.saveIconClassName}></span>\r\n                            <Ripple />\r\n                        </button>\r\n                        <button type=\"button\" onClick={rowEditorProps.onCancelClick} className={rowEditorProps.cancelClassName}>\r\n                            <span className={rowEditorProps.cancelIconClassName}></span>\r\n                            <Ripple />\r\n                        </button>\r\n                    </>\r\n                );\r\n            }\r\n            else {\r\n                rowEditorProps = {\r\n                    editing: false,\r\n                    onInitClick: this.props.onRowEditInit,\r\n                    initClassName: 'p-row-editor-init p-link',\r\n                    initIconClassName: 'p-row-editor-init-icon pi pi-fw pi-pencil p-clickable'\r\n                };\r\n\r\n                content = (\r\n                    <button type=\"button\" onClick={rowEditorProps.onInitClick} className={rowEditorProps.initClassName}>\r\n                        <span className={rowEditorProps.initIconClassName}></span>\r\n                        <Ripple />\r\n                    </button>\r\n                );\r\n            }\r\n\r\n            if (this.props.body) {\r\n                rowEditorProps['element'] = content;\r\n                content = this.props.body(this.props.rowData, { ...this.props, ...{ rowEditor: rowEditorProps } });\r\n            }\r\n        }\r\n        else {\r\n            if (this.state.editing && this.props.editor) {\r\n                content = this.props.editor(this.props);\r\n            }\r\n            else {\r\n                if (this.props.body)\r\n                    content = this.props.body(this.props.rowData, this.props);\r\n                else\r\n                    content = ObjectUtils.resolveFieldData(this.props.rowData, this.props.field);\r\n            }\r\n        }\r\n\r\n        if (this.props.editMode !== 'row') {\r\n            /* eslint-disable */\r\n            editorKeyHelper = this.props.editor && <a tabIndex=\"0\" ref={(el) => { this.keyHelper = el; }} className=\"p-cell-editor-key-helper p-hidden-accessible\" onFocus={this.onEditorFocus}><span></span></a>;\r\n            /* eslint-enable */\r\n        }\r\n\r\n        return (\r\n            <td ref={(el) => { this.container = el; }} role=\"cell\" className={cellClassName} style={this.props.bodyStyle || this.props.style} onClick={this.onClick} onKeyDown={this.onKeyDown}\r\n                rowSpan={this.props.rowSpan} onBlur={this.onBlur}>\r\n                {header}\r\n                {editorKeyHelper}\r\n                {content}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}