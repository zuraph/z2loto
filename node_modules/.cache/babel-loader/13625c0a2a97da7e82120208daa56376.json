{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\avatar\\\\Avatar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport ObjectUtils from '../utils/ObjectUtils';\nexport var Avatar = /*#__PURE__*/function (_Component) {\n  _inherits(Avatar, _Component);\n\n  var _super = _createSuper(Avatar);\n\n  function Avatar() {\n    _classCallCheck(this, Avatar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Avatar, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this = this;\n\n      if (this.props.label) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"p-avatar-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }\n        }, this.props.label);\n      } else if (this.props.icon) {\n        var iconClassName = classNames('p-avatar-icon', this.props.icon);\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: iconClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 20\n          }\n        });\n      } else if (this.props.image) {\n        var onError = function onError(e) {\n          if (_this.props.onImageError) {\n            _this.props.onImageError(e);\n          }\n        };\n\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: this.props.image,\n          alt: this.props.imageAlt,\n          onError: onError,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var containerClassName = classNames('p-avatar p-component', {\n        'p-avatar-image': this.props.image != null,\n        'p-avatar-circle': this.props.shape === 'circle',\n        'p-avatar-lg': this.props.size === 'large',\n        'p-avatar-xl': this.props.size === 'xlarge',\n        'p-avatar-clickable': !!this.props.onClick\n      }, this.props.className);\n      var content = this.props.template ? ObjectUtils.getJSXElement(this.props.template, this.props) : this.renderContent();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: containerClassName,\n        style: this.props.style,\n        onClick: this.props.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, content, this.props.children);\n    }\n  }]);\n\n  return Avatar;\n}(Component);\nAvatar.defaultProps = {\n  label: null,\n  icon: null,\n  image: null,\n  size: 'normal',\n  shape: 'square',\n  style: null,\n  className: null,\n  template: null,\n  imageAlt: 'avatar',\n  onImageError: null,\n  onClick: null\n};\nAvatar.propTypes = {\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  image: PropTypes.string,\n  size: PropTypes.string,\n  shape: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  template: PropTypes.any,\n  imageAlt: PropTypes.string,\n  onImageError: PropTypes.func,\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/avatar/Avatar.js"],"names":["React","Component","PropTypes","classNames","ObjectUtils","Avatar","props","label","icon","iconClassName","image","onError","e","onImageError","imageAlt","containerClassName","shape","size","onClick","className","content","template","getJSXElement","renderContent","style","children","defaultProps","propTypes","string","object","any","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\n\r\nexport class Avatar extends Component {\r\n\r\n    static defaultProps = {\r\n        label: null,\r\n        icon: null,\r\n        image: null,\r\n        size: 'normal',\r\n        shape: 'square',\r\n        style: null,\r\n        className: null,\r\n        template: null,\r\n        imageAlt: 'avatar',\r\n        onImageError: null,\r\n        onClick: null\r\n    }\r\n\r\n    static propTypes = {\r\n        label: PropTypes.string,\r\n        icon: PropTypes.string,\r\n        image: PropTypes.string,\r\n        size: PropTypes.string,\r\n        shape: PropTypes.string,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        template: PropTypes.any,\r\n        imageAlt: PropTypes.string,\r\n        onImageError: PropTypes.func,\r\n        onClick: PropTypes.func\r\n    };\r\n\r\n    renderContent() {\r\n        if (this.props.label) {\r\n            return <span className=\"p-avatar-text\">{this.props.label}</span>;\r\n        }\r\n        else if (this.props.icon) {\r\n            const iconClassName = classNames('p-avatar-icon', this.props.icon);\r\n            return <span className={iconClassName}></span>;\r\n        }\r\n        else if (this.props.image) {\r\n            const onError = (e) => {\r\n                if (this.props.onImageError) {\r\n                    this.props.onImageError(e);\r\n                }\r\n            };\r\n\r\n            return <img src={this.props.image} alt={this.props.imageAlt} onError={onError}></img>\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const containerClassName = classNames('p-avatar p-component', {\r\n            'p-avatar-image': this.props.image != null,\r\n            'p-avatar-circle': this.props.shape === 'circle',\r\n            'p-avatar-lg': this.props.size === 'large',\r\n            'p-avatar-xl': this.props.size === 'xlarge',\r\n            'p-avatar-clickable': !!this.props.onClick\r\n        }, this.props.className);\r\n\r\n        const content = this.props.template ? ObjectUtils.getJSXElement(this.props.template, this.props) : this.renderContent();\r\n\r\n        return (\r\n            <div className={containerClassName} style={this.props.style} onClick={this.props.onClick}>\r\n                {content}\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}