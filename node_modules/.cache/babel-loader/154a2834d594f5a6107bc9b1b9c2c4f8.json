{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{TabView}from'../../components/tabview/TabView';import{Chart}from'../../components/chart/Chart';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';import{AppInlineHeader}from'../../AppInlineHeader';import AppContentContext from'../../AppContentContext';export var BarChartDemo=/*#__PURE__*/function(_Component){_inherits(BarChartDemo,_Component);var _super=_createSuper(BarChartDemo);function BarChartDemo(props){var _this;_classCallCheck(this,BarChartDemo);_this=_super.call(this,props);_this.basicData={labels:['January','February','March','April','May','June','July'],datasets:[{label:'My First dataset',backgroundColor:'#42A5F5',data:[65,59,80,81,56,55,40]},{label:'My Second dataset',backgroundColor:'#FFA726',data:[28,48,40,19,86,27,90]}]};_this.multiAxisData={labels:['January','February','March','April','May','June','July'],datasets:[{label:'Dataset 1',backgroundColor:['#EC407A','#AB47BC','#42A5F5','#7E57C2','#66BB6A','#FFCA28','#26A69A'],yAxisID:'y-axis-1',data:[65,59,80,81,56,55,10]},{label:'Dataset 2',backgroundColor:'#78909C',yAxisID:'y-axis-2',data:[28,48,40,19,86,27,90]}]};_this.stackedData={labels:['January','February','March','April','May','June','July'],datasets:[{type:'bar',label:'Dataset 1',backgroundColor:'#42A5F5',data:[50,25,12,48,90,76,42]},{type:'bar',label:'Dataset 2',backgroundColor:'#66BB6A',data:[21,84,24,75,37,65,34]},{type:'bar',label:'Dataset 3',backgroundColor:'#FFA726',data:[41,52,24,74,23,21,32]}]};_this.options={'light':_this.getLightTheme(),'dark':_this.getDarkTheme()};return _this;}_createClass(BarChartDemo,[{key:\"getLightTheme\",value:function getLightTheme(){var basicOptions={legend:{labels:{fontColor:'#495057'}},scales:{xAxes:[{ticks:{fontColor:'#495057'}}],yAxes:[{ticks:{fontColor:'#495057'}}]}};var stackedOptions={tooltips:{mode:'index',intersect:false},responsive:true,scales:{xAxes:[{stacked:true,ticks:{fontColor:'#495057'},gridLines:{color:'#ebedef'}}],yAxes:[{stacked:true,ticks:{fontColor:'#495057'},gridLines:{color:'#ebedef'}}]},legend:{labels:{fontColor:'#495057'}}};var multiAxisOptions={responsive:true,tooltips:{mode:'index',intersect:true},scales:{xAxes:[{ticks:{fontColor:'#495057'},gridLines:{color:'#ebedef'}}],yAxes:[{type:'linear',display:true,position:'left',id:'y-axis-1',ticks:{min:0,max:100,fontColor:'#495057'},gridLines:{color:'#ebedef'}},{type:'linear',display:true,position:'right',id:'y-axis-2',gridLines:{drawOnChartArea:false,color:'#ebedef'},ticks:{min:0,max:100,fontColor:'#495057'}}]},legend:{labels:{fontColor:'#495057'}}};return{basicOptions:basicOptions,stackedOptions:stackedOptions,multiAxisOptions:multiAxisOptions};}},{key:\"getDarkTheme\",value:function getDarkTheme(){var basicOptions={legend:{labels:{fontColor:'#ebedef'}},scales:{xAxes:[{ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}],yAxes:[{ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}]}};var stackedOptions={tooltips:{mode:'index',intersect:false},responsive:true,scales:{xAxes:[{stacked:true,ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}],yAxes:[{stacked:true,ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}]},legend:{labels:{fontColor:'#ebedef'}}};var multiAxisOptions={responsive:true,tooltips:{mode:'index',intersect:true},scales:{xAxes:[{ticks:{fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}}],yAxes:[{type:'linear',display:true,position:'left',id:'y-axis-1',ticks:{min:0,max:100,fontColor:'#ebedef'},gridLines:{color:'rgba(255,255,255,0.2)'}},{type:'linear',display:true,position:'right',id:'y-axis-2',gridLines:{drawOnChartArea:false,color:'rgba(255,255,255,0.2)'},ticks:{min:0,max:100,fontColor:'#ebedef'}}]},legend:{labels:{fontColor:'#ebedef'}}};return{basicOptions:basicOptions,stackedOptions:stackedOptions,multiAxisOptions:multiAxisOptions};}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"content-section introduction\"},/*#__PURE__*/React.createElement(AppInlineHeader,{changelogText:\"chart\"},/*#__PURE__*/React.createElement(\"h1\",null,\"BarChart\"),/*#__PURE__*/React.createElement(\"p\",null,\"A bar chart or bar graph is a chart that presents grouped data with rectangular bars with lengths proportional to the values that they represent.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"content-section implementation\"},/*#__PURE__*/React.createElement(AppContentContext.Consumer,null,function(context){var _this2$options$=_this2.options[\"\".concat(context.darkTheme?'dark':'light')],basicOptions=_this2$options$.basicOptions,multiAxisOptions=_this2$options$.multiAxisOptions,stackedOptions=_this2$options$.stackedOptions;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Vertical\"),/*#__PURE__*/React.createElement(Chart,{type:\"bar\",data:_this2.basicData,options:basicOptions})),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Horizontal\"),/*#__PURE__*/React.createElement(Chart,{type:\"horizontalBar\",data:_this2.basicData,options:basicOptions})),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Multi Axis\"),/*#__PURE__*/React.createElement(Chart,{type:\"bar\",data:_this2.multiAxisData,options:multiAxisOptions})),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Stacked\"),/*#__PURE__*/React.createElement(Chart,{type:\"bar\",data:_this2.stackedData,options:stackedOptions})));})),/*#__PURE__*/React.createElement(BarChartDemoDoc,null));}}]);return BarChartDemo;}(Component);export var BarChartDemoDoc=/*#__PURE__*/function(_Component2){_inherits(BarChartDemoDoc,_Component2);var _super2=_createSuper(BarChartDemoDoc);function BarChartDemoDoc(props){var _this3;_classCallCheck(this,BarChartDemoDoc);_this3=_super2.call(this,props);_this3.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nexport class BarChartDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.basicData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [\\n                {\\n                    label: 'My First dataset',\\n                    backgroundColor: '#42A5F5',\\n                    data: [65, 59, 80, 81, 56, 55, 40]\\n                },\\n                {\\n                    label: 'My Second dataset',\\n                    backgroundColor: '#FFA726',\\n                    data: [28, 48, 40, 19, 86, 27, 90]\\n                }\\n            ]\\n        };\\n\\n        this.multiAxisData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [{\\n                label: 'Dataset 1',\\n                backgroundColor: [\\n                    '#EC407A',\\n                    '#AB47BC',\\n                    '#42A5F5',\\n                    '#7E57C2',\\n                    '#66BB6A',\\n                    '#FFCA28',\\n                    '#26A69A'\\n                ],\\n                yAxisID: 'y-axis-1',\\n                data: [65, 59, 80, 81, 56, 55, 10]\\n            }, {\\n                label: 'Dataset 2',\\n                backgroundColor: '#78909C',\\n                yAxisID: 'y-axis-2',\\n                data: [28, 48, 40, 19, 86, 27, 90]\\n            }]\\n        };\\n\\n        this.stackedData = {\\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n            datasets: [{\\n                type: 'bar',\\n                label: 'Dataset 1',\\n                backgroundColor: '#42A5F5',\\n                data: [\\n                    50,\\n                    25,\\n                    12,\\n                    48,\\n                    90,\\n                    76,\\n                    42\\n                ]\\n            }, {\\n                type: 'bar',\\n                label: 'Dataset 2',\\n                backgroundColor: '#66BB6A',\\n                data: [\\n                    21,\\n                    84,\\n                    24,\\n                    75,\\n                    37,\\n                    65,\\n                    34\\n                ]\\n            }, {\\n                type: 'bar',\\n                label: 'Dataset 3',\\n                backgroundColor: '#FFA726',\\n                data: [\\n                    41,\\n                    52,\\n                    24,\\n                    74,\\n                    23,\\n                    21,\\n                    32\\n                ]\\n            }]\\n        };\\n\\n        this.options = this.getLightTheme();\\n    }\\n\\n    getLightTheme() {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let stackedOptions = {\\n            tooltips: {\\n                mode: 'index',\\n                intersect: false\\n            },\\n            responsive: true,\\n            scales: {\\n                xAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            tooltips: {\\n                mode: 'index',\\n                intersect: true\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                },\\n                {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    },\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            stackedOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    render() {\\n        const { basicOptions, multiAxisOptions, stackedOptions } = this.options;\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Vertical</h5>\\n                    <Chart type=\\\"bar\\\" data={this.basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal</h5>\\n                    <Chart type=\\\"horizontalBar\\\" data={this.basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multi Axis</h5>\\n                    <Chart type=\\\"bar\\\" data={this.multiAxisData} options={multiAxisOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Stacked</h5>\\n                    <Chart type=\\\"bar\\\" data={this.stackedData} options={stackedOptions} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst BarChartDemo = () => {\\n    const basicData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'My First dataset',\\n                backgroundColor: '#42A5F5',\\n                data: [65, 59, 80, 81, 56, 55, 40]\\n            },\\n            {\\n                label: 'My Second dataset',\\n                backgroundColor: '#FFA726',\\n                data: [28, 48, 40, 19, 86, 27, 90]\\n            }\\n        ]\\n    };\\n\\n    const multiAxisData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            label: 'Dataset 1',\\n            backgroundColor: [\\n                '#EC407A',\\n                '#AB47BC',\\n                '#42A5F5',\\n                '#7E57C2',\\n                '#66BB6A',\\n                '#FFCA28',\\n                '#26A69A'\\n            ],\\n            yAxisID: 'y-axis-1',\\n            data: [65, 59, 80, 81, 56, 55, 10]\\n        }, {\\n            label: 'Dataset 2',\\n            backgroundColor: '#78909C',\\n            yAxisID: 'y-axis-2',\\n            data: [28, 48, 40, 19, 86, 27, 90]\\n        }]\\n    };\\n\\n    const stackedData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            type: 'bar',\\n            label: 'Dataset 1',\\n            backgroundColor: '#42A5F5',\\n            data: [\\n                50,\\n                25,\\n                12,\\n                48,\\n                90,\\n                76,\\n                42\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 2',\\n            backgroundColor: '#66BB6A',\\n            data: [\\n                21,\\n                84,\\n                24,\\n                75,\\n                37,\\n                65,\\n                34\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 3',\\n            backgroundColor: '#FFA726',\\n            data: [\\n                41,\\n                52,\\n                24,\\n                74,\\n                23,\\n                21,\\n                32\\n            ]\\n        }]\\n    };\\n\\n    const getLightTheme = () => {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let stackedOptions = {\\n            tooltips: {\\n                mode: 'index',\\n                intersect: false\\n            },\\n            responsive: true,\\n            scales: {\\n                xAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            tooltips: {\\n                mode: 'index',\\n                intersect: true\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                },\\n                {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    },\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            stackedOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Vertical</h5>\\n                    <Chart type=\\\"bar\\\" data={basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal</h5>\\n                    <Chart type=\\\"horizontalBar\\\" data={basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multi Axis</h5>\\n                    <Chart type=\\\"bar\\\" data={multiAxisData} options={multiAxisOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Stacked</h5>\\n                    <Chart type=\\\"bar\\\" data={stackedData} options={stackedOptions} />\\n                </div>\\n            </div>\\n        )\\n    }\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React from 'react';\\nimport { Chart } from 'primereact/chart';\\n\\nconst BarChartDemo = () => {\\n    const basicData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [\\n            {\\n                label: 'My First dataset',\\n                backgroundColor: '#42A5F5',\\n                data: [65, 59, 80, 81, 56, 55, 40]\\n            },\\n            {\\n                label: 'My Second dataset',\\n                backgroundColor: '#FFA726',\\n                data: [28, 48, 40, 19, 86, 27, 90]\\n            }\\n        ]\\n    };\\n\\n    const multiAxisData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            label: 'Dataset 1',\\n            backgroundColor: [\\n                '#EC407A',\\n                '#AB47BC',\\n                '#42A5F5',\\n                '#7E57C2',\\n                '#66BB6A',\\n                '#FFCA28',\\n                '#26A69A'\\n            ],\\n            yAxisID: 'y-axis-1',\\n            data: [65, 59, 80, 81, 56, 55, 10]\\n        }, {\\n            label: 'Dataset 2',\\n            backgroundColor: '#78909C',\\n            yAxisID: 'y-axis-2',\\n            data: [28, 48, 40, 19, 86, 27, 90]\\n        }]\\n    };\\n\\n    const stackedData = {\\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\\n        datasets: [{\\n            type: 'bar',\\n            label: 'Dataset 1',\\n            backgroundColor: '#42A5F5',\\n            data: [\\n                50,\\n                25,\\n                12,\\n                48,\\n                90,\\n                76,\\n                42\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 2',\\n            backgroundColor: '#66BB6A',\\n            data: [\\n                21,\\n                84,\\n                24,\\n                75,\\n                37,\\n                65,\\n                34\\n            ]\\n        }, {\\n            type: 'bar',\\n            label: 'Dataset 3',\\n            backgroundColor: '#FFA726',\\n            data: [\\n                41,\\n                52,\\n                24,\\n                74,\\n                23,\\n                21,\\n                32\\n            ]\\n        }]\\n    };\\n\\n    const getLightTheme = () => {\\n        let basicOptions = {\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }],\\n                yAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            }\\n        };\\n\\n        let stackedOptions = {\\n            tooltips: {\\n                mode: 'index',\\n                intersect: false\\n            },\\n            responsive: true,\\n            scales: {\\n                xAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    stacked: true,\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        let multiAxisOptions = {\\n            responsive: true,\\n            tooltips: {\\n                mode: 'index',\\n                intersect: true\\n            },\\n            scales: {\\n                xAxes: [{\\n                    ticks: {\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                }],\\n                yAxes: [{\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'left',\\n                    id: 'y-axis-1',\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    },\\n                    gridLines: {\\n                        color: '#ebedef'\\n                    }\\n                },\\n                {\\n                    type: 'linear',\\n                    display: true,\\n                    position: 'right',\\n                    id: 'y-axis-2',\\n                    gridLines: {\\n                        drawOnChartArea: false,\\n                        color: '#ebedef'\\n                    },\\n                    ticks: {\\n                        min: 0,\\n                        max: 100,\\n                        fontColor: '#495057'\\n                    }\\n                }]\\n            },\\n            legend: {\\n                labels: {\\n                    fontColor: '#495057'\\n                }\\n            }\\n        };\\n\\n        return {\\n            basicOptions,\\n            stackedOptions,\\n            multiAxisOptions\\n        }\\n    }\\n\\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <h5>Vertical</h5>\\n                    <Chart type=\\\"bar\\\" data={basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Horizontal</h5>\\n                    <Chart type=\\\"horizontalBar\\\" data={basicData} options={basicOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Multi Axis</h5>\\n                    <Chart type=\\\"bar\\\" data={multiAxisData} options={multiAxisOptions} />\\n                </div>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Stacked</h5>\\n                    <Chart type=\\\"bar\\\" data={stackedData} options={stackedOptions} />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"}};return _this3;}_createClass(BarChartDemoDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,useLiveEditorTabs({name:'BarChartDemo',sources:this.sources,dependencies:{'chart.js':'2.7.3'}})));}}]);return BarChartDemoDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/chart/BarChartDemo.js"],"names":["React","Component","TabView","Chart","useLiveEditorTabs","AppInlineHeader","AppContentContext","BarChartDemo","props","basicData","labels","datasets","label","backgroundColor","data","multiAxisData","yAxisID","stackedData","type","options","getLightTheme","getDarkTheme","basicOptions","legend","fontColor","scales","xAxes","ticks","yAxes","stackedOptions","tooltips","mode","intersect","responsive","stacked","gridLines","color","multiAxisOptions","display","position","id","min","max","drawOnChartArea","context","darkTheme","BarChartDemoDoc","sources","tabName","content","name","dependencies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { Chart } from '../../components/chart/Chart';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\nimport AppContentContext from '../../AppContentContext';\r\n\r\nexport class BarChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.basicData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: '#42A5F5',\r\n                    data: [65, 59, 80, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: '#FFA726',\r\n                    data: [28, 48, 40, 19, 86, 27, 90]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.multiAxisData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                label: 'Dataset 1',\r\n                backgroundColor: [\r\n                    '#EC407A',\r\n                    '#AB47BC',\r\n                    '#42A5F5',\r\n                    '#7E57C2',\r\n                    '#66BB6A',\r\n                    '#FFCA28',\r\n                    '#26A69A'\r\n                ],\r\n                yAxisID: 'y-axis-1',\r\n                data: [65, 59, 80, 81, 56, 55, 10]\r\n            }, {\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#78909C',\r\n                yAxisID: 'y-axis-2',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }]\r\n        };\r\n\r\n        this.stackedData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                type: 'bar',\r\n                label: 'Dataset 1',\r\n                backgroundColor: '#42A5F5',\r\n                data: [\r\n                    50,\r\n                    25,\r\n                    12,\r\n                    48,\r\n                    90,\r\n                    76,\r\n                    42\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#66BB6A',\r\n                data: [\r\n                    21,\r\n                    84,\r\n                    24,\r\n                    75,\r\n                    37,\r\n                    65,\r\n                    34\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 3',\r\n                backgroundColor: '#FFA726',\r\n                data: [\r\n                    41,\r\n                    52,\r\n                    24,\r\n                    74,\r\n                    23,\r\n                    21,\r\n                    32\r\n                ]\r\n            }]\r\n        };\r\n\r\n        this.options = {\r\n            'light': this.getLightTheme(),\r\n            'dark': this.getDarkTheme()\r\n        };\r\n    }\r\n\r\n    getLightTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    getDarkTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#ebedef'\r\n                    },\r\n                    gridLines: {\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: 'rgba(255,255,255,0.2)'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#ebedef'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"chart\">\r\n                        <h1>BarChart</h1>\r\n                        <p>A bar chart or bar graph is a chart that presents grouped data with rectangular bars with lengths proportional to the values that they represent.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <AppContentContext.Consumer>\r\n                        {\r\n                            context => {\r\n                                const { basicOptions, multiAxisOptions, stackedOptions } = this.options[`${context.darkTheme ? 'dark' : 'light'}`];\r\n\r\n                                return (\r\n                                    <>\r\n                                        <div className=\"card\">\r\n                                            <h5>Vertical</h5>\r\n                                            <Chart type=\"bar\" data={this.basicData} options={basicOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Horizontal</h5>\r\n                                            <Chart type=\"horizontalBar\" data={this.basicData} options={basicOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Multi Axis</h5>\r\n                                            <Chart type=\"bar\" data={this.multiAxisData} options={multiAxisOptions} />\r\n                                        </div>\r\n\r\n                                        <div className=\"card\">\r\n                                            <h5>Stacked</h5>\r\n                                            <Chart type=\"bar\" data={this.stackedData} options={stackedOptions} />\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        }\r\n                    </AppContentContext.Consumer>\r\n                </div>\r\n\r\n                <BarChartDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class BarChartDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport class BarChartDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.basicData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: '#42A5F5',\r\n                    data: [65, 59, 80, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: '#FFA726',\r\n                    data: [28, 48, 40, 19, 86, 27, 90]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.multiAxisData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                label: 'Dataset 1',\r\n                backgroundColor: [\r\n                    '#EC407A',\r\n                    '#AB47BC',\r\n                    '#42A5F5',\r\n                    '#7E57C2',\r\n                    '#66BB6A',\r\n                    '#FFCA28',\r\n                    '#26A69A'\r\n                ],\r\n                yAxisID: 'y-axis-1',\r\n                data: [65, 59, 80, 81, 56, 55, 10]\r\n            }, {\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#78909C',\r\n                yAxisID: 'y-axis-2',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }]\r\n        };\r\n\r\n        this.stackedData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [{\r\n                type: 'bar',\r\n                label: 'Dataset 1',\r\n                backgroundColor: '#42A5F5',\r\n                data: [\r\n                    50,\r\n                    25,\r\n                    12,\r\n                    48,\r\n                    90,\r\n                    76,\r\n                    42\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 2',\r\n                backgroundColor: '#66BB6A',\r\n                data: [\r\n                    21,\r\n                    84,\r\n                    24,\r\n                    75,\r\n                    37,\r\n                    65,\r\n                    34\r\n                ]\r\n            }, {\r\n                type: 'bar',\r\n                label: 'Dataset 3',\r\n                backgroundColor: '#FFA726',\r\n                data: [\r\n                    41,\r\n                    52,\r\n                    24,\r\n                    74,\r\n                    23,\r\n                    21,\r\n                    32\r\n                ]\r\n            }]\r\n        };\r\n\r\n        this.options = this.getLightTheme();\r\n    }\r\n\r\n    getLightTheme() {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { basicOptions, multiAxisOptions, stackedOptions } = this.options;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Vertical</h5>\r\n                    <Chart type=\"bar\" data={this.basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal</h5>\r\n                    <Chart type=\"horizontalBar\" data={this.basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multi Axis</h5>\r\n                    <Chart type=\"bar\" data={this.multiAxisData} options={multiAxisOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Stacked</h5>\r\n                    <Chart type=\"bar\" data={this.stackedData} options={stackedOptions} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst BarChartDemo = () => {\r\n    const basicData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                backgroundColor: '#42A5F5',\r\n                data: [65, 59, 80, 81, 56, 55, 40]\r\n            },\r\n            {\r\n                label: 'My Second dataset',\r\n                backgroundColor: '#FFA726',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }\r\n        ]\r\n    };\r\n\r\n    const multiAxisData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            label: 'Dataset 1',\r\n            backgroundColor: [\r\n                '#EC407A',\r\n                '#AB47BC',\r\n                '#42A5F5',\r\n                '#7E57C2',\r\n                '#66BB6A',\r\n                '#FFCA28',\r\n                '#26A69A'\r\n            ],\r\n            yAxisID: 'y-axis-1',\r\n            data: [65, 59, 80, 81, 56, 55, 10]\r\n        }, {\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#78909C',\r\n            yAxisID: 'y-axis-2',\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n        }]\r\n    };\r\n\r\n    const stackedData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            type: 'bar',\r\n            label: 'Dataset 1',\r\n            backgroundColor: '#42A5F5',\r\n            data: [\r\n                50,\r\n                25,\r\n                12,\r\n                48,\r\n                90,\r\n                76,\r\n                42\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#66BB6A',\r\n            data: [\r\n                21,\r\n                84,\r\n                24,\r\n                75,\r\n                37,\r\n                65,\r\n                34\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 3',\r\n            backgroundColor: '#FFA726',\r\n            data: [\r\n                41,\r\n                52,\r\n                24,\r\n                74,\r\n                23,\r\n                21,\r\n                32\r\n            ]\r\n        }]\r\n    };\r\n\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Vertical</h5>\r\n                    <Chart type=\"bar\" data={basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal</h5>\r\n                    <Chart type=\"horizontalBar\" data={basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multi Axis</h5>\r\n                    <Chart type=\"bar\" data={multiAxisData} options={multiAxisOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Stacked</h5>\r\n                    <Chart type=\"bar\" data={stackedData} options={stackedOptions} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nconst BarChartDemo = () => {\r\n    const basicData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                backgroundColor: '#42A5F5',\r\n                data: [65, 59, 80, 81, 56, 55, 40]\r\n            },\r\n            {\r\n                label: 'My Second dataset',\r\n                backgroundColor: '#FFA726',\r\n                data: [28, 48, 40, 19, 86, 27, 90]\r\n            }\r\n        ]\r\n    };\r\n\r\n    const multiAxisData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            label: 'Dataset 1',\r\n            backgroundColor: [\r\n                '#EC407A',\r\n                '#AB47BC',\r\n                '#42A5F5',\r\n                '#7E57C2',\r\n                '#66BB6A',\r\n                '#FFCA28',\r\n                '#26A69A'\r\n            ],\r\n            yAxisID: 'y-axis-1',\r\n            data: [65, 59, 80, 81, 56, 55, 10]\r\n        }, {\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#78909C',\r\n            yAxisID: 'y-axis-2',\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n        }]\r\n    };\r\n\r\n    const stackedData = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [{\r\n            type: 'bar',\r\n            label: 'Dataset 1',\r\n            backgroundColor: '#42A5F5',\r\n            data: [\r\n                50,\r\n                25,\r\n                12,\r\n                48,\r\n                90,\r\n                76,\r\n                42\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 2',\r\n            backgroundColor: '#66BB6A',\r\n            data: [\r\n                21,\r\n                84,\r\n                24,\r\n                75,\r\n                37,\r\n                65,\r\n                34\r\n            ]\r\n        }, {\r\n            type: 'bar',\r\n            label: 'Dataset 3',\r\n            backgroundColor: '#FFA726',\r\n            data: [\r\n                41,\r\n                52,\r\n                24,\r\n                74,\r\n                23,\r\n                21,\r\n                32\r\n            ]\r\n        }]\r\n    };\r\n\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        let stackedOptions = {\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                xAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    stacked: true,\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        let multiAxisOptions = {\r\n            responsive: true,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: true\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    },\r\n                    gridLines: {\r\n                        color: '#ebedef'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right',\r\n                    id: 'y-axis-2',\r\n                    gridLines: {\r\n                        drawOnChartArea: false,\r\n                        color: '#ebedef'\r\n                    },\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 100,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            }\r\n        };\r\n\r\n        return {\r\n            basicOptions,\r\n            stackedOptions,\r\n            multiAxisOptions\r\n        }\r\n    }\r\n\r\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5>Vertical</h5>\r\n                    <Chart type=\"bar\" data={basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Horizontal</h5>\r\n                    <Chart type=\"horizontalBar\" data={basicData} options={basicOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Multi Axis</h5>\r\n                    <Chart type=\"bar\" data={multiAxisData} options={multiAxisOptions} />\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Stacked</h5>\r\n                    <Chart type=\"bar\" data={stackedData} options={stackedOptions} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'BarChartDemo', sources: this.sources, dependencies: { 'chart.js': '2.7.3' } })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}