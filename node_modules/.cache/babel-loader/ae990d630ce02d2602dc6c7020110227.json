{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\showcase\\\\treetable\\\\TreeTableTemplatingDemo.js\";\nimport React, { Component } from 'react';\nimport { TreeTable } from '../../components/treetable/TreeTable';\nimport { Column } from '../../components/column/Column';\nimport { Button } from '../../components/button/Button';\nimport { NodeService } from '../service/NodeService';\nimport { TabView } from '../../components/tabview/TabView';\nimport { useLiveEditorTabs } from '../liveeditor/LiveEditor';\nimport { AppInlineHeader } from '../../AppInlineHeader';\nexport var TreeTableTemplatingDemo = /*#__PURE__*/function (_Component) {\n  _inherits(TreeTableTemplatingDemo, _Component);\n\n  var _super = _createSuper(TreeTableTemplatingDemo);\n\n  function TreeTableTemplatingDemo(props) {\n    var _this;\n\n    _classCallCheck(this, TreeTableTemplatingDemo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      nodes: []\n    };\n    _this.nodeservice = new NodeService();\n    _this.actionTemplate = _this.actionTemplate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TreeTableTemplatingDemo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.nodeservice.getTreeTableNodes().then(function (data) {\n        return _this2.setState({\n          nodes: data\n        });\n      });\n    }\n  }, {\n    key: \"actionTemplate\",\n    value: function actionTemplate(node, column) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        icon: \"pi pi-search\",\n        className: \"p-button-success\",\n        style: {\n          marginRight: '.5em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        icon: \"pi pi-pencil\",\n        className: \"p-button-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var header = \"File Viewer\";\n      var footer = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        icon: \"pi pi-refresh\",\n        tooltip: \"Reload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 59\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section introduction\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppInlineHeader, {\n        changelogText: \"treeTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, \"TreeTable \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 39\n        }\n      }, \"Templating\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"Custom content at header, body and footer sections are supported via templating.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section implementation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TreeTable, {\n        value: this.state.nodes,\n        header: header,\n        footer: footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        expander: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"size\",\n        header: \"Size\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"type\",\n        header: \"Type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        body: this.actionTemplate,\n        style: {\n          textAlign: 'center',\n          width: '8em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(TreeTableTemplatingDemoDoc, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return TreeTableTemplatingDemo;\n}(Component);\n\nvar TreeTableTemplatingDemoDoc = /*#__PURE__*/function (_Component2) {\n  _inherits(TreeTableTemplatingDemoDoc, _Component2);\n\n  var _super2 = _createSuper(TreeTableTemplatingDemoDoc);\n\n  function TreeTableTemplatingDemoDoc(props) {\n    var _this3;\n\n    _classCallCheck(this, TreeTableTemplatingDemoDoc);\n\n    _this3 = _super2.call(this, props);\n    _this3.sources = {\n      'class': {\n        tabName: 'Class Source',\n        content: \"\\nimport React, { Component } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nexport class TreeTableTemplatingDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            nodes: []\\n        };\\n        this.nodeservice = new NodeService();\\n        this.actionTemplate = this.actionTemplate.bind(this);\\n    }\\n\\n    componentDidMount() {\\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\\n    }\\n\\n    actionTemplate(node, column) {\\n        return <div>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.5em' }}></Button>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" className=\\\"p-button-warning\\\"></Button>\\n        </div>;\\n    }\\n\\n    render() {\\n        const header = \\\"File Viewer\\\";\\n        const footer = <div style={{ textAlign: 'left' }}><Button icon=\\\"pi pi-refresh\\\" tooltip=\\\"Reload\\\" /></div>;\\n\\n        return (\\n            <div>\\n                <div className=\\\"card\\\">\\n                    <TreeTable value={this.state.nodes} header={header} footer={footer}>\\n                        <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                        <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                        <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                        <Column body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\\n                    </TreeTable>\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"\n      },\n      'hooks': {\n        tabName: 'Hooks Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableTemplatingDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const actionTemplate = (node, column) => {\\n        return <div>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.5em' }}></Button>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" className=\\\"p-button-warning\\\"></Button>\\n        </div>;\\n    }\\n\\n    const header = \\\"File Viewer\\\";\\n    const footer = <div style={{ textAlign: 'left' }}><Button icon=\\\"pi pi-refresh\\\" tooltip=\\\"Reload\\\" /></div>;\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <TreeTable value={nodes} header={header} footer={footer}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    <Column body={actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      },\n      'ts': {\n        tabName: 'TS Source',\n        content: \"\\nimport React, { useState, useEffect } from 'react';\\nimport { TreeTable } from 'primereact/treetable';\\nimport { Column } from 'primereact/column';\\nimport { Button } from 'primereact/button';\\nimport { NodeService } from '../service/NodeService';\\n\\nconst TreeTableTemplatingDemo = () => {\\n    const [nodes, setNodes] = useState([]);\\n    const nodeservice = new NodeService();\\n\\n    useEffect(() => {\\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\\n\\n    const actionTemplate = (node, column) => {\\n        return <div>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-search\\\" className=\\\"p-button-success\\\" style={{ marginRight: '.5em' }}></Button>\\n            <Button type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" className=\\\"p-button-warning\\\"></Button>\\n        </div>;\\n    }\\n\\n    const header = \\\"File Viewer\\\";\\n    const footer = <div style={{ textAlign: 'left' }}><Button icon=\\\"pi pi-refresh\\\" tooltip=\\\"Reload\\\" /></div>;\\n\\n    return (\\n        <div>\\n            <div className=\\\"card\\\">\\n                <TreeTable value={nodes} header={header} footer={footer}>\\n                    <Column field=\\\"name\\\" header=\\\"Name\\\" expander></Column>\\n                    <Column field=\\\"size\\\" header=\\\"Size\\\"></Column>\\n                    <Column field=\\\"type\\\" header=\\\"Type\\\"></Column>\\n                    <Column body={actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\\n                </TreeTable>\\n            </div>\\n        </div>\\n    );\\n}\\n                \"\n      }\n    };\n    return _this3;\n  }\n\n  _createClass(TreeTableTemplatingDemoDoc, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content-section documentation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }, useLiveEditorTabs({\n        name: 'TreeTableTemplatingDemo',\n        sources: this.sources,\n        service: 'NodeService',\n        data: 'treetablenodes'\n      })));\n    }\n  }]);\n\n  return TreeTableTemplatingDemoDoc;\n}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/treetable/TreeTableTemplatingDemo.js"],"names":["React","Component","TreeTable","Column","Button","NodeService","TabView","useLiveEditorTabs","AppInlineHeader","TreeTableTemplatingDemo","props","state","nodes","nodeservice","actionTemplate","bind","getTreeTableNodes","then","data","setState","node","column","marginRight","header","footer","textAlign","width","TreeTableTemplatingDemoDoc","sources","tabName","content","name","service"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TreeTable } from '../../components/treetable/TreeTable';\r\nimport { Column } from '../../components/column/Column';\r\nimport { Button } from '../../components/button/Button';\r\nimport { NodeService } from '../service/NodeService';\r\nimport { TabView } from '../../components/tabview/TabView';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\nimport { AppInlineHeader } from '../../AppInlineHeader';\r\n\r\nexport class TreeTableTemplatingDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    actionTemplate(node, column) {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-success\" style={{ marginRight: '.5em' }}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\"></Button>\r\n        </div>;\r\n    }\r\n\r\n    render() {\r\n        const header = \"File Viewer\";\r\n        const footer = <div style={{ textAlign: 'left' }}><Button icon=\"pi pi-refresh\" tooltip=\"Reload\" /></div>;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content-section introduction\">\r\n                    <AppInlineHeader changelogText=\"treeTable\">\r\n                        <h1>TreeTable <span>Templating</span></h1>\r\n                        <p>Custom content at header, body and footer sections are supported via templating.</p>\r\n                    </AppInlineHeader>\r\n                </div>\r\n\r\n                <div className=\"content-section implementation\">\r\n                    <div className=\"card\">\r\n                        <TreeTable value={this.state.nodes} header={header} footer={footer}>\r\n                            <Column field=\"name\" header=\"Name\" expander></Column>\r\n                            <Column field=\"size\" header=\"Size\"></Column>\r\n                            <Column field=\"type\" header=\"Type\"></Column>\r\n                            <Column body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\r\n                        </TreeTable>\r\n                    </div>\r\n                </div>\r\n\r\n                <TreeTableTemplatingDemoDoc />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TreeTableTemplatingDemoDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nexport class TreeTableTemplatingDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n        this.nodeservice = new NodeService();\r\n        this.actionTemplate = this.actionTemplate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nodeservice.getTreeTableNodes().then(data => this.setState({ nodes: data }));\r\n    }\r\n\r\n    actionTemplate(node, column) {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-success\" style={{ marginRight: '.5em' }}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\"></Button>\r\n        </div>;\r\n    }\r\n\r\n    render() {\r\n        const header = \"File Viewer\";\r\n        const footer = <div style={{ textAlign: 'left' }}><Button icon=\"pi pi-refresh\" tooltip=\"Reload\" /></div>;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <TreeTable value={this.state.nodes} header={header} footer={footer}>\r\n                        <Column field=\"name\" header=\"Name\" expander></Column>\r\n                        <Column field=\"size\" header=\"Size\"></Column>\r\n                        <Column field=\"type\" header=\"Type\"></Column>\r\n                        <Column body={this.actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\r\n                    </TreeTable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableTemplatingDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const actionTemplate = (node, column) => {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-success\" style={{ marginRight: '.5em' }}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\"></Button>\r\n        </div>;\r\n    }\r\n\r\n    const header = \"File Viewer\";\r\n    const footer = <div style={{ textAlign: 'left' }}><Button icon=\"pi pi-refresh\" tooltip=\"Reload\" /></div>;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <TreeTable value={nodes} header={header} footer={footer}>\r\n                    <Column field=\"name\" header=\"Name\" expander></Column>\r\n                    <Column field=\"size\" header=\"Size\"></Column>\r\n                    <Column field=\"type\" header=\"Type\"></Column>\r\n                    <Column body={actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { NodeService } from '../service/NodeService';\r\n\r\nconst TreeTableTemplatingDemo = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n    const nodeservice = new NodeService();\r\n\r\n    useEffect(() => {\r\n        nodeservice.getTreeTableNodes().then(data => setNodes(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const actionTemplate = (node, column) => {\r\n        return <div>\r\n            <Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-success\" style={{ marginRight: '.5em' }}></Button>\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-warning\"></Button>\r\n        </div>;\r\n    }\r\n\r\n    const header = \"File Viewer\";\r\n    const footer = <div style={{ textAlign: 'left' }}><Button icon=\"pi pi-refresh\" tooltip=\"Reload\" /></div>;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <TreeTable value={nodes} header={header} footer={footer}>\r\n                    <Column field=\"name\" header=\"Name\" expander></Column>\r\n                    <Column field=\"size\" header=\"Size\"></Column>\r\n                    <Column field=\"type\" header=\"Type\"></Column>\r\n                    <Column body={actionTemplate} style={{ textAlign: 'center', width: '8em' }} />\r\n                </TreeTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    {\r\n                        useLiveEditorTabs({ name: 'TreeTableTemplatingDemo', sources: this.sources, service: 'NodeService', data: 'treetablenodes' })\r\n                    }\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}