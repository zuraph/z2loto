{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\src\\\\components\\\\slider\\\\Slider.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DomHandler from '../utils/DomHandler';\nimport classNames from 'classnames';\nexport var Slider = /*#__PURE__*/function (_Component) {\n  _inherits(Slider, _Component);\n\n  var _super = _createSuper(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _super.call(this, props);\n    _this.onBarClick = _this.onBarClick.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.handleIndex = 0;\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"spin\",\n    value: function spin(event, dir) {\n      var value = (this.props.range ? this.props.value[this.handleIndex] : this.props.value) || 0;\n      var step = (this.props.step || 1) * dir;\n      this.updateValue(event, value + step);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(event, index) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      this.dragging = true;\n      this.updateDomData();\n      this.sliderHandleClick = true;\n      this.handleIndex = index; //event.preventDefault();\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event, index) {\n      this.bindDragListeners();\n      this.onDragStart(event, index);\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event, index) {\n      this.bindTouchListeners();\n      this.onDragStart(event, index);\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event, index) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      this.handleIndex = index;\n      var key = event.key;\n\n      if (key === 'ArrowRight' || key === 'ArrowUp') {\n        this.spin(event, 1);\n      } else if (key === 'ArrowLeft' || key === 'ArrowDown') {\n        this.spin(event, -1);\n      }\n    }\n  }, {\n    key: \"onBarClick\",\n    value: function onBarClick(event) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      if (!this.sliderHandleClick) {\n        this.updateDomData();\n        this.setValue(event);\n      }\n\n      this.sliderHandleClick = false;\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(event) {\n      if (this.dragging) {\n        this.setValue(event);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(event) {\n      if (this.dragging) {\n        this.dragging = false;\n\n        if (this.props.onSlideEnd) {\n          this.props.onSlideEnd({\n            originalEvent: event,\n            value: this.props.value\n          });\n        }\n\n        this.unbindDragListeners();\n        this.unbindTouchListeners();\n      }\n    }\n  }, {\n    key: \"bindDragListeners\",\n    value: function bindDragListeners() {\n      if (!this.dragListener) {\n        this.dragListener = this.onDrag.bind(this);\n        document.addEventListener('mousemove', this.dragListener);\n      }\n\n      if (!this.dragEndListener) {\n        this.dragEndListener = this.onDragEnd.bind(this);\n        document.addEventListener('mouseup', this.dragEndListener);\n      }\n    }\n  }, {\n    key: \"unbindDragListeners\",\n    value: function unbindDragListeners() {\n      if (this.dragListener) {\n        document.removeEventListener('mousemove', this.dragListener);\n        this.dragListener = null;\n      }\n\n      if (this.dragEndListener) {\n        document.removeEventListener('mouseup', this.dragEndListener);\n        this.dragEndListener = null;\n      }\n    }\n  }, {\n    key: \"bindTouchListeners\",\n    value: function bindTouchListeners() {\n      if (!this.dragListener) {\n        this.dragListener = this.onDrag.bind(this);\n        document.addEventListener('touchmove', this.dragListener);\n      }\n\n      if (!this.dragEndListener) {\n        this.dragEndListener = this.onDragEnd.bind(this);\n        document.addEventListener('touchend', this.dragEndListener);\n      }\n    }\n  }, {\n    key: \"unbindTouchListeners\",\n    value: function unbindTouchListeners() {\n      if (this.dragListener) {\n        document.removeEventListener('touchmove', this.dragListener);\n        this.dragListener = null;\n      }\n\n      if (this.dragEndListener) {\n        document.removeEventListener('touchend', this.dragEndListener);\n        this.dragEndListener = null;\n      }\n    }\n  }, {\n    key: \"updateDomData\",\n    value: function updateDomData() {\n      var rect = this.el.getBoundingClientRect();\n      this.initX = rect.left + DomHandler.getWindowScrollLeft();\n      this.initY = rect.top + DomHandler.getWindowScrollTop();\n      this.barWidth = this.el.offsetWidth;\n      this.barHeight = this.el.offsetHeight;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(event) {\n      var handleValue;\n      var pageX = event.touches ? event.touches[0].pageX : event.pageX;\n      if (this.props.orientation === 'horizontal') handleValue = (pageX - this.initX) * 100 / this.barWidth;else handleValue = (this.initY + this.barHeight - event.pageY) * 100 / this.barHeight;\n      var newValue = (this.props.max - this.props.min) * (handleValue / 100) + this.props.min;\n\n      if (this.props.step) {\n        var oldValue = this.props.range ? this.props.value[this.handleIndex] : this.props.value;\n        var diff = newValue - oldValue;\n        if (diff < 0) newValue = oldValue + Math.ceil(newValue / this.props.step - oldValue / this.props.step) * this.props.step;else if (diff > 0) newValue = oldValue + Math.floor(newValue / this.props.step - oldValue / this.props.step) * this.props.step;\n      }\n\n      this.updateValue(event, newValue);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(event, value) {\n      if (this.props.range) {\n        var newValue = value;\n\n        if (this.handleIndex === 0) {\n          if (newValue < this.props.min) newValue = this.props.min;else if (newValue > this.props.value[1]) newValue = this.props.value[1];\n        } else {\n          if (newValue > this.props.max) newValue = this.props.max;else if (newValue < this.props.value[0]) newValue = this.props.value[0];\n        }\n\n        var newValues = _toConsumableArray(this.props.value);\n\n        newValues[this.handleIndex] = Math.floor(newValue);\n\n        if (this.props.onChange) {\n          this.props.onChange({\n            originalEvent: event,\n            value: newValues\n          });\n        }\n      } else {\n        var _newValue = value;\n        if (_newValue < this.props.min) _newValue = this.props.min;else if (_newValue > this.props.max) _newValue = this.props.max;\n\n        if (this.props.onChange) {\n          this.props.onChange({\n            originalEvent: event,\n            value: Math.floor(_newValue)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDragListeners();\n      this.unbindTouchListeners();\n    }\n  }, {\n    key: \"renderHandle\",\n    value: function renderHandle(leftValue, bottomValue, index) {\n      var _this2 = this;\n\n      var handleClassName = classNames('p-slider-handle', {\n        'p-slider-handle-start': index === 0,\n        'p-slider-handle-end': index === 1,\n        'p-slider-handle-active': this.handleIndex === index\n      });\n      return /*#__PURE__*/React.createElement(\"span\", {\n        onMouseDown: function onMouseDown(event) {\n          return _this2.onMouseDown(event, index);\n        },\n        onTouchStart: function onTouchStart(event) {\n          return _this2.onTouchStart(event, index);\n        },\n        onKeyDown: function onKeyDown(event) {\n          return _this2.onKeyDown(event, index);\n        },\n        tabIndex: this.props.tabIndex,\n        className: handleClassName,\n        style: {\n          transition: this.dragging ? 'none' : null,\n          left: leftValue !== null && leftValue + '%',\n          bottom: bottomValue && bottomValue + '%'\n        },\n        role: \"slider\",\n        \"aria-valuemin\": this.props.min,\n        \"aria-valuemax\": this.props.max,\n        \"aria-valuenow\": leftValue || bottomValue,\n        \"aria-labelledby\": this.props.ariaLabelledBy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"renderRangeSlider\",\n    value: function renderRangeSlider() {\n      var values = this.props.value || [0, 0];\n      var horizontal = this.props.orientation === 'horizontal';\n      var handleValueStart = (values[0] < this.props.min ? 0 : values[0] - this.props.min) * 100 / (this.props.max - this.props.min);\n      var handleValueEnd = (values[1] > this.props.max ? 100 : values[1] - this.props.min) * 100 / (this.props.max - this.props.min);\n      var rangeStartHandle = horizontal ? this.renderHandle(handleValueStart, null, 0) : this.renderHandle(null, handleValueStart, 0);\n      var rangeEndHandle = horizontal ? this.renderHandle(handleValueEnd, null, 1) : this.renderHandle(null, handleValueEnd, 1);\n      var rangeStyle = horizontal ? {\n        left: handleValueStart + '%',\n        width: handleValueEnd - handleValueStart + '%'\n      } : {\n        bottom: handleValueStart + '%',\n        height: handleValueEnd - handleValueStart + '%'\n      };\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-slider-range\",\n        style: rangeStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }\n      }), rangeStartHandle, rangeEndHandle);\n    }\n  }, {\n    key: \"renderSingleSlider\",\n    value: function renderSingleSlider() {\n      var value = this.props.value || 0;\n      var handleValue;\n      if (value < this.props.min) handleValue = 0;else if (value > this.props.max) handleValue = 100;else handleValue = (value - this.props.min) * 100 / (this.props.max - this.props.min);\n      var rangeStyle = this.props.orientation === 'horizontal' ? {\n        width: handleValue + '%'\n      } : {\n        height: handleValue + '%'\n      };\n      var handle = this.props.orientation === 'horizontal' ? this.renderHandle(handleValue, null, null) : this.renderHandle(null, handleValue, null);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-slider-range\",\n        style: rangeStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }\n      }), handle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var className = classNames('p-slider p-component', this.props.className, {\n        'p-disabled': this.props.disabled,\n        'p-slider-horizontal': this.props.orientation === 'horizontal',\n        'p-slider-vertical': this.props.orientation === 'vertical'\n      });\n      var content = this.props.range ? this.renderRangeSlider() : this.renderSingleSlider();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        ref: function ref(el) {\n          return _this3.el = el;\n        },\n        style: this.props.style,\n        className: className,\n        onClick: this.onBarClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }\n      }, content);\n    }\n  }]);\n\n  return Slider;\n}(Component);\nSlider.defaultProps = {\n  id: null,\n  value: null,\n  min: 0,\n  max: 100,\n  orientation: 'horizontal',\n  step: null,\n  range: false,\n  style: null,\n  className: null,\n  disabled: false,\n  tabIndex: 0,\n  ariaLabelledBy: null,\n  onChange: null,\n  onSlideEnd: null\n};\nSlider.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.any,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  orientation: PropTypes.string,\n  step: PropTypes.number,\n  range: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  tabIndex: PropTypes.number,\n  ariaLabelledBy: PropTypes.string,\n  onChange: PropTypes.func,\n  onSlideEnd: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/components/slider/Slider.js"],"names":["React","Component","PropTypes","DomHandler","classNames","Slider","props","onBarClick","bind","onKeyDown","handleIndex","event","dir","value","range","step","updateValue","preventDefault","index","disabled","dragging","updateDomData","sliderHandleClick","bindDragListeners","onDragStart","bindTouchListeners","key","spin","setValue","onSlideEnd","originalEvent","unbindDragListeners","unbindTouchListeners","dragListener","onDrag","document","addEventListener","dragEndListener","onDragEnd","removeEventListener","rect","el","getBoundingClientRect","initX","left","getWindowScrollLeft","initY","top","getWindowScrollTop","barWidth","offsetWidth","barHeight","offsetHeight","handleValue","pageX","touches","orientation","pageY","newValue","max","min","oldValue","diff","Math","ceil","floor","newValues","onChange","leftValue","bottomValue","handleClassName","onMouseDown","onTouchStart","tabIndex","transition","bottom","ariaLabelledBy","values","horizontal","handleValueStart","handleValueEnd","rangeStartHandle","renderHandle","rangeEndHandle","rangeStyle","width","height","handle","className","content","renderRangeSlider","renderSingleSlider","id","style","defaultProps","propTypes","string","any","number","bool","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport DomHandler from '../utils/DomHandler';\r\nimport classNames from 'classnames'\r\n\r\nexport class Slider extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        value: null,\r\n        min: 0,\r\n        max: 100,\r\n        orientation: 'horizontal',\r\n        step: null,\r\n        range: false,\r\n        style: null,\r\n        className: null,\r\n        disabled: false,\r\n        tabIndex: 0,\r\n        ariaLabelledBy: null,\r\n        onChange: null,\r\n        onSlideEnd: null\r\n    }\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        value: PropTypes.any,\r\n        min: PropTypes.number,\r\n        max: PropTypes.number,\r\n        orientation: PropTypes.string,\r\n        step: PropTypes.number,\r\n        range: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        disabled: PropTypes.bool,\r\n        tabIndex: PropTypes.number,\r\n        ariaLabelledBy: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n        onSlideEnd: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onBarClick = this.onBarClick.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n\r\n        this.handleIndex = 0;\r\n    }\r\n\r\n    spin(event, dir) {\r\n        const value = (this.props.range ? this.props.value[this.handleIndex] : this.props.value) || 0;\r\n        const step = (this.props.step || 1) * dir;\r\n\r\n        this.updateValue(event, value + step);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragStart(event, index) {\r\n        if (this.props.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.dragging = true;\r\n        this.updateDomData();\r\n        this.sliderHandleClick = true;\r\n        this.handleIndex = index;\r\n        //event.preventDefault();\r\n    }\r\n\r\n    onMouseDown(event, index) {\r\n        this.bindDragListeners();\r\n        this.onDragStart(event, index);\r\n    }\r\n\r\n    onTouchStart(event, index) {\r\n        this.bindTouchListeners();\r\n        this.onDragStart(event, index);\r\n    }\r\n\r\n    onKeyDown(event, index) {\r\n        if (this.props.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.handleIndex = index;\r\n        const key = event.key;\r\n\r\n        if (key === 'ArrowRight' || key === 'ArrowUp') {\r\n            this.spin(event, 1);\r\n        }\r\n        else if (key === 'ArrowLeft' || key === 'ArrowDown') {\r\n            this.spin(event, -1);\r\n        }\r\n    }\r\n\r\n    onBarClick(event) {\r\n        if (this.props.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.sliderHandleClick) {\r\n            this.updateDomData();\r\n            this.setValue(event);\r\n        }\r\n\r\n        this.sliderHandleClick = false;\r\n    }\r\n\r\n    onDrag(event) {\r\n        if (this.dragging) {\r\n            this.setValue(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragEnd(event) {\r\n        if (this.dragging) {\r\n            this.dragging = false;\r\n\r\n            if (this.props.onSlideEnd) {\r\n                this.props.onSlideEnd({ originalEvent: event, value: this.props.value });\r\n            }\r\n\r\n            this.unbindDragListeners();\r\n            this.unbindTouchListeners();\r\n        }\r\n    }\r\n\r\n    bindDragListeners() {\r\n        if (!this.dragListener) {\r\n            this.dragListener = this.onDrag.bind(this);\r\n            document.addEventListener('mousemove', this.dragListener);\r\n        }\r\n\r\n        if (!this.dragEndListener) {\r\n            this.dragEndListener = this.onDragEnd.bind(this);\r\n            document.addEventListener('mouseup', this.dragEndListener);\r\n        }\r\n    }\r\n\r\n    unbindDragListeners() {\r\n        if (this.dragListener) {\r\n            document.removeEventListener('mousemove', this.dragListener);\r\n            this.dragListener = null;\r\n        }\r\n\r\n        if (this.dragEndListener) {\r\n            document.removeEventListener('mouseup', this.dragEndListener)\r\n            this.dragEndListener = null;\r\n        }\r\n    }\r\n\r\n    bindTouchListeners() {\r\n        if (!this.dragListener) {\r\n            this.dragListener = this.onDrag.bind(this);\r\n            document.addEventListener('touchmove', this.dragListener);\r\n        }\r\n\r\n        if (!this.dragEndListener) {\r\n            this.dragEndListener = this.onDragEnd.bind(this);\r\n            document.addEventListener('touchend', this.dragEndListener);\r\n        }\r\n    }\r\n\r\n    unbindTouchListeners() {\r\n        if (this.dragListener) {\r\n            document.removeEventListener('touchmove', this.dragListener);\r\n            this.dragListener = null;\r\n        }\r\n\r\n        if (this.dragEndListener) {\r\n            document.removeEventListener('touchend', this.dragEndListener)\r\n            this.dragEndListener = null;\r\n        }\r\n    }\r\n\r\n    updateDomData() {\r\n        let rect = this.el.getBoundingClientRect();\r\n        this.initX = rect.left + DomHandler.getWindowScrollLeft();\r\n        this.initY = rect.top + DomHandler.getWindowScrollTop();\r\n        this.barWidth = this.el.offsetWidth;\r\n        this.barHeight = this.el.offsetHeight;\r\n    }\r\n\r\n    setValue(event) {\r\n        let handleValue;\r\n        let pageX = event.touches ? event.touches[0].pageX : event.pageX;\r\n\r\n        if (this.props.orientation === 'horizontal')\r\n            handleValue = ((pageX - this.initX) * 100) / (this.barWidth);\r\n        else\r\n            handleValue = (((this.initY + this.barHeight) - event.pageY) * 100) / (this.barHeight);\r\n\r\n        let newValue = (this.props.max - this.props.min) * (handleValue / 100) + this.props.min;\r\n\r\n        if (this.props.step) {\r\n            const oldValue = this.props.range ? this.props.value[this.handleIndex] : this.props.value;\r\n            const diff = (newValue - oldValue);\r\n\r\n            if (diff < 0)\r\n                newValue = oldValue + Math.ceil(newValue / this.props.step - oldValue / this.props.step) * this.props.step;\r\n            else if (diff > 0)\r\n                newValue = oldValue + Math.floor(newValue / this.props.step - oldValue / this.props.step) * this.props.step;\r\n        }\r\n\r\n        this.updateValue(event, newValue);\r\n    }\r\n\r\n    updateValue(event, value) {\r\n        if (this.props.range) {\r\n            let newValue = value;\r\n\r\n            if (this.handleIndex === 0) {\r\n                if (newValue < this.props.min)\r\n                    newValue = this.props.min;\r\n                else if (newValue > this.props.value[1])\r\n                    newValue = this.props.value[1];\r\n            }\r\n            else {\r\n                if (newValue > this.props.max)\r\n                    newValue = this.props.max;\r\n                else if (newValue < this.props.value[0])\r\n                    newValue = this.props.value[0];\r\n            }\r\n\r\n            let newValues = [...this.props.value];\r\n            newValues[this.handleIndex] = Math.floor(newValue);\r\n\r\n            if (this.props.onChange) {\r\n                this.props.onChange({\r\n                    originalEvent: event,\r\n                    value: newValues\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            let newValue = value;\r\n\r\n            if (newValue < this.props.min)\r\n                newValue = this.props.min;\r\n            else if (newValue > this.props.max)\r\n                newValue = this.props.max;\r\n\r\n            if (this.props.onChange) {\r\n                this.props.onChange({\r\n                    originalEvent: event,\r\n                    value: Math.floor(newValue)\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unbindDragListeners();\r\n        this.unbindTouchListeners();\r\n    }\r\n\r\n    renderHandle(leftValue, bottomValue, index) {\r\n        const handleClassName = classNames('p-slider-handle', {\r\n            'p-slider-handle-start': index === 0,\r\n            'p-slider-handle-end': index === 1,\r\n            'p-slider-handle-active': this.handleIndex === index\r\n        });\r\n\r\n        return (\r\n            <span onMouseDown={event => this.onMouseDown(event, index)} onTouchStart={event => this.onTouchStart(event, index)} onKeyDown={event => this.onKeyDown(event, index)} tabIndex={this.props.tabIndex}\r\n                className={handleClassName} style={{ transition: this.dragging ? 'none' : null, left: leftValue !== null && (leftValue + '%'), bottom: bottomValue && (bottomValue + '%') }}\r\n                role=\"slider\" aria-valuemin={this.props.min} aria-valuemax={this.props.max} aria-valuenow={leftValue || bottomValue} aria-labelledby={this.props.ariaLabelledBy}></span>\r\n        );\r\n    }\r\n\r\n    renderRangeSlider() {\r\n        let values = this.props.value || [0, 0];\r\n        let horizontal = (this.props.orientation === 'horizontal');\r\n        const handleValueStart = (values[0] < this.props.min ? 0 : values[0] - this.props.min) * 100 / (this.props.max - this.props.min);\r\n        const handleValueEnd = (values[1] > this.props.max ? 100 : values[1] - this.props.min) * 100 / (this.props.max - this.props.min);\r\n        const rangeStartHandle = horizontal ? this.renderHandle(handleValueStart, null, 0) : this.renderHandle(null, handleValueStart, 0);\r\n        const rangeEndHandle = horizontal ? this.renderHandle(handleValueEnd, null, 1) : this.renderHandle(null, handleValueEnd, 1);\r\n        const rangeStyle = horizontal ? { left: handleValueStart + '%', width: (handleValueEnd - handleValueStart) + '%' } : { bottom: handleValueStart + '%', height: (handleValueEnd - handleValueStart) + '%' };\r\n\r\n        return (\r\n            <>\r\n                <span className=\"p-slider-range\" style={rangeStyle}></span>\r\n                {rangeStartHandle}\r\n                {rangeEndHandle}\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderSingleSlider() {\r\n        let value = this.props.value || 0;\r\n        let handleValue;\r\n\r\n        if (value < this.props.min)\r\n            handleValue = 0;\r\n        else if (value > this.props.max)\r\n            handleValue = 100;\r\n        else\r\n            handleValue = (value - this.props.min) * 100 / (this.props.max - this.props.min);\r\n\r\n        const rangeStyle = this.props.orientation === 'horizontal' ? { width: handleValue + '%' } : { height: handleValue + '%' };\r\n        const handle = this.props.orientation === 'horizontal' ? this.renderHandle(handleValue, null, null) : this.renderHandle(null, handleValue, null);\r\n\r\n        return (\r\n            <>\r\n                <span className=\"p-slider-range\" style={rangeStyle}></span>\r\n                {handle}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-slider p-component', this.props.className, {\r\n            'p-disabled': this.props.disabled,\r\n            'p-slider-horizontal': this.props.orientation === 'horizontal',\r\n            'p-slider-vertical': this.props.orientation === 'vertical'\r\n        });\r\n\r\n        const content = this.props.range ? this.renderRangeSlider() : this.renderSingleSlider();\r\n\r\n        return (\r\n            <div id={this.props.id} ref={el => this.el = el} style={this.props.style} className={className} onClick={this.onBarClick}>\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}