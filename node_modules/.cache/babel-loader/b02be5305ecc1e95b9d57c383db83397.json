{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\zloto\\\\src\\\\components\\\\panelmenu\\\\PanelMenu.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '../utils/ClassNames';\nimport UniqueComponentId from '../utils/UniqueComponentId';\nimport { CSSTransition } from 'react-transition-group';\nimport ObjectUtils from '../utils/ObjectUtils';\n\nvar PanelMenuSub = /*#__PURE__*/function (_Component) {\n  _inherits(PanelMenuSub, _Component);\n\n  var _super = _createSuper(PanelMenuSub);\n\n  function PanelMenuSub(props) {\n    var _this;\n\n    _classCallCheck(this, PanelMenuSub);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activeItem: _this.findActiveItem()\n    };\n    return _this;\n  }\n\n  _createClass(PanelMenuSub, [{\n    key: \"onItemClick\",\n    value: function onItemClick(event, item) {\n      if (item.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      if (!item.url) {\n        event.preventDefault();\n      }\n\n      if (item.command) {\n        item.command({\n          originalEvent: event,\n          item: item\n        });\n      }\n\n      var activeItem = this.state.activeItem;\n      var active = this.isItemActive(item);\n\n      if (active) {\n        item.expanded = false;\n        this.setState({\n          activeItem: this.props.multiple ? activeItem.filter(function (a_item) {\n            return a_item !== item;\n          }) : null\n        });\n      } else {\n        if (!this.props.multiple && activeItem) {\n          activeItem.expanded = false;\n        }\n\n        item.expanded = true;\n        this.setState({\n          activeItem: this.props.multiple ? [].concat(_toConsumableArray(activeItem || []), [item]) : item\n        });\n      }\n    }\n  }, {\n    key: \"findActiveItem\",\n    value: function findActiveItem() {\n      if (this.props.model) {\n        if (this.props.multiple) {\n          return this.props.model.filter(function (item) {\n            return item.expanded;\n          });\n        } else {\n          var activeItem = null;\n          this.props.model.forEach(function (item) {\n            if (item.expanded) {\n              if (!activeItem) activeItem = item;else item.expanded = false;\n            }\n          });\n          return activeItem;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"isItemActive\",\n    value: function isItemActive(item) {\n      return this.state.activeItem && (this.props.multiple ? this.state.activeItem.indexOf(item) > -1 : this.state.activeItem === item);\n    }\n  }, {\n    key: \"renderSeparator\",\n    value: function renderSeparator(index) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: 'separator_' + index,\n        className: \"p-menu-separator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"renderSubmenu\",\n    value: function renderSubmenu(item, active) {\n      var submenuWrapperClassName = classNames('p-toggleable-content', {\n        'p-toggleable-content-collapsed': !active\n      });\n      var submenuContentRef = React.createRef();\n\n      if (item.items) {\n        return /*#__PURE__*/React.createElement(CSSTransition, {\n          nodeRef: submenuContentRef,\n          classNames: \"p-toggleable-content\",\n          timeout: {\n            enter: 1000,\n            exit: 450\n          },\n          in: active,\n          unmountOnExit: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          ref: submenuContentRef,\n          className: submenuWrapperClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PanelMenuSub, {\n          model: item.items,\n          multiple: this.props.multiple,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderMenuitem\",\n    value: function renderMenuitem(item, index) {\n      var _this2 = this;\n\n      var active = this.isItemActive(item);\n      var className = classNames('p-menuitem', item.className);\n      var linkClassName = classNames('p-menuitem-link', {\n        'p-disabled': item.disabled\n      });\n      var iconClassName = classNames('p-menuitem-icon', item.icon);\n      var submenuIconClassName = classNames('p-panelmenu-icon pi pi-fw', {\n        'pi-angle-right': !active,\n        'pi-angle-down': active\n      });\n      var icon = item.icon && /*#__PURE__*/React.createElement(\"span\", {\n        className: iconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 35\n        }\n      });\n      var label = item.label && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-menuitem-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, item.label);\n      var submenuIcon = item.items && /*#__PURE__*/React.createElement(\"span\", {\n        className: submenuIconClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 43\n        }\n      });\n      var submenu = this.renderSubmenu(item, active);\n      var content = /*#__PURE__*/React.createElement(\"a\", {\n        href: item.url || '#',\n        className: linkClassName,\n        target: item.target,\n        onClick: function onClick(event) {\n          return _this2.onItemClick(event, item, index);\n        },\n        role: \"menuitem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, submenuIcon, icon, label);\n\n      if (item.template) {\n        var defaultContentOptions = {\n          onClick: function onClick(event) {\n            return _this2.onItemClick(event, item, index);\n          },\n          className: linkClassName,\n          labelClassName: 'p-menuitem-text',\n          iconClassName: iconClassName,\n          submenuIconClassName: submenuIconClassName,\n          element: content,\n          props: this.props,\n          active: active\n        };\n        content = ObjectUtils.getJSXElement(item.template, item, defaultContentOptions);\n      }\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.label + '_' + index,\n        className: className,\n        style: item.style,\n        role: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, content, submenu);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item, index) {\n      if (item.separator) return this.renderSeparator(index);else return this.renderMenuitem(item, index);\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this3 = this;\n\n      if (this.props.model) {\n        return this.props.model.map(function (item, index) {\n          return _this3.renderItem(item, index);\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = classNames('p-submenu-list', this.props.className);\n      var menu = this.renderMenu();\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: className,\n        role: \"tree\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, menu);\n    }\n  }]);\n\n  return PanelMenuSub;\n}(Component);\n\nPanelMenuSub.defaultProps = {\n  model: null,\n  multiple: false\n};\nPanelMenuSub.propTypes = {\n  model: PropTypes.any,\n  multiple: PropTypes.bool\n};\nexport var PanelMenu = /*#__PURE__*/function (_Component2) {\n  _inherits(PanelMenu, _Component2);\n\n  var _super2 = _createSuper(PanelMenu);\n\n  function PanelMenu(props) {\n    var _this4;\n\n    _classCallCheck(this, PanelMenu);\n\n    _this4 = _super2.call(this, props);\n    _this4.state = {\n      activeItem: _this4.findActiveItem()\n    };\n    _this4.id = _this4.props.id || UniqueComponentId();\n    return _this4;\n  }\n\n  _createClass(PanelMenu, [{\n    key: \"onItemClick\",\n    value: function onItemClick(event, item) {\n      if (item.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      if (!item.url) {\n        event.preventDefault();\n      }\n\n      if (item.command) {\n        item.command({\n          originalEvent: event,\n          item: item\n        });\n      }\n\n      var activeItem = this.state.activeItem;\n      var active = this.isItemActive(item);\n\n      if (active) {\n        item.expanded = false;\n        this.setState({\n          activeItem: this.props.multiple ? activeItem.filter(function (a_item) {\n            return a_item !== item;\n          }) : null\n        });\n      } else {\n        if (!this.props.multiple && activeItem) {\n          activeItem.expanded = false;\n        }\n\n        item.expanded = true;\n        this.setState({\n          activeItem: this.props.multiple ? [].concat(_toConsumableArray(activeItem || []), [item]) : item\n        });\n      }\n    }\n  }, {\n    key: \"findActiveItem\",\n    value: function findActiveItem() {\n      if (this.props.model) {\n        if (this.props.multiple) {\n          return this.props.model.filter(function (item) {\n            return item.expanded;\n          });\n        } else {\n          var activeItem = null;\n          this.props.model.forEach(function (item) {\n            if (item.expanded) {\n              if (!activeItem) activeItem = item;else item.expanded = false;\n            }\n          });\n          return activeItem;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"isItemActive\",\n    value: function isItemActive(item) {\n      return this.state.activeItem && (this.props.multiple ? this.state.activeItem.indexOf(item) > -1 : this.state.activeItem === item);\n    }\n  }, {\n    key: \"renderPanelIcon\",\n    value: function renderPanelIcon(item) {\n      var className = classNames('p-menuitem-icon', item.icon);\n\n      if (item.icon) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: className,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderPanelToggleIcon\",\n    value: function renderPanelToggleIcon(item, active) {\n      var className = classNames('p-panelmenu-icon pi', {\n        'pi-chevron-right': !active,\n        ' pi-chevron-down': active\n      });\n\n      if (item.items) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: className,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderPanel\",\n    value: function renderPanel(item, index) {\n      var _this5 = this;\n\n      var active = this.isItemActive(item);\n      var className = classNames('p-panelmenu-panel', item.className);\n      var headerClassName = classNames('p-component p-panelmenu-header', {\n        'p-highlight': active,\n        'p-disabled': item.disabled\n      });\n      var toggleIcon = this.renderPanelToggleIcon(item, active);\n      var itemIcon = this.renderPanelIcon(item);\n      var contentWrapperClassName = classNames('p-toggleable-content', {\n        'p-toggleable-content-collapsed': !active\n      });\n      var menuContentRef = React.createRef();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.label + '_' + index,\n        className: className,\n        style: item.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: headerClassName,\n        style: item.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: item.url || '#',\n        className: \"p-panelmenu-header-link\",\n        onClick: function onClick(e) {\n          return _this5.onItemClick(e, item);\n        },\n        \"aria-expanded\": active,\n        id: this.id + '_header',\n        \"aria-controls\": this.id + 'content',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }\n      }, toggleIcon, itemIcon, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-menuitem-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }\n      }, item.label))), /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: menuContentRef,\n        classNames: \"p-toggleable-content\",\n        timeout: {\n          enter: 1000,\n          exit: 450\n        },\n        in: active,\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: menuContentRef,\n        className: contentWrapperClassName,\n        role: \"region\",\n        id: this.id + '_content',\n        \"aria-labelledby\": this.id + '_header',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-panelmenu-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(PanelMenuSub, {\n        model: item.items,\n        className: \"p-panelmenu-root-submenu\",\n        multiple: this.props.multiple,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }, {\n    key: \"renderPanels\",\n    value: function renderPanels() {\n      var _this6 = this;\n\n      if (this.props.model) {\n        return this.props.model.map(function (item, index) {\n          return _this6.renderPanel(item, index);\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = classNames('p-panelmenu p-component', this.props.className);\n      var panels = this.renderPanels();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }\n      }, panels);\n    }\n  }]);\n\n  return PanelMenu;\n}(Component);\nPanelMenu.defaultProps = {\n  id: null,\n  model: null,\n  style: null,\n  className: null,\n  multiple: false\n};\nPanelMenu.propTypes = {\n  id: PropTypes.string,\n  model: PropTypes.array,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  multiple: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/zloto/src/components/panelmenu/PanelMenu.js"],"names":["React","Component","PropTypes","classNames","UniqueComponentId","CSSTransition","ObjectUtils","PanelMenuSub","props","state","activeItem","findActiveItem","event","item","disabled","preventDefault","url","command","originalEvent","active","isItemActive","expanded","setState","multiple","filter","a_item","model","forEach","indexOf","index","submenuWrapperClassName","submenuContentRef","createRef","items","enter","exit","className","linkClassName","iconClassName","icon","submenuIconClassName","label","submenuIcon","submenu","renderSubmenu","content","target","onItemClick","template","defaultContentOptions","onClick","labelClassName","element","getJSXElement","style","separator","renderSeparator","renderMenuitem","map","renderItem","menu","renderMenu","defaultProps","propTypes","any","bool","PanelMenu","id","headerClassName","toggleIcon","renderPanelToggleIcon","itemIcon","renderPanelIcon","contentWrapperClassName","menuContentRef","e","renderPanel","panels","renderPanels","string","array","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { classNames } from '../utils/ClassNames';\r\nimport UniqueComponentId from '../utils/UniqueComponentId';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ObjectUtils from '../utils/ObjectUtils';\r\n\r\nclass PanelMenuSub extends Component {\r\n\r\n    static defaultProps = {\r\n        model: null,\r\n        multiple: false\r\n    };\r\n\r\n    static propTypes = {\r\n        model: PropTypes.any,\r\n        multiple: PropTypes.bool\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeItem: this.findActiveItem()\r\n        };\r\n    }\r\n\r\n    onItemClick(event, item) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (!item.url) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n\r\n        let activeItem = this.state.activeItem;\r\n        let active = this.isItemActive(item);\r\n\r\n        if (active) {\r\n            item.expanded = false;\r\n            this.setState({\r\n                activeItem: this.props.multiple ? activeItem.filter(a_item => a_item !== item) : null\r\n            });\r\n        }\r\n        else {\r\n            if (!this.props.multiple && activeItem) {\r\n                activeItem.expanded = false;\r\n            }\r\n\r\n            item.expanded = true;\r\n            this.setState({\r\n                activeItem: this.props.multiple ? [...(activeItem||[]), item] : item\r\n            });\r\n        }\r\n    }\r\n\r\n    findActiveItem() {\r\n        if (this.props.model) {\r\n            if (this.props.multiple) {\r\n                return this.props.model.filter(item => item.expanded);\r\n            }\r\n            else {\r\n                let activeItem = null;\r\n                this.props.model.forEach(item => {\r\n                    if (item.expanded) {\r\n                        if (!activeItem)\r\n                            activeItem = item;\r\n                        else\r\n                            item.expanded = false;\r\n                    }\r\n                });\r\n\r\n                return activeItem;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    isItemActive(item) {\r\n        return this.state.activeItem && (this.props.multiple ? this.state.activeItem.indexOf(item) > -1: this.state.activeItem === item);\r\n    }\r\n\r\n    renderSeparator(index) {\r\n        return <li key={'separator_' + index} className=\"p-menu-separator\"></li>;\r\n    }\r\n\r\n    renderSubmenu(item, active) {\r\n        const submenuWrapperClassName = classNames('p-toggleable-content', { 'p-toggleable-content-collapsed': !active });\r\n        const submenuContentRef = React.createRef();\r\n\r\n        if (item.items) {\r\n            return (\r\n                <CSSTransition nodeRef={submenuContentRef} classNames=\"p-toggleable-content\" timeout={{ enter: 1000, exit: 450 }} in={active} unmountOnExit>\r\n                    <div ref={submenuContentRef} className={submenuWrapperClassName}>\r\n                        <PanelMenuSub model={item.items} multiple={this.props.multiple} />\r\n                    </div>\r\n                </CSSTransition>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderMenuitem(item, index) {\r\n        const active = this.isItemActive(item);\r\n        const className = classNames('p-menuitem', item.className);\r\n        const linkClassName = classNames('p-menuitem-link', { 'p-disabled': item.disabled });\r\n        const iconClassName = classNames('p-menuitem-icon', item.icon);\r\n        const submenuIconClassName = classNames('p-panelmenu-icon pi pi-fw', { 'pi-angle-right': !active, 'pi-angle-down': active });\r\n        const icon = item.icon && <span className={iconClassName}></span>;\r\n        const label = item.label && <span className=\"p-menuitem-text\">{item.label}</span>;\r\n        const submenuIcon = item.items && <span className={submenuIconClassName}></span>;\r\n        const submenu = this.renderSubmenu(item, active);\r\n        let content = (\r\n            <a href={item.url || '#'} className={linkClassName} target={item.target} onClick={(event) => this.onItemClick(event, item, index)} role=\"menuitem\">\r\n                {submenuIcon}\r\n                {icon}\r\n                {label}\r\n            </a>\r\n        );\r\n\r\n        if (item.template) {\r\n            const defaultContentOptions = {\r\n                onClick: (event) => this.onItemClick(event, item, index),\r\n                className: linkClassName,\r\n                labelClassName: 'p-menuitem-text',\r\n                iconClassName,\r\n                submenuIconClassName,\r\n                element: content,\r\n                props: this.props,\r\n                active\r\n            };\r\n\r\n            content = ObjectUtils.getJSXElement(item.template, item, defaultContentOptions);\r\n        }\r\n\r\n        return (\r\n            <li key={item.label + '_' + index} className={className} style={item.style} role=\"none\">\r\n                {content}\r\n                {submenu}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    renderItem(item, index) {\r\n        if (item.separator)\r\n            return this.renderSeparator(index);\r\n        else\r\n            return this.renderMenuitem(item, index);\r\n    }\r\n\r\n    renderMenu() {\r\n        if (this.props.model) {\r\n            return (\r\n                this.props.model.map((item, index) => {\r\n                    return this.renderItem(item, index);\r\n                })\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-submenu-list', this.props.className);\r\n        const menu = this.renderMenu();\r\n\r\n        return (\r\n            <ul className={className} role=\"tree\">\r\n                {menu}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport class PanelMenu extends Component {\r\n\r\n    static defaultProps = {\r\n        id: null,\r\n        model: null,\r\n        style: null,\r\n        className: null,\r\n        multiple: false\r\n    };\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        model: PropTypes.array,\r\n        style: PropTypes.object,\r\n        className: PropTypes.string,\r\n        multiple: PropTypes.bool\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeItem: this.findActiveItem()\r\n        };\r\n\r\n        this.id = this.props.id || UniqueComponentId();\r\n    }\r\n\r\n    onItemClick(event, item) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (!item.url) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n\r\n        let activeItem = this.state.activeItem;\r\n        let active = this.isItemActive(item);\r\n\r\n        if (active) {\r\n            item.expanded = false;\r\n            this.setState({\r\n                activeItem: this.props.multiple ? activeItem.filter(a_item => a_item !== item) : null\r\n            });\r\n        }\r\n        else {\r\n            if (!this.props.multiple && activeItem) {\r\n                activeItem.expanded = false;\r\n            }\r\n\r\n            item.expanded = true;\r\n            this.setState({\r\n                activeItem: this.props.multiple ? [...(activeItem||[]), item] : item\r\n            });\r\n        }\r\n    }\r\n\r\n    findActiveItem() {\r\n        if (this.props.model) {\r\n            if (this.props.multiple) {\r\n                return this.props.model.filter(item => item.expanded);\r\n            }\r\n            else {\r\n                let activeItem = null;\r\n                this.props.model.forEach(item => {\r\n                    if (item.expanded) {\r\n                        if (!activeItem)\r\n                            activeItem = item;\r\n                        else\r\n                            item.expanded = false;\r\n                    }\r\n                });\r\n\r\n                return activeItem;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    isItemActive(item) {\r\n        return this.state.activeItem && (this.props.multiple ? this.state.activeItem.indexOf(item) > -1: this.state.activeItem === item);\r\n    }\r\n\r\n    renderPanelIcon(item) {\r\n        const className = classNames('p-menuitem-icon', item.icon);\r\n\r\n        if (item.icon) {\r\n            return <span className={className}></span>\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderPanelToggleIcon(item, active) {\r\n        const className = classNames('p-panelmenu-icon pi', { 'pi-chevron-right': !active, ' pi-chevron-down': active });\r\n\r\n        if (item.items) {\r\n            return <span className={className}></span>;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderPanel(item, index) {\r\n        const active = this.isItemActive(item);\r\n        const className = classNames('p-panelmenu-panel', item.className);\r\n        const headerClassName = classNames('p-component p-panelmenu-header', { 'p-highlight': active, 'p-disabled': item.disabled });\r\n        const toggleIcon = this.renderPanelToggleIcon(item, active);\r\n        const itemIcon = this.renderPanelIcon(item);\r\n        const contentWrapperClassName = classNames('p-toggleable-content', { 'p-toggleable-content-collapsed': !active });\r\n        const menuContentRef = React.createRef();\r\n\r\n        return (\r\n            <div key={item.label + '_' + index} className={className} style={item.style}>\r\n                <div className={headerClassName} style={item.style}>\r\n                    <a href={item.url || '#'} className=\"p-panelmenu-header-link\" onClick={(e) => this.onItemClick(e, item)} aria-expanded={active}\r\n                        id={this.id + '_header'} aria-controls={this.id + 'content'}>\r\n                        {toggleIcon}\r\n                        {itemIcon}\r\n                        <span className=\"p-menuitem-text\">{item.label}</span>\r\n                    </a>\r\n                </div>\r\n                <CSSTransition nodeRef={menuContentRef} classNames=\"p-toggleable-content\" timeout={{ enter: 1000, exit: 450 }} in={active} unmountOnExit>\r\n                    <div ref={menuContentRef} className={contentWrapperClassName} role=\"region\" id={this.id + '_content'} aria-labelledby={this.id + '_header'}>\r\n                        <div className=\"p-panelmenu-content\">\r\n                            <PanelMenuSub model={item.items} className=\"p-panelmenu-root-submenu\" multiple={this.props.multiple} />\r\n                        </div>\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPanels() {\r\n        if (this.props.model) {\r\n            return (\r\n                this.props.model.map((item, index) => {\r\n                    return this.renderPanel(item, index);\r\n                })\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const className = classNames('p-panelmenu p-component', this.props.className);\r\n        const panels = this.renderPanels();\r\n\r\n        return (\r\n            <div id={this.props.id} className={className} style={this.props.style}>\r\n                {panels}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}