{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\zura.ph\\\\WebstormProjects\\\\slotmaster-dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{TabView,TabPanel}from'../../components/tabview/TabView';import{CodeHighlight}from'../codehighlight/CodeHighlight';import{useLiveEditorTabs}from'../liveeditor/LiveEditor';export var MenuDoc=/*#__PURE__*/function(_Component){_inherits(MenuDoc,_Component);var _super=_createSuper(MenuDoc);function MenuDoc(props){var _this;_classCallCheck(this,MenuDoc);_this=_super.call(this,props);_this.sources={'class':{tabName:'Class Source',content:\"\\nimport React, { Component } from 'react';\\nimport { Menu } from 'primereact/menu';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\n\\nexport class MenuDemo extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n\\n        this.items = [\\n            {\\n                label: 'Options',\\n                items: [\\n                    {\\n                        label: 'Update',\\n                        icon: 'pi pi-refresh',\\n                        command: () => {\\n                            this.toast.show({ severity: 'success', summary: 'Updated', detail: 'Data Updated', life: 3000 });\\n                        }\\n                    },\\n                    {\\n                        label: 'Delete',\\n                        icon: 'pi pi-times',\\n                        command: () => {\\n                            this.toast.show({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 });\\n                        }\\n                    }\\n                ]\\n            },\\n            {\\n                label: 'Navigate',\\n                items: [\\n                    {\\n                        label: 'React Website',\\n                        icon: 'pi pi-external-link',\\n                        url: 'https://reactjs.org/'\\n                    },\\n                    {\\n                        label: 'Router',\\n                        icon: 'pi pi-upload',\\n                        command:(e) => {\\n                            window.location.hash = \\\"/fileupload\\\"\\n                        }\\n                    }\\n                ]\\n            }\\n        ];\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n                <Toast ref={(el) => { this.toast = el; }}></Toast>\\n\\n                <div className=\\\"card\\\">\\n                    <h5>Inline</h5>\\n                    <Menu model={this.items} />\\n\\n                    <h5>Overlay</h5>\\n                    <Menu model={this.items} popup ref={el => this.menu = el} id=\\\"popup_menu\\\" />\\n                    <Button label=\\\"Show\\\" icon=\\\"pi pi-bars\\\" onClick={(event) => this.menu.toggle(event)} aria-controls=\\\"popup_menu\\\" aria-haspopup />\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n                \"},'hooks':{tabName:'Hooks Source',content:\"\\nimport React, { useRef } from 'react';\\nimport { Menu } from 'primereact/menu';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\n\\nconst MenuDemo = () => {\\n    const menu = useRef(null);\\n    const toast = useRef(null);\\n    const items = [\\n        {\\n            label: 'Options',\\n            items: [\\n                {\\n                    label: 'Update',\\n                    icon: 'pi pi-refresh',\\n                    command: () => {\\n                        toast.current.show({ severity: 'success', summary: 'Updated', detail: 'Data Updated', life: 3000 });\\n                    }\\n                },\\n                {\\n                    label: 'Delete',\\n                    icon: 'pi pi-times',\\n                    command: () => {\\n                        toast.current.show({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 });\\n                    }\\n                }\\n            ]\\n        },\\n        {\\n            label: 'Navigate',\\n            items: [\\n                {\\n                    label: 'React Website',\\n                    icon: 'pi pi-external-link',\\n                    url: 'https://reactjs.org/'\\n                },\\n                {\\n                    label: 'Router',\\n                    icon: 'pi pi-upload',\\n                    command:(e) => {\\n                        window.location.hash = \\\"/fileupload\\\"\\n                    }\\n                }\\n            ]\\n        }\\n    ];\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Inline</h5>\\n                <Menu model={items} />\\n\\n                <h5>Overlay</h5>\\n                <Menu model={items} popup ref={menu} id=\\\"popup_menu\\\" />\\n                <Button label=\\\"Show\\\" icon=\\\"pi pi-bars\\\" onClick={(event) => menu.current.toggle(event)} aria-controls=\\\"popup_menu\\\" aria-haspopup />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"},'ts':{tabName:'TS Source',content:\"\\nimport React, { useRef } from 'react';\\nimport { Menu } from 'primereact/menu';\\nimport { Button } from 'primereact/button';\\nimport { Toast } from 'primereact/toast';\\n\\nconst MenuDemo = () => {\\n    const menu = useRef(null);\\n    const toast = useRef(null);\\n    const items = [\\n        {\\n            label: 'Options',\\n            items: [\\n                {\\n                    label: 'Update',\\n                    icon: 'pi pi-refresh',\\n                    command: () => {\\n                        toast.current.show({ severity: 'success', summary: 'Updated', detail: 'Data Updated', life: 3000 });\\n                    }\\n                },\\n                {\\n                    label: 'Delete',\\n                    icon: 'pi pi-times',\\n                    command: () => {\\n                        toast.current.show({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 });\\n                    }\\n                }\\n            ]\\n        },\\n        {\\n            label: 'Navigate',\\n            items: [\\n                {\\n                    label: 'React Website',\\n                    icon: 'pi pi-external-link',\\n                    url: 'https://reactjs.org/'\\n                },\\n                {\\n                    label: 'Router',\\n                    icon: 'pi pi-upload',\\n                    command:(e) => {\\n                        window.location.hash = \\\"/fileupload\\\"\\n                    }\\n                }\\n            ]\\n        }\\n    ];\\n\\n    return (\\n        <div>\\n            <Toast ref={toast}></Toast>\\n\\n            <div className=\\\"card\\\">\\n                <h5>Inline</h5>\\n                <Menu model={items} />\\n\\n                <h5>Overlay</h5>\\n                <Menu model={items} popup ref={menu} id=\\\"popup_menu\\\" />\\n                <Button label=\\\"Show\\\" icon=\\\"pi pi-bars\\\" onClick={(event) => menu.current.toggle(event)} aria-controls=\\\"popup_menu\\\" aria-haspopup />\\n            </div>\\n        </div>\\n    );\\n}\\n                \"}};return _this;}_createClass(MenuDoc,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(){return false;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content-section documentation\"},/*#__PURE__*/React.createElement(TabView,null,/*#__PURE__*/React.createElement(TabPanel,{header:\"Documentation\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Import\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nimport { Menu } from 'primereact/menu';\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"MenuModel API\"),/*#__PURE__*/React.createElement(\"p\",null,\"Menu uses the common menumodel api to define its items, visit \",/*#__PURE__*/React.createElement(Link,{to:\"/menumodel\"},\" MenuModel API\"),\" for details.\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Getting Started\"),/*#__PURE__*/React.createElement(\"p\",null,\"Menu requires a collection of menuitems as its model.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Menu model={items} />\\n\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nlet items = [\\n    {label: 'New', icon: 'pi pi-fw pi-plus'},\\n    {label: 'Delete', icon: 'pi pi-fw pi-trash'}\\n];\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"SubMenus\"),/*#__PURE__*/React.createElement(\"p\",null,\"Menu supports one level of nesting via subitems of an item.\"),/*#__PURE__*/React.createElement(CodeHighlight,{lang:\"js\"},\"\\nlet items = [\\n    {\\n        label: 'Options',\\n        items: [{label: 'New', icon: 'pi pi-fw pi-plus',command:()=>{ window.location.hash=\\\"/fileupload\\\"; }},\\n                {label: 'Delete', icon: 'pi pi-fw pi-trash', url: 'http://primetek.com.tr'}]\\n    },\\n    {\\n        label: 'Account',\\n        items: [{label: 'Options', icon: 'pi pi-fw pi-cog',command:()=>{ window.location.hash=\\\"/\\\"; }},\\n                {label: 'Sign Out', icon: 'pi pi-fw pi-power-off'} ]\\n    }\\n]\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Popup Mode\"),/*#__PURE__*/React.createElement(\"p\",null,\"Menu is inline by default whereas popup mode is supported by enabling popup property and calling toggle method with an event of the target.\"),/*#__PURE__*/React.createElement(CodeHighlight,null,\"\\n<Menu model={items} popup ref={menu} />\\n<Button label=\\\"Show\\\" icon=\\\"pi pi-bars\\\" onClick={(event) => menu.current.toggle(event)}/>\\n\"),/*#__PURE__*/React.createElement(\"h5\",null,\"Properties\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Default\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"id\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Unique identifier of the element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"model\"),/*#__PURE__*/React.createElement(\"td\",null,\"array\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"An array of menuitems.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"popup\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"false\"),/*#__PURE__*/React.createElement(\"td\",null,\"Defines if menu would displayed as a popup.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"style\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Inline style of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"className\"),/*#__PURE__*/React.createElement(\"td\",null,\"string\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"Style class of the component.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"baseZIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"number\"),/*#__PURE__*/React.createElement(\"td\",null,\"0\"),/*#__PURE__*/React.createElement(\"td\",null,\"Base zIndex value to use in layering.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"autoZIndex\"),/*#__PURE__*/React.createElement(\"td\",null,\"boolean\"),/*#__PURE__*/React.createElement(\"td\",null,\"true\"),/*#__PURE__*/React.createElement(\"td\",null,\"Whether to automatically manage layering.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"appendTo\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element\"),/*#__PURE__*/React.createElement(\"td\",null,\"null\"),/*#__PURE__*/React.createElement(\"td\",null,\"DOM element instance where the dialog should be mounted.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Methods\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"toggle\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Toggles the visibility of the popup menu.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"show\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Displays the popup menu.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"hide\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event\"),/*#__PURE__*/React.createElement(\"td\",null,\"Hides the popup menu.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Parameters\"),/*#__PURE__*/React.createElement(\"th\",null,\"Description\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onShow\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event \"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a popup menu is shown.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"onHide\"),/*#__PURE__*/React.createElement(\"td\",null,\"event: Browser event \"),/*#__PURE__*/React.createElement(\"td\",null,\"Callback to invoke when a popup menu is hidden.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Styling\"),/*#__PURE__*/React.createElement(\"p\",null,\"Following is the list of structural style classes, for theming classes visit \",/*#__PURE__*/React.createElement(Link,{to:\"/theming\"},\" theming\"),\" page.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"doc-tablewrapper\"},/*#__PURE__*/React.createElement(\"table\",{className:\"doc-table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Element\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-menu\"),/*#__PURE__*/React.createElement(\"td\",null,\"Container element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-menu-list\"),/*#__PURE__*/React.createElement(\"td\",null,\"List element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-menuitem\"),/*#__PURE__*/React.createElement(\"td\",null,\"Menuitem element.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-menuitem-text\"),/*#__PURE__*/React.createElement(\"td\",null,\"Label of a menuitem.\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"p-menuitem-icon\"),/*#__PURE__*/React.createElement(\"td\",null,\"Icon of a menuitem.\"))))),/*#__PURE__*/React.createElement(\"h5\",null,\"Dependencies\"),/*#__PURE__*/React.createElement(\"p\",null,\"None.\")),useLiveEditorTabs({name:'MenuDemo',sources:this.sources})));}}]);return MenuDoc;}(Component);","map":{"version":3,"sources":["C:/Users/zura.ph/WebstormProjects/slotmaster-dashboard/src/showcase/menu/MenuDoc.js"],"names":["React","Component","Link","TabView","TabPanel","CodeHighlight","useLiveEditorTabs","MenuDoc","props","sources","tabName","content","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TabView, TabPanel } from '../../components/tabview/TabView';\r\nimport { CodeHighlight } from '../codehighlight/CodeHighlight';\r\nimport { useLiveEditorTabs }from '../liveeditor/LiveEditor';\r\n\r\nexport class MenuDoc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sources = {\r\n            'class': {\r\n                tabName: 'Class Source',\r\n                content: `\r\nimport React, { Component } from 'react';\r\nimport { Menu } from 'primereact/menu';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nexport class MenuDemo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.items = [\r\n            {\r\n                label: 'Options',\r\n                items: [\r\n                    {\r\n                        label: 'Update',\r\n                        icon: 'pi pi-refresh',\r\n                        command: () => {\r\n                            this.toast.show({ severity: 'success', summary: 'Updated', detail: 'Data Updated', life: 3000 });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        icon: 'pi pi-times',\r\n                        command: () => {\r\n                            this.toast.show({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 });\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Navigate',\r\n                items: [\r\n                    {\r\n                        label: 'React Website',\r\n                        icon: 'pi pi-external-link',\r\n                        url: 'https://reactjs.org/'\r\n                    },\r\n                    {\r\n                        label: 'Router',\r\n                        icon: 'pi pi-upload',\r\n                        command:(e) => {\r\n                            window.location.hash = \"/fileupload\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Toast ref={(el) => { this.toast = el; }}></Toast>\r\n\r\n                <div className=\"card\">\r\n                    <h5>Inline</h5>\r\n                    <Menu model={this.items} />\r\n\r\n                    <h5>Overlay</h5>\r\n                    <Menu model={this.items} popup ref={el => this.menu = el} id=\"popup_menu\" />\r\n                    <Button label=\"Show\" icon=\"pi pi-bars\" onClick={(event) => this.menu.toggle(event)} aria-controls=\"popup_menu\" aria-haspopup />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n                `\r\n            },\r\n            'hooks': {\r\n                tabName: 'Hooks Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { Menu } from 'primereact/menu';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst MenuDemo = () => {\r\n    const menu = useRef(null);\r\n    const toast = useRef(null);\r\n    const items = [\r\n        {\r\n            label: 'Options',\r\n            items: [\r\n                {\r\n                    label: 'Update',\r\n                    icon: 'pi pi-refresh',\r\n                    command: () => {\r\n                        toast.current.show({ severity: 'success', summary: 'Updated', detail: 'Data Updated', life: 3000 });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    icon: 'pi pi-times',\r\n                    command: () => {\r\n                        toast.current.show({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 });\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'Navigate',\r\n            items: [\r\n                {\r\n                    label: 'React Website',\r\n                    icon: 'pi pi-external-link',\r\n                    url: 'https://reactjs.org/'\r\n                },\r\n                {\r\n                    label: 'Router',\r\n                    icon: 'pi pi-upload',\r\n                    command:(e) => {\r\n                        window.location.hash = \"/fileupload\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Inline</h5>\r\n                <Menu model={items} />\r\n\r\n                <h5>Overlay</h5>\r\n                <Menu model={items} popup ref={menu} id=\"popup_menu\" />\r\n                <Button label=\"Show\" icon=\"pi pi-bars\" onClick={(event) => menu.current.toggle(event)} aria-controls=\"popup_menu\" aria-haspopup />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n            'ts': {\r\n                tabName: 'TS Source',\r\n                content: `\r\nimport React, { useRef } from 'react';\r\nimport { Menu } from 'primereact/menu';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst MenuDemo = () => {\r\n    const menu = useRef(null);\r\n    const toast = useRef(null);\r\n    const items = [\r\n        {\r\n            label: 'Options',\r\n            items: [\r\n                {\r\n                    label: 'Update',\r\n                    icon: 'pi pi-refresh',\r\n                    command: () => {\r\n                        toast.current.show({ severity: 'success', summary: 'Updated', detail: 'Data Updated', life: 3000 });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    icon: 'pi pi-times',\r\n                    command: () => {\r\n                        toast.current.show({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 });\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'Navigate',\r\n            items: [\r\n                {\r\n                    label: 'React Website',\r\n                    icon: 'pi pi-external-link',\r\n                    url: 'https://reactjs.org/'\r\n                },\r\n                {\r\n                    label: 'Router',\r\n                    icon: 'pi pi-upload',\r\n                    command:(e) => {\r\n                        window.location.hash = \"/fileupload\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Toast ref={toast}></Toast>\r\n\r\n            <div className=\"card\">\r\n                <h5>Inline</h5>\r\n                <Menu model={items} />\r\n\r\n                <h5>Overlay</h5>\r\n                <Menu model={items} popup ref={menu} id=\"popup_menu\" />\r\n                <Button label=\"Show\" icon=\"pi pi-bars\" onClick={(event) => menu.current.toggle(event)} aria-controls=\"popup_menu\" aria-haspopup />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n                `\r\n            },\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-section documentation\">\r\n                <TabView>\r\n                    <TabPanel header=\"Documentation\">\r\n                        <h5>Import</h5>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nimport { Menu } from 'primereact/menu';\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>MenuModel API</h5>\r\n                        <p>Menu uses the common menumodel api to define its items, visit <Link to=\"/menumodel\"> MenuModel API</Link> for details.</p>\r\n\r\n                        <h5>Getting Started</h5>\r\n                        <p>Menu requires a collection of menuitems as its model.</p>\r\n<CodeHighlight>\r\n{`\r\n<Menu model={items} />\r\n`}\r\n</CodeHighlight>\r\n\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nlet items = [\r\n    {label: 'New', icon: 'pi pi-fw pi-plus'},\r\n    {label: 'Delete', icon: 'pi pi-fw pi-trash'}\r\n];\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>SubMenus</h5>\r\n                        <p>Menu supports one level of nesting via subitems of an item.</p>\r\n<CodeHighlight lang=\"js\">\r\n{`\r\nlet items = [\r\n    {\r\n        label: 'Options',\r\n        items: [{label: 'New', icon: 'pi pi-fw pi-plus',command:()=>{ window.location.hash=\"/fileupload\"; }},\r\n                {label: 'Delete', icon: 'pi pi-fw pi-trash', url: 'http://primetek.com.tr'}]\r\n    },\r\n    {\r\n        label: 'Account',\r\n        items: [{label: 'Options', icon: 'pi pi-fw pi-cog',command:()=>{ window.location.hash=\"/\"; }},\r\n                {label: 'Sign Out', icon: 'pi pi-fw pi-power-off'} ]\r\n    }\r\n]\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Popup Mode</h5>\r\n                        <p>Menu is inline by default whereas popup mode is supported by enabling popup property and calling toggle method with an event of the target.</p>\r\n\r\n<CodeHighlight>\r\n{`\r\n<Menu model={items} popup ref={menu} />\r\n<Button label=\"Show\" icon=\"pi pi-bars\" onClick={(event) => menu.current.toggle(event)}/>\r\n`}\r\n</CodeHighlight>\r\n\r\n                        <h5>Properties</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                        <th>Default</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>id</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Unique identifier of the element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>model</td>\r\n                                        <td>array</td>\r\n                                        <td>null</td>\r\n                                        <td>An array of menuitems.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>popup</td>\r\n                                        <td>boolean</td>\r\n                                        <td>false</td>\r\n                                        <td>Defines if menu would displayed as a popup.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>style</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Inline style of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>className</td>\r\n                                        <td>string</td>\r\n                                        <td>null</td>\r\n                                        <td>Style class of the component.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>baseZIndex</td>\r\n                                        <td>number</td>\r\n                                        <td>0</td>\r\n                                        <td>Base zIndex value to use in layering.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>autoZIndex</td>\r\n                                        <td>boolean</td>\r\n                                        <td>true</td>\r\n                                        <td>Whether to automatically manage layering.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>appendTo</td>\r\n                                        <td>DOM element</td>\r\n                                        <td>null</td>\r\n                                        <td>DOM element instance where the dialog should be mounted.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Methods</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>toggle</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Toggles the visibility of the popup menu.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>show</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Displays the popup menu.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>hide</td>\r\n                                        <td>event: Browser event</td>\r\n                                        <td>Hides the popup menu.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Events</h5>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Parameters</th>\r\n                                        <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>onShow</td>\r\n                                        <td>event: Browser event </td>\r\n                                        <td>Callback to invoke when a popup menu is shown.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>onHide</td>\r\n                                        <td>event: Browser event </td>\r\n                                        <td>Callback to invoke when a popup menu is hidden.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Styling</h5>\r\n                        <p>Following is the list of structural style classes, for theming classes visit <Link to=\"/theming\"> theming</Link> page.</p>\r\n                        <div className=\"doc-tablewrapper\">\r\n                            <table className=\"doc-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Element</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>p-menu</td>\r\n                                        <td>Container element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-menu-list</td>\r\n                                        <td>List element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-menuitem</td>\r\n                                        <td>Menuitem element.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-menuitem-text</td>\r\n                                        <td>Label of a menuitem.</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>p-menuitem-icon</td>\r\n                                        <td>Icon of a menuitem.</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h5>Dependencies</h5>\r\n                        <p>None.</p>\r\n                    </TabPanel>\r\n\r\n                    {\r\n                        useLiveEditorTabs({ name: 'MenuDemo', sources: this.sources })\r\n                    }\r\n                </TabView >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}